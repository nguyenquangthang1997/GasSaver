{"time":760,"results":[{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ATokenMock","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ATokenMock","time":0},{"type":"immutable-restrict-modification ","before":"uint8 private _decimals;","after":"uint8 private immutable _decimals;","contract":"ATokenMock","time":0},{"type":"immutable-restrict-modification ","before":"address public dai;","after":"address public immutable dai;","contract":"CERC20Mock","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"CERC20Mock","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"CERC20Mock","time":0},{"type":"immutable-restrict-modification ","before":"uint8 private _decimals;","after":"uint8 private immutable _decimals;","contract":"CERC20Mock","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public UPDATE_INTERVAL;","after":"uint256 public immutable UPDATE_INTERVAL;","contract":"EMAOracle","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public UPDATE_MULTIPLIER;","after":"uint256 public immutable UPDATE_MULTIPLIER;","contract":"EMAOracle","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public ONE_MINUS_UPDATE_MULTIPLIER;","after":"uint256 public immutable ONE_MINUS_UPDATE_MULTIPLIER;","contract":"EMAOracle","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ERC20Mock","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ERC20Mock","time":0},{"type":"immutable-restrict-modification ","before":"uint8 private _decimals;","after":"uint8 private immutable _decimals;","contract":"ERC20Mock","time":0},{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"state-data-arrangement ","before":"\nbool public initialized;\nDInterest public pool;\nNFT public nft;\nMPHToken public mph;\nuint256 public nftID;\nuint256 public mintMPHAmount;\nbool public active;\nstring public name;\nstring public symbol;\nuint8 public decimals;","after":"DInterest public pool;\nNFT public nft;\nMPHToken public mph;\nuint256 public nftID;\nuint256 public mintMPHAmount;\nstring public name;\nstring public symbol;\nbool public initialized;\nbool public active;\nuint8 public decimals;\n","contract":"FractionalDeposit","time":0},{"type":"external-function ","before":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public returns (bytes4) {\n        // only allow incoming transfer if not initialized\n        require(!initialized, \"FractionalDeposit: initialized\");\n        return this.onERC721Received.selector;\n    }","after":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) public returns (bytes4) {\n        // only allow incoming transfer if not initialized\n        require(!initialized, \"FractionalDeposit: initialized\");\n        return this.onERC721Received.selector;\n    }","contract":"FractionalDeposit","time":0},{"type":"external-function ","before":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","after":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) public returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","contract":"FractionalDepositFactory","time":0},{"type":"immutable-restrict-modification ","before":"address public template;","after":"address public immutable template;","contract":"FractionalDepositFactory","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public starttime;","after":"uint256 public immutable starttime;","contract":"HarvestStakingMock","time":1},{"type":"constant-restrict-modification  ","before":"address internal core;","after":"address internal constant core;","contract":"LendingPoolAddressesProviderMock","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public IRMultiplier;","after":"uint256 public immutable IRMultiplier;","contract":"LinearInterestModel","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"NFT","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"NFT","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public starttime;","after":"uint256 public immutable starttime;","contract":"Rewards","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"VaultMock","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"VaultMock","time":0},{"type":"immutable-restrict-modification ","before":"uint8 private _decimals;","after":"uint8 private immutable _decimals;","contract":"VaultMock","time":0},{"type":"external-function ","before":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public returns (bytes4) {\n        require(isActive, \"ZapCurve: inactive\");\n        return this.onERC721Received.selector;\n    }","after":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) public returns (bytes4) {\n        require(isActive, \"ZapCurve: inactive\");\n        return this.onERC721Received.selector;\n    }","contract":"ZapCurve","time":0},{"type":"state-data-arrangement ","before":"\nbool public initialized;\nDInterest public pool;\nFractionalDepositFactory public fractionalDepositFactory;\nERC20 public stablecoin;\nuint256 public maturationTimestamp;\nstring public name;\nstring public symbol;\nuint8 public decimals;","after":"DInterest public pool;\nFractionalDepositFactory public fractionalDepositFactory;\nERC20 public stablecoin;\nuint256 public maturationTimestamp;\nstring public name;\nstring public symbol;\nbool public initialized;\nuint8 public decimals;\n","contract":"ZeroCouponBond","time":0},{"type":"external-function ","before":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","after":"function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) public returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","contract":"ZeroCouponBond","time":0},{"type":"immutable-restrict-modification ","before":"address public template;","after":"address public immutable template;","contract":"ZeroCouponBondFactory","time":0},{"type":"immutable-restrict-modification ","before":"address public fractionalDepositFactory;","after":"address public immutable fractionalDepositFactory;","contract":"ZeroCouponBondFactory","time":0}]}