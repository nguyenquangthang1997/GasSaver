{"time":162,"results":[{"type":"state-data-arrangement ","before":"\nor uint256;\n\n    usin\n _redeemPutback[1];\naccess unauthorize\n        _;\n\n    }\n\n\n\n \n�基本信息 */\n\n\n\n    uint256\n    address public issuer;\n address public collateralToken; \npublic crowdToken; //融资代币�\nnt256 public totalBondI\n�计发行量，债\n\n    uint256 public actual\n�行份数\n\n    uint256 \n��数\n\n    uint256 publi\n值（面值）,USDT or DAI\n\n\nc couponRate; //票面利率；息\n率 15%\n\n\n\n    uint256 public mat\n //债券期限，到期日,�\n��)\n\n    uint256 public is\nRatio; //最低融资比率\nh;\n\n    uint256 public issueTimestamp;\n�发债时间\n\n    bool \n�否支持赎回, 该变量之前没\n级的标志, 支持为true，否则\nbool public supportPutback;//�\n��清算的参数设置，�\n清算额度为1000单位，�\n�额度<1000时，用户需\ntMultiple;\n\n\n\n    /** 债券状�\n  uint256 public voteExpired; //债券投票�\ned; //用户购买�\n��止时间\n\n    uint256 \n��\n\n\n\n    /** 债券创�\n��资者信息 */\n\n\n\n    struct\n //发行者：\n\n        \nntGive: 质押的token数�\n {\n\n            issuerStage = v;\n  }\n\n        revert(\"set\nytes32(\"gov\")) {\n\n       \n2 key\");\n\n    }\n\n\n    function getSupplyAmount\n view returns (uint256) {\n\n        ret\nmountGive;\n\n    }\n\n\n    function getBorrowA\neturns (uint256) {\n\n        return issuerBa\n\n\n\n    /** 清算记录流�\neIndexes;\n\n\n\n    /** 分批�\n��置标记 */\n\n   \npublic liquidating;\nfunction setLiqui\net = supplyMap[recipient].amountGet.add(bondAmoun","after":"access unauthorize\n address public collateralToken; \npublic crowdToken; //融资代币�\nnt256 public totalBondI\n�计发行量，债\n\n    uint256 public actual\n�行份数\n\n    uint256 \n��数\n\n    uint256 publi\n值（面值）,USDT or DAI\n\n\nc couponRate; //票面利率；息\n率 15%\n\n\n\n    uint256 public mat\n //债券期限，到期日,�\nh;\n\n    uint256 public issueTimestamp;\n�发债时间\n\n    bool \n�否支持赎回, 该变量之前没\n级的标志, 支持为true，否则\nbool public supportPutback;//�\n��清算的参数设置，�\n清算额度为1000单位，�\n�额度<1000时，用户需\ntMultiple;\n\n\n\n    /** 债券状�\n  uint256 public voteExpired; //债券投票�\ned; //用户购买�\n��止时间\n\n    uint256 \n��\n\n\n\n    /** 债券创�\n��资者信息 */\n\n\n\n    struct\n //发行者：\n\n        \nntGive: 质押的token数�\n {\n\n            issuerStage = v;\n2 key\");\n\n    }\n\n\n    function getSupplyAmount\n view returns (uint256) {\n\n        ret\nmountGive;\n\n    }\n\n\n    function getBorrowA\neturns (uint256) {\n\n        return issuerBa\n\n\n\n    /** 清算记录流�\neIndexes;\n\n\n\n    /** 分批�\nfunction setLiqui\net = supplyMap[recipient].amountGet.add(bondAmoun\nor uint256;\n\n    usin\n _redeemPutback[1];\n        _;\n\n    }\n\n\n\n \n�基本信息 */\n\n\n\n    uint256\n    address public issuer;\nytes32(\"gov\")) {\n\n       \n��置标记 */\n\n   \npublic liquidating;\n��)\n\n    uint256 public is\nRatio; //最低融资比率\n  }\n\n        revert(\"set\n","contract":"BondData","time":3}]}