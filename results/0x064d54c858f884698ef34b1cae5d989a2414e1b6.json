{"time":164,"results":[{"type":"external-function ","before":"   function whitelistSalesMint(uint256 _count, uint256 _max, bytes memory _signature) public payable whitelistIsOpen {\n\n\n        address wallet = _msgSender();\n\n        uint256 total = totalMinted();\n\n\n        require(_count <= WHITELIST_MINT_MAX && _count <= _max, \"Exceeds number\");\n\n        require(total + _count <= MAX_ELEMENTS, \"Max limit\");\n\n        require(msg.value >= price(_count), \"Value below price\");\n\n\n        require(balanceWhitelist[wallet] + _count <= _max, \"Max minted\");\n\n        require(whitelistSalesSignature(wallet, _count, _max, _signature) == owner(), \"Not allowed to mint\");\n\n\n        balanceWhitelist[wallet] += _count;\n\n\n        for (uint256 i = 0; i < _count; i++) {\n\n            _mintAnElement(wallet);\n\n        }\n\n\n        emit EventMint(totalMinted());\n\n  ","after":"   function whitelistSalesMint(uint256 _count, uint256 _max, bytes calldata _signature) public payable whitelistIsOpen {\n\n\n        address wallet = _msgSender();\n\n        uint256 total = totalMinted();\n\n\n        require(_count <= WHITELIST_MINT_MAX && _count <= _max, \"Exceeds number\");\n\n        require(total + _count <= MAX_ELEMENTS, \"Max limit\");\n\n        require(msg.value >= price(_count), \"Value below price\");\n\n\n        require(balanceWhitelist[wallet] + _count <= _max, \"Max minted\");\n\n        require(whitelistSalesSignature(wallet, _count, _max, _signature) == owner(), \"Not allowed to mint\");\n\n\n        balanceWhitelist[wallet] += _count;\n\n\n        for (uint256 i = 0; i < _count; i++) {\n\n            _mintAnElement(wallet);\n\n        }\n\n\n        emit EventMint(totalMinted());\n\n  ","contract":"WhattyClub","time":0},{"type":"external-function ","before":"   function preSalesMint(uint256 _count, uint256 _signatureId, bytes memory _signature) public payable preIsOpen {\n\n\n        address wallet = _msgSender();\n\n        uint256 total = totalMinted();\n\n\n        require(_count <= PRESALE_MINT_MAX, \"Exceeds number\");\n\n        require(total + _count <= MAX_ELEMENTS, \"Max limit\");\n\n        require(msg.value >= price(_count), \"Value below price\");\n\n\n        require(balancePresales[wallet] + _count <= PRESALE_MINT_MAX, \"Max minted\");\n\n        require(signatureIds[_signatureId] == false, \"Signature already used\");\n\n        require(preSalesSignature(wallet, _count, _signatureId, _signature) == owner(), \"Not allowed to mint\");\n\n\n        signatureIds[_signatureId] = true;\n\n        balancePresales[wallet] += _count;\n\n\n        for (uint256 i = 0; i < _count; i++) {\n\n            _mintAnElement(wallet);\n\n        }\n\n\n        emit EventMint(totalMinted());\n\n  ","after":"   function preSalesMint(uint256 _count, uint256 _signatureId, bytes calldata _signature) public payable preIsOpen {\n\n\n        address wallet = _msgSender();\n\n        uint256 total = totalMinted();\n\n\n        require(_count <= PRESALE_MINT_MAX, \"Exceeds number\");\n\n        require(total + _count <= MAX_ELEMENTS, \"Max limit\");\n\n        require(msg.value >= price(_count), \"Value below price\");\n\n\n        require(balancePresales[wallet] + _count <= PRESALE_MINT_MAX, \"Max minted\");\n\n        require(signatureIds[_signatureId] == false, \"Signature already used\");\n\n        require(preSalesSignature(wallet, _count, _signatureId, _signature) == owner(), \"Not allowed to mint\");\n\n\n        signatureIds[_signatureId] = true;\n\n        balancePresales[wallet] += _count;\n\n\n        for (uint256 i = 0; i < _count; i++) {\n\n            _mintAnElement(wallet);\n\n        }\n\n\n        emit EventMint(totalMinted());\n\n  ","contract":"WhattyClub","time":0},{"type":"immutable-restrict-modification ","before":"   string private _na","after":"   string private _na","contract":"WhattyClub","time":0},{"type":"immutable-restrict-modification ","before":"   string private _symb","after":"   string private _symb","contract":"WhattyClub","time":0}]}