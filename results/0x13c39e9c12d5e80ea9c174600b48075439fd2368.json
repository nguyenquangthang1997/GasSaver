{"time":7,"results":[{"type":"external-function ","before":"function getVoteCalldata(uint256 _proposalId, bool _support, bytes memory /* _data */) external view returns (address, uint256, bytes memory) {\n\n        bytes memory callData = abi.encodeWithSignature(VOTE_SIGNATURE, _proposalId, _support);\n\n        return (aaveGovernanceV2, 0, callData);\n\n    }","after":"function getVoteCalldata(uint256 _proposalId, bool _support, bytes calldata /* _data */) external view returns (address, uint256, bytes memory) {\n\n        bytes memory callData = abi.encodeWithSignature(VOTE_SIGNATURE, _proposalId, _support);\n\n        return (aaveGovernanceV2, 0, callData);\n\n    }","contract":"AaveGovernanceV2Adapter","time":0},{"type":"external-function ","before":"function getProposeCalldata(bytes memory _proposalData) external view returns (address, uint256, bytes memory) {\n\n        (\n\n        address executor,\n\n        address[] memory targets,\n\n        uint256[] memory values,\n\n        string[] memory signatures,\n\n        bytes[] memory calldatas,\n\n        bool[] memory withDelegateCalls,\n\n        bytes32 ipfsHash\n\n        ) = abi.decode(_proposalData, (address, address[], uint256[], string[], bytes[], bool[], bytes32));\n\n\n        bytes memory callData = abi.encodeWithSignature(\n\n            PROPOSE_SIGNATURE,\n\n            executor,\n\n            targets,\n\n            values,\n\n            signatures,\n\n            calldatas,\n\n            withDelegateCalls,\n\n            ipfsHash\n\n        );\n\n\n        return (aaveGovernanceV2, 0, callData);\n\n    }","after":"function getProposeCalldata(bytes calldata _proposalData) external view returns (address, uint256, bytes memory) {\n\n        (\n\n        address executor,\n\n        address[] memory targets,\n\n        uint256[] memory values,\n\n        string[] memory signatures,\n\n        bytes[] memory calldatas,\n\n        bool[] memory withDelegateCalls,\n\n        bytes32 ipfsHash\n\n        ) = abi.decode(_proposalData, (address, address[], uint256[], string[], bytes[], bool[], bytes32));\n\n\n        bytes memory callData = abi.encodeWithSignature(\n\n            PROPOSE_SIGNATURE,\n\n            executor,\n\n            targets,\n\n            values,\n\n            signatures,\n\n            calldatas,\n\n            withDelegateCalls,\n\n            ipfsHash\n\n        );\n\n\n        return (aaveGovernanceV2, 0, callData);\n\n    }","contract":"AaveGovernanceV2Adapter","time":0}]}