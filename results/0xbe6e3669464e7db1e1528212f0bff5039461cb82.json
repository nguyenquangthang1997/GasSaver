{"time":164,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0},{"type":"state-data-arrangement ","before":"\nCounters.Counter private _tokenIds;\nstring private ipfsUri = \"https://ipfs.io/ipfs/\";\nuint256 public constant MAX_SUPPLY = 10000;\nbool public open = false;\nstring public folder = \"\";\nstring public provenance = \"\";\nstring public provenanceURI = \"\";\nbool public locked = false;\nuint256 public mintPrice = 0.0333 ether;","after":"Counters.Counter private _tokenIds;\nstring private ipfsUri = \"https://ipfs.io/ipfs/\";\nuint256 public constant MAX_SUPPLY = 10000;\nstring public folder = \"\";\nstring public provenance = \"\";\nstring public provenanceURI = \"\";\nuint256 public mintPrice = 0.0333 ether;\nbool public open = false;\nbool public locked = false;\n","contract":"WickedApes","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) external onlyOwner notLocked {\n\n        _setBaseURI(newBaseURI);\n\n    }","after":"function setBaseURI(string calldata newBaseURI) external onlyOwner notLocked {\n\n        _setBaseURI(newBaseURI);\n\n    }","contract":"WickedApes","time":0},{"type":"external-function ","before":"function setIpfsURI(string memory _ipfsUri) external onlyOwner notLocked {\n\n        ipfsUri = _ipfsUri;\n\n    }","after":"function setIpfsURI(string calldata _ipfsUri) external onlyOwner notLocked {\n\n        ipfsUri = _ipfsUri;\n\n    }","contract":"WickedApes","time":0},{"type":"external-function ","before":"function setFolder(string memory _folder) external onlyOwner notLocked {\n\n        folder = _folder;\n\n    }","after":"function setFolder(string calldata _folder) external onlyOwner notLocked {\n\n        folder = _folder;\n\n    }","contract":"WickedApes","time":0},{"type":"external-function ","before":"function setProvenanceURI(string memory _provenanceURI)\n\n    external\n\n    onlyOwner\n\n    notLocked\n\n    {\n\n        provenanceURI = _provenanceURI;\n\n    }","after":"function setProvenanceURI(string calldata _provenanceURI)\n\n    external\n\n    onlyOwner\n\n    notLocked\n\n    {\n\n        provenanceURI = _provenanceURI;\n\n    }","contract":"WickedApes","time":0},{"type":"external-function ","before":"function setProvenance(string memory _provenance)\n\n    external\n\n    onlyOwner\n\n    notLocked\n\n    {\n\n        provenance = _provenance;\n\n    }","after":"function setProvenance(string calldata _provenance)\n\n    external\n\n    onlyOwner\n\n    notLocked\n\n    {\n\n        provenance = _provenance;\n\n    }","contract":"WickedApes","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"WickedApes","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"WickedApes","time":0}]}