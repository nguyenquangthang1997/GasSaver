{"time":194,"results":[{"type":"state-data-arrangement ","before":"\n    mapping(address => address) private _nextCreditAcco\n    address public override h\n    address public override t\n    address public masterCreditAcco\n    EnumerableSet.AddressSet private creditAccounts\n    DataTypes.MiningApproval[] public miningApprov\n    ContractsRegister public _contractsRegis\n    bool public isMiningFinis\n    uint256 public constant version ","after":"    mapping(address => address) private _nextCreditAcco\n    EnumerableSet.AddressSet private creditAccounts\n    DataTypes.MiningApproval[] public miningApprov\n    ContractsRegister public _contractsRegis\n    uint256 public constant version \n    address public override h\n    address public override t\n    address public masterCreditAcco\n    bool public isMiningFinis\n","contract":"AccountFactory","time":0},{"type":"immutable-restrict-modification ","before":"    address public masterCreditAcco","after":"    address public masterCreditAcco","contract":"AccountFactory","time":1},{"type":"external-function ","before":"ram data Call data which should be sent\n    function execute(address destination, bytes memory data)\n    external\n    override\n    creditManagerOnly\n    returns (bytes memory)\n    {\n        return destination.fun","after":"ram data Call data which should be sent\n    function execute(address destination, bytes memory data)\n    external\n    override\n    creditManagerOnly\n    returns (bytes memory)\n    {\n        return destination.fun","contract":"CreditAccount","time":0},{"type":"struct-data-arrangement ","before":"\nn;\n    }\n\n   \nkenBalance {\n  \ness token;\n   ","after":"kenBalance {\n  \nn;\n    }\n\n   \ness token;\n   \n","contract":"DataTypes","time":0},{"type":"struct-data-arrangement ","before":"\n struct Cred\nataExtended {\n  \ness addr;\n\ndress borrower;\n     \nUse;\n        address cr\nr;\n        address underlyingToken\nuint256 borrowedAm\nterest;\n        uint\nalue;\n        uint\nFactor;\n        uint256\ne;\n        TokenBal\nances;\n        uint256 re\n\n        uint256\nonAmount;\n        bool\ned;\n        uint256 borrowedA\n     uint256 ","after":"r;\n        address underlyingToken\nuint256 borrowedAm\nterest;\n        uint\nalue;\n        uint\nFactor;\n        uint256\ne;\n        TokenBal\nances;\n        uint256 re\nonAmount;\n        bool\ned;\n        uint256 borrowedA\n     uint256 \n struct Cred\nataExtended {\n  \ndress borrower;\n     \nUse;\n        address cr\ness addr;\n\n\n        uint256\n","contract":"DataTypes","time":0},{"type":"struct-data-arrangement ","before":"\nmpLU;\n    }\n\nt TokenInfo {\nddress addr;\n ","after":"t TokenInfo {\nmpLU;\n    }\n\nddress addr;\n \n","contract":"DataTypes","time":0}]}