{"time":658,"results":[{"type":"state-data-arrangement ","before":"\nstring public symbol;\nstring public name;\nuint8 public constant decimals = 18;\naddress public FRAXStablecoinAdd;\nuint256 public constant genesis_supply = 100000000e18;\nuint256 public FXS_DAO_min;\naddress public owner_address;\naddress public oracle_address;\naddress public timelock_address;\nFRAXStablecoin private FRAX;\nbool public trackingVotes = true;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;","after":"string public symbol;\nstring public name;\nuint256 public constant genesis_supply = 100000000e18;\nuint256 public FXS_DAO_min;\nFRAXStablecoin private FRAX;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;\naddress public FRAXStablecoinAdd;\naddress public owner_address;\naddress public oracle_address;\naddress public timelock_address;\nuint8 public constant decimals = 18;\nbool public trackingVotes = true;\n","contract":"FRAXShares","time":0},{"type":"state-data-arrangement ","before":"\nChainlinkETHUSDPriceConsumer private eth_usd_pricer;\nuint8 private eth_usd_pricer_decimals;\nUniswapPairOracle private fraxEthOracle;\nUniswapPairOracle private fxsEthOracle;\nstring public symbol;\nstring public name;\nuint8 public constant decimals = 18;\naddress public owner_address;\naddress public creator_address;\naddress public timelock_address;\naddress public controller_address;\naddress public fxs_address;\naddress public frax_eth_oracle_address;\naddress public fxs_eth_oracle_address;\naddress public weth_address;\naddress public eth_usd_consumer_address;\nuint256 public constant genesis_supply = 2000000e18;\naddress[] public frax_pools_array;\nmapping(address => bool) public frax_pools;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public global_collateral_ratio;\nuint256 public redemption_fee;\nuint256 public minting_fee;\nuint256 public frax_step;\nuint256 public refresh_cooldown;\nuint256 public price_target;\nuint256 public price_band;\naddress public DEFAULT_ADMIN_ADDRESS;\nbytes32 public constant COLLATERAL_RATIO_PAUSER = keccak256(\"COLLATERAL_RATIO_PAUSER\");\nbool public collateral_ratio_paused = false;\nuint256 public last_call_time;","after":"ChainlinkETHUSDPriceConsumer private eth_usd_pricer;\nUniswapPairOracle private fraxEthOracle;\nUniswapPairOracle private fxsEthOracle;\nstring public symbol;\nstring public name;\nuint256 public constant genesis_supply = 2000000e18;\naddress[] public frax_pools_array;\nmapping(address => bool) public frax_pools;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public global_collateral_ratio;\nuint256 public redemption_fee;\nuint256 public minting_fee;\nuint256 public frax_step;\nuint256 public refresh_cooldown;\nuint256 public price_target;\nuint256 public price_band;\nbytes32 public constant COLLATERAL_RATIO_PAUSER = keccak256(\"COLLATERAL_RATIO_PAUSER\");\nuint256 public last_call_time;\naddress public owner_address;\naddress public creator_address;\naddress public timelock_address;\naddress public controller_address;\naddress public fxs_address;\naddress public frax_eth_oracle_address;\naddress public fxs_eth_oracle_address;\naddress public weth_address;\naddress public eth_usd_consumer_address;\naddress public DEFAULT_ADMIN_ADDRESS;\nuint8 private eth_usd_pricer_decimals;\nuint8 public constant decimals = 18;\nbool public collateral_ratio_paused = false;\n","contract":"FRAXStablecoin","time":3},{"type":"state-data-arrangement ","before":"\nERC20 private collateral_token;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nFraxPool private pool;\nICREAM_crFRAX private crFRAX = ICREAM_crFRAX(0xb092b4601850E23903A42EaCBc9D8A0EeC26A4d5);\nIFNX_FPT_FRAX private fnxFPT_FRAX = IFNX_FPT_FRAX(0x39ad661bA8a7C9D3A7E4808fb9f9D5223E22F763);\nIFNX_FPT_B private fnxFPT_B = IFNX_FPT_B(0x7E605Fb638983A448096D82fFD2958ba012F30Cd);\nIFNX_IntegratedStake private fnxIntegratedStake = IFNX_IntegratedStake(0x23e54F9bBe26eD55F93F19541bC30AAc2D5569b2);\nIFNX_MinePool private fnxMinePool = IFNX_MinePool(0x4e6005396F80a737cE80d50B2162C0a7296c9620);\nIFNX_TokenConverter private fnxTokenConverter = IFNX_TokenConverter(0x955282b82440F8F69E901380BeF2b603Fba96F3b);\nIFNX_ManagerProxy private fnxManagerProxy = IFNX_ManagerProxy(0xa2904Fd151C9d9D634dFA8ECd856E6B9517F9785);\nIFNX_Oracle private fnxOracle = IFNX_Oracle(0x43BD92bF3Bb25EBB3BdC2524CBd6156E3Fdd41F3);\nIFNX_CFNX private CFNX = IFNX_CFNX(0x9d7beb4265817a4923FAD9Ca9EF8af138499615d);\nERC20 private FNX = ERC20(0xeF9Cd7882c067686691B6fF49e650b43AFBBCC6B);\naddress public collateral_address;\naddress public pool_address;\naddress public owner_address;\naddress public timelock_address;\naddress public custodian_address;\nuint256 public immutable missing_decimals;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public mint_cap = uint256(100000e18);\nuint256 public min_cr = 850000;\nuint256 public minted_sum_historical = 0;\nuint256 public burned_sum_historical = 0;\nbool public allow_cream = true;\nbool public allow_finnexus = true;\nbool public override_collat_balance = false;\nuint256 public override_collat_balance_amount;","after":"ERC20 private collateral_token;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nFraxPool private pool;\nICREAM_crFRAX private crFRAX = ICREAM_crFRAX(0xb092b4601850E23903A42EaCBc9D8A0EeC26A4d5);\nIFNX_FPT_FRAX private fnxFPT_FRAX = IFNX_FPT_FRAX(0x39ad661bA8a7C9D3A7E4808fb9f9D5223E22F763);\nIFNX_FPT_B private fnxFPT_B = IFNX_FPT_B(0x7E605Fb638983A448096D82fFD2958ba012F30Cd);\nIFNX_IntegratedStake private fnxIntegratedStake = IFNX_IntegratedStake(0x23e54F9bBe26eD55F93F19541bC30AAc2D5569b2);\nIFNX_MinePool private fnxMinePool = IFNX_MinePool(0x4e6005396F80a737cE80d50B2162C0a7296c9620);\nIFNX_TokenConverter private fnxTokenConverter = IFNX_TokenConverter(0x955282b82440F8F69E901380BeF2b603Fba96F3b);\nIFNX_ManagerProxy private fnxManagerProxy = IFNX_ManagerProxy(0xa2904Fd151C9d9D634dFA8ECd856E6B9517F9785);\nIFNX_Oracle private fnxOracle = IFNX_Oracle(0x43BD92bF3Bb25EBB3BdC2524CBd6156E3Fdd41F3);\nIFNX_CFNX private CFNX = IFNX_CFNX(0x9d7beb4265817a4923FAD9Ca9EF8af138499615d);\nERC20 private FNX = ERC20(0xeF9Cd7882c067686691B6fF49e650b43AFBBCC6B);\nuint256 public immutable missing_decimals;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public mint_cap = uint256(100000e18);\nuint256 public min_cr = 850000;\nuint256 public minted_sum_historical = 0;\nuint256 public burned_sum_historical = 0;\nuint256 public override_collat_balance_amount;\naddress public collateral_address;\naddress public pool_address;\naddress public owner_address;\naddress public timelock_address;\naddress public custodian_address;\nbool public allow_cream = true;\nbool public allow_finnexus = true;\nbool public override_collat_balance = false;\n","contract":"FraxLendingAMO","time":1},{"type":"state-data-arrangement ","before":"\nERC20 private collateral_token;\naddress private collateral_address;\naddress private owner_address;\naddress private frax_contract_address;\naddress private fxs_contract_address;\naddress private timelock_address;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nUniswapPairOracle private collatEthOracle;\naddress public collat_eth_oracle_address;\naddress private weth_address;\nuint256 public minting_fee;\nuint256 public redemption_fee;\nuint256 public buyback_fee;\nuint256 public recollat_fee;\nmapping(address => uint256) public redeemFXSBalances;\nmapping(address => uint256) public redeemCollateralBalances;\nuint256 public unclaimedPoolCollateral;\nuint256 public unclaimedPoolFXS;\nmapping(address => uint256) public lastRedeemed;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_MAX = 1e6;\nuint256 private immutable missing_decimals;\nuint256 public pool_ceiling = 0;\nuint256 public pausedPrice = 0;\nuint256 public bonus_rate = 7500;\nuint256 public redemption_delay = 1;\nbytes32 private constant MINT_PAUSER = keccak256(\"MINT_PAUSER\");\nbytes32 private constant REDEEM_PAUSER = keccak256(\"REDEEM_PAUSER\");\nbytes32 private constant BUYBACK_PAUSER = keccak256(\"BUYBACK_PAUSER\");\nbytes32 private constant RECOLLATERALIZE_PAUSER = keccak256(\"RECOLLATERALIZE_PAUSER\");\nbytes32 private constant COLLATERAL_PRICE_PAUSER = keccak256(\"COLLATERAL_PRICE_PAUSER\");\nbool public mintPaused = false;\nbool public redeemPaused = false;\nbool public recollateralizePaused = false;\nbool public buyBackPaused = false;\nbool public collateralPricePaused = false;","after":"ERC20 private collateral_token;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nUniswapPairOracle private collatEthOracle;\nuint256 public minting_fee;\nuint256 public redemption_fee;\nuint256 public buyback_fee;\nuint256 public recollat_fee;\nmapping(address => uint256) public redeemFXSBalances;\nmapping(address => uint256) public redeemCollateralBalances;\nuint256 public unclaimedPoolCollateral;\nuint256 public unclaimedPoolFXS;\nmapping(address => uint256) public lastRedeemed;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_MAX = 1e6;\nuint256 private immutable missing_decimals;\nuint256 public pool_ceiling = 0;\nuint256 public pausedPrice = 0;\nuint256 public bonus_rate = 7500;\nuint256 public redemption_delay = 1;\nbytes32 private constant MINT_PAUSER = keccak256(\"MINT_PAUSER\");\nbytes32 private constant REDEEM_PAUSER = keccak256(\"REDEEM_PAUSER\");\nbytes32 private constant BUYBACK_PAUSER = keccak256(\"BUYBACK_PAUSER\");\nbytes32 private constant RECOLLATERALIZE_PAUSER = keccak256(\"RECOLLATERALIZE_PAUSER\");\nbytes32 private constant COLLATERAL_PRICE_PAUSER = keccak256(\"COLLATERAL_PRICE_PAUSER\");\naddress private collateral_address;\naddress private owner_address;\naddress private frax_contract_address;\naddress private fxs_contract_address;\naddress private timelock_address;\naddress public collat_eth_oracle_address;\naddress private weth_address;\nbool public mintPaused = false;\nbool public redeemPaused = false;\nbool public recollateralizePaused = false;\nbool public buyBackPaused = false;\nbool public collateralPricePaused = false;\n","contract":"FraxPool","time":9},{"type":"state-data-arrangement ","before":"\n\n\n    address owner_ad\n;\n    address timelock_ad\n\n\n    uint public PERIOD =\n)\n    uint public CONSULT_LENIENCY \nd\n    bool public ALLOW_STALE_CONSULTS = \n\n\n    IUniswapV2Pair public immutable\n;\n    address public immutable t\n;\n    address public immutable t\n\n\n    uint    public price0Cumulativ\n;\n    uint    public price1Cumulativ\n;\n    uint32  public blockTimestam\n;\n    FixedPoint.uq112x112 public price0Av\n;\n    FixedPoint.uq112x112 public price1Av","after":"\n\n    uint public PERIOD =\n)\n    uint public CONSULT_LENIENCY \n\n\n    IUniswapV2Pair public immutable\n\n\n    uint    public price0Cumulativ\n;\n    uint    public price1Cumulativ\n;\n    FixedPoint.uq112x112 public price0Av\n;\n    FixedPoint.uq112x112 public price1Av\n\n\n    address owner_ad\n;\n    address timelock_ad\n;\n    address public immutable t\n;\n    address public immutable t\n;\n    uint32  public blockTimestam\nd\n    bool public ALLOW_STALE_CONSULTS = \n","contract":"UniswapPairOracle","time":1}]}