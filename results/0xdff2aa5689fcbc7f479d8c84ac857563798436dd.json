{"time":322,"results":[{"type":"loop-calculation","before":"uint256 srcAmount = amount;","after":"// move outside for loop\nuint256 srcAmount = amount;","loc":{"start":{"line":1549,"column":12},"end":{"line":1549,"column":38}},"contract":"OneSplitBase","time":0},{"type":"loop-duplication","before":"\nstart line 1627 column 8, end line 1637 column 8\nfor (uint i = 0; i < reserves.length; i++) {\n\n            if (distribution[i] > 0) {\n\n                parts = parts.add(distribution[i]);\n\n                lastNonZeroIndex = i;\n\n            }\n\n        }\nstart line 1645 column 8, end line 1666 column 8\nfor (uint i = 0; i < reserves.length; i++) {\n\n            if (distribution[i] == 0) {\n\n                continue;\n\n            }\n\n\n            uint256 swapAmount = amount.mul(distribution[i]).div(parts);\n\n            if (i == lastNonZeroIndex) {\n\n                swapAmount = remainingAmount;\n\n            }\n\n            remainingAmount -= swapAmount;\n\n            reserves[i](fromToken, toToken, swapAmount);\n\n        }","after":"// merge loop\n\nstart line 1627 column 8, end line 1637 column 8\nfor (uint i = 0; i < reserves.length; i++) {\n\n            if (distribution[i] > 0) {\n\n                parts = parts.add(distribution[i]);\n\n                lastNonZeroIndex = i;\n\n            }\n\n        }\nstart line 1645 column 8, end line 1666 column 8\nfor (uint i = 0; i < reserves.length; i++) {\n\n            if (distribution[i] == 0) {\n\n                continue;\n\n            }\n\n\n            uint256 swapAmount = amount.mul(distribution[i]).div(parts);\n\n            if (i == lastNonZeroIndex) {\n\n                swapAmount = remainingAmount;\n\n            }\n\n            remainingAmount -= swapAmount;\n\n            reserves[i](fromToken, toToken, swapAmount);\n\n        }","contract":"OneSplitBase","time":0},{"type":"de-morgan-condition ","before":"!fromToken.isETH() && !toToken.isETH()","after":"!(fromToken.isETH() && toToken.isETH())","loc":{"start":{"line":2287,"column":12},"end":{"line":2287,"column":49}},"contract":"OneSplitMultiPath","time":0},{"type":"de-morgan-condition ","before":"!fromToken.isETH() && !toToken.isETH()","after":"!(fromToken.isETH() && toToken.isETH())","loc":{"start":{"line":2362,"column":12},"end":{"line":2362,"column":49}},"contract":"OneSplitMultiPath","time":0},{"type":"loop-duplication","before":"\nstart line 2366 column 12, end line 2370 column 12\nfor (uint i = 0; i < distribution.length; i++) {\n\n                dist[i] = distribution[i] & 0xFF;\n\n            }\nstart line 2387 column 12, end line 2391 column 12\nfor (uint i = 0; i < distribution.length; i++) {\n\n                dist[i] = (distribution[i] >> 8) & 0xFF;\n\n            }","after":"// merge loop\n\nstart line 2366 column 12, end line 2370 column 12\nfor (uint i = 0; i < distribution.length; i++) {\n\n                dist[i] = distribution[i] & 0xFF;\n\n            }\nstart line 2387 column 12, end line 2391 column 12\nfor (uint i = 0; i < distribution.length; i++) {\n\n                dist[i] = (distribution[i] >> 8) & 0xFF;\n\n            }","contract":"OneSplitMultiPath","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ERC20Detailed","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ERC20Detailed","time":0},{"type":"immutable-restrict-modification ","before":"uint8 private _decimals;","after":"uint8 private immutable _decimals;","contract":"ERC20Detailed","time":0}]}