{"time":168,"results":[{"type":"state-data-arrangement ","before":"\nenzeppelin/contracts/access/Ownable.sol\nport \"@openzeppelin/contracts/token/\n1/extensions/ERC721Enumerable\n;\nimport \"@openzeppelin/contra\ninance/PaymentSplitter.sol\";\n\nco\nt DesperateApeWives is Ownab\nRC721Enumerable, PaymentSplitter\n   uint public const\nAX_WIVES = 10000;\n    uint private DA\nCE = 0.08 ether;\n    u\nPROVENANCE_HASH;\n    string private _b\nvate _contractURI;\n    bool public _\nvate locked;\n    bool private PROVEN\nM EST\n    uint public publicSale = 163535040\nFTs;\n        bool isEarl\norter;\n        bool isWhitel\n       bool isAdmin;\n    ","after":"enzeppelin/contracts/access/Ownable.sol\nport \"@openzeppelin/contracts/token/\n1/extensions/ERC721Enumerable\n;\nimport \"@openzeppelin/contra\ninance/PaymentSplitter.sol\";\n\nco\nt DesperateApeWives is Ownab\nCE = 0.08 ether;\n    u\nPROVENANCE_HASH;\n    string private _b\nvate _contractURI;\n    bool public _\nvate locked;\n    bool private PROVEN\nM EST\n    uint public publicSale = 163535040\nFTs;\n        bool isEarl\norter;\n        bool isWhitel\n       bool isAdmin;\n    \nRC721Enumerable, PaymentSplitter\n   uint public const\nAX_WIVES = 10000;\n    uint private DA\n","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":"uire(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    // End Modifier\n\n    // Setters\n\n    function setAdmin(address _addr","after":"uire(!locked, \"No re-entrancy\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    // End Modifier\n\n    // Setters\n\n    function setAdmin(address _addr","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":"nction setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        require(PROVENANCE_L","after":"nction setProvenanceHash(string calldata _provenanceHash) external onlyOwner {\n        require(PROVENANCE_L","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":" false);\n        PROVENANCE_HASH = _provenanceHash;\n    }\n\n    function lockProvenance() external onlyOwn","after":" false);\n        PROVENANCE_HASH = _provenanceHash;\n    }\n\n    function lockProvenance() external onlyOwn","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":"ctURI(string memory _newURI) external onlyAdmin {\n        _contractURI = _newURI;\n    }\n\n    function deactivateSale() external onlyOwner {\n        _isSaleLive = false;\n    }\n\n    function activateSale() external onlyOwner {\n        _isSaleLiv","after":"ctURI(string calldata _newURI) external onlyAdmin {\n        _contractURI = _newURI;\n    }\n\n    function deactivateSale() external onlyOwner {\n        _isSaleLive = false;\n    }\n\n    function activateSale() external onlyOwner {\n        _isSaleLiv","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":"ue;\n    }\n\n    function setEarlySupporters(address[] memory _addr) external onlyAdmin {\n        for (uint i = 0; i < _addr.length; i++) {\n            accounts[_addr[i]].walletLimit = 10;\n            accounts[_addr[i]].isEarlySupporter = true;\n","after":"ue;\n    }\n\n    function setEarlySupporters(address[] memory _addr) external onlyAdmin {\n        for (uint i = 0; i < _addr.length; i++) {\n            accounts[_addr[i]].walletLimit = 10;\n            accounts[_addr[i]].isEarlySupporter = true;\n","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":"  }\n    }\n\n    function setEarlySupporters5(address[] memory _addr) external onlyAdmin {\n        for (uint i = 0; i < _addr.length; i++) {\n            accounts[_addr[i]].walletLimit = 5;\n            accounts[_addr[i]].isEarlySuppor","after":"  }\n    }\n\n    function setEarlySupporters5(address[] memory _addr) external onlyAdmin {\n        for (uint i = 0; i < _addr.length; i++) {\n            accounts[_addr[i]].walletLimit = 5;\n            accounts[_addr[i]].isEarlySuppor","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":"true;\n        }\n    }\n\n    function setWhitelist(address[] memory _addr) external onlyAdmin {\n        for (uint i = 0; i < _addr.length; i++) {\n            accounts[_addr[i]].walletLimit = 2;\n            accounts[_addr[i]].isWhitelist = true;\n        }\n    }\n\n","after":"true;\n        }\n    }\n\n    function setWhitelist(address[] memory _addr) external onlyAdmin {\n        for (uint i = 0; i < _addr.length; i++) {\n            accounts[_addr[i]].walletLimit = 2;\n            accounts[_addr[i]].isWhitelist = true;\n        }\n    }\n\n","contract":"DesperateApeWives","time":0},{"type":"external-function ","before":"ed -= _amount;\n        _reserved = _reserved - _amount;\n\n        uint id = totalSupply();\n\n        for (uint i = 0; i < _amount; i++) {\n            id++;\n            _safeMint(msg.sender, id);\n            emit Mint(msg.sender, totalSupply());\n        }\n    }\n\n    function airDropMany(address[] memory _addr) external onlyAdmin {\n        require(totalSupply() + _addr.length <= (MAX_WIVES - _res","after":"ed -= _amount;\n        _reserved = _reserved - _amount;\n\n        uint id = totalSupply();\n\n        for (uint i = 0; i < _amount; i++) {\n            id++;\n            _safeMint(msg.sender, id);\n            emit Mint(msg.sender, totalSupply());\n        }\n    }\n\n    function airDropMany(address[] memory _addr) external onlyAdmin {\n        require(totalSupply() + _addr.length <= (MAX_WIVES - _res","contract":"DesperateApeWives","time":0},{"type":"constant-restrict-modification  ","before":"port \"@openzeppelin/contracts/token/","after":"port \"@openzeppelin/contracts/token/","contract":"DesperateApeWives","time":0},{"type":"constant-restrict-modification  ","before":"1/extensions/ERC721Enumerable","after":"1/extensions/ERC721Enumerable","contract":"DesperateApeWives","time":0},{"type":"immutable-restrict-modification ","before":"       bool isAdmin;\n    ","after":"       bool isAdmin;\n    ","contract":"DesperateApeWives","time":0},{"type":"immutable-restrict-modification ","before":" extension, but not i","after":" extension, but not i","contract":"DesperateApeWives","time":0},{"type":"immutable-restrict-modification ","before":"tension, which is avail","after":"tension, which is avail","contract":"DesperateApeWives","time":0}]}