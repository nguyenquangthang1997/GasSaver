{"time":78,"results":[{"type":"external-function ","before":"function initialize(\n\n        address[] memory _factories,\n\n        address[] memory _modules,\n\n        address[] memory _resources,\n\n        uint256[] memory _resourceIds\n\n    )\n\n    external\n\n    onlyOwner\n\n    {\n\n        require(!isInitialized, \"Controller is already initialized\");\n\n        require(_resources.length == _resourceIds.length, \"Array lengths do not match.\");\n\n\n        factories = _factories;\n\n        modules = _modules;\n\n        resources = _resources;\n\n\n        // Loop through and initialize isModule, isFactory, and isResource mapping\n\n        for (uint256 i = 0; i < _factories.length; i++) {\n\n            require(_factories[i] != address(0), \"Zero address submitted.\");\n\n            isFactory[_factories[i]] = true;\n\n        }\n\n        for (uint256 i = 0; i < _modules.length; i++) {\n\n            require(_modules[i] != address(0), \"Zero address submitted.\");\n\n            isModule[_modules[i]] = true;\n\n        }\n\n\n        for (uint256 i = 0; i < _resources.length; i++) {\n\n            require(_resources[i] != address(0), \"Zero address submitted.\");\n\n            require(resourceId[_resourceIds[i]] == address(0), \"Resource ID already exists\");\n\n            isResource[_resources[i]] = true;\n\n            resourceId[_resourceIds[i]] = _resources[i];\n\n        }\n\n\n        // Set to true to only allow initialization once\n\n        isInitialized = true;\n\n    }","after":"function initialize(\n\n        address[] calldata _factories,\n\n        address[] calldata _modules,\n\n        address[] calldata _resources,\n\n        uint256[] calldata _resourceIds\n\n    )\n\n    external\n\n    onlyOwner\n\n    {\n\n        require(!isInitialized, \"Controller is already initialized\");\n\n        require(_resources.length == _resourceIds.length, \"Array lengths do not match.\");\n\n\n        factories = _factories;\n\n        modules = _modules;\n\n        resources = _resources;\n\n\n        // Loop through and initialize isModule, isFactory, and isResource mapping\n\n        for (uint256 i = 0; i < _factories.length; i++) {\n\n            require(_factories[i] != address(0), \"Zero address submitted.\");\n\n            isFactory[_factories[i]] = true;\n\n        }\n\n        for (uint256 i = 0; i < _modules.length; i++) {\n\n            require(_modules[i] != address(0), \"Zero address submitted.\");\n\n            isModule[_modules[i]] = true;\n\n        }\n\n\n        for (uint256 i = 0; i < _resources.length; i++) {\n\n            require(_resources[i] != address(0), \"Zero address submitted.\");\n\n            require(resourceId[_resourceIds[i]] == address(0), \"Resource ID already exists\");\n\n            isResource[_resources[i]] = true;\n\n            resourceId[_resourceIds[i]] = _resources[i];\n\n        }\n\n\n        // Set to true to only allow initialization once\n\n        isInitialized = true;\n\n    }","contract":"Controller","time":0}]}