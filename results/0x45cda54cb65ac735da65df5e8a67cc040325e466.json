{"time":99,"results":[{"type":"external-function ","before":"function setTradeMaximums(\n        address[] memory _components,\n        uint256[] memory _tradeMaximums\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setTradeMaximums.selector,\n            setToken,\n            _components,\n            _tradeMaximums\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","after":"function setTradeMaximums(\n        address[] calldata _components,\n        uint256[] calldata _tradeMaximums\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setTradeMaximums.selector,\n            setToken,\n            _components,\n            _tradeMaximums\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","contract":"GIMExtension","time":0},{"type":"external-function ","before":"function setExchanges(\n        address[] memory _components,\n        string[] memory _exchangeNames\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setExchanges.selector,\n            setToken,\n            _components,\n            _exchangeNames\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","after":"function setExchanges(\n        address[] calldata _components,\n        string[] calldata _exchangeNames\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setExchanges.selector,\n            setToken,\n            _components,\n            _exchangeNames\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","contract":"GIMExtension","time":0},{"type":"external-function ","before":"function setCoolOffPeriods(\n        address[] memory _components,\n        uint256[] memory _coolOffPeriods\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setCoolOffPeriods.selector,\n            setToken,\n            _components,\n            _coolOffPeriods\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","after":"function setCoolOffPeriods(\n        address[] calldata _components,\n        uint256[] calldata _coolOffPeriods\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setCoolOffPeriods.selector,\n            setToken,\n            _components,\n            _coolOffPeriods\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","contract":"GIMExtension","time":0},{"type":"external-function ","before":"function setExchangeData(\n        address[] memory _components,\n        bytes[] memory _exchangeData\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setExchangeData.selector,\n            setToken,\n            _components,\n            _exchangeData\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","after":"function setExchangeData(\n        address[] calldata _components,\n        bytes[] calldata _exchangeData\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setExchangeData.selector,\n            setToken,\n            _components,\n            _exchangeData\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","contract":"GIMExtension","time":0},{"type":"external-function ","before":"function setTraderStatus(\n        address[] memory _traders,\n        bool[] memory _statuses\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setTraderStatus.selector,\n            setToken,\n            _traders,\n            _statuses\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","after":"function setTraderStatus(\n        address[] calldata _traders,\n        bool[] calldata _statuses\n    )\n    external\n    onlyOperator\n    {\n        bytes memory callData = abi.encodeWithSelector(\n            IGeneralIndexModule.setTraderStatus.selector,\n            setToken,\n            _traders,\n            _statuses\n        );\n\n        invokeManager(address(generalIndexModule), callData);\n    }","contract":"GIMExtension","time":0},{"type":"struct-data-arrangement ","before":"\naddress component\naddress module\nint256 unit\nuint8 positionState\nbytes data","after":"int256 unit\nbytes data\naddress component\naddress module\nuint8 positionState\n","contract":"ISetToken","time":0}]}