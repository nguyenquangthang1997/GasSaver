{"time":235,"results":[{"type":"de-morgan-condition ","before":"e(!bots[from] && !bots[t","after":"!(e(bots[from] && bots[t)","loc":{"start":{"line":428,"column":20},"end":{"line":428,"column":43}},"contract":"ProbablyNothing","time":0},{"type":"state-data-arrangement ","before":"\n  mapping(address => uint256) private _rOwne\n  mapping(address => uint256) private _tOwne\n  mapping(address => mapping(address => uint256)) private _allowance\n  mapping(address => bool) private _isExcludedFromFe\n  mapping(address => bool) private bot\n  mapping(address => uint) private cooldow\n  uint256 private constant MAX = ~uint256(0\n  uint256 private constant _tTotal = 1e12 * 10 ** \n  uint256 private _rTotal = (MAX - (MAX % _tTotal)\n  uint256 private _tFeeTota\n  uint256 private _feeAddr\n  uint256 private _feeAddr\n  address payable private _feeAddrWallet\n  address payable private _feeAddrWallet\n  string private constant _name = \"Probably Nothing\n  string private constant _symbol = \"PN\n  uint8 private constant _decimals = \n  IUniswapV2Router02 private uniswapV2Route\n  address private uniswapV2Pai\n  bool private tradingOpe\n  bool private inSwap = fals\n  bool private swapEnabled = fals\n  bool private cooldownEnabled = fals\n  uint256 private _maxTxAmount = _tTota","after":"  mapping(address => uint256) private _rOwne\n  mapping(address => uint256) private _tOwne\n  mapping(address => mapping(address => uint256)) private _allowance\n  mapping(address => bool) private _isExcludedFromFe\n  mapping(address => bool) private bot\n  mapping(address => uint) private cooldow\n  uint256 private constant MAX = ~uint256(0\n  uint256 private constant _tTotal = 1e12 * 10 ** \n  uint256 private _rTotal = (MAX - (MAX % _tTotal)\n  uint256 private _tFeeTota\n  uint256 private _feeAddr\n  uint256 private _feeAddr\n  string private constant _name = \"Probably Nothing\n  string private constant _symbol = \"PN\n  IUniswapV2Router02 private uniswapV2Route\n  uint256 private _maxTxAmount = _tTota\n  address payable private _feeAddrWallet\n  address payable private _feeAddrWallet\n  address private uniswapV2Pai\n  uint8 private constant _decimals = \n  bool private tradingOpe\n  bool private inSwap = fals\n  bool private swapEnabled = fals\n  bool private cooldownEnabled = fals\n","contract":"ProbablyNothing","time":1},{"type":"external-function ","before":"  function setBots(address[] memory bots_) public onlyOwner {\n\n        for (uint i = 0; i < bots_.length; i++) {\n\n            bots[bots_[i]] = true;\n\n        }\n\n   ","after":"  function setBots(address[] calldata bots_) public onlyOwner {\n\n        for (uint i = 0; i < bots_.length; i++) {\n\n            bots[bots_[i]] = true;\n\n        }\n\n   ","contract":"ProbablyNothing","time":0},{"type":"immutable-restrict-modification ","before":"  address payable private _feeAddrWallet","after":"  address payable private _feeAddrWallet","contract":"ProbablyNothing","time":0},{"type":"immutable-restrict-modification ","before":"  address payable private _feeAddrWallet","after":"  address payable private _feeAddrWallet","contract":"ProbablyNothing","time":0},{"type":"constant-restrict-modification  ","before":"  address private _previousOwne","after":"  address private _previousOwne","contract":"ProbablyNothing","time":0}]}