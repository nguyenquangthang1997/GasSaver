{"time":32,"results":[{"type":"external-function ","before":"function delegateToImplementation(bytes memory data) public returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = implementation.delegatecall(data);\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return returnData;\n\n    }","after":"function delegateToImplementation(bytes calldata data) public returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = implementation.delegatecall(data);\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return returnData;\n\n    }","contract":"FPTProxy","time":0},{"type":"external-function ","before":"function delegateToViewImplementation(bytes memory data) public view returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = address(this).staticcall(abi.encodeWithSignature(\"delegateToImplementation(bytes)\", data));\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return abi.decode(returnData, (bytes));\n\n    }","after":"function delegateToViewImplementation(bytes calldata data) public view returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = address(this).staticcall(abi.encodeWithSignature(\"delegateToImplementation(bytes)\", data));\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return abi.decode(returnData, (bytes));\n\n    }","contract":"FPTProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 internal _totalLockedWorth;","after":"uint256 internal constant _totalLockedWorth;","contract":"FPTProxy","time":0},{"type":"immutable-restrict-modification ","before":"string public name;","after":"string public immutable name;","contract":"FPTProxy","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol;","after":"string public constant symbol;","contract":"FPTProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint8 public decimals = 18;","after":"uint8 public constant decimals = 18;","contract":"FPTProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 internal _totalSupply;","after":"uint256 internal constant _totalSupply;","contract":"FPTProxy","time":0}]}