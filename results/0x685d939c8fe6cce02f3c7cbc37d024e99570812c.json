{"time":121,"results":[{"type":"state-data-arrangement ","before":"\nstring public constant name = \"hats.finance\";\nstring public constant symbol = \"HAT\";\nuint8 public constant decimals = 18;\nuint public override totalSupply;\naddress public governance;\naddress public governancePending;\nuint256 public setGovernancePendingAt;\nuint256 public immutable timeLockDelay;\nuint256 public constant CAP = 10000000e18;\nmapping(address => uint256) public minters;\nmapping(address => PendingMinter) public pendingMinters;\nmapping(address => mapping(address => uint96)) internal allowances;\nmapping(address => uint96) internal balances;\nmapping(address => address) public delegates;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;\nmapping(address => uint) public nonces;\nbytes32 public constant DOMAIN_TYPEHASH =\n    keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH =\n    keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\nbytes32 public constant PERMIT_TYPEHASH =\n    keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");","after":"string public constant name = \"hats.finance\";\nstring public constant symbol = \"HAT\";\nuint public override totalSupply;\nuint256 public setGovernancePendingAt;\nuint256 public immutable timeLockDelay;\nuint256 public constant CAP = 10000000e18;\nmapping(address => uint256) public minters;\nmapping(address => PendingMinter) public pendingMinters;\nmapping(address => mapping(address => uint96)) internal allowances;\nmapping(address => uint96) internal balances;\nmapping(address => address) public delegates;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;\nmapping(address => uint) public nonces;\nbytes32 public constant DOMAIN_TYPEHASH =\n    keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH =\n    keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\nbytes32 public constant PERMIT_TYPEHASH =\n    keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\naddress public governance;\naddress public governancePending;\nuint8 public constant decimals = 18;\n","contract":"HATToken","time":0}]}