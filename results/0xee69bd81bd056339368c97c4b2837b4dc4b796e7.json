{"time":641,"results":[{"type":"state-data-arrangement ","before":"\naddress public constant ZERO_ADDRESS = address(0);\nuint256 public transmutationPeriod;\naddress public alToken;\naddress public token;\nmapping(address => uint256) public depositedAlTokens;\nmapping(address => uint256) public tokensInBucket;\nmapping(address => uint256) public realisedTokens;\nmapping(address => uint256) public lastDividendPoints;\nmapping(address => bool) public userIsKnown;\nmapping(uint256 => address) public userList;\nuint256 public nextUser;\nuint256 public totalSupplyAltokens;\nuint256 public buffer;\nuint256 public lastDepositBlock;\nuint256 public pointMultiplier = 10e18;\nuint256 public totalDividendPoints;\nuint256 public unclaimedDividends;\nmapping(address => bool) public whiteList;\nmapping(address => bool) public keepers;\nuint256 public plantableThreshold = 5000000000000000000000000;\nuint256 public plantableMargin = 5;\naddress public governance;\naddress public pendingGovernance;\naddress public sentinel;\nbool public pause;\naddress public rewards;\nmapping(YearnVaultAdapterWithIndirection => bool) public adapters;\nVaultWithIndirection.List private _vaults;\nbool public initialized;\nmapping(address => uint256) public lastUserAction;\nuint256 public minUserActionDelay;","after":"uint256 public transmutationPeriod;\nmapping(address => uint256) public depositedAlTokens;\nmapping(address => uint256) public tokensInBucket;\nmapping(address => uint256) public realisedTokens;\nmapping(address => uint256) public lastDividendPoints;\nmapping(address => bool) public userIsKnown;\nmapping(uint256 => address) public userList;\nuint256 public nextUser;\nuint256 public totalSupplyAltokens;\nuint256 public buffer;\nuint256 public lastDepositBlock;\nuint256 public pointMultiplier = 10e18;\nuint256 public totalDividendPoints;\nuint256 public unclaimedDividends;\nmapping(address => bool) public whiteList;\nmapping(address => bool) public keepers;\nuint256 public plantableThreshold = 5000000000000000000000000;\nuint256 public plantableMargin = 5;\nmapping(YearnVaultAdapterWithIndirection => bool) public adapters;\nVaultWithIndirection.List private _vaults;\nmapping(address => uint256) public lastUserAction;\nuint256 public minUserActionDelay;\naddress public constant ZERO_ADDRESS = address(0);\naddress public alToken;\naddress public token;\naddress public governance;\naddress public pendingGovernance;\naddress public sentinel;\naddress public rewards;\nbool public pause;\nbool public initialized;\n","contract":"TransmuterB","time":1},{"type":"immutable-restrict-modification ","before":"address public alToken;","after":"address public immutable alToken;","contract":"TransmuterB","time":0},{"type":"immutable-restrict-modification ","before":"address public token;","after":"address public immutable token;","contract":"TransmuterB","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public pointMultiplier = 10e18;","after":"uint256 public constant pointMultiplier = 10e18;","contract":"TransmuterB","time":0},{"type":"immutable-restrict-modification ","before":"address public admin;","after":"address public immutable admin;","contract":"YearnVaultAdapterWithIndirection","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public decimals;","after":"uint256 public immutable decimals;","contract":"YearnVaultAdapterWithIndirection","time":1}]}