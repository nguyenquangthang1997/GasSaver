{"time":1092,"results":[{"type":"state-data-arrangement ","before":"\n\n     */\n\n    bool interna\n\n     */\n\n    strin\n\n     */\n\n    string \n\n     */\n\n    uint8 pu\n\n     */\n\n    uint internal constant borrowRateMaxMantiss\n\n     */\n\n    uint internal constant reserveFactorPlusFeesMaxMa\n\n     */\n\n    address payable public\n\n     */\n\n    ComptrollerInterface publi\n\n     */\n\n    InterestRateModel public inte\n\n     */\n\n    uint internal initialExchang\n\n     */\n\n    uint public adm\n\n     */\n\n    uint public fu\n\n     */\n\n    uint public reserveF\n\n     */\n\n    uint public accru\n\n     */\n\n    uint publi\n\n     */\n\n    uint public\n\n     */\n\n    uint public \n\n     */\n\n    uint public t\n\n     */\n\n    uint public \n\n     */\n\n    uint publi\n\n     */\n\n    mapping(address => uint) internal \n\n     */\n\n    mapping(address => mapping(address => uint)) internal trans\n\n     */\n\n    mapping(address => BorrowSnapshot) internal a","after":"\n     */\n\n    strin\n\n     */\n\n    string \n\n     */\n\n    uint internal constant borrowRateMaxMantiss\n\n     */\n\n    uint internal constant reserveFactorPlusFeesMaxMa\n\n     */\n\n    ComptrollerInterface publi\n\n     */\n\n    InterestRateModel public inte\n\n     */\n\n    uint internal initialExchang\n\n     */\n\n    uint public adm\n\n     */\n\n    uint public fu\n\n     */\n\n    uint public reserveF\n\n     */\n\n    uint public accru\n\n     */\n\n    uint publi\n\n     */\n\n    uint public\n\n     */\n\n    uint public \n\n     */\n\n    uint public t\n\n     */\n\n    uint public \n\n     */\n\n    uint publi\n\n     */\n\n    mapping(address => uint) internal \n\n     */\n\n    mapping(address => mapping(address => uint)) internal trans\n\n     */\n\n    mapping(address => BorrowSnapshot) internal a\n\n     */\n\n    address payable public\n\n     */\n\n    bool interna\n\n     */\n\n    uint8 pu\n","contract":"CTokenStorage","time":0},{"type":"de-morgan-condition ","before":"ator;\n\n\n        if (!markets[cTokenBorrowed].isListed || !markets[cToken","after":"!(ator;\n\n\n        if (markets[cTokenBorrowed].isListed || markets[cToken)","loc":{"start":{"line":6427,"column":12},"end":{"line":6427,"column":76}},"contract":"Comptroller","time":0},{"type":"de-morgan-condition ","before":"kens;\n\n\n        if (!markets[cTokenCollateral].isListed || !markets[cTok","after":"!(kens;\n\n\n        if (markets[cTokenCollateral].isListed || markets[cTok)","loc":{"start":{"line":6579,"column":12},"end":{"line":6579,"column":76}},"contract":"Comptroller","time":0},{"type":"de-morgan-condition ","before":"ount;\n\n\n        if (!isBorrow && !markets[address(cTokenModify)].accountMe","after":"!(ount;\n\n\n        if (isBorrow && markets[address(cTokenModify)].accountMe)","loc":{"start":{"line":7118,"column":12},"end":{"line":7118,"column":85}},"contract":"Comptroller","time":0},{"type":"de-morgan-condition ","before":"tly unused\n\n\n\n        if (!markets[cTokenBorrowed].isListed || !markets[","after":"!(tly unused\n\n\n\n        if (markets[cTokenBorrowed].isListed || markets[)","loc":{"start":{"line":8797,"column":12},"end":{"line":8797,"column":76}},"contract":"ComptrollerG1","time":0},{"type":"de-morgan-condition ","before":"tly unused\n\n\n\n        if (!markets[cTokenCollateral].isListed || !market","after":"!(tly unused\n\n\n\n        if (markets[cTokenCollateral].isListed || market)","loc":{"start":{"line":8950,"column":12},"end":{"line":8950,"column":76}},"contract":"ComptrollerG1","time":0},{"type":"state-data-arrangement ","before":"\ns supported\n\n     */\n\n    mapping(address \n list of all markets\n\n    C\nany markets\n\n     */\n\n    mapping(address =>\nhave entered markets\n\n    addr\n`allBorrowers` array\n\n    mapping(address => uint256)\nany markets\n\n     */\n\n    mapping(address \nying token addresses\n\n    mapping(address => CToken) p\nhitelist is enforced\n\n    boo\n(i.e., mint cTokens)\n\n    mapping(address \nwhitelisted accounts\n\n    addres\nhitelistArray` array\n\n    mapping(address => uint256) \n by market.\n\n     */\n\n    add\nublic pauseGuardian;\n\n    bool p\n_mintGuardianPaused;\n\n    bool pub\norrowGuardianPaused;\n\n    bool publ\nnsferGuardianPaused;\n\n    bool p\nseizeGuardianPaused;\n\n    mapping(address => bool) \n mintGuardianPaused;\n\n    mapping(address => bool) pu","after":"s supported\n\n     */\n\n    mapping(address \n list of all markets\n\n    C\nany markets\n\n     */\n\n    mapping(address =>\nhave entered markets\n\n    addr\n`allBorrowers` array\n\n    mapping(address => uint256)\nany markets\n\n     */\n\n    mapping(address \nying token addresses\n\n    mapping(address => CToken) p\n(i.e., mint cTokens)\n\n    mapping(address \nwhitelisted accounts\n\n    addres\nhitelistArray` array\n\n    mapping(address => uint256) \nseizeGuardianPaused;\n\n    mapping(address => bool) \n mintGuardianPaused;\n\n    mapping(address => bool) pu\n by market.\n\n     */\n\n    add\nhitelist is enforced\n\n    boo\nublic pauseGuardian;\n\n    bool p\n_mintGuardianPaused;\n\n    bool pub\norrowGuardianPaused;\n\n    bool publ\nnsferGuardianPaused;\n\n    bool p\n","contract":"ComptrollerV2Storage","time":0}]}