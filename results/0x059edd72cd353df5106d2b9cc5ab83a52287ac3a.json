{"time":284,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"struct-data-arrangement ","before":"\nstring name\nstring artist\nstring description\nstring website\nstring license\nbool dynamic\naddress payable artistAddress\naddress payable additionalPayee\nuint256 additionalPayeePercentage\nuint256 secondMarketRoyalty\nuint256 pricePerTokenInWei\nstring projectBaseURI\nstring projectBaseIpfsURI\nuint256 invocations\nuint256 maxInvocations\nstring scriptJSON\nmapping(uint256 => string) scripts\nuint scriptCount\nstring ipfsHash\nuint256 hashes\nbool useIpfs\nbool active\nbool locked\nbool paused","after":"string name\nstring artist\nstring description\nstring website\nstring license\nuint256 additionalPayeePercentage\nuint256 secondMarketRoyalty\nuint256 pricePerTokenInWei\nstring projectBaseURI\nstring projectBaseIpfsURI\nuint256 invocations\nuint256 maxInvocations\nstring scriptJSON\nmapping(uint256 => string) scripts\nuint scriptCount\nstring ipfsHash\nuint256 hashes\naddress payable artistAddress\naddress payable additionalPayee\nbool dynamic\nbool useIpfs\nbool active\nbool locked\nbool paused\n","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectName(uint256 _projectId, string memory _projectName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].name = _projectName;\n\n    }","after":"function updateProjectName(uint256 _projectId, string calldata _projectName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].name = _projectName;\n\n    }","contract":"GenArt721","time":1},{"type":"external-function ","before":"function updateProjectArtistName(uint256 _projectId, string memory _projectArtistName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].artist = _projectArtistName;\n\n    }","after":"function updateProjectArtistName(uint256 _projectId, string calldata _projectArtistName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].artist = _projectArtistName;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectDescription(uint256 _projectId, string memory _projectDescription) onlyArtist(_projectId) public {\n\n        projects[_projectId].description = _projectDescription;\n\n    }","after":"function updateProjectDescription(uint256 _projectId, string calldata _projectDescription) onlyArtist(_projectId) public {\n\n        projects[_projectId].description = _projectDescription;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectWebsite(uint256 _projectId, string memory _projectWebsite) onlyArtist(_projectId) public {\n\n        projects[_projectId].website = _projectWebsite;\n\n    }","after":"function updateProjectWebsite(uint256 _projectId, string calldata _projectWebsite) onlyArtist(_projectId) public {\n\n        projects[_projectId].website = _projectWebsite;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectLicense(uint256 _projectId, string memory _projectLicense) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].license = _projectLicense;\n\n    }","after":"function updateProjectLicense(uint256 _projectId, string calldata _projectLicense) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].license = _projectLicense;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function addProjectScript(uint256 _projectId, string memory _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].scripts[projects[_projectId].scriptCount] = _script;\n\n        projects[_projectId].scriptCount = projects[_projectId].scriptCount.add(1);\n\n    }","after":"function addProjectScript(uint256 _projectId, string calldata _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].scripts[projects[_projectId].scriptCount] = _script;\n\n        projects[_projectId].scriptCount = projects[_projectId].scriptCount.add(1);\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectScript(uint256 _projectId, uint256 _scriptId, string memory _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        require(_scriptId < projects[_projectId].scriptCount, \"scriptId out of range\");\n\n        projects[_projectId].scripts[_scriptId] = _script;\n\n    }","after":"function updateProjectScript(uint256 _projectId, uint256 _scriptId, string calldata _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        require(_scriptId < projects[_projectId].scriptCount, \"scriptId out of range\");\n\n        projects[_projectId].scripts[_scriptId] = _script;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectScriptJSON(uint256 _projectId, string memory _projectScriptJSON) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].scriptJSON = _projectScriptJSON;\n\n    }","after":"function updateProjectScriptJSON(uint256 _projectId, string calldata _projectScriptJSON) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].scriptJSON = _projectScriptJSON;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectIpfsHash(uint256 _projectId, string memory _ipfsHash) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].ipfsHash = _ipfsHash;\n\n    }","after":"function updateProjectIpfsHash(uint256 _projectId, string calldata _ipfsHash) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n\n        projects[_projectId].ipfsHash = _ipfsHash;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectBaseURI(uint256 _projectId, string memory _newBaseURI) onlyArtist(_projectId) public {\n\n        projects[_projectId].projectBaseURI = _newBaseURI;\n\n    }","after":"function updateProjectBaseURI(uint256 _projectId, string calldata _newBaseURI) onlyArtist(_projectId) public {\n\n        projects[_projectId].projectBaseURI = _newBaseURI;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function updateProjectBaseIpfsURI(uint256 _projectId, string memory _projectBaseIpfsURI) onlyArtist(_projectId) public {\n\n        projects[_projectId].projectBaseIpfsURI = _projectBaseIpfsURI;\n\n    }","after":"function updateProjectBaseIpfsURI(uint256 _projectId, string calldata _projectBaseIpfsURI) onlyArtist(_projectId) public {\n\n        projects[_projectId].projectBaseIpfsURI = _projectBaseIpfsURI;\n\n    }","contract":"GenArt721","time":0},{"type":"external-function ","before":"function overrideTokenDynamicImageWithIpfsLink(uint256 _tokenId, string memory _ipfsHash) onlyArtist(tokenIdToProjectId[_tokenId]) public {\n\n        staticIpfsImageLink[_tokenId] = _ipfsHash;\n\n    }","after":"function overrideTokenDynamicImageWithIpfsLink(uint256 _tokenId, string calldata _ipfsHash) onlyArtist(tokenIdToProjectId[_tokenId]) public {\n\n        staticIpfsImageLink[_tokenId] = _ipfsHash;\n\n    }","contract":"GenArt721","time":0},{"type":"immutable-restrict-modification ","before":"address public admin;","after":"address public immutable admin;","contract":"GenArt721","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"GenArt721","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"GenArt721","time":0},{"type":"external-function ","before":"function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data)\n\n    public returns (bytes4)\n\n    {\n\n        require(!_reverts, \"ERC721ReceiverMock: reverting\");\n\n        emit Received(operator, from, tokenId, data, gasleft());\n\n        return _retval;\n\n    }","after":"function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data)\n\n    public returns (bytes4)\n\n    {\n\n        require(!_reverts, \"ERC721ReceiverMock: reverting\");\n\n        emit Received(operator, from, tokenId, data, gasleft());\n\n        return _retval;\n\n    }","contract":"ERC721ReceiverMock","time":0},{"type":"immutable-restrict-modification ","before":"bytes4 private _retval;","after":"bytes4 private immutable _retval;","contract":"ERC721ReceiverMock","time":0},{"type":"immutable-restrict-modification ","before":"bool private _reverts;","after":"bool private immutable _reverts;","contract":"ERC721ReceiverMock","time":0}]}