{"time":550,"results":[{"type":"state-data-arrangement ","before":"\n uint256 public constant GRACE_PERIOD = 14 days\n uint256 public constant MINIMUM_DELAY = 12 hours + 2 * 60 * 15\n uint256 public constant MAXIMUM_DELAY = 30 days\n address public admin\n address public pendingAdmin\n uint256 public delay\n bool public admin_initialized\n mapping(bytes32 => bool) public queuedTransactions","after":" uint256 public constant GRACE_PERIOD = 14 days\n uint256 public constant MINIMUM_DELAY = 12 hours + 2 * 60 * 15\n uint256 public constant MAXIMUM_DELAY = 30 days\n uint256 public delay\n mapping(bytes32 => bool) public queuedTransactions\n address public admin\n address public pendingAdmin\n bool public admin_initialized\n","contract":"Timelock","time":0},{"type":"state-data-arrangement ","before":"\n bool internal _notEntered\n string public name\n string public symbol\n uint8 public decimals\n address public gov\n address public pendingGov\n address public rebaser\n uint256 public totalSupply\n uint256 public constant internalDecimals = 10 ** 18\n uint256 public constant BASE = 10 ** 18\n uint256 public velosScalingFactor\n mapping(address => uint256) internal _veloBalances\n mapping(address => mapping(address => uint256)) internal _allowedFragments\n uint256 public initSupply\n address public feeCharger","after":" string public name\n string public symbol\n uint256 public totalSupply\n uint256 public constant internalDecimals = 10 ** 18\n uint256 public constant BASE = 10 ** 18\n uint256 public velosScalingFactor\n mapping(address => uint256) internal _veloBalances\n mapping(address => mapping(address => uint256)) internal _allowedFragments\n uint256 public initSupply\n address public gov\n address public pendingGov\n address public rebaser\n address public feeCharger\n bool internal _notEntered\n uint8 public decimals\n","contract":"VELOTokenStorage","time":0}]}