{"time":170,"results":[{"type":"external-function ","before":"function onERC721Received(address, address, uint256, bytes memory) public returns (bytes4) {\n\n        return this.onERC721Received.selector;\n\n    }","after":"function onERC721Received(address, address, uint256, bytes calldata) public returns (bytes4) {\n\n        return this.onERC721Received.selector;\n\n    }","contract":"PublicLock","time":0},{"type":"external-function ","before":"function strConcat(\n\n        string memory _a,\n\n        string memory _b,\n\n        string memory _c,\n\n        string memory _d\n\n    ) public\n\n    pure\n\n    returns (string memory _concatenatedString)\n\n    {\n\n        bytes memory _ba = bytes(_a);\n\n        bytes memory _bb = bytes(_b);\n\n        bytes memory _bc = bytes(_c);\n\n        bytes memory _bd = bytes(_d);\n\n        string memory abcd = new string(_ba.length + _bb.length + _bc.length + _bd.length);\n\n        bytes memory babcd = bytes(abcd);\n\n        uint k = 0;\n\n        uint i = 0;\n\n        for (i = 0; i < _ba.length; i++) {\n\n            babcd[k++] = _ba[i];\n\n        }\n\n        for (i = 0; i < _bb.length; i++) {\n\n            babcd[k++] = _bb[i];\n\n        }\n\n        for (i = 0; i < _bc.length; i++) {\n\n            babcd[k++] = _bc[i];\n\n        }\n\n        for (i = 0; i < _bd.length; i++) {\n\n            babcd[k++] = _bd[i];\n\n        }\n\n        return string(babcd);\n\n    }","after":"function strConcat(\n\n        string calldata _a,\n\n        string calldata _b,\n\n        string calldata _c,\n\n        string calldata _d\n\n    ) public\n\n    pure\n\n    returns (string memory _concatenatedString)\n\n    {\n\n        bytes memory _ba = bytes(_a);\n\n        bytes memory _bb = bytes(_b);\n\n        bytes memory _bc = bytes(_c);\n\n        bytes memory _bd = bytes(_d);\n\n        string memory abcd = new string(_ba.length + _bb.length + _bc.length + _bd.length);\n\n        bytes memory babcd = bytes(abcd);\n\n        uint k = 0;\n\n        uint i = 0;\n\n        for (i = 0; i < _ba.length; i++) {\n\n            babcd[k++] = _ba[i];\n\n        }\n\n        for (i = 0; i < _bb.length; i++) {\n\n            babcd[k++] = _bb[i];\n\n        }\n\n        for (i = 0; i < _bc.length; i++) {\n\n            babcd[k++] = _bc[i];\n\n        }\n\n        for (i = 0; i < _bd.length; i++) {\n\n            babcd[k++] = _bd[i];\n\n        }\n\n        return string(babcd);\n\n    }","contract":"PublicLock","time":1},{"type":"immutable-restrict-modification ","before":"address public tokenAddress;","after":"address public immutable tokenAddress;","contract":"PublicLock","time":3},{"type":"immutable-restrict-modification ","before":"uint public expirationDuration;","after":"uint public immutable expirationDuration;","contract":"PublicLock","time":3},{"type":"immutable-restrict-modification ","before":"uint public maxNumberOfKeys;","after":"uint public immutable maxNumberOfKeys;","contract":"PublicLock","time":3}]}