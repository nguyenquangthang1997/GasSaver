{"time":28,"results":[{"type":"struct-data-arrangement ","before":"\naddress token\nuint256 amount\nuint256 strikePrice\nuint256 expiration\nbool isCall","after":"uint256 amount\nuint256 strikePrice\nuint256 expiration\naddress token\nbool isCall\n","contract":"IPremiaOption","time":0},{"type":"struct-data-arrangement ","before":"\naddress token\nuint256 strikePrice\nuint256 expiration\nbool isCall\nuint256 claimsPreExp\nuint256 claimsPostExp\nuint256 exercised\nuint256 supply\nuint8 decimals","after":"uint256 strikePrice\nuint256 expiration\nuint256 claimsPreExp\nuint256 claimsPostExp\nuint256 exercised\nuint256 supply\naddress token\nbool isCall\nuint8 decimals\n","contract":"IPremiaOption","time":0},{"type":"struct-data-arrangement ","before":"\naddress collateralToken\nuint256 collateral\nuint8 collateralDecimals\nuint256 fee\nuint256 feeReferrer","after":"uint256 collateral\nuint256 fee\nuint256 feeReferrer\naddress collateralToken\nuint8 collateralDecimals\n","contract":"IPremiaOption","time":0},{"type":"struct-data-arrangement ","before":"\naddress inputToken\nuint256 input\nuint8 inputDecimals\naddress outputToken\nuint256 output\nuint8 outputDecimals\nuint256 fee\nuint256 feeReferrer","after":"uint256 input\nuint256 output\nuint256 fee\nuint256 feeReferrer\naddress inputToken\naddress outputToken\nuint8 inputDecimals\nuint8 outputDecimals\n","contract":"IPremiaOption","time":0},{"type":"external-function ","before":"function batchWriteOption(IPremiaOption _premiaOption, IPremiaOption.OptionWriteArgs[] memory _options, address _referrer) external {\n\n        for (uint256 i = 0; i < _options.length; ++i) {\n\n            _premiaOption.writeOptionFrom(msg.sender, _options[i], _referrer);\n\n        }\n\n    }","after":"function batchWriteOption(IPremiaOption _premiaOption, IPremiaOption.OptionWriteArgs[] calldata _options, address _referrer) external {\n\n        for (uint256 i = 0; i < _options.length; ++i) {\n\n            _premiaOption.writeOptionFrom(msg.sender, _options[i], _referrer);\n\n        }\n\n    }","contract":"PremiaOptionBatch","time":0},{"type":"external-function ","before":"function batchCancelOption(IPremiaOption _premiaOption, uint256[] memory _optionId, uint256[] memory _amounts) external {\n\n        require(_optionId.length == _amounts.length, \"Arrays diff len\");\n\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.cancelOptionFrom(msg.sender, _optionId[i], _amounts[i]);\n\n        }\n\n    }","after":"function batchCancelOption(IPremiaOption _premiaOption, uint256[] calldata _optionId, uint256[] calldata _amounts) external {\n\n        require(_optionId.length == _amounts.length, \"Arrays diff len\");\n\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.cancelOptionFrom(msg.sender, _optionId[i], _amounts[i]);\n\n        }\n\n    }","contract":"PremiaOptionBatch","time":0},{"type":"external-function ","before":"function batchWithdraw(IPremiaOption _premiaOption, uint256[] memory _optionId) external {\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.withdrawFrom(msg.sender, _optionId[i]);\n\n        }\n\n    }","after":"function batchWithdraw(IPremiaOption _premiaOption, uint256[] calldata _optionId) external {\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.withdrawFrom(msg.sender, _optionId[i]);\n\n        }\n\n    }","contract":"PremiaOptionBatch","time":0},{"type":"external-function ","before":"function batchExerciseOption(IPremiaOption _premiaOption, uint256[] memory _optionId, uint256[] memory _amounts, address _referrer) external {\n\n        require(_optionId.length == _amounts.length, \"Arrays diff len\");\n\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.exerciseOptionFrom(msg.sender, _optionId[i], _amounts[i], _referrer);\n\n        }\n\n    }","after":"function batchExerciseOption(IPremiaOption _premiaOption, uint256[] calldata _optionId, uint256[] calldata _amounts, address _referrer) external {\n\n        require(_optionId.length == _amounts.length, \"Arrays diff len\");\n\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.exerciseOptionFrom(msg.sender, _optionId[i], _amounts[i], _referrer);\n\n        }\n\n    }","contract":"PremiaOptionBatch","time":0},{"type":"external-function ","before":"function batchWithdrawPreExpiration(IPremiaOption _premiaOption, uint256[] memory _optionId, uint256[] memory _amounts) external {\n\n        require(_optionId.length == _amounts.length, \"Arrays diff len\");\n\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.withdrawPreExpirationFrom(msg.sender, _optionId[i], _amounts[i]);\n\n        }\n\n    }","after":"function batchWithdrawPreExpiration(IPremiaOption _premiaOption, uint256[] calldata _optionId, uint256[] calldata _amounts) external {\n\n        require(_optionId.length == _amounts.length, \"Arrays diff len\");\n\n\n        for (uint256 i = 0; i < _optionId.length; ++i) {\n\n            _premiaOption.withdrawPreExpirationFrom(msg.sender, _optionId[i], _amounts[i]);\n\n        }\n\n    }","contract":"PremiaOptionBatch","time":0}]}