{"time":1107,"results":[{"type":"loop-duplication","before":"\nstart line 734 column 8, end line 736 column 8\nfor (uint256 i = 0; i < amounts.length; i++) {\n            totalAmount = totalAmount.add(amounts[i]);\n        }\nstart line 743 column 8, end line 745 column 8\nfor (uint256 i = 0; i < amounts.length; i++) {\n            _transferAndPay(usdc, pools[i], amounts[i]);\n        }","after":"// merge loop\n\nstart line 734 column 8, end line 736 column 8\nfor (uint256 i = 0; i < amounts.length; i++) {\n            totalAmount = totalAmount.add(amounts[i]);\n        }\nstart line 743 column 8, end line 745 column 8\nfor (uint256 i = 0; i < amounts.length; i++) {\n            _transferAndPay(usdc, pools[i], amounts[i]);\n        }","contract":"Borrower","time":0},{"type":"loop-duplication","before":"\nstart line 781 column 8, end line 783 column 8\nfor (uint256 i = 0; i < minAmounts.length; i++) {\n            totalMinAmount = totalMinAmount.add(minAmounts[i]);\n        }\nstart line 790 column 8, end line 792 column 8\nfor (uint256 i = 0; i < minAmounts.length; i++) {\n            _transferAndPay(usdc, pools[i], minAmounts[i]);\n        }","after":"// merge loop\n\nstart line 781 column 8, end line 783 column 8\nfor (uint256 i = 0; i < minAmounts.length; i++) {\n            totalMinAmount = totalMinAmount.add(minAmounts[i]);\n        }\nstart line 790 column 8, end line 792 column 8\nfor (uint256 i = 0; i < minAmounts.length; i++) {\n            _transferAndPay(usdc, pools[i], minAmounts[i]);\n        }","contract":"Borrower","time":0},{"type":"state-data-arrangement ","before":"\n   bytes4 private constant _ERC721_RECEIVED = 0x150b7a\n   mapping(address => EnumerableSet.UintSet) private _holderToke\n   EnumerableMap.UintToAddressMap private _tokenOwne\n   mapping(uint256 => address) private _tokenApprova\n   mapping(address => mapping(address => bool)) private _operatorApprova\n   string private _na\n   string private _symb\n   mapping(uint256 => string) private _tokenUR\n   string private _baseU\n   bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58\n   bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e13\n   bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d\n   uint256[41] private __g","after":"   mapping(address => EnumerableSet.UintSet) private _holderToke\n   EnumerableMap.UintToAddressMap private _tokenOwne\n   mapping(uint256 => address) private _tokenApprova\n   mapping(address => mapping(address => bool)) private _operatorApprova\n   string private _na\n   string private _symb\n   mapping(uint256 => string) private _tokenUR\n   string private _baseU\n   uint256[41] private __g\n   bytes4 private constant _ERC721_RECEIVED = 0x150b7a\n   bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58\n   bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e13\n   bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d\n","contract":"ERC721UpgradeSafe","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public totalWritedow","after":"   uint256 public totalWritedow","contract":"FakeV2CreditDesk","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public totalLoansOutstandi","after":"   uint256 public totalLoansOutstandi","contract":"FakeV2CreditDesk","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public balan","after":"   uint256 public balan","contract":"FakeV2CreditLine","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public interestOw","after":"   uint256 public interestOw","contract":"FakeV2CreditLine","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public principalOw","after":"   uint256 public principalOw","contract":"FakeV2CreditLine","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public termEndTi","after":"   uint256 public termEndTi","contract":"FakeV2CreditLine","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public nextDueTi","after":"   uint256 public nextDueTi","contract":"FakeV2CreditLine","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public writedownAmou","after":"   uint256 public writedownAmou","contract":"FakeV2CreditLine","time":1},{"type":"constant-restrict-modification  ","before":"   uint256 public lastFullPaymentTi","after":"   uint256 public lastFullPaymentTi","contract":"FakeV2CreditLine","time":1},{"type":"external-function ","before":"   function initialize(string memory name, string memory symbol) public {\n        __ERC20PresetMinterPauser_init(name, symbol);\n  ","after":"   function initialize(string calldata name, string calldata symbol) public {\n        __ERC20PresetMinterPauser_init(name, symbol);\n  ","contract":"Fidu","time":0},{"type":"constant-restrict-modification  ","before":"   address public borrow","after":"   address public borrow","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   address public underwrit","after":"   address public underwrit","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public lim","after":"   uint256 public lim","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public interestA","after":"   uint256 public interestA","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public paymentPeriodInDa","after":"   uint256 public paymentPeriodInDa","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public termInDa","after":"   uint256 public termInDa","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public lateFeeA","after":"   uint256 public lateFeeA","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public balan","after":"   uint256 public balan","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public interestOw","after":"   uint256 public interestOw","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public principalOw","after":"   uint256 public principalOw","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public termEndBlo","after":"   uint256 public termEndBlo","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public nextDueBlo","after":"   uint256 public nextDueBlo","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public interestAccruedAsOfBlo","after":"   uint256 public interestAccruedAsOfBlo","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public writedownAmou","after":"   uint256 public writedownAmou","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public lastFullPaymentBlo","after":"   uint256 public lastFullPaymentBlo","contract":"IV1CreditLine","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public totalWritedow","after":"   uint256 public totalWritedow","contract":"TestCreditDesk","time":0},{"type":"immutable-restrict-modification ","before":"   string private _na","after":"   string private _na","contract":"TestERC20","time":0},{"type":"immutable-restrict-modification ","before":"   string private _symb","after":"   string private _symb","contract":"TestERC20","time":0},{"type":"constant-restrict-modification  ","before":"   bytes32 private immutable _PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)","after":"   bytes32 private immutable constant _PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)","contract":"TestERC20","time":0},{"type":"external-function ","before":"   function verify(\n        ForwardRequest memory req,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata sig\n    ) external view {\n        _verifyNonce(req);\n        _verifySig(req, domainSeparator, requestTypeHash, suffixData, sig);\n  ","after":"   function verify(\n        ForwardRequest calldata req,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata sig\n    ) external view {\n        _verifyNonce(req);\n        _verifySig(req, domainSeparator, requestTypeHash, suffixData, sig);\n  ","contract":"TestForwarder","time":0},{"type":"external-function ","before":"   function execute(\n        ForwardRequest memory req,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata sig\n    ) external payable returns (bool success, bytes memory ret) {\n        _verifyNonce(req);\n        _verifySig(req, domainSeparator, requestTypeHash, suffixData, sig);\n        _updateNonce(req);\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (success, ret) = req.to.call{gas : req.gas, value : req.value}(abi.encodePacked(req.data, req.from));\n        // Added by Goldfinch for debugging\n        if (!success) {\n            require(success, string(ret));\n        }\n        if (address(this).balance > 0) {\n            //can't fail: req.from signed (off-chain) the request, so it must be an EOA...\n            payable(req.from).transfer(address(this).balance);\n        }\n        return (success, ret);\n  ","after":"   function execute(\n        ForwardRequest calldata req,\n        bytes32 domainSeparator,\n        bytes32 requestTypeHash,\n        bytes calldata suffixData,\n        bytes calldata sig\n    ) external payable returns (bool success, bytes memory ret) {\n        _verifyNonce(req);\n        _verifySig(req, domainSeparator, requestTypeHash, suffixData, sig);\n        _updateNonce(req);\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (success, ret) = req.to.call{gas : req.gas, value : req.value}(abi.encodePacked(req.data, req.from));\n        // Added by Goldfinch for debugging\n        if (!success) {\n            require(success, string(ret));\n        }\n        if (address(this).balance > 0) {\n            //can't fail: req.from signed (off-chain) the request, so it must be an EOA...\n            payable(req.from).transfer(address(this).balance);\n        }\n        return (success, ret);\n  ","contract":"TestForwarder","time":0},{"type":"constant-restrict-modification  ","before":"   address public poolAddress = 0xBAc2781706D0aA32Fb5928c9a5191A13959Dc4","after":"   address public constant poolAddress = 0xBAc2781706D0aA32Fb5928c9a5191A13959Dc4","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public clImplAddress = 0xc783df8a850f42e7F7e57013759C285caa701e","after":"   address public constant clImplAddress = 0xc783df8a850f42e7F7e57013759C285caa701e","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public goldfinchFactoryAddress = 0x0afFE1972479c386A2Ab21a27a7f835361B6C0","after":"   address public constant goldfinchFactoryAddress = 0x0afFE1972479c386A2Ab21a27a7f835361B6C0","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public fiduAddress = 0xf3c9B38c155410456b5A98fD8bBf5E35B87F6d","after":"   address public constant fiduAddress = 0xf3c9B38c155410456b5A98fD8bBf5E35B87F6d","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public creditDeskAddress = 0xeAD9C93b79Ae7C1591b1FB5323BD777E86e150","after":"   address public constant creditDeskAddress = 0xeAD9C93b79Ae7C1591b1FB5323BD777E86e150","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public treasuryReserveAddress = 0xECd9C93B79AE7C1591b1fB5323BD777e86E150","after":"   address public constant treasuryReserveAddress = 0xECd9C93B79AE7C1591b1fB5323BD777e86E150","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public trustedForwarderAddress = 0x956868751Cc565507B3B58E53a6f9f41B56bed","after":"   address public constant trustedForwarderAddress = 0x956868751Cc565507B3B58E53a6f9f41B56bed","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public cUSDCAddress = 0x5B281A6DdA0B271e91ae35DE655Ad301C976ed","after":"   address public constant cUSDCAddress = 0x5B281A6DdA0B271e91ae35DE655Ad301C976ed","contract":"TestTheConfig","time":0},{"type":"constant-restrict-modification  ","before":"   address public goldfinchConfigAddress = address(","after":"   address public constant goldfinchConfigAddress = address(","contract":"TestTheConfig","time":0}]}