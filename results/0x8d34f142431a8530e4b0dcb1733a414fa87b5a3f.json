{"time":290,"results":[{"type":"external-function ","before":"function balanceOfBatch(\n\n        address[] memory owners,\n\n        uint256[] memory ids\n\n    )\n\n    public\n\n    view\n\n    returns (uint256[] memory)\n\n    {\n\n        require(owners.length == ids.length, \"ERC1155: owners and IDs must have same lengths\");\n\n\n        uint256[] memory batchBalances = new uint256[](owners.length);\n\n\n        for (uint256 i = 0; i < owners.length; ++i) {\n\n            require(owners[i] != address(0), \"ERC1155: some address in batch balance query is zero\");\n\n            batchBalances[i] = _balances[ids[i]][owners[i]];\n\n        }\n\n\n        return batchBalances;\n\n    }","after":"function balanceOfBatch(\n\n        address[] calldata owners,\n\n        uint256[] calldata ids\n\n    )\n\n    public\n\n    view\n\n    returns (uint256[] memory)\n\n    {\n\n        require(owners.length == ids.length, \"ERC1155: owners and IDs must have same lengths\");\n\n\n        uint256[] memory batchBalances = new uint256[](owners.length);\n\n\n        for (uint256 i = 0; i < owners.length; ++i) {\n\n            require(owners[i] != address(0), \"ERC1155: some address in batch balance query is zero\");\n\n            batchBalances[i] = _balances[ids[i]][owners[i]];\n\n        }\n\n\n        return batchBalances;\n\n    }","contract":"ConditionalTokens","time":0},{"type":"loop-duplication","before":"\nstart line 3520 column 12, end line 3528 column 12\nfor (uint i = 0; i < poolBalances.length; i++) {\n\n                uint balance = poolBalances[i];\n\n                if (poolWeight < balance)\n\n                    poolWeight = balance;\n\n            }\nstart line 3531 column 12, end line 3537 column 12\nfor (uint i = 0; i < poolBalances.length; i++) {\n\n                uint remaining = addedFunds.mul(poolBalances[i]) / poolWeight;\n\n                sendBackAmounts[i] = addedFunds.sub(remaining);\n\n            }","after":"// merge loop\n\nstart line 3520 column 12, end line 3528 column 12\nfor (uint i = 0; i < poolBalances.length; i++) {\n\n                uint balance = poolBalances[i];\n\n                if (poolWeight < balance)\n\n                    poolWeight = balance;\n\n            }\nstart line 3531 column 12, end line 3537 column 12\nfor (uint i = 0; i < poolBalances.length; i++) {\n\n                uint remaining = addedFunds.mul(poolBalances[i]) / poolWeight;\n\n                sendBackAmounts[i] = addedFunds.sub(remaining);\n\n            }","contract":"FixedProductMarketMaker","time":0},{"type":"loop-duplication","before":"\nstart line 3550 column 16, end line 3558 column 16\nfor (uint i = 0; i < distributionHint.length; i++) {\n\n                    uint hint = distributionHint[i];\n\n                    if (maxHint < hint)\n\n                        maxHint = hint;\n\n                }\nstart line 3561 column 16, end line 3569 column 16\nfor (uint i = 0; i < distributionHint.length; i++) {\n\n                    uint remaining = addedFunds.mul(distributionHint[i]) / maxHint;\n\n                    require(remaining > 0, \"must hint a valid distribution\");\n\n                    sendBackAmounts[i] = addedFunds.sub(remaining);\n\n                }","after":"// merge loop\n\nstart line 3550 column 16, end line 3558 column 16\nfor (uint i = 0; i < distributionHint.length; i++) {\n\n                    uint hint = distributionHint[i];\n\n                    if (maxHint < hint)\n\n                        maxHint = hint;\n\n                }\nstart line 3561 column 16, end line 3569 column 16\nfor (uint i = 0; i < distributionHint.length; i++) {\n\n                    uint remaining = addedFunds.mul(distributionHint[i]) / maxHint;\n\n                    require(remaining > 0, \"must hint a valid distribution\");\n\n                    sendBackAmounts[i] = addedFunds.sub(remaining);\n\n                }","contract":"FixedProductMarketMaker","time":0},{"type":"constant-restrict-modification  ","before":"uint public fee;","after":"uint public constant fee;","contract":"FixedProductMarketMaker","time":0},{"type":"constant-restrict-modification  ","before":"uint256 internal _totalSupply;","after":"uint256 internal constant _totalSupply;","contract":"FixedProductMarketMakerData","time":0},{"type":"constant-restrict-modification  ","before":"uint internal fee;","after":"uint internal constant fee;","contract":"FixedProductMarketMakerData","time":0},{"type":"constant-restrict-modification  ","before":"uint internal feePoolWeight;","after":"uint internal constant feePoolWeight;","contract":"FixedProductMarketMakerData","time":0},{"type":"constant-restrict-modification  ","before":"uint internal totalWithdrawnFees;","after":"uint internal constant totalWithdrawnFees;","contract":"FixedProductMarketMakerData","time":0}]}