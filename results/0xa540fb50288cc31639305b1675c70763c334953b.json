{"time":59,"results":[{"type":"external-function ","before":"function trade(\n\n        IERC20 from,\n\n        IERC20 to,\n\n        uint256 fromAmount,\n\n        address[] memory exchanges,\n\n        address[] memory approvals,\n\n        bytes memory data,\n\n        uint256[] memory offsets,\n\n        uint256[] memory etherValues,\n\n        uint256 limitAmount,\n\n        uint256 tradeType\n\n    ) public payable {\n\n        require(exchanges.length > 0, 'No Exchanges');\n\n\n        // if from is an ERC20, pull tokens from msg.sender\n\n        if (address(from) != 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE) {\n\n            approvalHandler.transferFrom(from, msg.sender, address(this), fromAmount);\n\n        }\n\n\n        // execute trades on dexes\n\n        executeTrades(from, exchanges, approvals, data, offsets, etherValues);\n\n\n        // check how many tokens were received after trade execution\n\n        uint256 tradeReturn = viewBalance(to, address(this));\n\n        require(tradeReturn >= limitAmount, 'Trade returned less than the minimum amount');\n\n\n        // return any unspent funds\n\n        uint256 leftover = viewBalance(from, address(this));\n\n        if (leftover > 0) {\n\n            sendFunds(from, msg.sender, leftover);\n\n        }\n\n\n        sendFunds(to, msg.sender, tradeReturn);\n\n\n        emit Trade(address(from), address(to), tradeReturn, msg.sender, exchanges, tradeType);\n\n    }","after":"function trade(\n\n        IERC20 from,\n\n        IERC20 to,\n\n        uint256 fromAmount,\n\n        address[] calldata exchanges,\n\n        address[] calldata approvals,\n\n        bytes calldata data,\n\n        uint256[] calldata offsets,\n\n        uint256[] calldata etherValues,\n\n        uint256 limitAmount,\n\n        uint256 tradeType\n\n    ) public payable {\n\n        require(exchanges.length > 0, 'No Exchanges');\n\n\n        // if from is an ERC20, pull tokens from msg.sender\n\n        if (address(from) != 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE) {\n\n            approvalHandler.transferFrom(from, msg.sender, address(this), fromAmount);\n\n        }\n\n\n        // execute trades on dexes\n\n        executeTrades(from, exchanges, approvals, data, offsets, etherValues);\n\n\n        // check how many tokens were received after trade execution\n\n        uint256 tradeReturn = viewBalance(to, address(this));\n\n        require(tradeReturn >= limitAmount, 'Trade returned less than the minimum amount');\n\n\n        // return any unspent funds\n\n        uint256 leftover = viewBalance(from, address(this));\n\n        if (leftover > 0) {\n\n            sendFunds(from, msg.sender, leftover);\n\n        }\n\n\n        sendFunds(to, msg.sender, tradeReturn);\n\n\n        emit Trade(address(from), address(to), tradeReturn, msg.sender, exchanges, tradeType);\n\n    }","contract":"DexTrading","time":0}]}