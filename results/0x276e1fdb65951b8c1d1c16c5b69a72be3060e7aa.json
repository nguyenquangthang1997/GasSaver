{"time":100,"results":[{"type":"external-function ","before":"function initialize(\n        address operator,\n        bytes memory proofHash,\n        bytes memory staticMetadata,\n        bytes memory variableMetadata\n    ) public initializeTemplate() {\n        // set storage variables\n        ProofHash._setProofHash(proofHash);\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n\n        // set static metadata\n        Metadata._setStaticMetadata(staticMetadata);\n\n        // set variable metadata\n        Metadata._setVariableMetadata(variableMetadata);\n\n        // emit event\n        emit Created(operator, proofHash, staticMetadata, variableMetadata);\n    }","after":"function initialize(\n        address operator,\n        bytes calldata proofHash,\n        bytes calldata staticMetadata,\n        bytes calldata variableMetadata\n    ) public initializeTemplate() {\n        // set storage variables\n        ProofHash._setProofHash(proofHash);\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n\n        // set static metadata\n        Metadata._setStaticMetadata(staticMetadata);\n\n        // set variable metadata\n        Metadata._setVariableMetadata(variableMetadata);\n\n        // emit event\n        emit Created(operator, proofHash, staticMetadata, variableMetadata);\n    }","contract":"Post","time":0},{"type":"external-function ","before":"function setVariableMetadata(bytes memory variableMetadata) public {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        // set metadata in storage\n        Metadata._setVariableMetadata(variableMetadata);\n    }","after":"function setVariableMetadata(bytes calldata variableMetadata) public {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        // set metadata in storage\n        Metadata._setVariableMetadata(variableMetadata);\n    }","contract":"Post","time":0},{"type":"external-function ","before":"function create(bytes memory callData) public returns (address instance) {\n        // deploy instance\n        instance = Factory._create(callData);\n    }","after":"function create(bytes calldata callData) public returns (address instance) {\n        // deploy instance\n        instance = Factory._create(callData);\n    }","contract":"Post_Factory","time":0},{"type":"external-function ","before":"function createEncoded(bytes memory initdata) public returns (address instance) {\n        // decode initdata\n        (\n        address operator,\n        bytes memory proofHash,\n        bytes memory staticMetadata,\n        bytes memory variableMetadata\n        ) = abi.decode(initdata, (address, bytes, bytes, bytes));\n\n        // call explicit create\n        instance = createExplicit(operator, proofHash, staticMetadata, variableMetadata);\n    }","after":"function createEncoded(bytes calldata initdata) public returns (address instance) {\n        // decode initdata\n        (\n        address operator,\n        bytes memory proofHash,\n        bytes memory staticMetadata,\n        bytes memory variableMetadata\n        ) = abi.decode(initdata, (address, bytes, bytes, bytes));\n\n        // call explicit create\n        instance = createExplicit(operator, proofHash, staticMetadata, variableMetadata);\n    }","contract":"Post_Factory","time":0},{"type":"external-function ","before":"function initialize(\n        address operator,\n        address postRegistry,\n        bytes memory feedStaticMetadata\n    ) public initializeTemplate() {\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n\n        // set post registry\n        _postRegistry = postRegistry;\n\n        // set static metadata\n        Metadata._setStaticMetadata(feedStaticMetadata);\n    }","after":"function initialize(\n        address operator,\n        address postRegistry,\n        bytes calldata feedStaticMetadata\n    ) public initializeTemplate() {\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n\n        // set post registry\n        _postRegistry = postRegistry;\n\n        // set static metadata\n        Metadata._setStaticMetadata(feedStaticMetadata);\n    }","contract":"Feed","time":0},{"type":"external-function ","before":"function createPost(address postFactory, bytes memory initData) public returns (address post) {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        // validate factory is registered\n        require(\n            iRegistry(_postRegistry).getFactoryStatus(postFactory) == iRegistry.FactoryStatus.Registered,\n            \"factory is not actively registered\"\n        );\n\n        // spawn new post contract\n        post = Post_Factory(postFactory).createEncoded(initData);\n\n        // add to array of posts\n        _posts.push(post);\n\n        // emit event\n        emit PostCreated(post, postFactory, initData);\n    }","after":"function createPost(address postFactory, bytes calldata initData) public returns (address post) {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        // validate factory is registered\n        require(\n            iRegistry(_postRegistry).getFactoryStatus(postFactory) == iRegistry.FactoryStatus.Registered,\n            \"factory is not actively registered\"\n        );\n\n        // spawn new post contract\n        post = Post_Factory(postFactory).createEncoded(initData);\n\n        // add to array of posts\n        _posts.push(post);\n\n        // emit event\n        emit PostCreated(post, postFactory, initData);\n    }","contract":"Feed","time":0},{"type":"external-function ","before":"function setFeedVariableMetadata(bytes memory feedVariableMetadata) public {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        Metadata._setVariableMetadata(feedVariableMetadata);\n    }","after":"function setFeedVariableMetadata(bytes calldata feedVariableMetadata) public {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        Metadata._setVariableMetadata(feedVariableMetadata);\n    }","contract":"Feed","time":0},{"type":"external-function ","before":"function setPostVariableMetadata(address post, bytes memory postVariableMetadata) public {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        Post(post).setVariableMetadata(postVariableMetadata);\n    }","after":"function setPostVariableMetadata(address post, bytes calldata postVariableMetadata) public {\n        // only active operator or creator\n        require(Template.isCreator(msg.sender) || Operated.isActiveOperator(msg.sender), \"only active operator or creator\");\n\n        Post(post).setVariableMetadata(postVariableMetadata);\n    }","contract":"Feed","time":0},{"type":"external-function ","before":"function create(bytes memory callData) public returns (address instance) {\n        // deploy instance\n        instance = Factory._create(callData);\n    }","after":"function create(bytes calldata callData) public returns (address instance) {\n        // deploy instance\n        instance = Factory._create(callData);\n    }","contract":"Feed_Factory","time":0},{"type":"external-function ","before":"function createEncoded(bytes memory initdata) public returns (address instance) {\n        // decode initdata\n        (\n        address operator,\n        address postRegistry,\n        bytes memory feedStaticMetadata\n        ) = abi.decode(initdata, (address, address, bytes));\n\n        // call explicit create\n        instance = createExplicit(operator, postRegistry, feedStaticMetadata);\n    }","after":"function createEncoded(bytes calldata initdata) public returns (address instance) {\n        // decode initdata\n        (\n        address operator,\n        address postRegistry,\n        bytes memory feedStaticMetadata\n        ) = abi.decode(initdata, (address, address, bytes));\n\n        // call explicit create\n        instance = createExplicit(operator, postRegistry, feedStaticMetadata);\n    }","contract":"Feed_Factory","time":0}]}