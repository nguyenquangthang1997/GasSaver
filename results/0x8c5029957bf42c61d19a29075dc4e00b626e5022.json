{"time":180,"results":[{"type":"external-function ","before":"   function buy(bytes32 hash, bytes memory signature, uint256 tokenQuantity) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n        require(!presaleLive, \"ONLY_PRESALE\");\n        require(matchAddressSigner(hash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(tokenQuantity <= AGC_PER_MINT, \"EXCEED_AGC_PER_MINT\");\n        require(AGC_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n\n        uint256 supply = _owners.length;\n        require(supply + tokenQuantity <= AGC_PUBLIC, \"EXCEED_MAX_SALE_SUPPLY\");\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _mint(msg.sender, supply++);\n        }\n  ","after":"   function buy(bytes32 hash, bytes calldata signature, uint256 tokenQuantity) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n        require(!presaleLive, \"ONLY_PRESALE\");\n        require(matchAddressSigner(hash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(tokenQuantity <= AGC_PER_MINT, \"EXCEED_AGC_PER_MINT\");\n        require(AGC_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n\n        uint256 supply = _owners.length;\n        require(supply + tokenQuantity <= AGC_PUBLIC, \"EXCEED_MAX_SALE_SUPPLY\");\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _mint(msg.sender, supply++);\n        }\n  ","contract":"AlphaGirlClub","time":0},{"type":"external-function ","before":"   function presaleBuy(bytes32 hash, bytes memory signature, uint256 tokenQuantity) external payable {\n        require(!saleLive && presaleLive, \"PRESALE_CLOSED\");\n        require(matchAddressSigner(hash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(presalerListPurchases[msg.sender] + tokenQuantity <= AGC_PER_MINT, \"EXCEED_ALLOC\");\n        require(tokenQuantity <= AGC_PER_MINT, \"EXCEED_AGC_PER_MINT\");\n        require(AGC_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n\n        uint256 supply = _owners.length;\n        require(supply + tokenQuantity <= AGC_PUBLIC, \"EXCEED_MAX_SALE_SUPPLY\");\n\n        presalerListPurchases[msg.sender] += tokenQuantity;\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _mint(msg.sender, supply++);\n        }\n  ","after":"   function presaleBuy(bytes32 hash, bytes calldata signature, uint256 tokenQuantity) external payable {\n        require(!saleLive && presaleLive, \"PRESALE_CLOSED\");\n        require(matchAddressSigner(hash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(presalerListPurchases[msg.sender] + tokenQuantity <= AGC_PER_MINT, \"EXCEED_ALLOC\");\n        require(tokenQuantity <= AGC_PER_MINT, \"EXCEED_AGC_PER_MINT\");\n        require(AGC_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n\n        uint256 supply = _owners.length;\n        require(supply + tokenQuantity <= AGC_PUBLIC, \"EXCEED_MAX_SALE_SUPPLY\");\n\n        presalerListPurchases[msg.sender] += tokenQuantity;\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _mint(msg.sender, supply++);\n        }\n  ","contract":"AlphaGirlClub","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"AlphaGirlClub","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"AlphaGirlClub","time":1}]}