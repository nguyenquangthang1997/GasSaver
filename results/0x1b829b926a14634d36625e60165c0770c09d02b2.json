{"time":146,"results":[{"type":"external-function ","before":"function createCollection(\n\n        string memory _name,\n\n        string memory _description,\n\n        string memory _collectionBaseURI,\n\n        uint128 _tokenPriceInWei,\n\n        uint32 _maxTokensAvailable,\n\n        uint32 _collectionNumber\n\n    ) public onlyOwner\n\n    {\n\n\n        require(!collections[_collectionNumber].created, \"A collection with this collection number already exists\");\n\n        require(_maxTokensAvailable < ONE_MILLION, \"The maximum number of tokens available per collection must be less than 1 million\");\n\n        require(_collectionNumber == nextCollectionNumber, \"You are trying to create a collection that doesn't match the nextCollectionNumber\");\n\n        Collection memory newCollection = Collection({\n\n        name : _name,\n\n        description : _description,\n\n        baseURI : _collectionBaseURI,\n\n        tokenPriceInWei : _tokenPriceInWei,\n\n        maxTokensAvailable : _maxTokensAvailable,\n\n        collectionNumber : _collectionNumber,\n\n        created : true,\n\n        locked : false,\n\n        active : false,\n\n        tokensMinted : 0\n\n        });\n\n        collections[nextCollectionNumber++] = newCollection;\n\n    }","after":"function createCollection(\n\n        string calldata _name,\n\n        string calldata _description,\n\n        string calldata _collectionBaseURI,\n\n        uint128 _tokenPriceInWei,\n\n        uint32 _maxTokensAvailable,\n\n        uint32 _collectionNumber\n\n    ) public onlyOwner\n\n    {\n\n\n        require(!collections[_collectionNumber].created, \"A collection with this collection number already exists\");\n\n        require(_maxTokensAvailable < ONE_MILLION, \"The maximum number of tokens available per collection must be less than 1 million\");\n\n        require(_collectionNumber == nextCollectionNumber, \"You are trying to create a collection that doesn't match the nextCollectionNumber\");\n\n        Collection memory newCollection = Collection({\n\n        name : _name,\n\n        description : _description,\n\n        baseURI : _collectionBaseURI,\n\n        tokenPriceInWei : _tokenPriceInWei,\n\n        maxTokensAvailable : _maxTokensAvailable,\n\n        collectionNumber : _collectionNumber,\n\n        created : true,\n\n        locked : false,\n\n        active : false,\n\n        tokensMinted : 0\n\n        });\n\n        collections[nextCollectionNumber++] = newCollection;\n\n    }","contract":"Treeverse","time":0},{"type":"external-function ","before":"function changeName(uint256 _collectionNumber, string memory _name) public onlyOwner ifCollectionExists(_collectionNumber) ifCollectionNotLocked(_collectionNumber) {\n\n        collections[_collectionNumber].name = _name;\n\n    }","after":"function changeName(uint256 _collectionNumber, string calldata _name) public onlyOwner ifCollectionExists(_collectionNumber) ifCollectionNotLocked(_collectionNumber) {\n\n        collections[_collectionNumber].name = _name;\n\n    }","contract":"Treeverse","time":0},{"type":"external-function ","before":"function changeDescription(uint256 _collectionNumber, string memory _description) public onlyOwner ifCollectionExists(_collectionNumber) ifCollectionNotLocked(_collectionNumber) {\n\n        collections[_collectionNumber].description = _description;\n\n    }","after":"function changeDescription(uint256 _collectionNumber, string calldata _description) public onlyOwner ifCollectionExists(_collectionNumber) ifCollectionNotLocked(_collectionNumber) {\n\n        collections[_collectionNumber].description = _description;\n\n    }","contract":"Treeverse","time":0},{"type":"external-function ","before":"function changeBaseURI(uint256 _collectionNumber, string memory _collectionBaseURI) public onlyOwner ifCollectionExists(_collectionNumber) ifCollectionNotLocked(_collectionNumber) {\n\n        collections[_collectionNumber].baseURI = _collectionBaseURI;\n\n    }","after":"function changeBaseURI(uint256 _collectionNumber, string calldata _collectionBaseURI) public onlyOwner ifCollectionExists(_collectionNumber) ifCollectionNotLocked(_collectionNumber) {\n\n        collections[_collectionNumber].baseURI = _collectionBaseURI;\n\n    }","contract":"Treeverse","time":0},{"type":"external-function ","before":"function changeCustomURI(string memory _newUri) public onlyOwner {\n\n        customURI = _newUri;\n\n    }","after":"function changeCustomURI(string calldata _newUri) public onlyOwner {\n\n        customURI = _newUri;\n\n    }","contract":"Treeverse","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public nextCollectionNumber = 1;","after":"uint256 public constant nextCollectionNumber = 1;","contract":"Treeverse","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Treeverse","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Treeverse","time":1}]}