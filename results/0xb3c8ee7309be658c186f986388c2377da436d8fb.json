{"time":48,"results":[{"type":"external-function ","before":"function initialize(address[] memory underlyings, PriceOracle[] memory _oracles, PriceOracle _defaultOracle, address _admin, bool _canAdminOverwrite) external initializer {\n\n        // Input validation\n\n        require(underlyings.length == _oracles.length, \"Lengths of both arrays must be equal.\");\n\n\n        // Initialize state variables\n\n        for (uint256 i = 0; i < underlyings.length; i++) {\n\n            address underlying = underlyings[i];\n\n            PriceOracle newOracle = _oracles[i];\n\n            oracles[underlying] = newOracle;\n\n            emit NewOracle(underlying, address(0), address(newOracle));\n\n        }\n\n\n        defaultOracle = _defaultOracle;\n\n        admin = _admin;\n\n        noAdminOverwrite = !_canAdminOverwrite;\n\n    }","after":"function initialize(address[] calldata underlyings, PriceOracle[] calldata _oracles, PriceOracle _defaultOracle, address _admin, bool _canAdminOverwrite) external initializer {\n\n        // Input validation\n\n        require(underlyings.length == _oracles.length, \"Lengths of both arrays must be equal.\");\n\n\n        // Initialize state variables\n\n        for (uint256 i = 0; i < underlyings.length; i++) {\n\n            address underlying = underlyings[i];\n\n            PriceOracle newOracle = _oracles[i];\n\n            oracles[underlying] = newOracle;\n\n            emit NewOracle(underlying, address(0), address(newOracle));\n\n        }\n\n\n        defaultOracle = _defaultOracle;\n\n        admin = _admin;\n\n        noAdminOverwrite = !_canAdminOverwrite;\n\n    }","contract":"MasterPriceOracle","time":0}]}