{"time":414,"results":[{"type":"constant-restrict-modification  ","before":"uint8 public decimals = 18;","after":"uint8 public constant decimals = 18;","contract":"Reputation","time":0},{"type":"immutable-restrict-modification ","before":"string public name;","after":"string public immutable name;","contract":"DAOToken","time":0},{"type":"immutable-restrict-modification ","before":"string public symbol;","after":"string public immutable symbol;","contract":"DAOToken","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public cap;","after":"uint256 public immutable cap;","contract":"DAOToken","time":0},{"type":"external-function ","before":"function genericCall(address _contract, bytes memory _data, uint256 _value)\n    public\n    onlyOwner\n    returns (bool success, bytes memory returnValue) {\n        // solhint-disable-next-line avoid-call-value\n        (success, returnValue) = _contract.call.value(_value)(_data);\n        emit GenericCall(_contract, _data, _value, success);\n    }","after":"function genericCall(address _contract, bytes calldata _data, uint256 _value)\n    public\n    onlyOwner\n    returns (bool success, bytes memory returnValue) {\n        // solhint-disable-next-line avoid-call-value\n        (success, returnValue) = _contract.call.value(_value)(_data);\n        emit GenericCall(_contract, _data, _value, success);\n    }","contract":"Avatar","time":0},{"type":"external-function ","before":"function metaData(string memory _metaData) public onlyOwner returns (bool) {\n        emit MetaData(_metaData);\n        return true;\n    }","after":"function metaData(string calldata _metaData) public onlyOwner returns (bool) {\n        emit MetaData(_metaData);\n        return true;\n    }","contract":"Avatar","time":0},{"type":"immutable-restrict-modification ","before":"string public orgName;","after":"string public immutable orgName;","contract":"Avatar","time":0},{"type":"struct-data-arrangement ","before":"\nbytes32 organizationId\naddress callbacks\nProposalState state\nuint256 winningVote\naddress proposer\nuint256 currentBoostedVotePeriodLimit\nbytes32 paramsHash\nuint256 daoBountyRemain\nuint256 daoBounty\nuint256 totalStakes\nuint256 confidenceThreshold\nuint256 secondsFromTimeOutTillExecuteBoosted\nuint[3] times\nbool daoRedeemItsWinnings\nmapping(uint256 => uint256) votes\nmapping(uint256 => uint256) preBoostedVotes\nmapping(address => Voter) voters\nmapping(uint256 => uint256) stakes\nmapping(address => Staker) stakers","after":"bytes32 organizationId\nProposalState state\nuint256 winningVote\nuint256 currentBoostedVotePeriodLimit\nbytes32 paramsHash\nuint256 daoBountyRemain\nuint256 daoBounty\nuint256 totalStakes\nuint256 confidenceThreshold\nuint256 secondsFromTimeOutTillExecuteBoosted\nuint[3] times\nmapping(uint256 => uint256) votes\nmapping(uint256 => uint256) preBoostedVotes\nmapping(address => Voter) voters\nmapping(uint256 => uint256) stakes\nmapping(address => Staker) stakers\naddress callbacks\naddress proposer\nbool daoRedeemItsWinnings\n","contract":"GenesisProtocolLogic","time":0},{"type":"external-function ","before":"function proposeCall(Avatar _avatar, bytes memory _callData, uint256 _value, string memory _descriptionHash)\n    public\n    returns (bytes32)\n    {\n        Parameters memory params = parameters[getParametersFromController(_avatar)];\n        IntVoteInterface intVote = params.intVote;\n\n        bytes32 proposalId = intVote.propose(2, params.voteParams, msg.sender, address(_avatar));\n\n        organizationsProposals[address(_avatar)][proposalId] = CallProposal({\n        callData : _callData,\n        value : _value,\n        exist : true,\n        passed : false\n        });\n        proposalsInfo[address(params.intVote)][proposalId] = ProposalInfo({\n        blockNumber : block.number,\n        avatar : _avatar\n        });\n        emit NewCallProposal(address(_avatar), proposalId, _callData, _value, _descriptionHash);\n        return proposalId;\n    }","after":"function proposeCall(Avatar _avatar, bytes calldata _callData, uint256 _value, string calldata _descriptionHash)\n    public\n    returns (bytes32)\n    {\n        Parameters memory params = parameters[getParametersFromController(_avatar)];\n        IntVoteInterface intVote = params.intVote;\n\n        bytes32 proposalId = intVote.propose(2, params.voteParams, msg.sender, address(_avatar));\n\n        organizationsProposals[address(_avatar)][proposalId] = CallProposal({\n        callData : _callData,\n        value : _value,\n        exist : true,\n        passed : false\n        });\n        proposalsInfo[address(params.intVote)][proposalId] = ProposalInfo({\n        blockNumber : block.number,\n        avatar : _avatar\n        });\n        emit NewCallProposal(address(_avatar), proposalId, _callData, _value, _descriptionHash);\n        return proposalId;\n    }","contract":"GenericScheme","time":0}]}