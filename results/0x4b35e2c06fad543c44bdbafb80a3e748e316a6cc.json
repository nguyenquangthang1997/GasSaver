{"time":107,"results":[{"type":"external-function ","before":"function initialize(\n        ICurveDeposit _curveDeposit,\n        ICurve _curve,\n        IERC20 _curveToken,\n        ICore _core,\n        IUtil _util,\n        IGauge _gauge,\n        IMintr _mintr,\n        address[N_COINS] memory _underlyingCoins\n    ) public\n    notInitialized\n    {\n        curveDeposit = _curveDeposit;\n        curve = _curve;\n        curveToken = _curveToken;\n        core = _core;\n        util = _util;\n        gauge = _gauge;\n        mintr = _mintr;\n        underlyingCoins = _underlyingCoins;\n        replenishApprovals(MAX);\n    }","after":"function initialize(\n        ICurveDeposit _curveDeposit,\n        ICurve _curve,\n        IERC20 _curveToken,\n        ICore _core,\n        IUtil _util,\n        IGauge _gauge,\n        IMintr _mintr,\n        address[N_COINS] calldata _underlyingCoins\n    ) public\n    notInitialized\n    {\n        curveDeposit = _curveDeposit;\n        curve = _curve;\n        curveToken = _curveToken;\n        core = _core;\n        util = _util;\n        gauge = _gauge;\n        mintr = _mintr;\n        underlyingCoins = _underlyingCoins;\n        replenishApprovals(MAX);\n    }","contract":"CurveSusdPeak","time":0},{"type":"external-function ","before":"function calcMint(uint[N_COINS] memory inAmounts)\n    public view\n    returns (uint dusdAmount)\n    {\n        return sCrvToUsd(curve.calc_token_amount(inAmounts, true /* deposit */));\n    }","after":"function calcMint(uint[N_COINS] calldata inAmounts)\n    public view\n    returns (uint dusdAmount)\n    {\n        return sCrvToUsd(curve.calc_token_amount(inAmounts, true /* deposit */));\n    }","contract":"CurveSusdPeak","time":0}]}