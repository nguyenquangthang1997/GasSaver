{"time":148,"results":[{"type":"external-function ","before":"function setContractURI(string memory uri) external onlyOwner {\n        _setContractURI(uri);\n    }","after":"function setContractURI(string calldata uri) external onlyOwner {\n        _setContractURI(uri);\n    }","contract":"BlockStyle","time":0},{"type":"external-function ","before":"function setBase(string memory uri) external onlyOwner {\n        _setBaseURI(uri);\n    }","after":"function setBase(string calldata uri) external onlyOwner {\n        _setBaseURI(uri);\n    }","contract":"BlockStyle","time":0},{"type":"external-function ","before":"function setCanvas(uint256 id, string memory canvas) external {\n        require(\n            _isApprovedOrOwner(_msgSender(), id),\n            \"Operator is not approved\"\n        );\n        _setCanvasURI(id, canvas);\n    }","after":"function setCanvas(uint256 id, string calldata canvas) external {\n        require(\n            _isApprovedOrOwner(_msgSender(), id),\n            \"Operator is not approved\"\n        );\n        _setCanvasURI(id, canvas);\n    }","contract":"BlockStyle","time":0},{"type":"external-function ","before":"function setToken(uint256 id, string memory uri) external {\n        require(\n            _isApprovedOrOwner(_msgSender(), id),\n            \"Operator is not approved\"\n        );\n        _setTokenURI(id, uri);\n    }","after":"function setToken(uint256 id, string calldata uri) external {\n        require(\n            _isApprovedOrOwner(_msgSender(), id),\n            \"Operator is not approved\"\n        );\n        _setTokenURI(id, uri);\n    }","contract":"BlockStyle","time":0},{"type":"external-function ","before":"function mint(\n        address to,\n        uint256 cap,\n        uint256 feeMul,\n        uint256 feeMin,\n        string memory canvas\n    ) external onlyOwner {\n        _ids.increment();\n        uint256 newId = _ids.current();\n\n        _safeMint(to, newId);\n        _setCreator(newId, to);\n        _setStyleSupplyCap(newId, cap);\n        _setStyleFeeMul(newId, feeMul);\n        _setStyleFeeMin(newId, feeMin);\n        _setCanvasURI(newId, canvas);\n    }","after":"function mint(\n        address to,\n        uint256 cap,\n        uint256 feeMul,\n        uint256 feeMin,\n        string calldata canvas\n    ) external onlyOwner {\n        _ids.increment();\n        uint256 newId = _ids.current();\n\n        _safeMint(to, newId);\n        _setCreator(newId, to);\n        _setStyleSupplyCap(newId, cap);\n        _setStyleFeeMul(newId, feeMul);\n        _setStyleFeeMin(newId, feeMin);\n        _setCanvasURI(newId, canvas);\n    }","contract":"BlockStyle","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"BlockStyle","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"BlockStyle","time":0},{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0}]}