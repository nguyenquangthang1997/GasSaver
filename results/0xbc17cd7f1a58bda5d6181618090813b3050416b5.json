{"time":131,"results":[{"type":"external-function ","before":"function burnAndMint(uint256[] memory tokenIds) public {\n        require(tokenIds.length > 0, \"Burn at least 1 piece\");\n        require(tokenIds.length < 10, \"Total burn limit is 10\");\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            require(_isApprovedOrOwner(_msgSender(), tokenIds[i]), \"Only the owner can burn pieces\");\n        }\n\n        _burn(tokenIds[0]);\n        burnt.push(tokenIds[0]);\n\n        for (uint8 i = 1; i < tokenIds.length; i++) {\n            _burn(tokenIds[i]);\n            burnt.push(tokenIds[0]);\n            _mintNew(_msgSender());\n        }\n\n        emit BurnAndMint(_msgSender(), tokenIds);\n\n    }","after":"function burnAndMint(uint256[] calldata tokenIds) public {\n        require(tokenIds.length > 0, \"Burn at least 1 piece\");\n        require(tokenIds.length < 10, \"Total burn limit is 10\");\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            require(_isApprovedOrOwner(_msgSender(), tokenIds[i]), \"Only the owner can burn pieces\");\n        }\n\n        _burn(tokenIds[0]);\n        burnt.push(tokenIds[0]);\n\n        for (uint8 i = 1; i < tokenIds.length; i++) {\n            _burn(tokenIds[i]);\n            burnt.push(tokenIds[0]);\n            _mintNew(_msgSender());\n        }\n\n        emit BurnAndMint(_msgSender(), tokenIds);\n\n    }","contract":"FramergenceCore","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"FramergenceCore","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"FramergenceCore","time":0}]}