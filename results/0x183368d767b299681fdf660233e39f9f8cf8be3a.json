{"time":267,"results":[{"type":"external-function ","before":"dress to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals fro","after":"dress to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals fro","contract":"DREAM","time":0},{"type":"external-function ","before":"ontract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the cal","after":"ontract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the cal","contract":"DREAM","time":0},{"type":"immutable-restrict-modification ","before":"rfaceId) public view ","after":"rfaceId) public view ","contract":"DREAM","time":1},{"type":"immutable-restrict-modification ","before":"bool) {\n *     return i","after":"bool) {\n *     return i","contract":"DREAM","time":1}]}