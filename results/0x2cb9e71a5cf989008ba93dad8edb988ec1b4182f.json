{"time":484,"results":[{"type":"loop-duplication","before":"\nstart line 1340 column 12, end line 1342 column 12\nfor (uint i = 0; i < maxAmounts.length; i++) {\n                fairSupply = Math.min(fairSupply, totalSupply.mul(maxAmounts[i]).div(realBalances[i]));\n            }\nstart line 1346 column 12, end line 1354 column 12\nfor (uint i = 0; i < maxAmounts.length; i++) {\n                require(maxAmounts[i] > 0, \"Mooniswap: amount is zero\");\n                uint256 amount = realBalances[i].mul(fairSupplyCached).add(totalSupply - 1).div(totalSupply);\n                require(amount >= minAmounts[i], \"Mooniswap: minAmount not reached\");\n\n                _tokens[i].uniTransferFrom(msg.sender, address(this), amount);\n                receivedAmounts[i] = _tokens[i].uniBalanceOf(address(this)).sub(realBalances[i]);\n                fairSupply = Math.min(fairSupply, totalSupply.mul(receivedAmounts[i]).div(realBalances[i]));\n            }\nstart line 1358 column 12, end line 1361 column 12\nfor (uint i = 0; i < maxAmounts.length; i++) {\n                virtualBalancesForRemoval[_tokens[i]].scale(_decayPeriod, realBalances[i], totalSupply.add(fairSupply), totalSupply);\n                virtualBalancesForAddition[_tokens[i]].scale(_decayPeriod, realBalances[i], totalSupply.add(fairSupply), totalSupply);\n            }","after":"// merge loop\n\nstart line 1340 column 12, end line 1342 column 12\nfor (uint i = 0; i < maxAmounts.length; i++) {\n                fairSupply = Math.min(fairSupply, totalSupply.mul(maxAmounts[i]).div(realBalances[i]));\n            }\nstart line 1346 column 12, end line 1354 column 12\nfor (uint i = 0; i < maxAmounts.length; i++) {\n                require(maxAmounts[i] > 0, \"Mooniswap: amount is zero\");\n                uint256 amount = realBalances[i].mul(fairSupplyCached).add(totalSupply - 1).div(totalSupply);\n                require(amount >= minAmounts[i], \"Mooniswap: minAmount not reached\");\n\n                _tokens[i].uniTransferFrom(msg.sender, address(this), amount);\n                receivedAmounts[i] = _tokens[i].uniBalanceOf(address(this)).sub(realBalances[i]);\n                fairSupply = Math.min(fairSupply, totalSupply.mul(receivedAmounts[i]).div(realBalances[i]));\n            }\nstart line 1358 column 12, end line 1361 column 12\nfor (uint i = 0; i < maxAmounts.length; i++) {\n                virtualBalancesForRemoval[_tokens[i]].scale(_decayPeriod, realBalances[i], totalSupply.add(fairSupply), totalSupply);\n                virtualBalancesForAddition[_tokens[i]].scale(_decayPeriod, realBalances[i], totalSupply.add(fairSupply), totalSupply);\n            }","contract":"Mooniswap","time":0},{"type":"external-function ","before":"function deposit(uint256[2] memory maxAmounts, uint256[2] memory minAmounts) external payable returns (uint256 fairSupply, uint256[2] memory receivedAmounts) {\n        return depositFor(maxAmounts, minAmounts, msg.sender);\n    }","after":"function deposit(uint256[2] calldata maxAmounts, uint256[2] calldata minAmounts) external payable returns (uint256 fairSupply, uint256[2] memory receivedAmounts) {\n        return depositFor(maxAmounts, minAmounts, msg.sender);\n    }","contract":"Mooniswap","time":0},{"type":"external-function ","before":"function withdraw(uint256 amount, uint256[] memory minReturns) external returns (uint256[2] memory withdrawnAmounts) {\n        return withdrawFor(amount, minReturns, msg.sender);\n    }","after":"function withdraw(uint256 amount, uint256[] calldata minReturns) external returns (uint256[2] memory withdrawnAmounts) {\n        return withdrawFor(amount, minReturns, msg.sender);\n    }","contract":"Mooniswap","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Mooniswap","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Mooniswap","time":0},{"type":"de-morgan-condition ","before":"!updateFrom && !updateTo","after":"!(updateFrom && updateTo)","loc":{"start":{"line":1690,"column":12},"end":{"line":1690,"column":28}},"contract":"MooniswapGovernance","time":0}]}