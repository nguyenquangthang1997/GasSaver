{"time":285,"results":[{"type":"external-function ","before":"function transferPositionAndCall(\n        uint256 id,\n        address newProvider,\n        address target,\n        bytes memory data\n    ) external protected validAddress(newProvider) validAddress(target) returns (uint256) {\n        // make sure that we're not trying to call into the zero address or a fallback function\n        require(data.length >= FUNC_SELECTOR_LENGTH, \"ERR_INVALID_CALL_DATA\");\n\n        uint256 newId = transferPosition(msg.sender, id, newProvider);\n\n        Address.functionCall(target, data, \"ERR_CALL_FAILED\");\n\n        return newId;\n    }","after":"function transferPositionAndCall(\n        uint256 id,\n        address newProvider,\n        address target,\n        bytes calldata data\n    ) external protected validAddress(newProvider) validAddress(target) returns (uint256) {\n        // make sure that we're not trying to call into the zero address or a fallback function\n        require(data.length >= FUNC_SELECTOR_LENGTH, \"ERR_INVALID_CALL_DATA\");\n\n        uint256 newId = transferPosition(msg.sender, id, newProvider);\n\n        Address.functionCall(target, data, \"ERR_CALL_FAILED\");\n\n        return newId;\n    }","contract":"LiquidityProtection","time":0}]}