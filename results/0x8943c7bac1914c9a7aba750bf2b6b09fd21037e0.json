{"time":192,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0},{"type":"state-data-arrangement ","before":"\nstring public LION_PROVENANCE = \"\";\nstring public LICENSE_TEXT = \"\";\nbool licenseLocked = false;\nuint256 public lionPrice = 50000000000000000;\nuint256 public constant maxLionPurchase = 20;\nuint256 public constant MAX_LIONS = 10000;\nbool public saleIsActive = false;\nuint256 public lionReserve = 250;","after":"string public LION_PROVENANCE = \"\";\nstring public LICENSE_TEXT = \"\";\nuint256 public lionPrice = 50000000000000000;\nuint256 public constant maxLionPurchase = 20;\nuint256 public constant MAX_LIONS = 10000;\nuint256 public lionReserve = 250;\nbool licenseLocked = false;\nbool public saleIsActive = false;\n","contract":"LazyLions","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n\n        LION_PROVENANCE = provenanceHash;\n\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n\n        LION_PROVENANCE = provenanceHash;\n\n    }","contract":"LazyLions","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n\n        _setBaseURI(baseURI);\n\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n\n        _setBaseURI(baseURI);\n\n    }","contract":"LazyLions","time":0},{"type":"external-function ","before":"function changeLicense(string memory _license) public onlyOwner {\n\n        require(licenseLocked == false, \"License already locked\");\n\n        LICENSE_TEXT = _license;\n\n    }","after":"function changeLicense(string calldata _license) public onlyOwner {\n\n        require(licenseLocked == false, \"License already locked\");\n\n        LICENSE_TEXT = _license;\n\n    }","contract":"LazyLions","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"LazyLions","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"LazyLions","time":0}]}