{"time":193,"results":[{"type":"external-function ","before":"*\n     * @notice Allows Foundation to cancel an auction, refunding the bidder and returning the NFT to the seller.\n   * This should only be used for extreme cases such as DMCA takedown requests. The reason should always be provided.\n   */\n    function adminCancelReserveAuction(uint256 auctionId, string memory reason) public onlyFoundationAdmin {\n        require(bytes(reason).length > 0, \"NFTMarketReserveAuction: Include a reason for this cancellation\");\n        ReserveAuction memory auction = auctionIdToAuction[auctionId];\n        require(auction.amount > 0, \"NFTMarketReserveAuction: Auction not found\");\n\n        delete nftContractToTokenIdToAuctionId[auction.nftContract][auction.tokenId];\n        delete auctionIdToAuction[auctionId];\n\n        IERC721Upgradeable(auction.nftContract).transferFrom(address(this), auction.","after":"*\n     * @notice Allows Foundation to cancel an auction, refunding the bidder and returning the NFT to the seller.\n   * This should only be used for extreme cases such as DMCA takedown requests. The reason should always be provided.\n   */\n    function adminCancelReserveAuction(uint256 auctionId, string memory reason) public onlyFoundationAdmin {\n        require(bytes(reason).length > 0, \"NFTMarketReserveAuction: Include a reason for this cancellation\");\n        ReserveAuction memory auction = auctionIdToAuction[auctionId];\n        require(auction.amount > 0, \"NFTMarketReserveAuction: Auction not found\");\n\n        delete nftContractToTokenIdToAuctionId[auction.nftContract][auction.tokenId];\n        delete auctionIdToAuction[auctionId];\n\n        IERC721Upgradeable(auction.nftContract).transferFrom(address(this), auction.","contract":"FNDNFTMarket","time":0},{"type":"constant-restrict-modification  ","before":" mapping(uint256 => ReserveAuction) private auctionIdToAu","after":" mapping(uint256 => ReserveAuction) private auctionIdToAu","contract":"FNDNFTMarket","time":3},{"type":"constant-restrict-modification  ","before":"e upgrade compatibility\n    uint256 private ____","after":"e upgrade compatibility\n    uint256 private ____","contract":"FNDNFTMarket","time":3},{"type":"constant-restrict-modification  ","before":"_was_maxBidIncrementRequirement;\n\n    uin","after":"_was_maxBidIncrementRequirement;\n\n    uin","contract":"FNDNFTMarket","time":3}]}