{"time":123,"results":[{"type":"external-function ","before":"function publicCreateOrders(uint256[] memory _outcomes, Order.Types[] memory _types, uint256[] memory _attoshareAmounts, uint256[] memory _prices, IMarket _market, bytes32 _tradeGroupId) public nonReentrant returns (bytes32[] memory _orders) {\n        require(augur.isKnownMarket(_market));\n        require(_outcomes.length == _types.length);\n        require(_outcomes.length == _attoshareAmounts.length);\n        require(_outcomes.length == _prices.length);\n        _orders = new bytes32[](_types.length);\n\n        IUniverse _universe = _market.getUniverse();\n        for (uint256 i = 0; i < _types.length; i++) {\n            Order.Data memory _orderData = Order.create(augur, augurTrading, msg.sender, _outcomes[i], _types[i], _attoshareAmounts[i], _prices[i], _market, bytes32(0), bytes32(0));\n            escrowFunds(_orderData);\n            profitLoss.recordFrozenFundChange(_universe, _market, msg.sender, _outcomes[i], int256(_orderData.moneyEscrowed));\n            /* solium-disable indentation */\n            {\n                IOrders _ordersContract = orders;\n                require(_ordersContract.getAmount(Order.getOrderId(_orderData, _ordersContract)) == 0, \"Createorder.publicCreateOrders: Order duplication in same block\");\n                _orders[i] = Order.saveOrder(_orderData, _tradeGroupId, _ordersContract);\n            }\n            /* solium-enable indentation */\n        }\n\n        return _orders;\n    }","after":"function publicCreateOrders(uint256[] calldata _outcomes, Order.Types[] calldata _types, uint256[] calldata _attoshareAmounts, uint256[] calldata _prices, IMarket _market, bytes32 _tradeGroupId) public nonReentrant returns (bytes32[] memory _orders) {\n        require(augur.isKnownMarket(_market));\n        require(_outcomes.length == _types.length);\n        require(_outcomes.length == _attoshareAmounts.length);\n        require(_outcomes.length == _prices.length);\n        _orders = new bytes32[](_types.length);\n\n        IUniverse _universe = _market.getUniverse();\n        for (uint256 i = 0; i < _types.length; i++) {\n            Order.Data memory _orderData = Order.create(augur, augurTrading, msg.sender, _outcomes[i], _types[i], _attoshareAmounts[i], _prices[i], _market, bytes32(0), bytes32(0));\n            escrowFunds(_orderData);\n            profitLoss.recordFrozenFundChange(_universe, _market, msg.sender, _outcomes[i], int256(_orderData.moneyEscrowed));\n            /* solium-disable indentation */\n            {\n                IOrders _ordersContract = orders;\n                require(_ordersContract.getAmount(Order.getOrderId(_orderData, _ordersContract)) == 0, \"Createorder.publicCreateOrders: Order duplication in same block\");\n                _orders[i] = Order.saveOrder(_orderData, _tradeGroupId, _ordersContract);\n            }\n            /* solium-enable indentation */\n        }\n\n        return _orders;\n    }","contract":"CreateOrder","time":0}]}