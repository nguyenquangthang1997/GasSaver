{"time":291,"results":[{"type":"struct-data-arrangement ","before":"\naddress token\nTypes.TotalPar totalPar\nInterest.Index index\naddress priceOracle\naddress interestSetter\nDecimal.D256 marginPremium\nDecimal.D256 spreadPremium\nbool isClosing","after":"Types.TotalPar totalPar\nInterest.Index index\nDecimal.D256 marginPremium\nDecimal.D256 spreadPremium\naddress token\naddress priceOracle\naddress interestSetter\nbool isClosing\n","contract":"Storage","time":0},{"type":"state-data-arrangement ","before":"\nVaultAPI public vault;\naddress public strategist;\naddress public rewards;\naddress public keeper;\nIERC20 public want;\nuint256 public maxReportDelay = 86400;\nuint256 public profitFactor = 100;\nuint256 public debtThreshold = 0;\nbool public emergencyExit;","after":"VaultAPI public vault;\nIERC20 public want;\nuint256 public maxReportDelay = 86400;\nuint256 public profitFactor = 100;\nuint256 public debtThreshold = 0;\naddress public strategist;\naddress public rewards;\naddress public keeper;\nbool public emergencyExit;\n","contract":"BaseStrategy","time":0},{"type":"state-data-arrangement ","before":"\naddress private constant SOLO = 0x1E0447b19BB6EcFdAe1e4AE1694b0C3659614e4e;\naddress private constant AAVE_LENDING = 0x24a42fD28C976A61Df5D00D0599C34c4f90748c8;\nILendingPoolAddressesProvider public addressesProvider;\nComptrollerI public constant compound = ComptrollerI(0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B);\naddress public constant comp = address(0xc00e94Cb662C3520282E6f5717214004A7f26888);\nCErc20I public cToken;\naddress public constant uniswapRouter = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\naddress public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\nuint256 public collateralTarget = 0.73 ether;\nuint256 public blocksToLiquidationDangerZone = 46500;\nuint256 public minWant = 0;\nuint256 public minCompToSell = 0.1 ether;\nbool public DyDxActive = true;\nbool public AaveActive = false;\nuint256 public dyDxMarketId;\nbool internal awaitingFlash = false;","after":"ILendingPoolAddressesProvider public addressesProvider;\nComptrollerI public constant compound = ComptrollerI(0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B);\nCErc20I public cToken;\nuint256 public collateralTarget = 0.73 ether;\nuint256 public blocksToLiquidationDangerZone = 46500;\nuint256 public minWant = 0;\nuint256 public minCompToSell = 0.1 ether;\nuint256 public dyDxMarketId;\naddress private constant SOLO = 0x1E0447b19BB6EcFdAe1e4AE1694b0C3659614e4e;\naddress private constant AAVE_LENDING = 0x24a42fD28C976A61Df5D00D0599C34c4f90748c8;\naddress public constant comp = address(0xc00e94Cb662C3520282E6f5717214004A7f26888);\naddress public constant uniswapRouter = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\naddress public constant weth = address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\nbool public DyDxActive = true;\nbool public AaveActive = false;\nbool internal awaitingFlash = false;\n","contract":"Strategy","time":1},{"type":"external-function ","before":"function callFunction(\n\n        address sender,\n\n        Account.Info memory account,\n\n        bytes memory data\n\n    ) public override {\n\n        (bool deficit, uint256 amount, uint256 repayAmount) = abi.decode(data, (bool, uint256, uint256));\n\n        require(msg.sender == SOLO, \"NOT_SOLO\");\n\n\n        _loanLogic(deficit, amount, repayAmount);\n\n\n    }","after":"function callFunction(\n\n        address sender,\n\n        Account.Info calldata account,\n\n        bytes calldata data\n\n    ) public override {\n\n        (bool deficit, uint256 amount, uint256 repayAmount) = abi.decode(data, (bool, uint256, uint256));\n\n        require(msg.sender == SOLO, \"NOT_SOLO\");\n\n\n        _loanLogic(deficit, amount, repayAmount);\n\n\n    }","contract":"Strategy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public blocksToLiquidationDangerZone = 46500;","after":"uint256 public constant blocksToLiquidationDangerZone = 46500;","contract":"Strategy","time":1}]}