{"time":238,"results":[{"type":"external-function ","before":"function init(\n\n        address owner,\n\n        uint256 initSupply,\n\n        string memory name,\n\n        string memory symbol,\n\n        uint256 feeRate,\n\n        address controller,\n\n        address maintainer,\n\n        address[] memory filters\n\n    ) external {\n\n        require(feeRate <= DecimalMath.ONE, \"FEE_RATE_TOO_LARGE\");\n\n        super.init(owner, initSupply, name, symbol, 18);\n\n        _INIT_SUPPLY_ = initSupply;\n\n        _FEE_RATE_ = feeRate;\n\n        _CONTROLLER_ = controller;\n\n        _MAINTAINER_ = maintainer;\n\n        _FILTERS_ = filters;\n\n        for (uint256 i = 0; i < filters.length; i++) {\n\n            _FILTER_REGISTRY_[filters[i]] = true;\n\n        }\n\n    }","after":"function init(\n\n        address owner,\n\n        uint256 initSupply,\n\n        string calldata name,\n\n        string calldata symbol,\n\n        uint256 feeRate,\n\n        address controller,\n\n        address maintainer,\n\n        address[] calldata filters\n\n    ) external {\n\n        require(feeRate <= DecimalMath.ONE, \"FEE_RATE_TOO_LARGE\");\n\n        super.init(owner, initSupply, name, symbol, 18);\n\n        _INIT_SUPPLY_ = initSupply;\n\n        _FEE_RATE_ = feeRate;\n\n        _CONTROLLER_ = controller;\n\n        _MAINTAINER_ = maintainer;\n\n        _FILTERS_ = filters;\n\n        for (uint256 i = 0; i < filters.length; i++) {\n\n            _FILTER_REGISTRY_[filters[i]] = true;\n\n        }\n\n    }","contract":"FilterAdmin","time":0},{"type":"external-function ","before":"function addFilter(address[] memory filters) external onlyOwner {\n\n        for (uint256 i = 0; i < filters.length; i++) {\n\n            require(!isRegisteredFilter(filters[i]), \"FILTER_ALREADY_EXIST\");\n\n            _FILTERS_.push(filters[i]);\n\n            _FILTER_REGISTRY_[filters[i]] = true;\n\n            emit AddFilter(filters[i]);\n\n        }\n\n    }","after":"function addFilter(address[] calldata filters) external onlyOwner {\n\n        for (uint256 i = 0; i < filters.length; i++) {\n\n            require(!isRegisteredFilter(filters[i]), \"FILTER_ALREADY_EXIST\");\n\n            _FILTERS_.push(filters[i]);\n\n            _FILTER_REGISTRY_[filters[i]] = true;\n\n            emit AddFilter(filters[i]);\n\n        }\n\n    }","contract":"FilterAdmin","time":0},{"type":"external-function ","before":"function init(\n\n        address _creator,\n\n        uint256 _initSupply,\n\n        string memory _name,\n\n        string memory _symbol,\n\n        uint8 _decimals\n\n    ) public {\n\n        initOwner(_creator);\n\n        name = _name;\n\n        symbol = _symbol;\n\n        decimals = _decimals;\n\n        totalSupply = _initSupply;\n\n        balances[_creator] = _initSupply;\n\n        emit Transfer(address(0), _creator, _initSupply);\n\n    }","after":"function init(\n\n        address _creator,\n\n        uint256 _initSupply,\n\n        string calldata _name,\n\n        string calldata _symbol,\n\n        uint8 _decimals\n\n    ) public {\n\n        initOwner(_creator);\n\n        name = _name;\n\n        symbol = _symbol;\n\n        decimals = _decimals;\n\n        totalSupply = _initSupply;\n\n        balances[_creator] = _initSupply;\n\n        emit Transfer(address(0), _creator, _initSupply);\n\n    }","contract":"FilterAdmin","time":0}]}