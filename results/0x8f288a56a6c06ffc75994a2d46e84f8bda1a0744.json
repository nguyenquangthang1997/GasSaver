{"time":398,"results":[{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ERC20","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ERC20","time":1},{"type":"external-function ","before":"function execute(address _target, bytes memory _data)\n\n    public\n\n    payable\n\n    returns (bytes memory response)\n\n    {\n\n        require(msg.sender == timelock, \"!timelock\");\n\n        require(_target != address(0), \"!target\");\n\n\n        // call contract in current context\n\n        assembly {\n\n            let succeeded := delegatecall(\n\n            sub(gas(), 5000),\n\n            _target,\n\n            add(_data, 0x20),\n\n            mload(_data),\n\n            0,\n\n            0\n\n            )\n\n            let size := returndatasize()\n\n\n\n            response := mload(0x40)\n\n            mstore(\n\n            0x40,\n\n            add(response, and(add(add(size, 0x20), 0x1f), not(0x1f)))\n\n            )\n\n            mstore(response, size)\n\n            returndatacopy(add(response, 0x20), 0, size)\n\n\n\n            switch iszero(succeeded)\n\n            case 1 {\n\n            // throw if delegatecall failed\n\n                revert(add(response, 0x20), size)\n\n            }\n\n        }\n\n    }","after":"function execute(address _target, bytes calldata _data)\n\n    public\n\n    payable\n\n    returns (bytes memory response)\n\n    {\n\n        require(msg.sender == timelock, \"!timelock\");\n\n        require(_target != address(0), \"!target\");\n\n\n        // call contract in current context\n\n        assembly {\n\n            let succeeded := delegatecall(\n\n            sub(gas(), 5000),\n\n            _target,\n\n            add(_data, 0x20),\n\n            mload(_data),\n\n            0,\n\n            0\n\n            )\n\n            let size := returndatasize()\n\n\n\n            response := mload(0x40)\n\n            mstore(\n\n            0x40,\n\n            add(response, and(add(add(size, 0x20), 0x1f), not(0x1f)))\n\n            )\n\n            mstore(response, size)\n\n            returndatacopy(add(response, 0x20), 0, size)\n\n\n\n            switch iszero(succeeded)\n\n            case 1 {\n\n            // throw if delegatecall failed\n\n                revert(add(response, 0x20), size)\n\n            }\n\n        }\n\n    }","contract":"StrategyCmpdUsdcV1","time":0},{"type":"constant-restrict-modification  ","before":"uint256 colFactorLeverageBufferMax = 1000;","after":"uint256 constant colFactorLeverageBufferMax = 1000;","contract":"StrategyCmpdUsdcV1","time":0},{"type":"constant-restrict-modification  ","before":"uint256 colFactorSyncBufferMax = 1000;","after":"uint256 constant colFactorSyncBufferMax = 1000;","contract":"StrategyCmpdUsdcV1","time":0},{"type":"immutable-restrict-modification ","before":"address public want;","after":"address public immutable want;","contract":"StrategyCmpdUsdcV1","time":0},{"type":"constant-restrict-modification  ","before":"address public wbtcBuyback = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;","after":"address public constant wbtcBuyback = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;","contract":"StrategyCmpdUsdcV1","time":0},{"type":"constant-restrict-modification  ","before":"address public renbtcBuyback = 0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D;","after":"address public constant renbtcBuyback = 0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D;","contract":"StrategyCmpdUsdcV1","time":0},{"type":"constant-restrict-modification  ","before":"address public univ2Router2 = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;","after":"address public constant univ2Router2 = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;","contract":"StrategyCmpdUsdcV1","time":0}]}