{"time":260,"results":[{"type":"external-function ","before":"function setResolver(string memory name, address resolver) public owner_only(keccak256(bytes(name))) {\n\n        bytes32 label = keccak256(bytes(name));\n\n        bytes32 node = keccak256(abi.encodePacked(TLD_NODE, label));\n\n        ens.setResolver(node, resolver);\n\n    }","after":"function setResolver(string calldata name, address resolver) public owner_only(keccak256(bytes(name))) {\n\n        bytes32 label = keccak256(bytes(name));\n\n        bytes32 node = keccak256(abi.encodePacked(TLD_NODE, label));\n\n        ens.setResolver(node, resolver);\n\n    }","contract":"AbstractSubdomainRegistrar","time":0},{"type":"external-function ","before":"function configureDomain(string memory name, uint price, uint referralFeePPM) public {\n\n        configureDomainFor(name, price, referralFeePPM, msg.sender, address(0x0));\n\n    }","after":"function configureDomain(string calldata name, uint price, uint referralFeePPM) public {\n\n        configureDomainFor(name, price, referralFeePPM, msg.sender, address(0x0));\n\n    }","contract":"AbstractSubdomainRegistrar","time":0},{"type":"immutable-restrict-modification ","before":"address public registrar;","after":"address public immutable registrar;","contract":"AbstractSubdomainRegistrar","time":1},{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => uint256) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => uint256) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public baseNode;","after":"bytes32 public immutable baseNode;","contract":"BaseRegistrarImplementation","time":0},{"type":"state-data-arrangement ","before":"\naddress payable constant burn = address(0xdead);\naddress payable private _owner;\naddress private _previousOwner;\naddress private _registrar;\nuint private _creationDate;\nuint private _value;\nbool active;","after":"uint private _creationDate;\nuint private _value;\naddress payable constant burn = address(0xdead);\naddress payable private _owner;\naddress private _previousOwner;\naddress private _registrar;\nbool active;\n","contract":"DeedImplementation","time":0},{"type":"immutable-restrict-modification ","before":"uint private _creationDate;","after":"uint private immutable _creationDate;","contract":"DeedImplementation","time":0},{"type":"loop-calculation","before":"uint8 b;","after":"// move outside for loop\nuint8 b;","loc":{"start":{"line":3191,"column":12},"end":{"line":3191,"column":19}},"contract":"HashRegistrar","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public rootNode;","after":"bytes32 public immutable rootNode;","contract":"HashRegistrar","time":0},{"type":"immutable-restrict-modification ","before":"uint public registryStarted;","after":"uint public immutable registryStarted;","contract":"HashRegistrar","time":0},{"type":"immutable-restrict-modification ","before":"uint public transferPeriodEnds;","after":"uint public immutable transferPeriodEnds;","contract":"OldBaseRegistrarImplementation","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public baseNode;","after":"bytes32 public immutable baseNode;","contract":"OldBaseRegistrarImplementation","time":0},{"type":"immutable-restrict-modification ","before":"uint transferPeriodEnds;","after":"uint immutable transferPeriodEnds;","contract":"RegistrarMigration","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public baseNode;","after":"bytes32 public immutable baseNode;","contract":"RegistrarMigration","time":0}]}