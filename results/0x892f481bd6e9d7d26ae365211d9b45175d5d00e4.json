{"time":174,"results":[{"type":"external-function ","before":"function propose(address _executor, string memory _hash) public {\n\n        require(votesOf(msg.sender) > newProposalMinimum, \"ERR_INSUFFICIENT_STAKE\");\n\n\n        uint256 id = proposalCount;\n\n\n        // increment proposal count so next proposal gets the next higher id\n\n        proposalCount = proposalCount.add(1);\n\n\n        // create new proposal\n\n        Proposal memory proposal = Proposal({\n\n        id : id,\n\n        proposer : msg.sender,\n\n        totalVotesFor : 0,\n\n        totalVotesAgainst : 0,\n\n        start : block.timestamp,\n\n        end : voteDuration.add(block.timestamp),\n\n        executor : _executor,\n\n        hash : _hash,\n\n        totalAvailableVotes : totalVotes,\n\n        quorum : 0,\n\n        quorumRequired : quorum,\n\n        open : true,\n\n        executed : false\n\n        });\n\n\n        proposals[id] = proposal;\n\n\n        // lock proposer\n\n        updateVoteLock(proposal.end);\n\n\n        // emit proposal event\n\n        emit NewProposal(id, proposal.start, voteDuration, proposal.proposer, proposal.executor);\n\n    }","after":"function propose(address _executor, string calldata _hash) public {\n\n        require(votesOf(msg.sender) > newProposalMinimum, \"ERR_INSUFFICIENT_STAKE\");\n\n\n        uint256 id = proposalCount;\n\n\n        // increment proposal count so next proposal gets the next higher id\n\n        proposalCount = proposalCount.add(1);\n\n\n        // create new proposal\n\n        Proposal memory proposal = Proposal({\n\n        id : id,\n\n        proposer : msg.sender,\n\n        totalVotesFor : 0,\n\n        totalVotesAgainst : 0,\n\n        start : block.timestamp,\n\n        end : voteDuration.add(block.timestamp),\n\n        executor : _executor,\n\n        hash : _hash,\n\n        totalAvailableVotes : totalVotes,\n\n        quorum : 0,\n\n        quorumRequired : quorum,\n\n        open : true,\n\n        executed : false\n\n        });\n\n\n        proposals[id] = proposal;\n\n\n        // lock proposer\n\n        updateVoteLock(proposal.end);\n\n\n        // emit proposal event\n\n        emit NewProposal(id, proposal.start, voteDuration, proposal.proposer, proposal.executor);\n\n    }","contract":"BancorGovernance","time":0}]}