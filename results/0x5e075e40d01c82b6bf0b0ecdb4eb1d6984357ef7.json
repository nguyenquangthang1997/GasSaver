{"time":479,"results":[{"type":"state-data-arrangement ","before":"\n/\n    bool internal _notEn\n/\n    string public\n/\n    string public s\n/\n    uint8 public dec\n\n\n    uint internal constant borrowRateMaxMantissa = 0.00\n/\n    uint internal constant reserveFactorMaxMantissa =\n/\n    address payable public \n/\n    address payable public pending\n/\n    ComptrollerInterface public comptr\n/\n    InterestRateModel public interestRate\n/\n    uint internal initialExchangeRateMan\n/\n    uint public reserveFactorMan\n/\n    uint public accrualBlockN\n/\n    uint public borrow\n/\n    uint public totalBo\n/\n    uint public totalRes\n/\n    uint public totalS\n/\n    mapping(address => uint) internal accountT\n/\n    mapping(address => mapping(address => uint)) internal transferAllow\n/\n    mapping(address => BorrowSnapshot) internal accountBo","after":"/\n    string public\n/\n    string public s\n\n\n    uint internal constant borrowRateMaxMantissa = 0.00\n/\n    uint internal constant reserveFactorMaxMantissa =\n/\n    ComptrollerInterface public comptr\n/\n    InterestRateModel public interestRate\n/\n    uint internal initialExchangeRateMan\n/\n    uint public reserveFactorMan\n/\n    uint public accrualBlockN\n/\n    uint public borrow\n/\n    uint public totalBo\n/\n    uint public totalRes\n/\n    uint public totalS\n/\n    mapping(address => uint) internal accountT\n/\n    mapping(address => mapping(address => uint)) internal transferAllow\n/\n    mapping(address => BorrowSnapshot) internal accountBo\n/\n    address payable public \n/\n    address payable public pending\n/\n    bool internal _notEn\n/\n    uint8 public dec\n","contract":"CTokenStorage","time":0},{"type":"state-data-arrangement ","before":"\n\n\n    string public\n;\n    string public s\n;\n    uint8 public dec\n;\n    uint  public totalS\n;\n    address public ope\n;\n    address public pendingOpe\n;\n    mapping(address => uint) public bala\n;\n    mapping(address => mapping(address => uint)) public allo\n;\n    mapping(address => bool) public mi\n\n\n    bytes32 public DOMAIN_SEPA\n;\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6\n;\n    mapping(address => uint) public n","after":"\n\n    string public\n;\n    string public s\n;\n    uint  public totalS\n;\n    mapping(address => uint) public bala\n;\n    mapping(address => mapping(address => uint)) public allo\n;\n    mapping(address => bool) public mi\n\n\n    bytes32 public DOMAIN_SEPA\n;\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6\n;\n    mapping(address => uint) public n\n;\n    address public ope\n;\n    address public pendingOpe\n;\n    uint8 public dec\n","contract":"ERC20","time":0}]}