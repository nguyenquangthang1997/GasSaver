{"time":74,"results":[{"type":"external-function ","before":"function register(Account memory _account) public {\n        require(_account.owner == msg.sender, \"only owner can be registered\");\n        _register(_account);\n    }","after":"function register(Account calldata _account) public {\n        require(_account.owner == msg.sender, \"only owner can be registered\");\n        _register(_account);\n    }","contract":"L1Helper","time":0},{"type":"external-function ","before":"function onTokenBridged(\n        address _token,\n        uint256 _value,\n        bytes memory _data\n    ) external {\n        require(_token == address(WETH));\n        require(msg.sender == address(bridge));\n        require(_data.length == 20);\n\n        WETH.withdraw(_value);\n\n        AddressHelper.safeSendValue(payable(Bytes.bytesToAddress(_data)), _value);\n    }","after":"function onTokenBridged(\n        address _token,\n        uint256 _value,\n        bytes calldata _data\n    ) external {\n        require(_token == address(WETH));\n        require(msg.sender == address(bridge));\n        require(_data.length == 20);\n\n        WETH.withdraw(_value);\n\n        AddressHelper.safeSendValue(payable(Bytes.bytesToAddress(_data)), _value);\n    }","contract":"L1Helper","time":0}]}