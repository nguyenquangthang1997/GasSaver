{"time":130,"results":[{"type":"external-function ","before":"function setContractURI(string memory uri) external onlyOwner {\n        _setContractURI(uri);\n    }","after":"function setContractURI(string calldata uri) external onlyOwner {\n        _setContractURI(uri);\n    }","contract":"BlockArt","time":0},{"type":"external-function ","before":"function setTokenURI(uint256 id, string memory uri) external onlyOwner {\n        _setTokenURI(id, uri);\n    }","after":"function setTokenURI(uint256 id, string calldata uri) external onlyOwner {\n        _setTokenURI(id, uri);\n    }","contract":"BlockArt","time":0},{"type":"external-function ","before":"function mint(\n        address to,\n        uint256 blockNumber,\n        uint256 styleId,\n        uint256 value,\n        string memory metadata\n    ) external onlyOwner returns (uint256) {\n        _ids.increment();\n        uint256 newId = _ids.current();\n\n        _bas[blockNumber] = _bas[blockNumber].add(1);\n        _sas[styleId] = _sas[styleId].add(1);\n        _ats[newId] = styleId;\n        _atb[newId] = blockNumber;\n        _atv[newId] = value;\n\n        _safeMint(to, newId);\n        _setTokenURI(newId, metadata);\n\n        return newId;\n    }","after":"function mint(\n        address to,\n        uint256 blockNumber,\n        uint256 styleId,\n        uint256 value,\n        string calldata metadata\n    ) external onlyOwner returns (uint256) {\n        _ids.increment();\n        uint256 newId = _ids.current();\n\n        _bas[blockNumber] = _bas[blockNumber].add(1);\n        _sas[styleId] = _sas[styleId].add(1);\n        _ats[newId] = styleId;\n        _atb[newId] = blockNumber;\n        _atv[newId] = value;\n\n        _safeMint(to, newId);\n        _setTokenURI(newId, metadata);\n\n        return newId;\n    }","contract":"BlockArt","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"BlockArt","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"BlockArt","time":0},{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0}]}