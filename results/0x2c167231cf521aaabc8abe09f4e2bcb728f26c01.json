{"time":139,"results":[{"type":"external-function ","before":"function recordClaim(IMarket _market, address _account, uint256[] memory _outcomeFees) public returns (bool) {\n        require(msg.sender == address(augurTrading));\n        uint256 _numOutcomes = _market.getNumberOfOutcomes();\n        IUniverse _universe = _market.getUniverse();\n        for (uint256 _outcome = 0; _outcome < _numOutcomes; _outcome++) {\n            OutcomeData storage _outcomeData = profitLossData[_account][address(_market)][_outcome];\n            if (_outcomeData.netPosition == 0) {\n                continue;\n            }\n            int256 _salePrice = int256(_market.getWinningPayoutNumerator(_outcome).mul(10 ** 18));\n            int256 _amount = _outcomeData.netPosition.abs();\n            _outcomeData.realizedProfit += (_outcomeData.netPosition < 0 ? _outcomeData.avgPrice.sub(_salePrice) : _salePrice.sub(_outcomeData.avgPrice)).mul(_amount);\n            _outcomeData.realizedProfit -= int256(_outcomeFees[_outcome]);\n            _outcomeData.realizedCost += (_outcomeData.netPosition < 0 ? int256(_market.getNumTicks()).sub(_outcomeData.avgPrice) : _outcomeData.avgPrice).mul(_amount);\n            _outcomeData.avgPrice = 0;\n            _outcomeData.frozenFunds = 0;\n            _outcomeData.netPosition = 0;\n            augurTrading.logProfitLossChanged(_market, _account, _outcome, 0, 0, _outcomeData.realizedProfit, 0, _outcomeData.realizedCost);\n        }\n        return true;\n    }","after":"function recordClaim(IMarket _market, address _account, uint256[] calldata _outcomeFees) public returns (bool) {\n        require(msg.sender == address(augurTrading));\n        uint256 _numOutcomes = _market.getNumberOfOutcomes();\n        IUniverse _universe = _market.getUniverse();\n        for (uint256 _outcome = 0; _outcome < _numOutcomes; _outcome++) {\n            OutcomeData storage _outcomeData = profitLossData[_account][address(_market)][_outcome];\n            if (_outcomeData.netPosition == 0) {\n                continue;\n            }\n            int256 _salePrice = int256(_market.getWinningPayoutNumerator(_outcome).mul(10 ** 18));\n            int256 _amount = _outcomeData.netPosition.abs();\n            _outcomeData.realizedProfit += (_outcomeData.netPosition < 0 ? _outcomeData.avgPrice.sub(_salePrice) : _salePrice.sub(_outcomeData.avgPrice)).mul(_amount);\n            _outcomeData.realizedProfit -= int256(_outcomeFees[_outcome]);\n            _outcomeData.realizedCost += (_outcomeData.netPosition < 0 ? int256(_market.getNumTicks()).sub(_outcomeData.avgPrice) : _outcomeData.avgPrice).mul(_amount);\n            _outcomeData.avgPrice = 0;\n            _outcomeData.frozenFunds = 0;\n            _outcomeData.netPosition = 0;\n            augurTrading.logProfitLossChanged(_market, _account, _outcome, 0, 0, _outcomeData.realizedProfit, 0, _outcomeData.realizedCost);\n        }\n        return true;\n    }","contract":"ProfitLoss","time":0}]}