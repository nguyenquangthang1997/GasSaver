{"time":37,"results":[{"type":"external-function ","before":"function swapETHToToken(\n\n        address[] memory _path,\n\n        address _recipient,\n\n        uint _minOutput,\n\n        uint _deadline\n\n    ) public payable returns (uint) {\n\n\n        WETH.deposit {value : msg.value}();\n\n        (IERC20 outputToken, uint outputAmount) = _swap(_path, _minOutput, _deadline);\n\n        outputToken.transfer(_recipient, outputAmount);\n\n\n        return outputAmount;\n\n    }","after":"function swapETHToToken(\n\n        address[] calldata _path,\n\n        address _recipient,\n\n        uint _minOutput,\n\n        uint _deadline\n\n    ) public payable returns (uint) {\n\n\n        WETH.deposit {value : msg.value}();\n\n        (IERC20 outputToken, uint outputAmount) = _swap(_path, _minOutput, _deadline);\n\n        outputToken.transfer(_recipient, outputAmount);\n\n\n        return outputAmount;\n\n    }","contract":"Router","time":0},{"type":"external-function ","before":"function swapTokenToETH(\n\n        address[] memory _path,\n\n        address _recipient,\n\n        uint _inputAmount,\n\n        uint _minOutput,\n\n        uint _deadline\n\n    ) public returns (uint) {\n\n\n        _safeTransferFrom(_path[0], msg.sender, _inputAmount);\n\n        (, uint outputAmount) = _swap(_path, _minOutput, _deadline);\n\n        _wethWithdrawTo(_recipient, outputAmount);\n\n\n        return outputAmount;\n\n    }","after":"function swapTokenToETH(\n\n        address[] calldata _path,\n\n        address _recipient,\n\n        uint _inputAmount,\n\n        uint _minOutput,\n\n        uint _deadline\n\n    ) public returns (uint) {\n\n\n        _safeTransferFrom(_path[0], msg.sender, _inputAmount);\n\n        (, uint outputAmount) = _swap(_path, _minOutput, _deadline);\n\n        _wethWithdrawTo(_recipient, outputAmount);\n\n\n        return outputAmount;\n\n    }","contract":"Router","time":0},{"type":"external-function ","before":"function swapTokenToToken(\n\n        address[] memory _path,\n\n        address _recipient,\n\n        uint _inputAmount,\n\n        uint _minOutput,\n\n        uint _deadline\n\n    ) public returns (uint) {\n\n\n        _safeTransferFrom(_path[0], msg.sender, _inputAmount);\n\n        (IERC20 outputToken, uint outputAmount) = _swap(_path, _minOutput, _deadline);\n\n        outputToken.transfer(_recipient, outputAmount);\n\n\n        return outputAmount;\n\n    }","after":"function swapTokenToToken(\n\n        address[] calldata _path,\n\n        address _recipient,\n\n        uint _inputAmount,\n\n        uint _minOutput,\n\n        uint _deadline\n\n    ) public returns (uint) {\n\n\n        _safeTransferFrom(_path[0], msg.sender, _inputAmount);\n\n        (IERC20 outputToken, uint outputAmount) = _swap(_path, _minOutput, _deadline);\n\n        outputToken.transfer(_recipient, outputAmount);\n\n\n        return outputAmount;\n\n    }","contract":"Router","time":0},{"type":"constant-restrict-modification  ","before":"uint MAX_INT = 2 ** 256 - 1;","after":"uint constant MAX_INT = 2 ** 256 - 1;","contract":"Router","time":0}]}