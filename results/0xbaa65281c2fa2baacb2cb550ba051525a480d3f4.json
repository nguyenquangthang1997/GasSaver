{"time":615,"results":[{"type":"immutable-restrict-modification ","before":"address public pit;","after":"address public immutable pit;","contract":"ESM","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public min;","after":"uint256 public immutable min;","contract":"ESM","time":0},{"type":"constant-restrict-modification  ","before":"uint8 public step = 0;","after":"uint8 public constant step = 0;","contract":"DssDeploy","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public DOMAIN_SEPARATOR;","after":"bytes32 public immutable DOMAIN_SEPARATOR;","contract":"Dai","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public   ilk;","after":"bytes32 public   immutable ilk;","contract":"Flipper","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public ilk;","after":"bytes32 public immutable ilk;","contract":"GemJoin","time":0},{"type":"immutable-restrict-modification ","before":"uint    public dec;","after":"uint    public immutable dec;","contract":"GemJoin","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public ilk;","after":"bytes32 public immutable ilk;","contract":"ETHJoin","time":0},{"type":"external-function ","before":"function plot(address usr, bytes32 tag, bytes memory fax, uint eta)\n\n    public note auth\n\n    {\n\n        require(eta >= add(now, delay), \"ds-pause-delay-not-respected\");\n\n        plans[hash(usr, tag, fax, eta)] = true;\n\n    }","after":"function plot(address usr, bytes32 tag, bytes calldata fax, uint eta)\n\n    public note auth\n\n    {\n\n        require(eta >= add(now, delay), \"ds-pause-delay-not-respected\");\n\n        plans[hash(usr, tag, fax, eta)] = true;\n\n    }","contract":"DSPause","time":0},{"type":"external-function ","before":"function drop(address usr, bytes32 tag, bytes memory fax, uint eta)\n\n    public note auth\n\n    {\n\n        plans[hash(usr, tag, fax, eta)] = false;\n\n    }","after":"function drop(address usr, bytes32 tag, bytes calldata fax, uint eta)\n\n    public note auth\n\n    {\n\n        plans[hash(usr, tag, fax, eta)] = false;\n\n    }","contract":"DSPause","time":0},{"type":"external-function ","before":"function exec(address usr, bytes32 tag, bytes memory fax, uint eta)\n\n    public note\n\n    returns (bytes memory out)\n\n    {\n\n        require(plans[hash(usr, tag, fax, eta)], \"ds-pause-unplotted-plan\");\n\n        require(soul(usr) == tag, \"ds-pause-wrong-codehash\");\n\n        require(now >= eta, \"ds-pause-premature-exec\");\n\n\n        plans[hash(usr, tag, fax, eta)] = false;\n\n\n        out = proxy.exec(usr, fax);\n\n        require(proxy.owner() == address(this), \"ds-pause-illegal-storage-change\");\n\n    }","after":"function exec(address usr, bytes32 tag, bytes calldata fax, uint eta)\n\n    public note\n\n    returns (bytes memory out)\n\n    {\n\n        require(plans[hash(usr, tag, fax, eta)], \"ds-pause-unplotted-plan\");\n\n        require(soul(usr) == tag, \"ds-pause-wrong-codehash\");\n\n        require(now >= eta, \"ds-pause-premature-exec\");\n\n\n        plans[hash(usr, tag, fax, eta)] = false;\n\n\n        out = proxy.exec(usr, fax);\n\n        require(proxy.owner() == address(this), \"ds-pause-illegal-storage-change\");\n\n    }","contract":"DSPause","time":0},{"type":"external-function ","before":"function exec(address usr, bytes memory fax)\n\n    public auth\n\n    returns (bytes memory out)\n\n    {\n\n        bool ok;\n\n        (ok, out) = usr.delegatecall(fax);\n\n        require(ok, \"ds-pause-delegatecall-error\");\n\n    }","after":"function exec(address usr, bytes calldata fax)\n\n    public auth\n\n    returns (bytes memory out)\n\n    {\n\n        bool ok;\n\n        (ok, out) = usr.delegatecall(fax);\n\n        require(ok, \"ds-pause-delegatecall-error\");\n\n    }","contract":"DSPauseProxy","time":0},{"type":"immutable-restrict-modification ","before":"address public owner;","after":"address public immutable owner;","contract":"DSPauseProxy","time":0}]}