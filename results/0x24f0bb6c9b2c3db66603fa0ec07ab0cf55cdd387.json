{"time":279,"results":[{"type":"loop-calculation","before":"uint8 b;","after":"// move outside for loop\nuint8 b;","loc":{"start":{"line":2933,"column":12},"end":{"line":2933,"column":19}},"contract":"strings","time":0},{"type":"loop-calculation","before":"uint a;","after":"// move outside for loop\nuint a;","loc":{"start":{"line":3020,"column":12},"end":{"line":3020,"column":18}},"contract":"strings","time":0},{"type":"loop-calculation","before":"uint b;","after":"// move outside for loop\nuint b;","loc":{"start":{"line":3022,"column":12},"end":{"line":3022,"column":18}},"contract":"strings","time":0},{"type":"loop-calculation","before":"bytes32 testHash;","after":"// move outside for loop\nbytes32 testHash;","loc":{"start":{"line":3567,"column":20},"end":{"line":3567,"column":36}},"contract":"strings","time":0},{"type":"loop-duplication","before":"\nstart line 3974 column 8, end line 3978 column 8\nfor (uint i = 0; i < parts.length; i++) {\n\n            length += parts[i]._len;\n\n        }\nstart line 3988 column 8, end line 4002 column 8\nfor (uint i = 0; i < parts.length; i++) {\n\n            memcpy(retptr, parts[i]._ptr, parts[i]._len);\n\n            retptr += parts[i]._len;\n\n            if (i < parts.length - 1) {\n\n                memcpy(retptr, self._ptr, self._len);\n\n                retptr += self._len;\n\n            }\n\n        }","after":"// merge loop\n\nstart line 3974 column 8, end line 3978 column 8\nfor (uint i = 0; i < parts.length; i++) {\n\n            length += parts[i]._len;\n\n        }\nstart line 3988 column 8, end line 4002 column 8\nfor (uint i = 0; i < parts.length; i++) {\n\n            memcpy(retptr, parts[i]._ptr, parts[i]._len);\n\n            retptr += parts[i]._len;\n\n            if (i < parts.length - 1) {\n\n                memcpy(retptr, self._ptr, self._len);\n\n                retptr += self._len;\n\n            }\n\n        }","contract":"strings","time":0},{"type":"immutable-restrict-modification ","before":"address private _stablecoin;","after":"address private immutable _stablecoin;","contract":"TokenWhitelist","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 private _oracleNode;","after":"bytes32 private immutable _oracleNode;","contract":"TokenWhitelist","time":0},{"type":"immutable-restrict-modification ","before":"address private _ensRegistry;","after":"address private immutable _ensRegistry;","contract":"TokenWhitelist","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 private _controllerNode;","after":"bytes32 private immutable _controllerNode;","contract":"TokenWhitelist","time":0},{"type":"immutable-restrict-modification ","before":"address private _burner;","after":"address private immutable _burner;","contract":"Holder","time":0},{"type":"immutable-restrict-modification ","before":"address private _ensRegistry;","after":"address private immutable _ensRegistry;","contract":"Holder","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 private _controllerNode;","after":"bytes32 private immutable _controllerNode;","contract":"Holder","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 private _tokenWhitelistNode;","after":"bytes32 private immutable _tokenWhitelistNode;","contract":"Holder","time":0}]}