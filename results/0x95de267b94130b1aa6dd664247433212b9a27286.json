{"time":282,"results":[{"type":"state-data-arrangement ","before":"\naddress payable public owner;\naddress public ETH_TOKEN_ADDRESS = address(0x0);\naddress public WETH_TOKEN_ADDRESS = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\nWrappedETH wethToken = WrappedETH(WETH_TOKEN_ADDRESS);\nuint256 approvalAmount = 1000000000000000000000000000000;\nuint256 longTimeFromNow = 1000000000000000000000000000;\naddress uniAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\naddress uniFactoryAddress = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;\nUniswapV2 uniswapExchange = UniswapV2(uniAddress);\nUniswapFactory factory = UniswapFactory(uniFactoryAddress);\nmapping(address => address[]) public lpTokenAddressToPairs;\nmapping(string => address) public stablecoins;\nmapping(address => mapping(address => address[])) public presetPaths;\nbool public changeRecpientIsOwner;\nuint256 public fee = 0;\nuint256 public maxfee = 0;","after":"WrappedETH wethToken = WrappedETH(WETH_TOKEN_ADDRESS);\nuint256 approvalAmount = 1000000000000000000000000000000;\nuint256 longTimeFromNow = 1000000000000000000000000000;\nUniswapV2 uniswapExchange = UniswapV2(uniAddress);\nUniswapFactory factory = UniswapFactory(uniFactoryAddress);\nmapping(address => address[]) public lpTokenAddressToPairs;\nmapping(string => address) public stablecoins;\nmapping(address => mapping(address => address[])) public presetPaths;\nuint256 public fee = 0;\nuint256 public maxfee = 0;\naddress payable public owner;\naddress public ETH_TOKEN_ADDRESS = address(0x0);\naddress public WETH_TOKEN_ADDRESS = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\naddress uniAddress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\naddress uniFactoryAddress = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;\nbool public changeRecpientIsOwner;\n","contract":"WrapAndUnWrap","time":0},{"type":"external-function ","before":"function updateStableCoinAddress(string memory coinName, address newAddress) public onlyOwner returns (bool){\n\n        stablecoins[coinName] = newAddress;\n\n        return true;\n\n\n    }","after":"function updateStableCoinAddress(string calldata coinName, address newAddress) public onlyOwner returns (bool){\n\n        stablecoins[coinName] = newAddress;\n\n        return true;\n\n\n    }","contract":"WrapAndUnWrap","time":0},{"type":"external-function ","before":"function updatePresetPaths(address sellToken, address buyToken, address[] memory newPath) public onlyOwner returns (bool){\n\n        presetPaths[sellToken][buyToken] = newPath;\n\n        return true;\n\n    }","after":"function updatePresetPaths(address sellToken, address buyToken, address[] calldata newPath) public onlyOwner returns (bool){\n\n        presetPaths[sellToken][buyToken] = newPath;\n\n        return true;\n\n    }","contract":"WrapAndUnWrap","time":0},{"type":"constant-restrict-modification  ","before":"address public ETH_TOKEN_ADDRESS = address(0x0);","after":"address public constant ETH_TOKEN_ADDRESS = address(0x0);","contract":"WrapAndUnWrap","time":1},{"type":"constant-restrict-modification  ","before":"address public WETH_TOKEN_ADDRESS = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;","after":"address public constant WETH_TOKEN_ADDRESS = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;","contract":"WrapAndUnWrap","time":1},{"type":"constant-restrict-modification  ","before":"uint256 approvalAmount = 1000000000000000000000000000000;","after":"uint256 constant approvalAmount = 1000000000000000000000000000000;","contract":"WrapAndUnWrap","time":1},{"type":"constant-restrict-modification  ","before":"uint256 longTimeFromNow = 1000000000000000000000000000;","after":"uint256 constant longTimeFromNow = 1000000000000000000000000000;","contract":"WrapAndUnWrap","time":1}]}