{"time":54,"results":[{"type":"external-function ","before":"  function queryAllPrices(bytes memory script, uint256[] memory inputLocations) public view returns (bytes memory) {\n        uint256 location = 0;\n        bytes memory prices;\n        bytes memory lastPrice;\n        bytes memory callData;\n        uint256 inputsLength = inputLocations.length;\n        uint256 inputsIndex = 0;\n        while (location < script.length) {\n            address contractAddress = addressAt(script, location);\n            uint256 calldataLength = uint256At(script, location + 0x14);\n            uint256 calldataStart = location + 0x14 + 0x20;\n            if (location != 0 && inputsLength > inputsIndex) {\n                uint256 insertLocation = inputLocations[inputsIndex];\n                replaceDataAt(script, lastPrice, insertLocation);\n                inputsIndex++;\n            }\n            callData = script.slice(calldataStart, calldataLength);\n            lastPrice = getPrice(contractAddress, callData);\n            prices = prices.concat(lastPrice);\n            location += (0x14 + 0x20 + calldataLength);\n        }\n        return prices;\n   ","after":"  function queryAllPrices(bytes calldata script, uint256[] calldata inputLocations) public view returns (bytes memory) {\n        uint256 location = 0;\n        bytes memory prices;\n        bytes memory lastPrice;\n        bytes memory callData;\n        uint256 inputsLength = inputLocations.length;\n        uint256 inputsIndex = 0;\n        while (location < script.length) {\n            address contractAddress = addressAt(script, location);\n            uint256 calldataLength = uint256At(script, location + 0x14);\n            uint256 calldataStart = location + 0x14 + 0x20;\n            if (location != 0 && inputsLength > inputsIndex) {\n                uint256 insertLocation = inputLocations[inputsIndex];\n                replaceDataAt(script, lastPrice, insertLocation);\n                inputsIndex++;\n            }\n            callData = script.slice(calldataStart, calldataLength);\n            lastPrice = getPrice(contractAddress, callData);\n            prices = prices.concat(lastPrice);\n            location += (0x14 + 0x20 + calldataLength);\n        }\n        return prices;\n   ","contract":"QueryEngine","time":0},{"type":"external-function ","before":"  function query(bytes memory script, uint256[] memory inputLocations) public view returns (uint256) {\n        uint256 location = 0;\n        bytes memory lastPrice;\n        bytes memory callData;\n        uint256 inputsLength = inputLocations.length;\n        uint256 inputsIndex = 0;\n        while (location < script.length) {\n            address contractAddress = addressAt(script, location);\n            uint256 calldataLength = uint256At(script, location + 0x14);\n            uint256 calldataStart = location + 0x14 + 0x20;\n            if (location != 0 && inputsLength > inputsIndex) {\n                uint256 insertLocation = inputLocations[inputsIndex];\n                replaceDataAt(script, lastPrice, insertLocation);\n                inputsIndex++;\n            }\n            callData = script.slice(calldataStart, calldataLength);\n            lastPrice = getPrice(contractAddress, callData);\n            location += (0x14 + 0x20 + calldataLength);\n        }\n        return lastPrice.toUint256(0);\n   ","after":"  function query(bytes calldata script, uint256[] calldata inputLocations) public view returns (uint256) {\n        uint256 location = 0;\n        bytes memory lastPrice;\n        bytes memory callData;\n        uint256 inputsLength = inputLocations.length;\n        uint256 inputsIndex = 0;\n        while (location < script.length) {\n            address contractAddress = addressAt(script, location);\n            uint256 calldataLength = uint256At(script, location + 0x14);\n            uint256 calldataStart = location + 0x14 + 0x20;\n            if (location != 0 && inputsLength > inputsIndex) {\n                uint256 insertLocation = inputLocations[inputsIndex];\n                replaceDataAt(script, lastPrice, insertLocation);\n                inputsIndex++;\n            }\n            callData = script.slice(calldataStart, calldataLength);\n            lastPrice = getPrice(contractAddress, callData);\n            location += (0x14 + 0x20 + calldataLength);\n        }\n        return lastPrice.toUint256(0);\n   ","contract":"QueryEngine","time":0}]}