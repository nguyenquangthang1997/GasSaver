{"time":131,"results":[{"type":"state-data-arrangement ","before":"\nstring public name;\nstring public symbol;\nuint8  public immutable override decimals;\naddress public immutable underlying;\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\nbytes32 public constant TRANSFER_TYPEHASH = keccak256(\"Transfer(address owner,address to,uint256 value,uint256 nonce,uint256 deadline)\");\nbytes32 public immutable DOMAIN_SEPARATOR;\nmapping(address => uint256) public override balanceOf;\nuint256 private _totalSupply;\nbool private _init;\nbool private _vaultOnly;\nuint public delay = 2 * 24 * 3600;\nmapping(address => bool) public isMinter;\naddress[] public minters;\naddress public vault;\naddress public pendingMinter;\nuint public delayMinter;\naddress public pendingVault;\nuint public delayVault;\nuint public pendingDelay;\nuint public delayDelay;\nmapping(address => uint256) public override nonces;\nmapping(address => mapping(address => uint256)) public override allowance;","after":"string public name;\nstring public symbol;\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\nbytes32 public constant TRANSFER_TYPEHASH = keccak256(\"Transfer(address owner,address to,uint256 value,uint256 nonce,uint256 deadline)\");\nbytes32 public immutable DOMAIN_SEPARATOR;\nmapping(address => uint256) public override balanceOf;\nuint256 private _totalSupply;\nuint public delay = 2 * 24 * 3600;\nmapping(address => bool) public isMinter;\naddress[] public minters;\nuint public delayMinter;\nuint public delayVault;\nuint public pendingDelay;\nuint public delayDelay;\nmapping(address => uint256) public override nonces;\nmapping(address => mapping(address => uint256)) public override allowance;\naddress public immutable underlying;\naddress public vault;\naddress public pendingMinter;\naddress public pendingVault;\nuint8  public immutable override decimals;\nbool private _init;\nbool private _vaultOnly;\n","contract":"ImpossibleDecentralizedIncubatorAccessToken","time":0},{"type":"immutable-restrict-modification ","before":"string public name;","after":"string public immutable name;","contract":"ImpossibleDecentralizedIncubatorAccessToken","time":1},{"type":"immutable-restrict-modification ","before":"string public symbol;","after":"string public immutable symbol;","contract":"ImpossibleDecentralizedIncubatorAccessToken","time":1},{"type":"constant-restrict-modification  ","before":"uint public delay = 2 * 24 * 3600;","after":"uint public constant delay = 2 * 24 * 3600;","contract":"ImpossibleDecentralizedIncubatorAccessToken","time":1},{"type":"constant-restrict-modification  ","before":"uint public pendingDelay;","after":"uint public constant pendingDelay;","contract":"ImpossibleDecentralizedIncubatorAccessToken","time":1},{"type":"constant-restrict-modification  ","before":"uint public delayDelay;","after":"uint public constant delayDelay;","contract":"ImpossibleDecentralizedIncubatorAccessToken","time":1}]}