{"time":276,"results":[{"type":"state-data-arrangement ","before":"\nbool public allowEmergencyAccess;\naddress payable public donationAddress;\nEnumerableSet.AddressSet private allowedErc721Contracts;\nEnumerableSet.AddressSet private allowedErc1155Contracts;\nbytes4 immutable onErc721SuccessfulResult =\n\n    bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));\nbytes4 immutable onErc1155SuccessfulResult =\n\n    bytes4(\n\n        keccak256(\n\n            \"onERC1155Received(address,address,uint256,uint256,bytes)\"\n\n        )\n\n    );","after":"EnumerableSet.AddressSet private allowedErc721Contracts;\nEnumerableSet.AddressSet private allowedErc1155Contracts;\naddress payable public donationAddress;\nbytes4 immutable onErc721SuccessfulResult =\n\n    bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));\nbytes4 immutable onErc1155SuccessfulResult =\n\n    bytes4(\n\n        keccak256(\n\n            \"onERC1155Received(address,address,uint256,uint256,bytes)\"\n\n        )\n\n    );\nbool public allowEmergencyAccess;\n","contract":"Rats","time":0},{"type":"external-function ","before":"function addAllowedContracts(\n\n        bool isErc721,\n\n        address[] memory contractAddresses\n\n    ) public onlyOwner {\n\n        EnumerableSet.AddressSet storage allowedAddresses =\n\n        isErc721 ? allowedErc721Contracts : allowedErc1155Contracts;\n\n        for (uint256 i = 0; i < contractAddresses.length; ++i) {\n\n            allowedAddresses.add(contractAddresses[i]);\n\n        }\n\n    }","after":"function addAllowedContracts(\n\n        bool isErc721,\n\n        address[] calldata contractAddresses\n\n    ) public onlyOwner {\n\n        EnumerableSet.AddressSet storage allowedAddresses =\n\n        isErc721 ? allowedErc721Contracts : allowedErc1155Contracts;\n\n        for (uint256 i = 0; i < contractAddresses.length; ++i) {\n\n            allowedAddresses.add(contractAddresses[i]);\n\n        }\n\n    }","contract":"Rats","time":0},{"type":"external-function ","before":"function emergencyRemoveAllowedContracts(\n\n        bool isErc721,\n\n        address[] memory contractAddresses\n\n    ) public onlyEmergencyAccess {\n\n        EnumerableSet.AddressSet storage allowedAddresses =\n\n        isErc721 ? allowedErc721Contracts : allowedErc1155Contracts;\n\n        for (uint256 i = 0; i < contractAddresses.length; ++i) {\n\n            allowedAddresses.remove(contractAddresses[i]);\n\n        }\n\n    }","after":"function emergencyRemoveAllowedContracts(\n\n        bool isErc721,\n\n        address[] calldata contractAddresses\n\n    ) public onlyEmergencyAccess {\n\n        EnumerableSet.AddressSet storage allowedAddresses =\n\n        isErc721 ? allowedErc721Contracts : allowedErc1155Contracts;\n\n        for (uint256 i = 0; i < contractAddresses.length; ++i) {\n\n            allowedAddresses.remove(contractAddresses[i]);\n\n        }\n\n    }","contract":"Rats","time":0},{"type":"constant-restrict-modification  ","before":"bytes4 immutable onErc721SuccessfulResult =\n\n    bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));","after":"bytes4 immutable constant onErc721SuccessfulResult =\n\n    bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));","contract":"Rats","time":1},{"type":"constant-restrict-modification  ","before":"bytes4 immutable onErc1155SuccessfulResult =\n\n    bytes4(\n\n        keccak256(\n\n            \"onERC1155Received(address,address,uint256,uint256,bytes)\"\n\n        )\n\n    );","after":"bytes4 immutable constant onErc1155SuccessfulResult =\n\n    bytes4(\n\n        keccak256(\n\n            \"onERC1155Received(address,address,uint256,uint256,bytes)\"\n\n        )\n\n    );","contract":"Rats","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Rats","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Rats","time":1}]}