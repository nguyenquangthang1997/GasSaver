{"time":173,"results":[{"type":"external-function ","before":"function addMarket(\n\n        address underlyingToken,\n\n        string memory symbol,\n\n        string memory name,\n\n        uint8 decimals,\n\n        uint minMintAmount,\n\n        uint minRedeemAmount,\n\n        uint totalSupply\n\n    ) public onlyOwner {\n\n        require(\n\n            underlyingTokenAddressToDmmTokenIdMap[underlyingToken] == 0,\n\n            \"TOKEN_ALREADY_EXISTS\"\n\n        );\n\n\n        IDmmToken dmmToken;\n\n        address controller = address(this);\n\n        if (underlyingToken == wethToken) {\n\n            dmmToken = dmmEtherFactory.deployToken(\n\n                symbol,\n\n                name,\n\n                decimals,\n\n                minMintAmount,\n\n                minRedeemAmount,\n\n                totalSupply,\n\n                controller\n\n            );\n\n        } else {\n\n            dmmToken = dmmTokenFactory.deployToken(\n\n                symbol,\n\n                name,\n\n                decimals,\n\n                minMintAmount,\n\n                minRedeemAmount,\n\n                totalSupply,\n\n                controller\n\n            );\n\n        }\n\n\n        _addMarket(address(dmmToken), underlyingToken);\n\n    }","after":"function addMarket(\n\n        address underlyingToken,\n\n        string calldata symbol,\n\n        string calldata name,\n\n        uint8 decimals,\n\n        uint minMintAmount,\n\n        uint minRedeemAmount,\n\n        uint totalSupply\n\n    ) public onlyOwner {\n\n        require(\n\n            underlyingTokenAddressToDmmTokenIdMap[underlyingToken] == 0,\n\n            \"TOKEN_ALREADY_EXISTS\"\n\n        );\n\n\n        IDmmToken dmmToken;\n\n        address controller = address(this);\n\n        if (underlyingToken == wethToken) {\n\n            dmmToken = dmmEtherFactory.deployToken(\n\n                symbol,\n\n                name,\n\n                decimals,\n\n                minMintAmount,\n\n                minRedeemAmount,\n\n                totalSupply,\n\n                controller\n\n            );\n\n        } else {\n\n            dmmToken = dmmTokenFactory.deployToken(\n\n                symbol,\n\n                name,\n\n                decimals,\n\n                minMintAmount,\n\n                minRedeemAmount,\n\n                totalSupply,\n\n                controller\n\n            );\n\n        }\n\n\n        _addMarket(address(dmmToken), underlyingToken);\n\n    }","contract":"DmmController","time":0},{"type":"immutable-restrict-modification ","before":"address public wethToken;","after":"address public immutable wethToken;","contract":"DmmController","time":1}]}