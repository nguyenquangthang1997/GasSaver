{"time":368,"results":[{"type":"loop-duplication","before":"\nstart line 1093 column 8, end line 1098 column 8\nfor (uint256 i; i < _additionalAssets.length; i++) {\n            if (!trackedAssetsToPayout.contains(_additionalAssets[i])) {\n                indexesToAdd[i] = true;\n                additionalItemsCount++;\n            }\n        }\nstart line 1108 column 8, end line 1113 column 8\nfor (uint256 i; i < _additionalAssets.length; i++) {\n            if (indexesToAdd[i]) {\n                payoutAssets_[payoutAssetsIndex] = _additionalAssets[i];\n                payoutAssetsIndex++;\n            }\n        }","after":"// merge loop\n\nstart line 1093 column 8, end line 1098 column 8\nfor (uint256 i; i < _additionalAssets.length; i++) {\n            if (!trackedAssetsToPayout.contains(_additionalAssets[i])) {\n                indexesToAdd[i] = true;\n                additionalItemsCount++;\n            }\n        }\nstart line 1108 column 8, end line 1113 column 8\nfor (uint256 i; i < _additionalAssets.length; i++) {\n            if (indexesToAdd[i]) {\n                payoutAssets_[payoutAssetsIndex] = _additionalAssets[i];\n                payoutAssetsIndex++;\n            }\n        }","contract":"ComptrollerLib","time":0},{"type":"immutable-restrict-modification ","before":"bool internal isLib;","after":"bool internal immutable isLib;","contract":"ComptrollerLib","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ERC20","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ERC20","time":0},{"type":"loop-duplication","before":"\nstart line 2659 column 8, end line 2664 column 8\nfor (uint256 i; i < fees.length; i++) {\n            if (feeManagerContract.feeSettlesOnHook(fees[i], IFeeManager.FeeHook.Continuous)) {\n                continuousFeesCount++;\n                implementsContinuousHook[i] = true;\n            }\n        }\nstart line 2674 column 8, end line 2679 column 8\nfor (uint256 i; i < fees.length; i++) {\n            if (implementsContinuousHook[i]) {\n                continuousFees_[continuousFeesIndex] = fees[i];\n                continuousFeesIndex++;\n            }\n        }","after":"// merge loop\n\nstart line 2659 column 8, end line 2664 column 8\nfor (uint256 i; i < fees.length; i++) {\n            if (feeManagerContract.feeSettlesOnHook(fees[i], IFeeManager.FeeHook.Continuous)) {\n                continuousFeesCount++;\n                implementsContinuousHook[i] = true;\n            }\n        }\nstart line 2674 column 8, end line 2679 column 8\nfor (uint256 i; i < fees.length; i++) {\n            if (implementsContinuousHook[i]) {\n                continuousFees_[continuousFeesIndex] = fees[i];\n                continuousFeesIndex++;\n            }\n        }","contract":"FundActionsWrapper","time":0}]}