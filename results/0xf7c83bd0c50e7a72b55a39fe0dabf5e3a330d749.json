{"time":144,"results":[{"type":"constant-restrict-modification  ","before":"uint public transferPeriodEnds;","after":"uint public constant transferPeriodEnds;","contract":"BaseRegistrar","time":0},{"type":"constant-restrict-modification  ","before":"bytes32 public baseNode;","after":"bytes32 public constant baseNode;","contract":"BaseRegistrar","time":0},{"type":"loop-calculation","before":"byte b = bytes(s)[i];","after":"// move outside for loop\nbyte b = bytes(s)[i];","loc":{"start":{"line":538,"column":12},"end":{"line":538,"column":32}},"contract":"StringUtils","time":0},{"type":"loop-calculation","before":"uint a;","after":"// move outside for loop\nuint a;","loc":{"start":{"line":1316,"column":12},"end":{"line":1316,"column":18}},"contract":"BytesUtils","time":0},{"type":"loop-calculation","before":"uint b;","after":"// move outside for loop\nuint b;","loc":{"start":{"line":1318,"column":12},"end":{"line":1318,"column":18}},"contract":"BytesUtils","time":0},{"type":"external-function ","before":"function submitExactClaim(bytes memory name, address claimant, string memory email) public payable {\n\n        string memory claimed = getLabel(name, 0);\n\n        handleClaim(claimed, name, claimant, email);\n\n    }","after":"function submitExactClaim(bytes calldata name, address claimant, string calldata email) public payable {\n\n        string memory claimed = getLabel(name, 0);\n\n        handleClaim(claimed, name, claimant, email);\n\n    }","contract":"ShortNameClaims","time":0},{"type":"external-function ","before":"function submitCombinedClaim(bytes memory name, address claimant, string memory email) public payable {\n\n        bytes memory firstLabel = bytes(getLabel(name, 0));\n\n        bytes memory secondLabel = bytes(getLabel(name, 1));\n\n        Buffer.buffer memory buf;\n\n        buf.init(firstLabel.length + secondLabel.length);\n\n        buf.append(firstLabel);\n\n        buf.append(secondLabel);\n\n\n        handleClaim(string(buf.buf), name, claimant, email);\n\n    }","after":"function submitCombinedClaim(bytes calldata name, address claimant, string calldata email) public payable {\n\n        bytes memory firstLabel = bytes(getLabel(name, 0));\n\n        bytes memory secondLabel = bytes(getLabel(name, 1));\n\n        Buffer.buffer memory buf;\n\n        buf.init(firstLabel.length + secondLabel.length);\n\n        buf.append(firstLabel);\n\n        buf.append(secondLabel);\n\n\n        handleClaim(string(buf.buf), name, claimant, email);\n\n    }","contract":"ShortNameClaims","time":0},{"type":"external-function ","before":"function submitPrefixClaim(bytes memory name, address claimant, string memory email) public payable {\n\n        bytes memory firstLabel = bytes(getLabel(name, 0));\n\n        require(firstLabel.equals(firstLabel.length - 3, bytes(\"eth\")));\n\n        handleClaim(string(firstLabel.substring(0, firstLabel.length - 3)), name, claimant, email);\n\n    }","after":"function submitPrefixClaim(bytes calldata name, address claimant, string calldata email) public payable {\n\n        bytes memory firstLabel = bytes(getLabel(name, 0));\n\n        require(firstLabel.equals(firstLabel.length - 3, bytes(\"eth\")));\n\n        handleClaim(string(firstLabel.substring(0, firstLabel.length - 3)), name, claimant, email);\n\n    }","contract":"ShortNameClaims","time":0}]}