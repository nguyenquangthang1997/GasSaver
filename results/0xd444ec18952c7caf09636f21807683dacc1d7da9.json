{"time":110,"results":[{"type":"state-data-arrangement ","before":"\nbytes32 public constant ROLE_OWNER = keccak256(\"ROLE_OWNER\");\nbytes32 public constant ROLE_MINTED_TOKENS_ADMIN = keccak256(\"ROLE_MINTED_TOKENS_ADMIN\");\nuint32 private constant PPM_RESOLUTION = 1000000;\nIERC20Token public immutable networkToken;\nEnumerableSet.AddressSet private _poolWhitelist;\nuint256 public override minNetworkTokenLiquidityForMinting = 1000e18;\nuint256 public override defaultNetworkTokenMintingLimit = 20000e18;\nmapping(IConverterAnchor => uint256) public override networkTokenMintingLimits;\nmapping(IConverterAnchor => uint256) public override networkTokensMinted;\nuint256 public override minProtectionDelay = 30 days;\nuint256 public override maxProtectionDelay = 100 days;\nuint256 public override minNetworkCompensation = 1e16;\nuint256 public override lockDuration = 24 hours;\nuint32 public override averageRateMaxDeviation = 5000;","after":"bytes32 public constant ROLE_OWNER = keccak256(\"ROLE_OWNER\");\nbytes32 public constant ROLE_MINTED_TOKENS_ADMIN = keccak256(\"ROLE_MINTED_TOKENS_ADMIN\");\nIERC20Token public immutable networkToken;\nEnumerableSet.AddressSet private _poolWhitelist;\nuint256 public override minNetworkTokenLiquidityForMinting = 1000e18;\nuint256 public override defaultNetworkTokenMintingLimit = 20000e18;\nmapping(IConverterAnchor => uint256) public override networkTokenMintingLimits;\nmapping(IConverterAnchor => uint256) public override networkTokensMinted;\nuint256 public override minProtectionDelay = 30 days;\nuint256 public override maxProtectionDelay = 100 days;\nuint256 public override minNetworkCompensation = 1e16;\nuint256 public override lockDuration = 24 hours;\nuint32 private constant PPM_RESOLUTION = 1000000;\nuint32 public override averageRateMaxDeviation = 5000;\n","contract":"LiquidityProtectionSettings","time":0}]}