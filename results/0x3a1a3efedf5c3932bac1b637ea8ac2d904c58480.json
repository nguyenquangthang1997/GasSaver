{"time":279,"results":[{"type":"external-function ","before":"function initialize(\n        address token,\n        address operator,\n        address staker,\n        address counterparty,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes memory staticMetadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n\n        // set token used for staking\n        Staking._setToken(token);\n\n        // set griefing ratio\n        Griefing._setRatio(staker, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set static metadata\n        Metadata._setStaticMetadata(staticMetadata);\n    }","after":"function initialize(\n        address token,\n        address operator,\n        address staker,\n        address counterparty,\n        uint256 ratio,\n        Griefing.RatioType ratioType,\n        uint256 countdownLength,\n        bytes calldata staticMetadata\n    ) public initializeTemplate() {\n        // set storage values\n        _data.staker = staker;\n        _data.counterparty = counterparty;\n\n        // set operator\n        if (operator != address(0)) {\n            Operated._setOperator(operator);\n            Operated._activateOperator();\n        }\n\n        // set token used for staking\n        Staking._setToken(token);\n\n        // set griefing ratio\n        Griefing._setRatio(staker, ratio, ratioType);\n\n        // set countdown length\n        Countdown._setLength(countdownLength);\n\n        // set static metadata\n        Metadata._setStaticMetadata(staticMetadata);\n    }","contract":"OneWayGriefing","time":0},{"type":"external-function ","before":"function setVariableMetadata(bytes memory variableMetadata) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isActiveOperator(msg.sender), \"only staker or active operator\");\n\n        // update metadata\n        Metadata._setVariableMetadata(variableMetadata);\n    }","after":"function setVariableMetadata(bytes calldata variableMetadata) public {\n        // restrict access\n        require(isStaker(msg.sender) || Operated.isActiveOperator(msg.sender), \"only staker or active operator\");\n\n        // update metadata\n        Metadata._setVariableMetadata(variableMetadata);\n    }","contract":"OneWayGriefing","time":1},{"type":"external-function ","before":"function punish(address from, uint256 punishment, bytes memory message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isActiveOperator(msg.sender), \"only counterparty or active operator\");\n\n        // require agreement is not ended\n        require(!Countdown.isOver(), \"agreement ended\");\n\n        // execute griefing\n        cost = Griefing._grief(from, _data.staker, punishment, message);\n    }","after":"function punish(address from, uint256 punishment, bytes calldata message) public returns (uint256 cost) {\n        // restrict access\n        require(isCounterparty(msg.sender) || Operated.isActiveOperator(msg.sender), \"only counterparty or active operator\");\n\n        // require agreement is not ended\n        require(!Countdown.isOver(), \"agreement ended\");\n\n        // execute griefing\n        cost = Griefing._grief(from, _data.staker, punishment, message);\n    }","contract":"OneWayGriefing","time":0},{"type":"external-function ","before":"function create(bytes memory callData) public returns (address instance) {\n        // deploy instance\n        instance = Factory._create(callData);\n    }","after":"function create(bytes calldata callData) public returns (address instance) {\n        // deploy instance\n        instance = Factory._create(callData);\n    }","contract":"OneWayGriefing_Factory","time":0},{"type":"external-function ","before":"function createEncoded(bytes memory initdata) public returns (address instance) {\n        // decode initdata\n        (\n        address token,\n        address operator,\n        address staker,\n        address counterparty,\n        uint256 ratio,\n        Griefing.RatioType ratioType, // uint8\n        uint256 countdownLength,\n        bytes memory staticMetadata\n        ) = abi.decode(initdata, (address, address, address, address, uint256, Griefing.RatioType, uint256, bytes));\n\n        // call explicit create\n        instance = createExplicit(token, operator, staker, counterparty, ratio, ratioType, countdownLength, staticMetadata);\n    }","after":"function createEncoded(bytes calldata initdata) public returns (address instance) {\n        // decode initdata\n        (\n        address token,\n        address operator,\n        address staker,\n        address counterparty,\n        uint256 ratio,\n        Griefing.RatioType ratioType, // uint8\n        uint256 countdownLength,\n        bytes memory staticMetadata\n        ) = abi.decode(initdata, (address, address, address, address, uint256, Griefing.RatioType, uint256, bytes));\n\n        // call explicit create\n        instance = createExplicit(token, operator, staker, counterparty, ratio, ratioType, countdownLength, staticMetadata);\n    }","contract":"OneWayGriefing_Factory","time":0}]}