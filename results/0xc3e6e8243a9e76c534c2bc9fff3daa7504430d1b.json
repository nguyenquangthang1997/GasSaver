{"time":195,"results":[{"type":"external-function ","before":"function initialize(\n\n        address _factory,\n\n        bool _privatePool,\n\n        address _manager,\n\n        string memory _managerName,\n\n        string memory _fundName,\n\n        IAddressResolver _addressResolver,\n\n        bytes32[] memory _supportedAssets\n\n    ) public initializer {\n\n        ERC20UpgradeSafe.__ERC20_init(_fundName, \"DHPT\");\n\n        Managed.initialize(_manager, _managerName);\n\n\n        factory = _factory;\n\n        _setPoolPrivacy(_privatePool);\n\n        creator = msg.sender;\n\n        creationTime = block.timestamp;\n\n        addressResolver = _addressResolver;\n\n\n        _addToSupportedAssets(_SUSD_KEY);\n\n\n        for (uint8 i = 0; i < _supportedAssets.length; i++) {\n\n            _addToSupportedAssets(_supportedAssets[i]);\n\n        }\n\n\n        // Set persistent assets\n\n        persistentAsset[_SUSD_KEY] = true;\n\n\n        tokenPriceAtLastFeeMint = 10 ** 18;\n\n    }","after":"function initialize(\n\n        address _factory,\n\n        bool _privatePool,\n\n        address _manager,\n\n        string calldata _managerName,\n\n        string calldata _fundName,\n\n        IAddressResolver _addressResolver,\n\n        bytes32[] calldata _supportedAssets\n\n    ) public initializer {\n\n        ERC20UpgradeSafe.__ERC20_init(_fundName, \"DHPT\");\n\n        Managed.initialize(_manager, _managerName);\n\n\n        factory = _factory;\n\n        _setPoolPrivacy(_privatePool);\n\n        creator = msg.sender;\n\n        creationTime = block.timestamp;\n\n        addressResolver = _addressResolver;\n\n\n        _addToSupportedAssets(_SUSD_KEY);\n\n\n        for (uint8 i = 0; i < _supportedAssets.length; i++) {\n\n            _addToSupportedAssets(_supportedAssets[i]);\n\n        }\n\n\n        // Set persistent assets\n\n        persistentAsset[_SUSD_KEY] = true;\n\n\n        tokenPriceAtLastFeeMint = 10 ** 18;\n\n    }","contract":"DHedge","time":0},{"type":"external-function ","before":"function changeManager(address newManager, string memory newManagerName)\n\n    public\n\n    onlyManager\n\n    {\n\n        _manager = newManager;\n\n        _managerName = newManagerName;\n\n        emit ManagerUpdated(newManager, newManagerName);\n\n    }","after":"function changeManager(address newManager, string calldata newManagerName)\n\n    public\n\n    onlyManager\n\n    {\n\n        _manager = newManager;\n\n        _managerName = newManagerName;\n\n        emit ManagerUpdated(newManager, newManagerName);\n\n    }","contract":"DHedge","time":0},{"type":"external-function ","before":"function addMembers(address[] memory members) public onlyManager {\n\n        for (uint256 i = 0; i < members.length; i++) {\n\n            if (isMemberAllowed(members[i]))\n\n                continue;\n\n\n            _addMember(members[i]);\n\n        }\n\n    }","after":"function addMembers(address[] calldata members) public onlyManager {\n\n        for (uint256 i = 0; i < members.length; i++) {\n\n            if (isMemberAllowed(members[i]))\n\n                continue;\n\n\n            _addMember(members[i]);\n\n        }\n\n    }","contract":"DHedge","time":0},{"type":"external-function ","before":"function removeMembers(address[] memory members) public onlyManager {\n\n        for (uint256 i = 0; i < members.length; i++) {\n\n            if (!isMemberAllowed(members[i]))\n\n                continue;\n\n\n            _removeMember(members[i]);\n\n        }\n\n    }","after":"function removeMembers(address[] calldata members) public onlyManager {\n\n        for (uint256 i = 0; i < members.length; i++) {\n\n            if (!isMemberAllowed(members[i]))\n\n                continue;\n\n\n            _removeMember(members[i]);\n\n        }\n\n    }","contract":"DHedge","time":0}]}