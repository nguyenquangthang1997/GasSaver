{"time":232,"results":[{"type":"state-data-arrangement ","before":"\n�                       \n  \n              ██ \n�   ██             �\n              █\n�         \n       �\nImageDataBlock {\n    // Provide a renderable SV\ning at the given slot\n    function getData(uint256 slot) external \nreturns (bytes memory);\n\n    // Provide a human \ntring memory);\n}\n\n// ERC20 used for th\nt) external view returns (ui\n);\n}\n\ncontract Blockhe\ns ERC721Tradable, ERC2\nntractWideRoyalties {\n\nvent BlockheadReconfig\nuint256 tokenId);\n\n    // ","after":"�                       \n  \n              ██ \n�   ██             �\n              █\nImageDataBlock {\n    // Provide a renderable SV\ning at the given slot\n    function getData(uint256 slot) external \nreturns (bytes memory);\n\n    // Provide a human \ntring memory);\n}\n\n// ERC20 used for th\nt) external view returns (ui\n);\n}\n\ncontract Blockhe\ns ERC721Tradable, ERC2\nntractWideRoyalties {\n\nvent BlockheadReconfig\nuint256 tokenId);\n\n    // \n�         \n       �\n","contract":"Blockheads","time":0},{"type":"external-function ","before":"   overrides[token1].background = newBG1;\n            overrides[token2].background = newBG2;\n            overrides[token1].backgroundOverridden = true;\n            overrides[token2].backgroundOverridden = true;\n        }\n        if (body) {\n            uint32 newBody1 = bodyIndex(token2);\n            uint32 newBody2 = bodyIndex(token1);\n            overrides[token1].bod","after":"   overrides[token1].background = newBG1;\n            overrides[token2].background = newBG2;\n            overrides[token1].backgroundOverridden = true;\n            overrides[token2].backgroundOverridden = true;\n        }\n        if (body) {\n            uint32 newBody1 = bodyIndex(token2);\n            uint32 newBody2 = bodyIndex(token1);\n            overrides[token1].bod","contract":"Blockheads","time":0},{"type":"external-function ","before":"erface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selec","after":"erface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string calldata);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selec","contract":"Blockheads","time":0},{"type":"immutable-restrict-modification ","before":"implement ERC165 shou","after":"implement ERC165 shou","contract":"Blockheads","time":1},{"type":"immutable-restrict-modification ","before":"act and override {suppo","after":"act and override {suppo","contract":"Blockheads","time":1}]}