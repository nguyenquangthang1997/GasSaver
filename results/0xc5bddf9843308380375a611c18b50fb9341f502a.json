{"time":99,"results":[{"type":"state-data-arrangement ","before":"\nstring public constant name = \"veCRV-DAO yVault\";\nstring public constant symbol = \"yveCRV-DAO\";\nuint8 public constant decimals = 18;\nuint public totalSupply = 0;\nmapping(address => address) public delegates;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;\nmapping(address => mapping(address => uint)) internal allowances;\nmapping(address => uint) internal balances;\nbytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint chainId,address verifyingContract)\");\nbytes32 public immutable DOMAINSEPARATOR;\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint nonce,uint expiry)\");\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint value,uint nonce,uint deadline)\");\nmapping(address => uint) public nonces;\naddress public governance;\naddress public pendingGovernance;\nIERC20 public constant CRV = IERC20(0xD533a949740bb3306d119CC777fa900bA034cd52);\naddress public constant LOCK = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\naddress public proxy = address(0x7A1848e7847F3f5FfB4d8e63BdB9569db535A4f0);\naddress public feeDistribution;\nIERC20 public constant rewards = IERC20(0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490);\nuint public index = 0;\nuint public bal = 0;\nmapping(address => uint) public supplyIndex;\nmapping(address => uint) public claimable;","after":"string public constant name = \"veCRV-DAO yVault\";\nstring public constant symbol = \"yveCRV-DAO\";\nuint public totalSupply = 0;\nmapping(address => address) public delegates;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;\nmapping(address => mapping(address => uint)) internal allowances;\nmapping(address => uint) internal balances;\nbytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint chainId,address verifyingContract)\");\nbytes32 public immutable DOMAINSEPARATOR;\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint nonce,uint expiry)\");\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint value,uint nonce,uint deadline)\");\nmapping(address => uint) public nonces;\nIERC20 public constant CRV = IERC20(0xD533a949740bb3306d119CC777fa900bA034cd52);\nIERC20 public constant rewards = IERC20(0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490);\nuint public index = 0;\nuint public bal = 0;\nmapping(address => uint) public supplyIndex;\nmapping(address => uint) public claimable;\naddress public governance;\naddress public pendingGovernance;\naddress public constant LOCK = address(0xF147b8125d2ef93FB6965Db97D6746952a133934);\naddress public proxy = address(0x7A1848e7847F3f5FfB4d8e63BdB9569db535A4f0);\naddress public feeDistribution;\nuint8 public constant decimals = 18;\n","contract":"veCurveVault","time":1}]}