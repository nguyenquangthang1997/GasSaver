{"time":365,"results":[{"type":"state-data-arrangement ","before":"\naddress private immutable _YLD;\nuint256 private _requiredAmount = 50 * 1e18;\nbool private _discountsActivated = true;\nmapping(address => uint256) private _balanceOf;\nmapping(address => uint256) private _unlockTimeOf;","after":"uint256 private _requiredAmount = 50 * 1e18;\nmapping(address => uint256) private _balanceOf;\nmapping(address => uint256) private _unlockTimeOf;\naddress private immutable _YLD;\nbool private _discountsActivated = true;\n","contract":"DiscountManager","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ERC20","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ERC20","time":0},{"type":"external-function ","before":"function __Loan_init(LoanDetails memory loanDetails) external override initializer\n    {\n        ReentrancyGuardUpgradeable.__ReentrancyGuard_init();\n\n        _loanDetails = loanDetails;\n\n        _loanMetadata.timestampStart = block.timestamp;\n    }","after":"function __Loan_init(LoanDetails calldata loanDetails) external override initializer\n    {\n        ReentrancyGuardUpgradeable.__ReentrancyGuard_init();\n\n        _loanDetails = loanDetails;\n\n        _loanMetadata.timestampStart = block.timestamp;\n    }","contract":"Loan","time":0},{"type":"external-function ","before":"function createLoan(ILoan.LoanDetails memory loanDetails) external override onlyLoaner returns (address)\n    {\n        Pausable._isNotPaused();\n\n        bytes memory initData = abi.encodeWithSelector(ILoan.__Loan_init.selector, loanDetails);\n\n        address loan = ProxyFactory._deployMinimal(VersionManager._loanImplementation(), initData);\n\n        require(IRewardManager(VersionManager._rewardMgr()).trackLoan(loan, loanDetails.borrower, loanDetails.lendingToken, loanDetails.principal, loanDetails.interest, loanDetails.duration), \"Track err\");\n\n        _loans.push(loan);\n        _loansOf[loanDetails.lender].push(loan);\n        _loansOf[loanDetails.borrower].push(loan);\n\n        IDiscountManager(VersionManager._discountMgr()).updateUnlockTime(loanDetails.lender, loanDetails.borrower, loanDetails.duration);\n\n        emit NewLoan(loanDetails.lender, loanDetails.borrower, loan);\n\n        return loan;\n    }","after":"function createLoan(ILoan.LoanDetails calldata loanDetails) external override onlyLoaner returns (address)\n    {\n        Pausable._isNotPaused();\n\n        bytes memory initData = abi.encodeWithSelector(ILoan.__Loan_init.selector, loanDetails);\n\n        address loan = ProxyFactory._deployMinimal(VersionManager._loanImplementation(), initData);\n\n        require(IRewardManager(VersionManager._rewardMgr()).trackLoan(loan, loanDetails.borrower, loanDetails.lendingToken, loanDetails.principal, loanDetails.interest, loanDetails.duration), \"Track err\");\n\n        _loans.push(loan);\n        _loansOf[loanDetails.lender].push(loan);\n        _loansOf[loanDetails.borrower].push(loan);\n\n        IDiscountManager(VersionManager._discountMgr()).updateUnlockTime(loanDetails.lender, loanDetails.borrower, loanDetails.duration);\n\n        emit NewLoan(loanDetails.lender, loanDetails.borrower, loan);\n\n        return loan;\n    }","contract":"LoanFactory","time":0}]}