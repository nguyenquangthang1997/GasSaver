{"time":512,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0},{"type":"state-data-arrangement ","before":"\nCounters.Counter private _tokenIds;\nstring private ipfsUri = \"https://ipfs.io/ipfs/\";\nuint256 public constant MAX_SUPPLY = 15000;\nbool public open = false;\nstring public constant provenanceHash = \"864c593d34087d67879f06fed08808afff24d34308bb61ec42780d90b4d732bf\";\nstring[5] public roundHash;\nstring public provenanceURI = \"\";\nbool public locked = false;","after":"Counters.Counter private _tokenIds;\nstring private ipfsUri = \"https://ipfs.io/ipfs/\";\nuint256 public constant MAX_SUPPLY = 15000;\nstring public constant provenanceHash = \"864c593d34087d67879f06fed08808afff24d34308bb61ec42780d90b4d732bf\";\nstring[5] public roundHash;\nstring public provenanceURI = \"\";\nbool public open = false;\nbool public locked = false;\n","contract":"Ethermore","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI)\n    external onlyOwner notLocked\n    {\n        _setBaseURI(newBaseURI);\n    }","after":"function setBaseURI(string calldata newBaseURI)\n    external onlyOwner notLocked\n    {\n        _setBaseURI(newBaseURI);\n    }","contract":"Ethermore","time":0},{"type":"external-function ","before":"function setIpfsURI(string memory _ipfsUri)\n    external onlyOwner notLocked\n    {\n        ipfsUri = _ipfsUri;\n    }","after":"function setIpfsURI(string calldata _ipfsUri)\n    external onlyOwner notLocked\n    {\n        ipfsUri = _ipfsUri;\n    }","contract":"Ethermore","time":0},{"type":"external-function ","before":"function setRoundHash(uint256 _round, string memory _roundHash)\n    external onlyOwner notLocked\n    {\n        roundHash[_round] = _roundHash;\n    }","after":"function setRoundHash(uint256 _round, string calldata _roundHash)\n    external onlyOwner notLocked\n    {\n        roundHash[_round] = _roundHash;\n    }","contract":"Ethermore","time":0},{"type":"external-function ","before":"function setProvenanceURI(string memory _provenanceURI)\n    external onlyOwner notLocked\n    {\n        provenanceURI = _provenanceURI;\n    }","after":"function setProvenanceURI(string calldata _provenanceURI)\n    external onlyOwner notLocked\n    {\n        provenanceURI = _provenanceURI;\n    }","contract":"Ethermore","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Ethermore","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Ethermore","time":0}]}