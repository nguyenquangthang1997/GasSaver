{"time":238,"results":[{"type":"state-data-arrangement ","before":"\nIERC20 private constant WBTC = IERC20(0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599);\nIWETH private constant WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\nIERC20 private constant USDT = IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\nIERC20 private constant USDC = IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\nIERC20 private constant DAI = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\nIRouter private constant router = IRouter(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F);\nICitadelVault public vault;\nICurvePairs private constant cPairs = ICurvePairs(0x4CA9b3063Ec5866A4B82E437059D2C43d1be596F);\nIERC20 private constant clpToken = IERC20(0xb19059ebb43466C323583928285a49f558E572Fd);\nIERC20 private constant CRV = IERC20(0xD533a949740bb3306d119CC777fa900bA034cd52);\nIGauge private constant gaugeC = IGauge(0x4c18E409Dc8619bFb6a1cB56D114C3f592E0aE79);\nIMintr private constant mintr = IMintr(0xd061D61a4d941c39E5453435B6345Dc261C2fcE0);\nISLPToken private constant slpWBTC = ISLPToken(0xCEfF51756c56CeFFCA006cD410B03FFC46dd3a58);\nISLPToken private constant slpDAI = ISLPToken(0xC3D03e4F041Fd4cD388c549Ee2A29a9E5075882f);\nIERC20 private constant PICKLE = IERC20(0x429881672B9AE42b8EbA0E26cD9C73711b891Ca5);\nIPickleJar private constant pickleJarWBTC = IPickleJar(0xde74b6c547bd574c3527316a2eE30cd8F6041525);\nIPickleJar private constant pickleJarDAI = IPickleJar(0x55282dA27a3a02ffe599f6D11314D239dAC89135);\nIGauge private constant gaugeP_WBTC = IGauge(0xD55331E7bCE14709d825557E5Bca75C73ad89bFb);\nIGauge private constant gaugeP_DAI = IGauge(0x6092c7084821057060ce2030F9CC11B22605955F);\nIERC20 private constant DPI = IERC20(0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b);\nISLPToken private constant slpDPI = ISLPToken(0x34b13F8CD184F55d0Bd4Dd1fe6C07D46f245c7eD);\nIERC20 private constant SUSHI = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\nIMasterChef private constant masterChef = IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\nuint256 private _HBTCWBTCLPTokenPrice;\nuint256 private _WBTCETHLPTokenPrice;\nuint256 private _DPIETHLPTokenPrice;\nuint256 private _DAIETHLPTokenPrice;\nuint256 private _poolHBTCWBTC;\nuint256 private _poolWBTCETH;\nuint256 private _poolDPIETH;\nuint256 private _poolDAIETH;\nuint256 private _pool;\nuint256 private constant DENOMINATOR = 10000;\nbool public isVesting;\nuint256 public yieldFeePerc = 1000;\naddress public admin;\naddress public communityWallet;\naddress public strategist;","after":"IERC20 private constant WBTC = IERC20(0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599);\nIWETH private constant WETH = IWETH(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2);\nIERC20 private constant USDT = IERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\nIERC20 private constant USDC = IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);\nIERC20 private constant DAI = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);\nIRouter private constant router = IRouter(0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F);\nICitadelVault public vault;\nICurvePairs private constant cPairs = ICurvePairs(0x4CA9b3063Ec5866A4B82E437059D2C43d1be596F);\nIERC20 private constant clpToken = IERC20(0xb19059ebb43466C323583928285a49f558E572Fd);\nIERC20 private constant CRV = IERC20(0xD533a949740bb3306d119CC777fa900bA034cd52);\nIGauge private constant gaugeC = IGauge(0x4c18E409Dc8619bFb6a1cB56D114C3f592E0aE79);\nIMintr private constant mintr = IMintr(0xd061D61a4d941c39E5453435B6345Dc261C2fcE0);\nISLPToken private constant slpWBTC = ISLPToken(0xCEfF51756c56CeFFCA006cD410B03FFC46dd3a58);\nISLPToken private constant slpDAI = ISLPToken(0xC3D03e4F041Fd4cD388c549Ee2A29a9E5075882f);\nIERC20 private constant PICKLE = IERC20(0x429881672B9AE42b8EbA0E26cD9C73711b891Ca5);\nIPickleJar private constant pickleJarWBTC = IPickleJar(0xde74b6c547bd574c3527316a2eE30cd8F6041525);\nIPickleJar private constant pickleJarDAI = IPickleJar(0x55282dA27a3a02ffe599f6D11314D239dAC89135);\nIGauge private constant gaugeP_WBTC = IGauge(0xD55331E7bCE14709d825557E5Bca75C73ad89bFb);\nIGauge private constant gaugeP_DAI = IGauge(0x6092c7084821057060ce2030F9CC11B22605955F);\nIERC20 private constant DPI = IERC20(0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b);\nISLPToken private constant slpDPI = ISLPToken(0x34b13F8CD184F55d0Bd4Dd1fe6C07D46f245c7eD);\nIERC20 private constant SUSHI = IERC20(0x6B3595068778DD592e39A122f4f5a5cF09C90fE2);\nIMasterChef private constant masterChef = IMasterChef(0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd);\nuint256 private _HBTCWBTCLPTokenPrice;\nuint256 private _WBTCETHLPTokenPrice;\nuint256 private _DPIETHLPTokenPrice;\nuint256 private _DAIETHLPTokenPrice;\nuint256 private _poolHBTCWBTC;\nuint256 private _poolWBTCETH;\nuint256 private _poolDPIETH;\nuint256 private _poolDAIETH;\nuint256 private _pool;\nuint256 private constant DENOMINATOR = 10000;\nuint256 public yieldFeePerc = 1000;\naddress public admin;\naddress public communityWallet;\naddress public strategist;\nbool public isVesting;\n","contract":"CitadelStrategy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public yieldFeePerc = 1000;","after":"uint256 public constant yieldFeePerc = 1000;","contract":"CitadelStrategy","time":1},{"type":"immutable-restrict-modification ","before":"address public communityWallet;","after":"address public immutable communityWallet;","contract":"CitadelStrategy","time":1}]}