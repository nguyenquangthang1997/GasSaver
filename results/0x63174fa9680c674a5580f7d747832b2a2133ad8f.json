{"time":261,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function createChargedParticle(\n        address creator,\n        address receiver,\n        address referrer,\n        string memory tokenMetaUri,\n        string memory walletManagerId,\n        address assetToken,\n        uint256 assetAmount,\n        uint256 annuityPercent\n    )\n    external\n    virtual\n    override\n    nonReentrant\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createChargedParticle(\n            creator,\n            receiver,\n            referrer,\n            tokenMetaUri,\n            walletManagerId,\n            assetToken,\n            assetAmount,\n            annuityPercent\n        );\n    }","after":"function createChargedParticle(\n        address creator,\n        address receiver,\n        address referrer,\n        string calldata tokenMetaUri,\n        string calldata walletManagerId,\n        address assetToken,\n        uint256 assetAmount,\n        uint256 annuityPercent\n    )\n    external\n    virtual\n    override\n    nonReentrant\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createChargedParticle(\n            creator,\n            receiver,\n            referrer,\n            tokenMetaUri,\n            walletManagerId,\n            assetToken,\n            assetAmount,\n            annuityPercent\n        );\n    }","contract":"Proton","time":0},{"type":"external-function ","before":"function createBasicProton(\n        address creator,\n        address receiver,\n        string memory tokenMetaUri\n    )\n    external\n    virtual\n    override\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createProton(\n            creator,\n            receiver,\n            tokenMetaUri,\n            0, // annuityPercent,\n            0, // royaltiesPercent\n            0  // salePrice\n        );\n    }","after":"function createBasicProton(\n        address creator,\n        address receiver,\n        string calldata tokenMetaUri\n    )\n    external\n    virtual\n    override\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createProton(\n            creator,\n            receiver,\n            tokenMetaUri,\n            0, // annuityPercent,\n            0, // royaltiesPercent\n            0  // salePrice\n        );\n    }","contract":"Proton","time":0},{"type":"external-function ","before":"function createProton(\n        address creator,\n        address receiver,\n        string memory tokenMetaUri,\n        uint256 annuityPercent\n    )\n    external\n    virtual\n    override\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createProton(\n            creator,\n            receiver,\n            tokenMetaUri,\n            annuityPercent,\n            0, // royaltiesPercent\n            0  // salePrice\n        );\n    }","after":"function createProton(\n        address creator,\n        address receiver,\n        string calldata tokenMetaUri,\n        uint256 annuityPercent\n    )\n    external\n    virtual\n    override\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createProton(\n            creator,\n            receiver,\n            tokenMetaUri,\n            annuityPercent,\n            0, // royaltiesPercent\n            0  // salePrice\n        );\n    }","contract":"Proton","time":0},{"type":"external-function ","before":"function createProtonForSale(\n        address creator,\n        address receiver,\n        string memory tokenMetaUri,\n        uint256 annuityPercent,\n        uint256 royaltiesPercent,\n        uint256 salePrice\n    )\n    external\n    virtual\n    override\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createProton(\n            creator,\n            receiver,\n            tokenMetaUri,\n            annuityPercent,\n            royaltiesPercent,\n            salePrice\n        );\n    }","after":"function createProtonForSale(\n        address creator,\n        address receiver,\n        string calldata tokenMetaUri,\n        uint256 annuityPercent,\n        uint256 royaltiesPercent,\n        uint256 salePrice\n    )\n    external\n    virtual\n    override\n    whenNotPaused\n    returns (uint256 newTokenId)\n    {\n        newTokenId = _createProton(\n            creator,\n            receiver,\n            tokenMetaUri,\n            annuityPercent,\n            royaltiesPercent,\n            salePrice\n        );\n    }","contract":"Proton","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Proton","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Proton","time":1}]}