{"time":262,"results":[{"type":"immutable-restrict-modification ","before":"uint256 public divisor;","after":"uint256 public immutable divisor;","contract":"ETHVaultHandler","time":0},{"type":"state-data-arrangement ","before":"\nCounters.Counter public counter;\nTCAP public immutable TCAPToken;\nChainlinkOracle public immutable tcapOracle;\nIERC20 public immutable collateralContract;\nChainlinkOracle public immutable collateralPriceOracle;\nChainlinkOracle public immutable ETHPriceOracle;\nuint256 public divisor;\nuint256 public ratio;\nuint256 public burnFee;\nuint256 public liquidationPenalty;\nIRewardHandler public immutable rewardHandler;\naddress public treasury;\nmapping(address => uint256) public userToVault;\nmapping(uint256 => Vault) public vaults;\nuint256 public constant oracleDigits = 10000000000;\nuint256 public constant MIN_RATIO = 150;\nuint256 public constant MAX_FEE = 10;\nbytes4 private constant _INTERFACE_ID_IVAULT = 0x9e75ab0c;\nbytes4 private constant _INTERFACE_ID_TIMELOCK = 0x6b5cc770;\nbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;","after":"Counters.Counter public counter;\nTCAP public immutable TCAPToken;\nChainlinkOracle public immutable tcapOracle;\nIERC20 public immutable collateralContract;\nChainlinkOracle public immutable collateralPriceOracle;\nChainlinkOracle public immutable ETHPriceOracle;\nuint256 public divisor;\nuint256 public ratio;\nuint256 public burnFee;\nuint256 public liquidationPenalty;\nIRewardHandler public immutable rewardHandler;\nmapping(address => uint256) public userToVault;\nmapping(uint256 => Vault) public vaults;\nuint256 public constant oracleDigits = 10000000000;\nuint256 public constant MIN_RATIO = 150;\nuint256 public constant MAX_FEE = 10;\naddress public treasury;\nbytes4 private constant _INTERFACE_ID_IVAULT = 0x9e75ab0c;\nbytes4 private constant _INTERFACE_ID_TIMELOCK = 0x6b5cc770;\nbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n","contract":"IVaultHandler","time":0},{"type":"external-function ","before":"function executeTransaction(\n        address target,\n        uint256 value,\n        string memory signature,\n        bytes memory data\n    ) external payable onlyOwner returns (bytes memory) {\n        bytes memory callData;\n        if (bytes(signature).length == 0) {\n            callData = data;\n        } else {\n            callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\n        }\n\n        require(\n            target != address(0),\n            \"Orchestrator::executeTransaction: target can't be zero\"\n        );\n\n        // solium-disable-next-line security/no-call-value\n        (bool success, bytes memory returnData) =\n        target.call{value : value}(callData);\n        require(\n            success,\n            \"Orchestrator::executeTransaction: Transaction execution reverted.\"\n        );\n\n        emit TransactionExecuted(target, value, signature, data);\n        (target, value, signature, data);\n\n        return returnData;\n    }","after":"function executeTransaction(\n        address target,\n        uint256 value,\n        string calldata signature,\n        bytes calldata data\n    ) external payable onlyOwner returns (bytes memory) {\n        bytes memory callData;\n        if (bytes(signature).length == 0) {\n            callData = data;\n        } else {\n            callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\n        }\n\n        require(\n            target != address(0),\n            \"Orchestrator::executeTransaction: target can't be zero\"\n        );\n\n        // solium-disable-next-line security/no-call-value\n        (bool success, bytes memory returnData) =\n        target.call{value : value}(callData);\n        require(\n            success,\n            \"Orchestrator::executeTransaction: Transaction execution reverted.\"\n        );\n\n        emit TransactionExecuted(target, value, signature, data);\n        (target, value, signature, data);\n\n        return returnData;\n    }","contract":"Orchestrator","time":0},{"type":"state-data-arrangement ","before":"\nbool public capEnabled = false;\nuint256 public cap;\nmapping(address => bool) public vaultHandlers;\nbytes4 private constant _INTERFACE_ID_TCAP = 0xbd115939;\nbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;","after":"uint256 public cap;\nmapping(address => bool) public vaultHandlers;\nbytes4 private constant _INTERFACE_ID_TCAP = 0xbd115939;\nbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\nbool public capEnabled = false;\n","contract":"TCAP","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"TCAP","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"TCAP","time":1}]}