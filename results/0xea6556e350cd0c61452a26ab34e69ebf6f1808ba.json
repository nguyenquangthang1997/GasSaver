{"time":88,"results":[{"type":"external-function ","before":"function vote(\n        uint voterId,\n        uint tournamentId,\n        uint[] memory choices,\n        uint[] memory weights,\n        bytes32 hash,\n        uint updateRoundId\n    ) public {\n        uint roundId = getCurrentRoundId(tournamentId);\n        Round storage currentRound = tournaments[tournamentId].rounds[roundId];\n\n        voteCheck(voterId, tournamentId, roundId);\n        require(choices.length == weights.length, 'Mismatched choices and lengths');\n\n        updateAccount(voterId, tournamentId, updateRoundId);\n\n        identities[voterId].lastRoundVoted[tournamentId] = roundId;\n\n        Vote storage currentVote = currentRound.votes[voterId];\n        currentVote.metadataHash = hash;\n        uint balance = getVoiceCredits(tournamentId, voterId);\n        uint sum = 0;\n\n        for (uint i = 0; i < weights.length; i++) {\n            currentVote.weights[choices[i]] = weights[i];\n            currentRound.voteTotals[choices[i]] = currentRound.voteTotals[choices[i]].plus(weights[i]);\n            sum = sum.plus(weights[i].times(weights[i]));\n        }\n        require(sum <= balance, 'Must not spend more than your balance');\n\n        emit VoteOccurred(tournamentId, roundId, voterId, choices, weights, hash);\n    }","after":"function vote(\n        uint voterId,\n        uint tournamentId,\n        uint[] calldata choices,\n        uint[] calldata weights,\n        bytes32 hash,\n        uint updateRoundId\n    ) public {\n        uint roundId = getCurrentRoundId(tournamentId);\n        Round storage currentRound = tournaments[tournamentId].rounds[roundId];\n\n        voteCheck(voterId, tournamentId, roundId);\n        require(choices.length == weights.length, 'Mismatched choices and lengths');\n\n        updateAccount(voterId, tournamentId, updateRoundId);\n\n        identities[voterId].lastRoundVoted[tournamentId] = roundId;\n\n        Vote storage currentVote = currentRound.votes[voterId];\n        currentVote.metadataHash = hash;\n        uint balance = getVoiceCredits(tournamentId, voterId);\n        uint sum = 0;\n\n        for (uint i = 0; i < weights.length; i++) {\n            currentVote.weights[choices[i]] = weights[i];\n            currentRound.voteTotals[choices[i]] = currentRound.voteTotals[choices[i]].plus(weights[i]);\n            sum = sum.plus(weights[i].times(weights[i]));\n        }\n        require(sum <= balance, 'Must not spend more than your balance');\n\n        emit VoteOccurred(tournamentId, roundId, voterId, choices, weights, hash);\n    }","contract":"Trollbox","time":0}]}