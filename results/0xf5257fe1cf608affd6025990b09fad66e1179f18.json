{"time":243,"results":[{"type":"struct-data-arrangement ","before":"\naddress component\naddress module\nint256 unit\nuint8 positionState\nbytes data","after":"int256 unit\nbytes data\naddress component\naddress module\nuint8 positionState\n","contract":"ISetToken","time":0},{"type":"state-data-arrangement ","before":"\nuint256 private constant TARGET_RAISE_DIVISOR = 1.0025e18;\nuint256 private constant BALANCER_POOL_LIMIT = 3;\nstring private constant UNISWAP_OUT = \"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)\";\nstring private constant UNISWAP_IN = \"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\";\nstring private constant BALANCER_OUT = \"smartSwapExactOut(address,address,uint256,uint256,uint256)\";\nstring private constant BALANCER_IN = \"smartSwapExactIn(address,address,uint256,uint256,uint256)\";\nmapping(address => AssetTradeInfo) public assetInfo;\naddress[] public rebalanceComponents;\nuint256 public positionMultiplier;\nmapping(address => bool) public tradeAllowList;\nbool public anyoneTrade;\nISetToken public index;\nIWETH public weth;\naddress public uniswapRouter;\naddress public sushiswapRouter;\naddress public balancerProxy;","after":"uint256 private constant TARGET_RAISE_DIVISOR = 1.0025e18;\nuint256 private constant BALANCER_POOL_LIMIT = 3;\nstring private constant UNISWAP_OUT = \"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)\";\nstring private constant UNISWAP_IN = \"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\";\nstring private constant BALANCER_OUT = \"smartSwapExactOut(address,address,uint256,uint256,uint256)\";\nstring private constant BALANCER_IN = \"smartSwapExactIn(address,address,uint256,uint256,uint256)\";\nmapping(address => AssetTradeInfo) public assetInfo;\naddress[] public rebalanceComponents;\nuint256 public positionMultiplier;\nmapping(address => bool) public tradeAllowList;\nISetToken public index;\nIWETH public weth;\naddress public uniswapRouter;\naddress public sushiswapRouter;\naddress public balancerProxy;\nbool public anyoneTrade;\n","contract":"SingleIndexModule","time":0},{"type":"immutable-restrict-modification ","before":"address public uniswapRouter;","after":"address public immutable uniswapRouter;","contract":"SingleIndexModule","time":1},{"type":"immutable-restrict-modification ","before":"address public sushiswapRouter;","after":"address public immutable sushiswapRouter;","contract":"SingleIndexModule","time":1},{"type":"immutable-restrict-modification ","before":"address public balancerProxy;","after":"address public immutable balancerProxy;","contract":"SingleIndexModule","time":1}]}