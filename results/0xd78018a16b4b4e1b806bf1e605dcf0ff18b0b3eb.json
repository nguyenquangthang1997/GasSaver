{"time":210,"results":[{"type":"struct-data-arrangement ","before":"\naddress component\naddress module\nint256 unit\nuint8 positionState\nbytes data","after":"int256 unit\nbytes data\naddress component\naddress module\nuint8 positionState\n","contract":"ISetToken","time":0},{"type":"external-function ","before":"function trade(\n\n        ISetToken _setToken,\n\n        string memory _exchangeName,\n\n        address _sendToken,\n\n        uint256 _sendQuantity,\n\n        address _receiveToken,\n\n        uint256 _minReceiveQuantity,\n\n        bytes memory _data\n\n    )\n\n    external\n\n    nonReentrant\n\n    onlyManagerAndValidSet(_setToken)\n\n    {\n\n        TradeInfo memory tradeInfo = _createTradeInfo(\n\n            _setToken,\n\n            _exchangeName,\n\n            _sendToken,\n\n            _receiveToken,\n\n            _sendQuantity,\n\n            _minReceiveQuantity\n\n        );\n\n\n        _validatePreTradeData(tradeInfo, _sendQuantity);\n\n\n        _executeTrade(tradeInfo, _data);\n\n\n        uint256 exchangedQuantity = _validatePostTrade(tradeInfo);\n\n\n        uint256 protocolFee = _accrueProtocolFee(tradeInfo, exchangedQuantity);\n\n\n        (\n\n        uint256 netSendAmount,\n\n        uint256 netReceiveAmount\n\n        ) = _updateSetTokenPositions(tradeInfo);\n\n\n        emit ComponentExchanged(\n\n            _setToken,\n\n            _sendToken,\n\n            _receiveToken,\n\n            tradeInfo.exchangeAdapter,\n\n            netSendAmount,\n\n            netReceiveAmount,\n\n            protocolFee\n\n        );\n\n    }","after":"function trade(\n\n        ISetToken _setToken,\n\n        string calldata _exchangeName,\n\n        address _sendToken,\n\n        uint256 _sendQuantity,\n\n        address _receiveToken,\n\n        uint256 _minReceiveQuantity,\n\n        bytes calldata _data\n\n    )\n\n    external\n\n    nonReentrant\n\n    onlyManagerAndValidSet(_setToken)\n\n    {\n\n        TradeInfo memory tradeInfo = _createTradeInfo(\n\n            _setToken,\n\n            _exchangeName,\n\n            _sendToken,\n\n            _receiveToken,\n\n            _sendQuantity,\n\n            _minReceiveQuantity\n\n        );\n\n\n        _validatePreTradeData(tradeInfo, _sendQuantity);\n\n\n        _executeTrade(tradeInfo, _data);\n\n\n        uint256 exchangedQuantity = _validatePostTrade(tradeInfo);\n\n\n        uint256 protocolFee = _accrueProtocolFee(tradeInfo, exchangedQuantity);\n\n\n        (\n\n        uint256 netSendAmount,\n\n        uint256 netReceiveAmount\n\n        ) = _updateSetTokenPositions(tradeInfo);\n\n\n        emit ComponentExchanged(\n\n            _setToken,\n\n            _sendToken,\n\n            _receiveToken,\n\n            tradeInfo.exchangeAdapter,\n\n            netSendAmount,\n\n            netReceiveAmount,\n\n            protocolFee\n\n        );\n\n    }","contract":"TradeModule","time":0}]}