{"time":184,"results":[{"type":"state-data-arrangement ","before":"\n   Counters.Counter private _tokenI\n   MintStatus public _mintStatus = MintStatus.CLOS\n   bool public reveal = fal\n   string private tokenName = 'Smiless\n   string private tokenId = 'SML\n   string private _baseTokenURI =\n    'http://www.smilesss.com/api/metadata\n   address private withdraw_address = 0x10fD2b2E5a8E0fe05A018B2aE4BbEc4D725FF5\n   address private signer_address = 0xd31ADBC091A37cafE4c9Fd0426905E8256f1Aa\n   mapping(string => bool) private _isNonceUs\n   uint256 public constant TOT = 88\n   uint256 public constant GIVEAWAY = 5\n   uint256 public constant PUBLIC_II_MINT_LIMIT =\n   uint256 public constant PRICE = 0.1 eth\n   uint256 public currentToken\n   uint256 public giveawaySupply = GIVEAW\n   uint256 public mintableSupply = TOT - GIVEAW\n   mapping(address => bool) private _premintLi\n   mapping(address => uint256) private _premintClaim\n   mapping(address => uint256) private _premintAvailab\n   mapping(address => MintStatus) private _premintTi\n   uint256[6] public TIER_LIMIT = [0, 9, 4, 2, 1, ","after":"   Counters.Counter private _tokenI\n   MintStatus public _mintStatus = MintStatus.CLOS\n   string private tokenName = 'Smiless\n   string private tokenId = 'SML\n   string private _baseTokenURI =\n    'http://www.smilesss.com/api/metadata\n   mapping(string => bool) private _isNonceUs\n   uint256 public constant TOT = 88\n   uint256 public constant GIVEAWAY = 5\n   uint256 public constant PUBLIC_II_MINT_LIMIT =\n   uint256 public constant PRICE = 0.1 eth\n   uint256 public currentToken\n   uint256 public giveawaySupply = GIVEAW\n   uint256 public mintableSupply = TOT - GIVEAW\n   mapping(address => bool) private _premintLi\n   mapping(address => uint256) private _premintClaim\n   mapping(address => uint256) private _premintAvailab\n   mapping(address => MintStatus) private _premintTi\n   uint256[6] public TIER_LIMIT = [0, 9, 4, 2, 1, \n   address private withdraw_address = 0x10fD2b2E5a8E0fe05A018B2aE4BbEc4D725FF5\n   address private signer_address = 0xd31ADBC091A37cafE4c9Fd0426905E8256f1Aa\n   bool public reveal = fal\n","contract":"Smilesssvrs","time":0},{"type":"external-function ","before":"   function mint(\n        uint256 _amount,\n        string memory _nonce,\n        bytes memory _signature\n    )\n    external\n    payable\n    olnyIfAvailable(_amount)\n    onlySignedTx(_amount, _nonce, _signature)\n    nonReentrant\n    {\n        if (_mintStatus == MintStatus.PUBLIC_II) {\n            publicIIMint(_amount);\n        } else if (_mintStatus == MintStatus.PUBLIC_I) {\n            publicIMint(_amount);\n        } else {\n            premint(_amount);\n        }\n  ","after":"   function mint(\n        uint256 _amount,\n        string calldata _nonce,\n        bytes calldata _signature\n    )\n    external\n    payable\n    olnyIfAvailable(_amount)\n    onlySignedTx(_amount, _nonce, _signature)\n    nonReentrant\n    {\n        if (_mintStatus == MintStatus.PUBLIC_II) {\n            publicIIMint(_amount);\n        } else if (_mintStatus == MintStatus.PUBLIC_I) {\n            publicIMint(_amount);\n        } else {\n            premint(_amount);\n        }\n  ","contract":"Smilesssvrs","time":0},{"type":"external-function ","before":"   function setBaseURI(string memory _URI) public onlyOwner {\n        _baseTokenURI = _URI;\n  ","after":"   function setBaseURI(string calldata _URI) public onlyOwner {\n        _baseTokenURI = _URI;\n  ","contract":"Smilesssvrs","time":0},{"type":"constant-restrict-modification  ","before":"   string private tokenName = 'Smiless","after":"   string private constant tokenName = 'Smiless","contract":"Smilesssvrs","time":1},{"type":"constant-restrict-modification  ","before":"   string private tokenId = 'SML","after":"   string private constant tokenId = 'SML","contract":"Smilesssvrs","time":1},{"type":"immutable-restrict-modification ","before":"   string private _na","after":"   string private _na","contract":"Smilesssvrs","time":1},{"type":"immutable-restrict-modification ","before":"   string private _symb","after":"   string private _symb","contract":"Smilesssvrs","time":1}]}