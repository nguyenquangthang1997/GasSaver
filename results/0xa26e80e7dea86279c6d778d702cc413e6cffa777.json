{"time":736,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 internal constant ONLY_CALLABLE_BY_EXCHANGE_ERROR_SELECTOR =\n    0xb56d2df0;\nbytes4 internal constant EXCHANGE_MANAGER_ERROR_SELECTOR =\n    0xb9588e43;\nbytes4 internal constant INSUFFICIENT_BALANCE_ERROR_SELECTOR =\n    0x84c8b7c9;\nbytes4 internal constant ONLY_CALLABLE_BY_POOL_OPERATOR_ERROR_SELECTOR =\n    0x82ded785;\nbytes4 internal constant BLOCK_TIMESTAMP_TOO_LOW_ERROR_SELECTOR =\n    0xa6bcde47;\nbytes4 internal constant ONLY_CALLABLE_BY_STAKING_CONTRACT_ERROR_SELECTOR =\n    0xca1d07a2;\nbytes internal constant ONLY_CALLABLE_IF_IN_CATASTROPHIC_FAILURE_ERROR =\n    hex\"3ef081cc\";\nbytes internal constant ONLY_CALLABLE_IF_NOT_IN_CATASTROPHIC_FAILURE_ERROR =\n    hex\"7dd020ce\";\nbytes4 internal constant OPERATOR_SHARE_ERROR_SELECTOR =\n    0x22df9597;\nbytes4 internal constant POOL_EXISTENCE_ERROR_SELECTOR =\n    0x9ae94f01;\nbytes internal constant PROXY_DESTINATION_CANNOT_BE_NIL_ERROR =\n    hex\"6eff8285\";\nbytes4 internal constant INITIALIZATION_ERROR_SELECTOR =\n    0x0b02d773;\nbytes4 internal constant INVALID_PARAM_VALUE_ERROR_SELECTOR =\n    0xfc45bd11;\nbytes4 internal constant INVALID_PROTOCOL_FEE_PAYMENT_ERROR_SELECTOR =\n    0x31d7a505;\nbytes4 internal constant PREVIOUS_EPOCH_NOT_FINALIZED_ERROR_SELECTOR =\n    0x614b800a;\nbytes4 internal constant POOL_NOT_FINALIZED_ERROR_SELECTOR =\n    0x5caa0b05;","after":"bytes internal constant ONLY_CALLABLE_IF_IN_CATASTROPHIC_FAILURE_ERROR =\n    hex\"3ef081cc\";\nbytes internal constant ONLY_CALLABLE_IF_NOT_IN_CATASTROPHIC_FAILURE_ERROR =\n    hex\"7dd020ce\";\nbytes internal constant PROXY_DESTINATION_CANNOT_BE_NIL_ERROR =\n    hex\"6eff8285\";\nbytes4 internal constant ONLY_CALLABLE_BY_EXCHANGE_ERROR_SELECTOR =\n    0xb56d2df0;\nbytes4 internal constant EXCHANGE_MANAGER_ERROR_SELECTOR =\n    0xb9588e43;\nbytes4 internal constant INSUFFICIENT_BALANCE_ERROR_SELECTOR =\n    0x84c8b7c9;\nbytes4 internal constant ONLY_CALLABLE_BY_POOL_OPERATOR_ERROR_SELECTOR =\n    0x82ded785;\nbytes4 internal constant BLOCK_TIMESTAMP_TOO_LOW_ERROR_SELECTOR =\n    0xa6bcde47;\nbytes4 internal constant ONLY_CALLABLE_BY_STAKING_CONTRACT_ERROR_SELECTOR =\n    0xca1d07a2;\nbytes4 internal constant OPERATOR_SHARE_ERROR_SELECTOR =\n    0x22df9597;\nbytes4 internal constant POOL_EXISTENCE_ERROR_SELECTOR =\n    0x9ae94f01;\nbytes4 internal constant INITIALIZATION_ERROR_SELECTOR =\n    0x0b02d773;\nbytes4 internal constant INVALID_PARAM_VALUE_ERROR_SELECTOR =\n    0xfc45bd11;\nbytes4 internal constant INVALID_PROTOCOL_FEE_PAYMENT_ERROR_SELECTOR =\n    0x31d7a505;\nbytes4 internal constant PREVIOUS_EPOCH_NOT_FINALIZED_ERROR_SELECTOR =\n    0x614b800a;\nbytes4 internal constant POOL_NOT_FINALIZED_ERROR_SELECTOR =\n    0x5caa0b05;\n","contract":"LibStakingRichErrors","time":0},{"type":"state-data-arrangement ","before":"\nuint32 constant internal PPM_DENOMINATOR = 10 ** 6;\nbytes32 constant internal NIL_POOL_ID = 0x0000000000000000000000000000000000000000000000000000000000000000;\naddress constant internal NIL_ADDRESS = 0x0000000000000000000000000000000000000000;\nuint256 constant internal MIN_TOKEN_VALUE = 10 ** 18;","after":"bytes32 constant internal NIL_POOL_ID = 0x0000000000000000000000000000000000000000000000000000000000000000;\nuint256 constant internal MIN_TOKEN_VALUE = 10 ** 18;\naddress constant internal NIL_ADDRESS = 0x0000000000000000000000000000000000000000;\nuint32 constant internal PPM_DENOMINATOR = 10 ** 6;\n","contract":"MixinConstants","time":0},{"type":"state-data-arrangement ","before":"\naddress public stakingContract;\nmapping(uint8 => IStructs.StoredBalance) internal _globalStakeByStatus;\nmapping(uint8 => mapping(address => IStructs.StoredBalance)) internal _ownerStakeByStatus;\nmapping(address => mapping(bytes32 => IStructs.StoredBalance)) internal _delegatedStakeToPoolByOwner;\nmapping(bytes32 => IStructs.StoredBalance) internal _delegatedStakeByPoolId;\nbytes32 public lastPoolId;\nmapping(address => bytes32) public poolIdByMaker;\nmapping(bytes32 => IStructs.Pool) internal _poolById;\nmapping(bytes32 => uint256) public rewardsByPoolId;\nuint256 public currentEpoch;\nuint256 public currentEpochStartTimeInSeconds;\nmapping(bytes32 => mapping(uint256 => IStructs.Fraction)) internal _cumulativeRewardsByPool;\nmapping(bytes32 => uint256) internal _cumulativeRewardsByPoolLastStored;\nmapping(address => bool) public validExchanges;\nuint256 public epochDurationInSeconds;\nuint32 public rewardDelegatedStakeWeight;\nuint256 public minimumPoolStake;\nuint32 public cobbDouglasAlphaNumerator;\nuint32 public cobbDouglasAlphaDenominator;\nmapping(bytes32 => mapping(uint256 => IStructs.PoolStats)) public poolStatsByEpoch;\nmapping(uint256 => IStructs.AggregatedStats) public aggregatedStatsByEpoch;\nuint256 public wethReservedForPoolRewards;","after":"mapping(uint8 => IStructs.StoredBalance) internal _globalStakeByStatus;\nmapping(uint8 => mapping(address => IStructs.StoredBalance)) internal _ownerStakeByStatus;\nmapping(address => mapping(bytes32 => IStructs.StoredBalance)) internal _delegatedStakeToPoolByOwner;\nmapping(bytes32 => IStructs.StoredBalance) internal _delegatedStakeByPoolId;\nbytes32 public lastPoolId;\nmapping(address => bytes32) public poolIdByMaker;\nmapping(bytes32 => IStructs.Pool) internal _poolById;\nmapping(bytes32 => uint256) public rewardsByPoolId;\nuint256 public currentEpoch;\nuint256 public currentEpochStartTimeInSeconds;\nmapping(bytes32 => mapping(uint256 => IStructs.Fraction)) internal _cumulativeRewardsByPool;\nmapping(bytes32 => uint256) internal _cumulativeRewardsByPoolLastStored;\nmapping(address => bool) public validExchanges;\nuint256 public epochDurationInSeconds;\nuint256 public minimumPoolStake;\nmapping(bytes32 => mapping(uint256 => IStructs.PoolStats)) public poolStatsByEpoch;\nmapping(uint256 => IStructs.AggregatedStats) public aggregatedStatsByEpoch;\nuint256 public wethReservedForPoolRewards;\naddress public stakingContract;\nuint32 public rewardDelegatedStakeWeight;\nuint32 public cobbDouglasAlphaNumerator;\nuint32 public cobbDouglasAlphaDenominator;\n","contract":"MixinStorage","time":0}]}