{"time":1416,"results":[{"type":"state-data-arrangement ","before":"\n   bytes4 private constant _ERC721_RECEIVED = 0x150b7a\n   mapping(address => EnumerableSet.UintSet) private _holderToke\n   EnumerableMap.UintToAddressMap private _tokenOwne\n   mapping(uint256 => address) private _tokenApprova\n   mapping(address => mapping(address => bool)) private _operatorApprova\n   string private _na\n   string private _symb\n   mapping(uint256 => string) private _tokenUR\n   string private _baseU\n   bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58\n   bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e13\n   bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d","after":"   mapping(address => EnumerableSet.UintSet) private _holderToke\n   EnumerableMap.UintToAddressMap private _tokenOwne\n   mapping(uint256 => address) private _tokenApprova\n   mapping(address => mapping(address => bool)) private _operatorApprova\n   string private _na\n   string private _symb\n   mapping(uint256 => string) private _tokenUR\n   string private _baseU\n   bytes4 private constant _ERC721_RECEIVED = 0x150b7a\n   bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58\n   bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e13\n   bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d\n","contract":"ERC721","time":0},{"type":"de-morgan-condition ","before":" if (!lookup.isAvailable && !queryIndices[identifier][time].is","after":"!( if (lookup.isAvailable && queryIndices[identifier][time].is)","loc":{"start":{"line":7130,"column":12},"end":{"line":7130,"column":67}},"contract":"MockOracle","time":0},{"type":"state-data-arrangement ","before":"\nleased\n    address private _b\nstamp.\n    uint256 priv\ncliff;\n    uint256 priv\nstart;\n    uint256 private\ntion;\n\n    bool private \nable;\n\n    mapping(address => uint256) private\neased;\n    mapping(address => bool) privat","after":"stamp.\n    uint256 priv\ncliff;\n    uint256 priv\nstart;\n    uint256 private\nable;\n\n    mapping(address => uint256) private\neased;\n    mapping(address => bool) privat\nleased\n    address private _b\ntion;\n\n    bool private \n","contract":"TokenVesting","time":0}]}