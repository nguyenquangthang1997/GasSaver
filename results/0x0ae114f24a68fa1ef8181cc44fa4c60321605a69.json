{"time":330,"results":[{"type":"state-data-arrangement ","before":"\nmapping(uint256 => ComedyMonsterDetail) private _comedyMonsterDetails;\nstring public PROVENANCE = \"\";\nuint public MAX_PURCHASE = 20;\nuint256 public MAX_TOKENS = 10100;\nuint256 public CURRENT_PRICE = 100000000000000000;\nbool public saleIsActive = true;\nstring private baseURI;\naddress private creatorAddress1 = 0xFB76016964A33277a168c950d0010b508CbA9bAc;\naddress private creatorAddress2 = 0xeBD0414164018B2172fb06933Be974263DBc0B83;\naddress private creatorAddress3 = 0x0dC3EDF769F34962bbDA01eBEf4F700287f51e9d;","after":"mapping(uint256 => ComedyMonsterDetail) private _comedyMonsterDetails;\nstring public PROVENANCE = \"\";\nuint public MAX_PURCHASE = 20;\nuint256 public MAX_TOKENS = 10100;\nuint256 public CURRENT_PRICE = 100000000000000000;\nstring private baseURI;\naddress private creatorAddress1 = 0xFB76016964A33277a168c950d0010b508CbA9bAc;\naddress private creatorAddress2 = 0xeBD0414164018B2172fb06933Be974263DBc0B83;\naddress private creatorAddress3 = 0x0dC3EDF769F34962bbDA01eBEf4F700287f51e9d;\nbool public saleIsActive = true;\n","contract":"ComedyMonstersClub","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\n        PROVENANCE = _provenanceHash;\n    }","after":"function setProvenanceHash(string calldata _provenanceHash) public onlyOwner {\n        PROVENANCE = _provenanceHash;\n    }","contract":"ComedyMonstersClub","time":0},{"type":"external-function ","before":"function mintTokens(address[] memory _owners) public onlyOwner {\n        require(totalSupply().add(_owners.length) <= MAX_TOKENS, \"Purchase would exceed max supply\");\n        uint256 creation = block.timestamp;\n        uint256 tokenId;\n\n        for (uint i = 0; i < _owners.length; i++) {\n            tokenId = totalSupply().add(1);\n            if (tokenId <= MAX_TOKENS) {\n                _safeMint(_owners[i], tokenId);\n                _comedyMonsterDetails[tokenId] = ComedyMonsterDetail(creation);\n                emit TokenMinted(tokenId, _owners[i], creation);\n            }\n        }\n    }","after":"function mintTokens(address[] calldata _owners) public onlyOwner {\n        require(totalSupply().add(_owners.length) <= MAX_TOKENS, \"Purchase would exceed max supply\");\n        uint256 creation = block.timestamp;\n        uint256 tokenId;\n\n        for (uint i = 0; i < _owners.length; i++) {\n            tokenId = totalSupply().add(1);\n            if (tokenId <= MAX_TOKENS) {\n                _safeMint(_owners[i], tokenId);\n                _comedyMonsterDetails[tokenId] = ComedyMonsterDetail(creation);\n                emit TokenMinted(tokenId, _owners[i], creation);\n            }\n        }\n    }","contract":"ComedyMonstersClub","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ComedyMonstersClub","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ComedyMonstersClub","time":0}]}