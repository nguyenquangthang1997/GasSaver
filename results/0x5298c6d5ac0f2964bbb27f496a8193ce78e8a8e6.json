{"time":139,"results":[{"type":"state-data-arrangement ","before":"\nuint256 private startClaimDate = 1636912800;\nuint256 private startPresaleDate = 1636750800;\nuint256 private mintPrice = 140000000000000000;\nuint256 private presaleMintPrice = 70000000000000000;\nuint256 private totalTokens = 8000;\nuint256 private totalMintedTokens = 0;\nuint256 private maxMinerPerTransactionDuringPresale = 3;\nuint256 private maxMinerPerTransaction = 6;\nuint256 private maxMinerPerWalletDuringPresale = 3;\nuint256 private maxMinerPerWallet = 9;\nuint128 private basisPoints = 10000;\nstring private baseURI =\n    \"https://enigmaminer.s3.amazonaws.com/\";\nuint256 public giveawayCount = 200;\nbool public giveawayReservationComplete = false;\nuint256 public presaleLimit = 6300;\nuint256 public presaleMintedTokens = 0;\nmapping(address => uint256) private claimedMinerPerWallet;\nuint16[] availableMiners;\nCollaborators[] private collaborators;\nmapping(address => bool) whitelistedAddresses;","after":"uint256 private startClaimDate = 1636912800;\nuint256 private startPresaleDate = 1636750800;\nuint256 private mintPrice = 140000000000000000;\nuint256 private presaleMintPrice = 70000000000000000;\nuint256 private totalTokens = 8000;\nuint256 private totalMintedTokens = 0;\nuint256 private maxMinerPerTransactionDuringPresale = 3;\nuint256 private maxMinerPerTransaction = 6;\nuint256 private maxMinerPerWalletDuringPresale = 3;\nuint256 private maxMinerPerWallet = 9;\nstring private baseURI =\n    \"https://enigmaminer.s3.amazonaws.com/\";\nuint256 public giveawayCount = 200;\nuint256 public presaleLimit = 6300;\nuint256 public presaleMintedTokens = 0;\nmapping(address => uint256) private claimedMinerPerWallet;\nuint16[] availableMiners;\nCollaborators[] private collaborators;\nmapping(address => bool) whitelistedAddresses;\nuint128 private basisPoints = 10000;\nbool public giveawayReservationComplete = false;\n","contract":"TheEnigma","time":0},{"type":"external-function ","before":"function addCollaborators(Collaborators[] memory _collaborators)\n    external\n    onlyOwner\n    {\n        require(collaborators.length == 0, \"Collaborators were already set\");\n\n        uint128 totalCut;\n        for (uint256 i; i < _collaborators.length; i++) {\n            collaborators.push(_collaborators[i]);\n            totalCut += uint128(_collaborators[i].cut);\n        }\n\n        require(totalCut == basisPoints, \"Total cut does not add to 100%\");\n    }","after":"function addCollaborators(Collaborators[] calldata _collaborators)\n    external\n    onlyOwner\n    {\n        require(collaborators.length == 0, \"Collaborators were already set\");\n\n        uint128 totalCut;\n        for (uint256 i; i < _collaborators.length; i++) {\n            collaborators.push(_collaborators[i]);\n            totalCut += uint128(_collaborators[i].cut);\n        }\n\n        require(totalCut == basisPoints, \"Total cut does not add to 100%\");\n    }","contract":"TheEnigma","time":0},{"type":"external-function ","before":"function setBaseTokenURI(string memory _uri) external onlyCollaborator {\n        baseURI = _uri;\n    }","after":"function setBaseTokenURI(string calldata _uri) external onlyCollaborator {\n        baseURI = _uri;\n    }","contract":"TheEnigma","time":0},{"type":"external-function ","before":"function whitelistAddress(address[] memory users) external onlyCollaborator {\n        for (uint i = 0; i < users.length; i++) {\n            whitelistedAddresses[users[i]] = true;\n        }\n    }","after":"function whitelistAddress(address[] calldata users) external onlyCollaborator {\n        for (uint i = 0; i < users.length; i++) {\n            whitelistedAddresses[users[i]] = true;\n        }\n    }","contract":"TheEnigma","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private totalTokens = 8000;","after":"uint256 private constant totalTokens = 8000;","contract":"TheEnigma","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private maxMinerPerTransactionDuringPresale = 3;","after":"uint256 private constant maxMinerPerTransactionDuringPresale = 3;","contract":"TheEnigma","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private maxMinerPerTransaction = 6;","after":"uint256 private constant maxMinerPerTransaction = 6;","contract":"TheEnigma","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private maxMinerPerWalletDuringPresale = 3;","after":"uint256 private constant maxMinerPerWalletDuringPresale = 3;","contract":"TheEnigma","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private maxMinerPerWallet = 9;","after":"uint256 private constant maxMinerPerWallet = 9;","contract":"TheEnigma","time":1},{"type":"constant-restrict-modification  ","before":"uint128 private basisPoints = 10000;","after":"uint128 private constant basisPoints = 10000;","contract":"TheEnigma","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public giveawayCount = 200;","after":"uint256 public constant giveawayCount = 200;","contract":"TheEnigma","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"TheEnigma","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"TheEnigma","time":1}]}