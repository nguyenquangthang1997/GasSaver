{"time":77,"results":[{"type":"external-function ","before":"function transferPaybackBalances(address payable /*account*/, uint256 /*redeemWorth*/,\n\n        address[] memory /*tmpWhiteList*/, uint256[] memory /*colBalances*/,\n\n        uint256[] memory /*PremiumBalances*/, uint256[] memory /*prices*/) public {\n\n        delegateAndReturn();\n\n    }","after":"function transferPaybackBalances(address payable /*account*/, uint256 /*redeemWorth*/,\n\n        address[] calldata /*tmpWhiteList*/, uint256[] calldata /*colBalances*/,\n\n        uint256[] calldata /*PremiumBalances*/, uint256[] calldata /*prices*/) public {\n\n        delegateAndReturn();\n\n    }","contract":"CollateralProxy","time":0},{"type":"external-function ","before":"function getCollateralAndPremiumBalances(address /*account*/, uint256 /*userTotalWorth*/, address[] memory /*tmpWhiteList*/,\n\n        uint256[] memory /*_RealBalances*/, uint256[] memory /*prices*/) public view returns (uint256[] memory, uint256[] memory){\n\n        delegateToViewAndReturn();\n\n    }","after":"function getCollateralAndPremiumBalances(address /*account*/, uint256 /*userTotalWorth*/, address[] calldata /*tmpWhiteList*/,\n\n        uint256[] calldata /*_RealBalances*/, uint256[] calldata /*prices*/) public view returns (uint256[] memory, uint256[] memory){\n\n        delegateToViewAndReturn();\n\n    }","contract":"CollateralProxy","time":0},{"type":"external-function ","before":"function getAllRealBalance(address[] memory /*whiteList*/) public view returns (int256[] memory){\n\n        delegateToViewAndReturn();\n\n    }","after":"function getAllRealBalance(address[] calldata /*whiteList*/) public view returns (int256[] memory){\n\n        delegateToViewAndReturn();\n\n    }","contract":"CollateralProxy","time":0},{"type":"external-function ","before":"function calSharedPayment(address[] memory /*_whiteList*/) public {\n\n        delegateAndReturn();\n\n    }","after":"function calSharedPayment(address[] calldata /*_whiteList*/) public {\n\n        delegateAndReturn();\n\n    }","contract":"CollateralProxy","time":0},{"type":"external-function ","before":"function setSharedPayment(address[] memory /*_whiteList*/, int256[] memory /*newNetworth*/,\n\n        int256[] memory /*sharedBalances*/, uint256 /*firstOption*/) public {\n\n        delegateAndReturn();\n\n    }","after":"function setSharedPayment(address[] calldata /*_whiteList*/, int256[] calldata /*newNetworth*/,\n\n        int256[] calldata /*sharedBalances*/, uint256 /*firstOption*/) public {\n\n        delegateAndReturn();\n\n    }","contract":"CollateralProxy","time":0},{"type":"external-function ","before":"function setOperators(address[] memory operators) public onlyOwner {\n\n        _operatorList = operators;\n\n    }","after":"function setOperators(address[] calldata operators) public onlyOwner {\n\n        _operatorList = operators;\n\n    }","contract":"CollateralProxy","time":0},{"type":"external-function ","before":"function delegateToImplementation(bytes memory data) public returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = implementation.delegatecall(data);\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return returnData;\n\n    }","after":"function delegateToImplementation(bytes calldata data) public returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = implementation.delegatecall(data);\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return returnData;\n\n    }","contract":"CollateralProxy","time":0},{"type":"external-function ","before":"function delegateToViewImplementation(bytes memory data) public view returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = address(this).staticcall(abi.encodeWithSignature(\"delegateToImplementation(bytes)\", data));\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return abi.decode(returnData, (bytes));\n\n    }","after":"function delegateToViewImplementation(bytes calldata data) public view returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = address(this).staticcall(abi.encodeWithSignature(\"delegateToImplementation(bytes)\", data));\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return abi.decode(returnData, (bytes));\n\n    }","contract":"CollateralProxy","time":0}]}