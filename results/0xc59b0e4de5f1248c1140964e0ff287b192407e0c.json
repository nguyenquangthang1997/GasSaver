{"time":183,"results":[{"type":"external-function ","before":"function balanceOfBatch(\n\n        address[] memory owners,\n\n        uint256[] memory ids\n\n    )\n\n    public\n\n    view\n\n    returns (uint256[] memory)\n\n    {\n\n        require(owners.length == ids.length, \"ERC1155: owners and IDs must have same lengths\");\n\n\n        uint256[] memory batchBalances = new uint256[](owners.length);\n\n\n        for (uint256 i = 0; i < owners.length; ++i) {\n\n            require(owners[i] != address(0), \"ERC1155: some address in batch balance query is zero\");\n\n            batchBalances[i] = _balances[ids[i]][owners[i]];\n\n        }\n\n\n        return batchBalances;\n\n    }","after":"function balanceOfBatch(\n\n        address[] calldata owners,\n\n        uint256[] calldata ids\n\n    )\n\n    public\n\n    view\n\n    returns (uint256[] memory)\n\n    {\n\n        require(owners.length == ids.length, \"ERC1155: owners and IDs must have same lengths\");\n\n\n        uint256[] memory batchBalances = new uint256[](owners.length);\n\n\n        for (uint256 i = 0; i < owners.length; ++i) {\n\n            require(owners[i] != address(0), \"ERC1155: some address in batch balance query is zero\");\n\n            batchBalances[i] = _balances[ids[i]][owners[i]];\n\n        }\n\n\n        return batchBalances;\n\n    }","contract":"ConditionalTokens","time":0}]}