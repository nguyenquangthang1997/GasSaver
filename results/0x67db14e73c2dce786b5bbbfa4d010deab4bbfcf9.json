{"time":368,"results":[{"type":"external-function ","before":"function initialize(address underlying_,\n\n        ComptrollerInterface comptroller_,\n\n        InterestRateModel interestRateModel_,\n\n        string memory name_,\n\n        string memory symbol_,\n\n        uint256 reserveFactorMantissa_,\n\n        uint256 adminFeeMantissa_) public {\n\n        // CToken initialize does the bulk of the work\n\n        uint256 initialExchangeRateMantissa_ = 0.2e18;\n\n        uint8 decimals_ = EIP20Interface(underlying_).decimals();\n\n        super.initialize(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_, reserveFactorMantissa_, adminFeeMantissa_);\n\n\n        // Set underlying and sanity check it\n\n        underlying = underlying_;\n\n        EIP20Interface(underlying).totalSupply();\n\n    }","after":"function initialize(address underlying_,\n\n        ComptrollerInterface comptroller_,\n\n        InterestRateModel interestRateModel_,\n\n        string calldata name_,\n\n        string calldata symbol_,\n\n        uint256 reserveFactorMantissa_,\n\n        uint256 adminFeeMantissa_) public {\n\n        // CToken initialize does the bulk of the work\n\n        uint256 initialExchangeRateMantissa_ = 0.2e18;\n\n        uint8 decimals_ = EIP20Interface(underlying_).decimals();\n\n        super.initialize(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_, reserveFactorMantissa_, adminFeeMantissa_);\n\n\n        // Set underlying and sanity check it\n\n        underlying = underlying_;\n\n        EIP20Interface(underlying).totalSupply();\n\n    }","contract":"CErc20Delegate","time":0},{"type":"external-function ","before":"function initialize(ComptrollerInterface comptroller_,\n\n        InterestRateModel interestRateModel_,\n\n        uint initialExchangeRateMantissa_,\n\n        string memory name_,\n\n        string memory symbol_,\n\n        uint8 decimals_,\n\n        uint256 reserveFactorMantissa_,\n\n        uint256 adminFeeMantissa_) public {\n\n        require(msg.sender == address(fuseAdmin), \"only Fuse admin may initialize the market\");\n\n        require(accrualBlockNumber == 0 && borrowIndex == 0, \"market may only be initialized once\");\n\n\n        // Set initial exchange rate\n\n        initialExchangeRateMantissa = initialExchangeRateMantissa_;\n\n        require(initialExchangeRateMantissa > 0, \"initial exchange rate must be greater than zero.\");\n\n\n        // Set the comptroller\n\n        uint err = _setComptroller(comptroller_);\n\n        require(err == uint(Error.NO_ERROR), \"setting comptroller failed\");\n\n\n        // Initialize block number and borrow index (block number mocks depend on comptroller being set)\n\n        accrualBlockNumber = getBlockNumber();\n\n        borrowIndex = mantissaOne;\n\n\n        // Set the interest rate model (depends on block number / borrow index)\n\n        err = _setInterestRateModelFresh(interestRateModel_);\n\n        require(err == uint(Error.NO_ERROR), \"setting interest rate model failed\");\n\n\n        name = name_;\n\n        symbol = symbol_;\n\n        decimals = decimals_;\n\n\n        // Set reserve factor\n\n        err = _setReserveFactorFresh(reserveFactorMantissa_);\n\n        require(err == uint(Error.NO_ERROR), \"setting reserve factor failed\");\n\n\n        // Set admin fee\n\n        err = _setAdminFeeFresh(adminFeeMantissa_);\n\n        require(err == uint(Error.NO_ERROR), \"setting admin fee failed\");\n\n\n        // The counter starts true to prevent changing it from zero to non-zero (i.e. smaller cost/refund)\n\n        _notEntered = true;\n\n    }","after":"function initialize(ComptrollerInterface comptroller_,\n\n        InterestRateModel interestRateModel_,\n\n        uint initialExchangeRateMantissa_,\n\n        string calldata name_,\n\n        string calldata symbol_,\n\n        uint8 decimals_,\n\n        uint256 reserveFactorMantissa_,\n\n        uint256 adminFeeMantissa_) public {\n\n        require(msg.sender == address(fuseAdmin), \"only Fuse admin may initialize the market\");\n\n        require(accrualBlockNumber == 0 && borrowIndex == 0, \"market may only be initialized once\");\n\n\n        // Set initial exchange rate\n\n        initialExchangeRateMantissa = initialExchangeRateMantissa_;\n\n        require(initialExchangeRateMantissa > 0, \"initial exchange rate must be greater than zero.\");\n\n\n        // Set the comptroller\n\n        uint err = _setComptroller(comptroller_);\n\n        require(err == uint(Error.NO_ERROR), \"setting comptroller failed\");\n\n\n        // Initialize block number and borrow index (block number mocks depend on comptroller being set)\n\n        accrualBlockNumber = getBlockNumber();\n\n        borrowIndex = mantissaOne;\n\n\n        // Set the interest rate model (depends on block number / borrow index)\n\n        err = _setInterestRateModelFresh(interestRateModel_);\n\n        require(err == uint(Error.NO_ERROR), \"setting interest rate model failed\");\n\n\n        name = name_;\n\n        symbol = symbol_;\n\n        decimals = decimals_;\n\n\n        // Set reserve factor\n\n        err = _setReserveFactorFresh(reserveFactorMantissa_);\n\n        require(err == uint(Error.NO_ERROR), \"setting reserve factor failed\");\n\n\n        // Set admin fee\n\n        err = _setAdminFeeFresh(adminFeeMantissa_);\n\n        require(err == uint(Error.NO_ERROR), \"setting admin fee failed\");\n\n\n        // The counter starts true to prevent changing it from zero to non-zero (i.e. smaller cost/refund)\n\n        _notEntered = true;\n\n    }","contract":"CErc20Delegate","time":0},{"type":"constant-restrict-modification  ","before":"  */\n\n    address payable private __pen","after":"  */\n\n    address payable private __pen","contract":"CErc20Delegate","time":1},{"type":"state-data-arrangement ","before":"\n  */\n\n    bool internal _n\n  */\n\n    string pu\n  */\n\n    string publ\n  */\n\n    uint8 public\n  */\n\n    uint internal constant borrowRateMaxMantissa = \n  */\n\n    uint internal constant reserveFactorPlusFeesMaxMantis\n  */\n\n    address payable private __pen\n  */\n\n    ComptrollerInterface public co\n  */\n\n    InterestRateModel public interest\n  */\n\n    uint internal initialExchangeRat\n  */\n\n    uint public adminFe\n  */\n\n    uint public fuseFe\n  */\n\n    uint public reserveFacto\n  */\n\n    uint public accrualBl\n  */\n\n    uint public bo\n  */\n\n    uint public tot\n  */\n\n    uint public tota\n  */\n\n    uint public total\n  */\n\n    uint public tota\n  */\n\n    uint public to\n  */\n\n    mapping(address => uint) internal acco\n  */\n\n    mapping(address => mapping(address => uint)) internal transferA\n  */\n\n    mapping(address => BorrowSnapshot) internal accou\n  */\n\n    uint public constant protocolSeizeShareMantissa","after":"  */\n\n    string pu\n  */\n\n    string publ\n  */\n\n    uint internal constant borrowRateMaxMantissa = \n  */\n\n    uint internal constant reserveFactorPlusFeesMaxMantis\n  */\n\n    ComptrollerInterface public co\n  */\n\n    InterestRateModel public interest\n  */\n\n    uint internal initialExchangeRat\n  */\n\n    uint public adminFe\n  */\n\n    uint public fuseFe\n  */\n\n    uint public reserveFacto\n  */\n\n    uint public accrualBl\n  */\n\n    uint public bo\n  */\n\n    uint public tot\n  */\n\n    uint public tota\n  */\n\n    uint public total\n  */\n\n    uint public tota\n  */\n\n    uint public to\n  */\n\n    mapping(address => uint) internal acco\n  */\n\n    mapping(address => mapping(address => uint)) internal transferA\n  */\n\n    mapping(address => BorrowSnapshot) internal accou\n  */\n\n    uint public constant protocolSeizeShareMantissa\n  */\n\n    address payable private __pen\n  */\n\n    bool internal _n\n  */\n\n    uint8 public\n","contract":"CTokenStorage","time":0},{"type":"constant-restrict-modification  ","before":"  */\n\n    address public u","after":"  */\n\n    address public u","contract":"CEtherInterface","time":0},{"type":"state-data-arrangement ","before":"\n  */\n\n    mapping(address => Market) publi\nkets\n\n    CToken[] public a\n  */\n\n    mapping(address => bool) internal \nkets\n\n    address[] public all\nrray\n\n    mapping(address => uint256) internal borrow\n  */\n\n    mapping(address => bool) public \nsses\n\n    mapping(address => CToken) public cTokensByU\nrced\n\n    bool public enforce\nens)\n\n    mapping(address => bool) public \nunts\n\n    address[] public white\nrray\n\n    mapping(address => uint256) internal whiteli\n  */\n\n    address public paus\nian;\n\n    bool public _mintGuard\nsed;\n\n    bool public _borrowGuard\nsed;\n\n    bool public transferGuard\nsed;\n\n    bool public seizeGuard\nsed;\n\n    mapping(address => bool) public mintGuard\nsed;\n\n    mapping(address => bool) public borrowGuard","after":"  */\n\n    mapping(address => Market) publi\nkets\n\n    CToken[] public a\n  */\n\n    mapping(address => bool) internal \nkets\n\n    address[] public all\nrray\n\n    mapping(address => uint256) internal borrow\n  */\n\n    mapping(address => bool) public \nsses\n\n    mapping(address => CToken) public cTokensByU\nens)\n\n    mapping(address => bool) public \nunts\n\n    address[] public white\nrray\n\n    mapping(address => uint256) internal whiteli\nsed;\n\n    mapping(address => bool) public mintGuard\nsed;\n\n    mapping(address => bool) public borrowGuard\n  */\n\n    address public paus\nrced\n\n    bool public enforce\nian;\n\n    bool public _mintGuard\nsed;\n\n    bool public _borrowGuard\nsed;\n\n    bool public transferGuard\nsed;\n\n    bool public seizeGuard\n","contract":"ComptrollerV2Storage","time":0},{"type":"state-data-arrangement ","before":"\n  */\n\n    bool public autoImple\nket.\n\n    address public borrowCa\ning.\n\n    mapping(address => uint) public b\ning.\n\n    mapping(address => uint) public s\nges.\n\n    address[] public rewardsDis\necks\n\n    bool internal _n\nized\n\n    bool internal _notEnteredIn","after":"ing.\n\n    mapping(address => uint) public b\ning.\n\n    mapping(address => uint) public s\nges.\n\n    address[] public rewardsDis\nket.\n\n    address public borrowCa\n  */\n\n    bool public autoImple\necks\n\n    bool internal _n\nized\n\n    bool internal _notEnteredIn\n","contract":"ComptrollerV3Storage","time":0},{"type":"constant-restrict-modification  ","before":"  */\n\n    bool public autoImple","after":"  */\n\n    bool public autoImple","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"ket.\n\n    address public borrowCa","after":"ket.\n\n    address public borrowCa","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"ecks\n\n    bool internal _n","after":"ecks\n\n    bool internal _n","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"ized\n\n    bool internal _notEnteredIn","after":"ized\n\n    bool internal _notEnteredIn","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"rced\n\n    bool public enforce","after":"rced\n\n    bool public enforce","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    address public paus","after":"  */\n\n    address public paus","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"ian;\n\n    bool public _mintGuard","after":"ian;\n\n    bool public _mintGuard","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"sed;\n\n    bool public _borrowGuard","after":"sed;\n\n    bool public _borrowGuard","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"sed;\n\n    bool public transferGuard","after":"sed;\n\n    bool public transferGuard","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"sed;\n\n    bool public seizeGuard","after":"sed;\n\n    bool public seizeGuard","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    uint public closeFacto","after":"  */\n\n    uint public closeFacto","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    uint public liquidationIncentiv","after":"  */\n\n    uint public liquidationIncentiv","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    uint internal ","after":"  */\n\n    uint internal ","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    address pub","after":"  */\n\n    address pub","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    address public pen","after":"  */\n\n    address public pen","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    bool public fuseAdminHasRigh","after":"  */\n\n    bool public fuseAdminHasRigh","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    bool public adminHasRigh","after":"  */\n\n    bool public adminHasRigh","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    address public comptrollerImple","after":"  */\n\n    address public comptrollerImple","contract":"ComptrollerV3Storage","time":1},{"type":"constant-restrict-modification  ","before":"  */\n\n    address public pendingComptrollerImple","after":"  */\n\n    address public pendingComptrollerImple","contract":"ComptrollerV3Storage","time":1}]}