{"time":5,"results":[{"type":"external-function ","before":"function getTradeCalldata(\n\n        address _sourceToken,\n\n        address _destinationToken,\n\n        address /* _destinationAddress */,\n\n        uint256 _sourceQuantity,\n\n        uint256 _minDestinationQuantity,\n\n        bytes memory _data\n\n    )\n\n    external\n\n    view\n\n    returns (address, uint256, bytes memory)\n\n    {\n\n        bytes4 signature;\n\n        address fromToken;\n\n        address toToken;\n\n        uint256 fromTokenAmount;\n\n        uint256 minReturnAmount;\n\n\n        // Parse 1inch calldata and validate parameters match expected inputs\n\n        // solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            signature := mload(add(_data, 32))\n\n            fromToken := mload(add(_data, 36))\n\n            toToken := mload(add(_data, 68))\n\n            fromTokenAmount := mload(add(_data, 100))\n\n            minReturnAmount := mload(add(_data, 132))\n\n        }\n\n\n        require(\n\n            signature == oneInchFunctionSignature,\n\n            \"Not One Inch Swap Function\"\n\n        );\n\n\n        require(\n\n            fromToken == _sourceToken,\n\n            \"Invalid send token\"\n\n        );\n\n\n        require(\n\n            toToken == _destinationToken,\n\n            \"Invalid receive token\"\n\n        );\n\n\n        require(\n\n            fromTokenAmount == _sourceQuantity,\n\n            \"Source quantity mismatch\"\n\n        );\n\n\n        require(\n\n            minReturnAmount == _minDestinationQuantity,\n\n            \"Min destination quantity mismatch\"\n\n        );\n\n\n        return (oneInchExchangeAddress, 0, _data);\n\n    }","after":"function getTradeCalldata(\n\n        address _sourceToken,\n\n        address _destinationToken,\n\n        address /* _destinationAddress */,\n\n        uint256 _sourceQuantity,\n\n        uint256 _minDestinationQuantity,\n\n        bytes calldata _data\n\n    )\n\n    external\n\n    view\n\n    returns (address, uint256, bytes memory)\n\n    {\n\n        bytes4 signature;\n\n        address fromToken;\n\n        address toToken;\n\n        uint256 fromTokenAmount;\n\n        uint256 minReturnAmount;\n\n\n        // Parse 1inch calldata and validate parameters match expected inputs\n\n        // solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            signature := mload(add(_data, 32))\n\n            fromToken := mload(add(_data, 36))\n\n            toToken := mload(add(_data, 68))\n\n            fromTokenAmount := mload(add(_data, 100))\n\n            minReturnAmount := mload(add(_data, 132))\n\n        }\n\n\n        require(\n\n            signature == oneInchFunctionSignature,\n\n            \"Not One Inch Swap Function\"\n\n        );\n\n\n        require(\n\n            fromToken == _sourceToken,\n\n            \"Invalid send token\"\n\n        );\n\n\n        require(\n\n            toToken == _destinationToken,\n\n            \"Invalid receive token\"\n\n        );\n\n\n        require(\n\n            fromTokenAmount == _sourceQuantity,\n\n            \"Source quantity mismatch\"\n\n        );\n\n\n        require(\n\n            minReturnAmount == _minDestinationQuantity,\n\n            \"Min destination quantity mismatch\"\n\n        );\n\n\n        return (oneInchExchangeAddress, 0, _data);\n\n    }","contract":"OneInchExchangeAdapter","time":0},{"type":"immutable-restrict-modification ","before":"address public oneInchApprovalAddress;","after":"address public immutable oneInchApprovalAddress;","contract":"OneInchExchangeAdapter","time":0},{"type":"immutable-restrict-modification ","before":"address public oneInchExchangeAddress;","after":"address public immutable oneInchExchangeAddress;","contract":"OneInchExchangeAdapter","time":0},{"type":"immutable-restrict-modification ","before":"bytes4 public oneInchFunctionSignature;","after":"bytes4 public immutable oneInchFunctionSignature;","contract":"OneInchExchangeAdapter","time":0}]}