{"time":141,"results":[{"type":"immutable-restrict-modification ","before":"string public name;","after":"string public immutable name;","contract":"ERC20DividendsOwned","time":0},{"type":"immutable-restrict-modification ","before":"string public symbol;","after":"string public immutable symbol;","contract":"ERC20DividendsOwned","time":0},{"type":"state-data-arrangement ","before":"\nbytes32 public constant DOMAIN_TYPEHASH =\n    keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\n        \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n    );\nbytes32 public immutable domainSeparator;\nuint8 public constant decimals = 18;\nstring public name;\nstring public symbol;\nuint96 internal _totalSupply;\nmapping(address => mapping(address => uint96)) internal allowances;\nmapping(address => uint96) internal balances;\nmapping(address => address) public override delegates;\nmapping(address => mapping(uint32 => Checkpoint)) public override checkpoints;\nmapping(address => uint32) public override numCheckpoints;\nmapping(address => uint256) public override nonces;","after":"bytes32 public constant DOMAIN_TYPEHASH =\n    keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\n        \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n    );\nbytes32 public immutable domainSeparator;\nstring public name;\nstring public symbol;\nmapping(address => mapping(address => uint96)) internal allowances;\nmapping(address => uint96) internal balances;\nmapping(address => address) public override delegates;\nmapping(address => mapping(uint32 => Checkpoint)) public override checkpoints;\nmapping(address => uint32) public override numCheckpoints;\nmapping(address => uint256) public override nonces;\nuint96 internal _totalSupply;\nuint8 public constant decimals = 18;\n","contract":"ERC20VotesComp","time":0}]}