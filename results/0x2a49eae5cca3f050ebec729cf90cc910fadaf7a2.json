{"time":165,"results":[{"type":"constant-restrict-modification  ","before":"bytes32 public ilk;","after":"bytes32 public constant ilk;","contract":"IJoin","time":0},{"type":"external-function ","before":"function increaseMultipleDepositDai(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData memory cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\"increaseMultipleDepositDai\", cdpData, addressRegistry.multiplyProxyActions)\n\n    {\n\n        if (cdpData.skipFL) {\n\n            IERC20(DAI).transferFrom(msg.sender, address(this), cdpData.depositDai);\n\n        } else {\n\n            IERC20(DAI).transferFrom(\n\n                msg.sender,\n\n                addressRegistry.multiplyProxyActions,\n\n                cdpData.depositDai\n\n            );\n\n        }\n\n        increaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","after":"function increaseMultipleDepositDai(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData calldata cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\"increaseMultipleDepositDai\", cdpData, addressRegistry.multiplyProxyActions)\n\n    {\n\n        if (cdpData.skipFL) {\n\n            IERC20(DAI).transferFrom(msg.sender, address(this), cdpData.depositDai);\n\n        } else {\n\n            IERC20(DAI).transferFrom(\n\n                msg.sender,\n\n                addressRegistry.multiplyProxyActions,\n\n                cdpData.depositDai\n\n            );\n\n        }\n\n        increaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","contract":"MultiplyProxyActions","time":0},{"type":"external-function ","before":"function increaseMultiple(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData memory cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    ) public logMethodName(\"increaseMultiple\", cdpData, addressRegistry.multiplyProxyActions) {\n\n        increaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","after":"function increaseMultiple(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData calldata cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    ) public logMethodName(\"increaseMultiple\", cdpData, addressRegistry.multiplyProxyActions) {\n\n        increaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","contract":"MultiplyProxyActions","time":0},{"type":"external-function ","before":"function decreaseMultiple(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData memory cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    ) public logMethodName(\"decreaseMultiple\", cdpData, addressRegistry.multiplyProxyActions) {\n\n        decreaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","after":"function decreaseMultiple(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData calldata cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    ) public logMethodName(\"decreaseMultiple\", cdpData, addressRegistry.multiplyProxyActions) {\n\n        decreaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","contract":"MultiplyProxyActions","time":0},{"type":"external-function ","before":"function decreaseMultipleWithdrawCollateral(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData memory cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\n\n        \"decreaseMultipleWithdrawCollateral\",\n\n        cdpData,\n\n        addressRegistry.multiplyProxyActions\n\n    )\n\n    {\n\n        decreaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","after":"function decreaseMultipleWithdrawCollateral(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData calldata cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\n\n        \"decreaseMultipleWithdrawCollateral\",\n\n        cdpData,\n\n        addressRegistry.multiplyProxyActions\n\n    )\n\n    {\n\n        decreaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","contract":"MultiplyProxyActions","time":0},{"type":"external-function ","before":"function decreaseMultipleWithdrawDai(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData memory cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\"decreaseMultipleWithdrawDai\", cdpData, addressRegistry.multiplyProxyActions)\n\n    {\n\n        decreaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","after":"function decreaseMultipleWithdrawDai(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData calldata cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\"decreaseMultipleWithdrawDai\", cdpData, addressRegistry.multiplyProxyActions)\n\n    {\n\n        decreaseMultipleInternal(exchangeData, cdpData, addressRegistry);\n\n    }","contract":"MultiplyProxyActions","time":0},{"type":"external-function ","before":"function closeVaultExitCollateral(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData memory cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\"closeVaultExitCollateral\", cdpData, addressRegistry.multiplyProxyActions)\n\n    {\n\n        closeVaultExitGeneric(exchangeData, cdpData, addressRegistry, 2);\n\n    }","after":"function closeVaultExitCollateral(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData calldata cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    )\n\n    public\n\n    logMethodName(\"closeVaultExitCollateral\", cdpData, addressRegistry.multiplyProxyActions)\n\n    {\n\n        closeVaultExitGeneric(exchangeData, cdpData, addressRegistry, 2);\n\n    }","contract":"MultiplyProxyActions","time":0},{"type":"external-function ","before":"function closeVaultExitDai(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData memory cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    ) public logMethodName(\"closeVaultExitDai\", cdpData, addressRegistry.multiplyProxyActions) {\n\n        require(cdpData.skipFL == false, \"cannot close to DAI if FL not used\");\n\n        closeVaultExitGeneric(exchangeData, cdpData, addressRegistry, 3);\n\n    }","after":"function closeVaultExitDai(\n\n        ExchangeData calldata exchangeData,\n\n        CdpData calldata cdpData,\n\n        AddressRegistry calldata addressRegistry\n\n    ) public logMethodName(\"closeVaultExitDai\", cdpData, addressRegistry.multiplyProxyActions) {\n\n        require(cdpData.skipFL == false, \"cannot close to DAI if FL not used\");\n\n        closeVaultExitGeneric(exchangeData, cdpData, addressRegistry, 3);\n\n    }","contract":"MultiplyProxyActions","time":0}]}