{"time":21,"results":[{"type":"immutable-restrict-modification ","before":"address internal masterCopy;","after":"address internal immutable masterCopy;","contract":"Proxy","time":0},{"type":"external-function ","before":"function createProxy(address masterCopy, bytes memory data)\n\n    public\n\n    returns (Proxy proxy)\n\n    {\n\n        proxy = new Proxy(masterCopy);\n\n        if (data.length > 0)\n\n        // solium-disable-next-line security/no-inline-assembly\n\n            assembly {\n\n                if eq(call(gas, proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) {revert(0, 0)}\n\n            }\n\n        emit ProxyCreation(proxy);\n\n    }","after":"function createProxy(address masterCopy, bytes calldata data)\n\n    public\n\n    returns (Proxy proxy)\n\n    {\n\n        proxy = new Proxy(masterCopy);\n\n        if (data.length > 0)\n\n        // solium-disable-next-line security/no-inline-assembly\n\n            assembly {\n\n                if eq(call(gas, proxy, 0, add(data, 0x20), mload(data), 0, 0), 0) {revert(0, 0)}\n\n            }\n\n        emit ProxyCreation(proxy);\n\n    }","contract":"ProxyFactory","time":0},{"type":"external-function ","before":"function createProxyWithNonce(address _mastercopy, bytes memory initializer, uint256 saltNonce)\n\n    public\n\n    returns (Proxy proxy)\n\n    {\n\n        // If the initializer changes the proxy address should change too. Hashing the initializer data is cheaper than just concatinating it\n\n        bytes32 salt = keccak256(abi.encodePacked(keccak256(initializer), saltNonce));\n\n        bytes memory deploymentData = abi.encodePacked(type(Proxy).creationCode, uint256(_mastercopy));\n\n        // solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            proxy := create2(0x0, add(0x20, deploymentData), mload(deploymentData), salt)\n\n        }\n\n        if (initializer.length > 0)\n\n        // solium-disable-next-line security/no-inline-assembly\n\n            assembly {\n\n                if eq(call(gas, proxy, 0, add(initializer, 0x20), mload(initializer), 0, 0), 0) {revert(0, 0)}\n\n            }\n\n        emit ProxyCreation(proxy);\n\n    }","after":"function createProxyWithNonce(address _mastercopy, bytes calldata initializer, uint256 saltNonce)\n\n    public\n\n    returns (Proxy proxy)\n\n    {\n\n        // If the initializer changes the proxy address should change too. Hashing the initializer data is cheaper than just concatinating it\n\n        bytes32 salt = keccak256(abi.encodePacked(keccak256(initializer), saltNonce));\n\n        bytes memory deploymentData = abi.encodePacked(type(Proxy).creationCode, uint256(_mastercopy));\n\n        // solium-disable-next-line security/no-inline-assembly\n\n        assembly {\n\n            proxy := create2(0x0, add(0x20, deploymentData), mload(deploymentData), salt)\n\n        }\n\n        if (initializer.length > 0)\n\n        // solium-disable-next-line security/no-inline-assembly\n\n            assembly {\n\n                if eq(call(gas, proxy, 0, add(initializer, 0x20), mload(initializer), 0, 0), 0) {revert(0, 0)}\n\n            }\n\n        emit ProxyCreation(proxy);\n\n    }","contract":"ProxyFactory","time":0}]}