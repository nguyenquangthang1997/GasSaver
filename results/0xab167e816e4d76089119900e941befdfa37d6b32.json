{"time":176,"results":[{"type":"de-morgan-condition ","before":"            block.timestamp\n\n        );\n\n    }\n","after":"!(            block.timestamp\n\n        );\n\n    }\n)","loc":{"start":{"line":2287,"column":19},"end":{"line":2287,"column":65}},"contract":"Shibnobi","time":0},{"type":"state-data-arrangement ","before":"\nion swapExactTokensForTokensSupportingFeeOnT\nrTokens(\n\n        uint amountIn,\n\n        ui\nuntOutMin,\n\n        address[] calldata path,\n\n        address to,\n\n \nuint deadline\n\n    ) external;\n\n    function swapExa\nrTokensSupportingFeeOnTransferTokens(\n\n      \n amountOutMin,\n\n        addr\nalldata path,\n\n        address to,\n\n        \neadline\n\n    ) external pa\n\n    function swapExactTokens\nupportingFeeOnTransferTokens(\n\n        uint\ntIn,\n\n        uint amountOutMin,\n\n        address[] calldata\n\n\n        address to,\n\n        uint deadline\n\n    \nrnal;\n\n}\n\n\ninterface IAirdr\n    function airdrop(address re\n, uint256 amount) external;\n\n}\n\n\nc\nt Shibnobi is Context, IERC20, Own\n\n\n    using SafeMath for uin\n    using Address for addre\n\n    mapping(address => uint256) private _\n\n\n    mapping(address => uint256) privat\ned;\n\n    mapping(address => mappi\nress => uint256)) private _allowances;\n\n\n    mapping(a\n=> bool) private _isExcludedFromFee;\n\n\n    mapping(a\n => bool) private _isExcluded;\n\n    add\nprivate _excluded;\n\n\n \nping(address => bool) private botWallets;\nool botscantrade = false;\n\n\n    bool public canTrade = false;\n\nuint256 private constant MAX = ~uint256(0);\n\n    uint256 private _tTotal = 6900","after":"ion swapExactTokensForTokensSupportingFeeOnT\nrTokens(\n\n        uint amountIn,\n\n        ui\nuntOutMin,\n\n        address[] calldata path,\n\n        address to,\n\n \nuint deadline\n\n    ) external;\n\n    function swapExa\nrTokensSupportingFeeOnTransferTokens(\n\n      \n amountOutMin,\n\n        addr\nalldata path,\n\n        address to,\n\n        \nupportingFeeOnTransferTokens(\n\n        uint\ntIn,\n\n        uint amountOutMin,\n\n        address[] calldata\n\n\n        address to,\n\n        uint deadline\n\n    \nrnal;\n\n}\n\n\ninterface IAirdr\n, uint256 amount) external;\n\n}\n\n\nc\nt Shibnobi is Context, IERC20, Own\n    using Address for addre\n\n    mapping(address => uint256) private _\n\n\n    mapping(address => uint256) privat\ned;\n\n    mapping(address => mappi\nress => uint256)) private _allowances;\n\n\n    mapping(a\n=> bool) private _isExcludedFromFee;\n\n\n    mapping(a\nool botscantrade = false;\n\n\n    bool public canTrade = false;\n\nuint256 private constant MAX = ~uint256(0);\n\n    uint256 private _tTotal = 6900\n    function airdrop(address re\n => bool) private _isExcluded;\n\n    add\neadline\n\n    ) external pa\n\n    function swapExactTokens\n\n\n    using SafeMath for uin\nprivate _excluded;\n\n\n \nping(address => bool) private botWallets;\n","contract":"Shibnobi","time":1},{"type":"constant-restrict-modification  ","before":"eadline\n\n    ) external pa","after":"eadline\n\n    ) external pa","contract":"Shibnobi","time":0},{"type":"constant-restrict-modification  ","before":"tIn,\n\n        uint amountOutMin,\n\n        address[] calldata","after":"tIn,\n\n        uint amountOutMin,\n\n        address[] calldata","contract":"Shibnobi","time":0},{"type":"constant-restrict-modification  ","before":", uint256 amount) external;\n\n}\n\n\nc","after":", uint256 amount) external;\n\n}\n\n\nc","contract":"Shibnobi","time":0},{"type":"constant-restrict-modification  ","before":"t Shibnobi is Context, IERC20, Own","after":"t Shibnobi is Context, IERC20, Own","contract":"Shibnobi","time":0},{"type":"constant-restrict-modification  ","before":"\n\n    using SafeMath for uin","after":"\n\n    using SafeMath for uin","contract":"Shibnobi","time":0}]}