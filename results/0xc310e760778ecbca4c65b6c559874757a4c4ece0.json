{"time":273,"results":[{"type":"state-data-arrangement ","before":"\naddress constant ERC20 = 0x90b7cf88476cc99D295429d4C1Bb1ff52448abeE;\naddress constant ERC721 = 0x58874d2951524F7f851bbBE240f0C3cF0b992d79;\naddress constant ERC1155 = 0xEDfdd7266667D48f3C9aB10194C3d325813d8c39;\naddress public CRYPTOPUNK = 0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB;\nmapping(address => PunkProxy) punkProxies;\nmapping(uint256 => bool) punkInUse;\naddress public TRADESQUAD = 0xdbD4264248e2f814838702E0CB3015AC3a7157a1;\naddress payable public VAULT = 0xdbD4264248e2f814838702E0CB3015AC3a7157a1;\nmapping(address => address) dappRelations;\nmapping(address => bool) whiteList;\nuint256 constant secs = 86400;\nCounters.Counter private _swapIds;\nbool private swapFlag;\nmapping(uint256 => swapStruct[]) nftsOne;\nmapping(uint256 => swapStruct[]) nftsTwo;\nmapping(address => swapIntent[]) swapList;\nmapping(uint256 => uint256) swapMatch;\npaymentStruct payment;","after":"mapping(address => PunkProxy) punkProxies;\nmapping(uint256 => bool) punkInUse;\nmapping(address => address) dappRelations;\nmapping(address => bool) whiteList;\nuint256 constant secs = 86400;\nCounters.Counter private _swapIds;\nmapping(uint256 => swapStruct[]) nftsOne;\nmapping(uint256 => swapStruct[]) nftsTwo;\nmapping(address => swapIntent[]) swapList;\nmapping(uint256 => uint256) swapMatch;\npaymentStruct payment;\naddress constant ERC20 = 0x90b7cf88476cc99D295429d4C1Bb1ff52448abeE;\naddress constant ERC721 = 0x58874d2951524F7f851bbBE240f0C3cF0b992d79;\naddress constant ERC1155 = 0xEDfdd7266667D48f3C9aB10194C3d325813d8c39;\naddress public CRYPTOPUNK = 0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB;\naddress public TRADESQUAD = 0xdbD4264248e2f814838702E0CB3015AC3a7157a1;\naddress payable public VAULT = 0xdbD4264248e2f814838702E0CB3015AC3a7157a1;\nbool private swapFlag;\n","contract":"BatchSwap","time":1}]}