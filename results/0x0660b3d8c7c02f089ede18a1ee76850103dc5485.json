{"time":64,"results":[{"type":"external-function ","before":"function createEdition(\n        AllocatedEditionsStorage.NFTMetadata memory metadata,\n        AllocatedEditionsStorage.EditionData memory editionData,\n        AllocatedEditionsStorage.AdminData memory adminData\n    ) external returns (address allocatedEditionsProxy) {\n        require(\n            adminData.feePercentage >= minFeePercentage,\n            \"fee is too low\"\n        );\n\n        require(editionData.allocation < editionData.quantity, \"allocation must be less than quantity\");\n\n        parameters = Parameters({\n        // NFT Metadata\n        nftMetaData : abi.encode(\n                metadata.name,\n                metadata.symbol,\n                baseURI,\n                metadata.contentHash\n            ),\n        // Edition Data\n        allocation : editionData.allocation,\n        quantity : editionData.quantity,\n        price : editionData.price,\n        // Admin Data\n        adminData : abi.encode(\n                adminData.operator,\n                adminData.tributary,\n                adminData.fundingRecipient,\n                adminData.feePercentage,\n                treasuryConfig\n            )\n        });\n\n        // deploys proxy\n        allocatedEditionsProxy = address(\n            new AllocatedEditionsProxy{\n            salt : keccak256(abi.encode(metadata.symbol, adminData.operator))\n            }(adminData.operator, proxyRegistry)\n        );\n\n        delete parameters;\n\n        emit AllocatedEditionDeployed(\n            allocatedEditionsProxy,\n            metadata.name,\n            metadata.symbol,\n            adminData.operator\n        );\n\n        ITributaryRegistry(tributaryRegistry).registerTributary(\n            allocatedEditionsProxy,\n            adminData.tributary\n        );\n    }","after":"function createEdition(\n        AllocatedEditionsStorage.NFTMetadata calldata metadata,\n        AllocatedEditionsStorage.EditionData calldata editionData,\n        AllocatedEditionsStorage.AdminData calldata adminData\n    ) external returns (address allocatedEditionsProxy) {\n        require(\n            adminData.feePercentage >= minFeePercentage,\n            \"fee is too low\"\n        );\n\n        require(editionData.allocation < editionData.quantity, \"allocation must be less than quantity\");\n\n        parameters = Parameters({\n        // NFT Metadata\n        nftMetaData : abi.encode(\n                metadata.name,\n                metadata.symbol,\n                baseURI,\n                metadata.contentHash\n            ),\n        // Edition Data\n        allocation : editionData.allocation,\n        quantity : editionData.quantity,\n        price : editionData.price,\n        // Admin Data\n        adminData : abi.encode(\n                adminData.operator,\n                adminData.tributary,\n                adminData.fundingRecipient,\n                adminData.feePercentage,\n                treasuryConfig\n            )\n        });\n\n        // deploys proxy\n        allocatedEditionsProxy = address(\n            new AllocatedEditionsProxy{\n            salt : keccak256(abi.encode(metadata.symbol, adminData.operator))\n            }(adminData.operator, proxyRegistry)\n        );\n\n        delete parameters;\n\n        emit AllocatedEditionDeployed(\n            allocatedEditionsProxy,\n            metadata.name,\n            metadata.symbol,\n            adminData.operator\n        );\n\n        ITributaryRegistry(tributaryRegistry).registerTributary(\n            allocatedEditionsProxy,\n            adminData.tributary\n        );\n    }","contract":"AllocatedEditionsFactory","time":0},{"type":"immutable-restrict-modification ","before":"string baseURI;","after":"string immutable baseURI;","contract":"AllocatedEditionsFactory","time":0},{"type":"immutable-restrict-modification ","before":"string public name;","after":"string public immutable name;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol;","after":"string public constant symbol;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"string public baseURI;","after":"string public constant baseURI;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"bytes32 contentHash;","after":"bytes32 constant contentHash;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public allocation;","after":"uint256 public constant allocation;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public quantity;","after":"uint256 public constant quantity;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public price;","after":"uint256 public constant price;","contract":"AllocatedEditionsProxy","time":0},{"type":"immutable-restrict-modification ","before":"address public operator;","after":"address public immutable operator;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"address public tributary;","after":"address public constant tributary;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"address payable public fundingRecipient;","after":"address payable public constant fundingRecipient;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 feePercentage;","after":"uint256 constant feePercentage;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"address treasuryConfig;","after":"address constant treasuryConfig;","contract":"AllocatedEditionsProxy","time":0},{"type":"immutable-restrict-modification ","before":"uint256 internal nextTokenId;","after":"uint256 internal immutable nextTokenId;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"uint256 internal allocationsTransferred = 0;","after":"uint256 internal constant allocationsTransferred = 0;","contract":"AllocatedEditionsProxy","time":0},{"type":"constant-restrict-modification  ","before":"address public logic;","after":"address public constant logic;","contract":"AllocatedEditionsProxy","time":0},{"type":"immutable-restrict-modification ","before":"address public proxyRegistry;","after":"address public immutable proxyRegistry;","contract":"AllocatedEditionsProxy","time":0}]}