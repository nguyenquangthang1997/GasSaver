{"time":95,"results":[{"type":"external-function ","before":"function setTierTokenFactors(\n\n        address[] calldata _tokens,\n\n        TokenFactor[][] memory _tokenFactors,\n\n        uint[] calldata _liqIncentives\n\n    ) external onlyGov {\n\n        require(_tokenFactors.length == _tokens.length, 'token factors & tokens length mismatched');\n\n        require(_liqIncentives.length == _tokens.length, 'liq incentive & tokens length mismatched');\n\n        for (uint idx = 0; idx < _tokens.length; idx++) {\n\n            require(\n\n                _tokenFactors[idx].length == tierCount,\n\n                'token factor of token & tier count length mismatched'\n\n            );\n\n            // clear old values\n\n            delete tierTokenFactors[_tokens[idx]];\n\n            // push new values\n\n            for (uint i = 0; i < _tokenFactors[idx].length; i++) {\n\n                // check values\n\n                if (i > 0) {\n\n                    require(\n\n                        _tokenFactors[idx][i - 1].borrowFactor >= _tokenFactors[idx][i].borrowFactor,\n\n                        'borrow factors should be non-increasing'\n\n                    );\n\n                    require(\n\n                        _tokenFactors[idx][i - 1].collateralFactor <= _tokenFactors[idx][i].collateralFactor,\n\n                        'collateral factors should be non-decreasing'\n\n                    );\n\n                }\n\n                // push\n\n                tierTokenFactors[_tokens[idx]].push(_tokenFactors[idx][i]);\n\n                emit SetTierTokenFactor(_tokens[idx], i, _tokenFactors[idx][i]);\n\n            }\n\n            require(\n\n                _tokenFactors[idx][_tokenFactors[idx].length - 1].borrowFactor >= 1e4,\n\n                'borrow factor must be at least 10000'\n\n            );\n\n            require(\n\n                _tokenFactors[idx][_tokenFactors[idx].length - 1].collateralFactor <= 1e4,\n\n                'collateral factor must be no more than 10000'\n\n            );\n\n            // set liq incentive\n\n            require(_liqIncentives[idx] != 0, 'liq incentive should != 0');\n\n            liqIncentives[_tokens[idx]] = _liqIncentives[idx];\n\n            emit SetLiqIncentive(_tokens[idx], _liqIncentives[idx]);\n\n        }\n\n    }","after":"function setTierTokenFactors(\n\n        address[] calldata _tokens,\n\n        TokenFactor[][] calldata _tokenFactors,\n\n        uint[] calldata _liqIncentives\n\n    ) external onlyGov {\n\n        require(_tokenFactors.length == _tokens.length, 'token factors & tokens length mismatched');\n\n        require(_liqIncentives.length == _tokens.length, 'liq incentive & tokens length mismatched');\n\n        for (uint idx = 0; idx < _tokens.length; idx++) {\n\n            require(\n\n                _tokenFactors[idx].length == tierCount,\n\n                'token factor of token & tier count length mismatched'\n\n            );\n\n            // clear old values\n\n            delete tierTokenFactors[_tokens[idx]];\n\n            // push new values\n\n            for (uint i = 0; i < _tokenFactors[idx].length; i++) {\n\n                // check values\n\n                if (i > 0) {\n\n                    require(\n\n                        _tokenFactors[idx][i - 1].borrowFactor >= _tokenFactors[idx][i].borrowFactor,\n\n                        'borrow factors should be non-increasing'\n\n                    );\n\n                    require(\n\n                        _tokenFactors[idx][i - 1].collateralFactor <= _tokenFactors[idx][i].collateralFactor,\n\n                        'collateral factors should be non-decreasing'\n\n                    );\n\n                }\n\n                // push\n\n                tierTokenFactors[_tokens[idx]].push(_tokenFactors[idx][i]);\n\n                emit SetTierTokenFactor(_tokens[idx], i, _tokenFactors[idx][i]);\n\n            }\n\n            require(\n\n                _tokenFactors[idx][_tokenFactors[idx].length - 1].borrowFactor >= 1e4,\n\n                'borrow factor must be at least 10000'\n\n            );\n\n            require(\n\n                _tokenFactors[idx][_tokenFactors[idx].length - 1].collateralFactor <= 1e4,\n\n                'collateral factor must be no more than 10000'\n\n            );\n\n            // set liq incentive\n\n            require(_liqIncentives[idx] != 0, 'liq incentive should != 0');\n\n            liqIncentives[_tokens[idx]] = _liqIncentives[idx];\n\n            emit SetLiqIncentive(_tokens[idx], _liqIncentives[idx]);\n\n        }\n\n    }","contract":"TierProxyOracle","time":0}]}