{"time":318,"results":[{"type":"loop-duplication","before":"\nstart line 823 column 8, end line 834 column 8\nfor (uint256 i = 0; i < _protocols.length; i++) {\n\n            require(nftCoverPrice[_protocols[i]] != 0, \"Protocol price is zero\");\n\n\n            // nftCoverPrice is Wei per second per full Ether, so a cover amont in Wei. This is divided after this loop.\n\n            uint256 pricePerSec = nftCoverPrice[_protocols[i]].mul(_coverAmounts[i]);\n\n            newPricePerSec = newPricePerSec.add(pricePerSec);\n\n        }\nstart line 882 column 8, end line 890 column 8\nfor (uint256 i = 0; i < _protocols.length; i++) {\n\n            bytes32 key = _hashKey(msg.sender, plans[msg.sender].length - 1, i);\n\n            uint64 protocolId = IStakeManager(getModule(\"STAKE\")).protocolId(_protocols[i]);\n\n            protocolPlan[key] = ProtocolPlan(protocolId, uint192(_coverAmounts[i]));\n\n        }","after":"// merge loop\n\nstart line 823 column 8, end line 834 column 8\nfor (uint256 i = 0; i < _protocols.length; i++) {\n\n            require(nftCoverPrice[_protocols[i]] != 0, \"Protocol price is zero\");\n\n\n            // nftCoverPrice is Wei per second per full Ether, so a cover amont in Wei. This is divided after this loop.\n\n            uint256 pricePerSec = nftCoverPrice[_protocols[i]].mul(_coverAmounts[i]);\n\n            newPricePerSec = newPricePerSec.add(pricePerSec);\n\n        }\nstart line 882 column 8, end line 890 column 8\nfor (uint256 i = 0; i < _protocols.length; i++) {\n\n            bytes32 key = _hashKey(msg.sender, plans[msg.sender].length - 1, i);\n\n            uint64 protocolId = IStakeManager(getModule(\"STAKE\")).protocolId(_protocols[i]);\n\n            protocolPlan[key] = ProtocolPlan(protocolId, uint192(_coverAmounts[i]));\n\n        }","contract":"PlanManager","time":0},{"type":"loop-calculation","before":"ProtocolPlan memory protocol = protocolPlan[key];","after":"// move outside for loop\nProtocolPlan memory protocol = protocolPlan[key];","loc":{"start":{"line":928,"column":12},"end":{"line":928,"column":60}},"contract":"PlanManager","time":0},{"type":"loop-calculation","before":"uint256 shield = arShields[_user];","after":"// move outside for loop\nuint256 shield = arShields[_user];","loc":{"start":{"line":935,"column":12},"end":{"line":935,"column":45}},"contract":"PlanManager","time":0}]}