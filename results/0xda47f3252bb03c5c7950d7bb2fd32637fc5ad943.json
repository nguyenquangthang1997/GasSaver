{"time":363,"results":[{"type":"state-data-arrangement ","before":"\n string public name\n uint8 public decimals\n string public symbol\n string public version = 'MMT_0.2'\n MiniMeToken public parentToken\n uint public parentSnapShotBlock\n uint public creationBlock\n mapping(address => Checkpoint[]) balances\n mapping(address => mapping(address => uint256)) allowed\n Checkpoint[] totalSupplyHistory\n bool public transfersEnabled\n MiniMeTokenFactory public tokenFactory","after":" string public name\n string public symbol\n string public version = 'MMT_0.2'\n MiniMeToken public parentToken\n uint public parentSnapShotBlock\n uint public creationBlock\n mapping(address => Checkpoint[]) balances\n mapping(address => mapping(address => uint256)) allowed\n Checkpoint[] totalSupplyHistory\n MiniMeTokenFactory public tokenFactory\n uint8 public decimals\n bool public transfersEnabled\n","contract":"MiniMeToken","time":0},{"type":"state-data-arrangement ","before":"\n uint public constant MAX_STAKE_PATHS = 4\n uint public constant MIN_JURORS = 3\n uint public constant NON_PAYABLE_AMOUNT = (2 ** 256 - 2) / 2\n uint public constant ALPHA_DIVISOR = 1e4\n address public governor\n MiniMeToken public pinakion\n RNG public RNGenerator\n Phase public phase\n uint public lastPhaseChange\n uint public disputesWithoutJurors\n uint public RNBlock\n uint public RN\n uint public minStakingTime\n uint public maxDrawingTime\n bool public lockInsolventTransfers = true\n Court[] public courts\n SortitionSumTreeFactory.SortitionSumTrees internal sortitionSumTrees\n mapping(uint => DelayedSetStake) public delayedSetStakes\n uint public nextDelayedSetStake = 1\n uint public lastDelayedSetStake\n Dispute[] public disputes\n mapping(address => Juror) public jurors","after":" uint public constant MAX_STAKE_PATHS = 4\n uint public constant MIN_JURORS = 3\n uint public constant NON_PAYABLE_AMOUNT = (2 ** 256 - 2) / 2\n uint public constant ALPHA_DIVISOR = 1e4\n MiniMeToken public pinakion\n RNG public RNGenerator\n Phase public phase\n uint public lastPhaseChange\n uint public disputesWithoutJurors\n uint public RNBlock\n uint public RN\n uint public minStakingTime\n uint public maxDrawingTime\n Court[] public courts\n SortitionSumTreeFactory.SortitionSumTrees internal sortitionSumTrees\n mapping(uint => DelayedSetStake) public delayedSetStakes\n uint public nextDelayedSetStake = 1\n uint public lastDelayedSetStake\n Dispute[] public disputes\n mapping(address => Juror) public jurors\n address public governor\n bool public lockInsolventTransfers = true\n","contract":"KlerosLiquid","time":0}]}