{"time":140,"results":[{"type":"immutable-restrict-modification ","before":"��║██║ ╚�","after":"��║██║ ╚�","contract":"BurnedPalLoanToken","time":0},{"type":"immutable-restrict-modification ","before":"�     ╚═╝  ╚�","after":"�     ╚═╝  ╚�","contract":"BurnedPalLoanToken","time":0},{"type":"immutable-restrict-modification ","before":"╚═════╝ ","after":"╚═════╝ ","contract":"BurnedPalLoanToken","time":0},{"type":"external-function ","before":" owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n\n    /**\n    * @notice Return the approved address for the token\n    * @param tokenId Id of the token\n    * @return address : spender's address\n    */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        require(_exists(tokenId), \"ERC721: appr","after":" owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n\n    /**\n    * @notice Return the approved address for the token\n    * @param tokenId Id of the token\n    * @return address : spender's address\n    */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        require(_exists(tokenId), \"ERC721: appr","contract":"PalLoanToken","time":0},{"type":"external-function ","before":"virtual returns (uint) {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n\n        //Get the n","after":"virtual returns (uint) {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n\n        //Get the n","contract":"PalLoanToken","time":0},{"type":"immutable-restrict-modification ","before":"l);\n\n    function r","after":"l);\n\n    function r","contract":"PalLoanToken","time":0},{"type":"immutable-restrict-modification ","before":") external returns (b","after":") external returns (b","contract":"PalLoanToken","time":0}]}