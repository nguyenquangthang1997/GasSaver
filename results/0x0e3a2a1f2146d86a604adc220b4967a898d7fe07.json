{"time":292,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"state-data-arrangement ","before":"\nuint16 private constant MAX_UINT16 = 2 ** 16 - 1;\nuint16[] internal cardProtos;\nuint8[] internal cardQualities;\nuint16[] public protoToSeason;\naddress public propertyManager;\nProto[] public protos;\nSeason[] public seasons;\nmapping(uint256 => bool) public seasonTradable;\nmapping(address => mapping(uint256 => bool)) public factoryApproved;\nmapping(uint16 => mapping(address => bool)) public mythicApproved;\nmapping(uint16 => bool) public mythicTradable;\nmapping(uint16 => bool) public mythicCreated;\nuint16 public constant MYTHIC_THRESHOLD = 65000;\nstring public baseURI = \"https://api.immutable.com/asset/\";","after":"uint16[] internal cardProtos;\nuint8[] internal cardQualities;\nuint16[] public protoToSeason;\nProto[] public protos;\nSeason[] public seasons;\nmapping(uint256 => bool) public seasonTradable;\nmapping(address => mapping(uint256 => bool)) public factoryApproved;\nmapping(uint16 => mapping(address => bool)) public mythicApproved;\nmapping(uint16 => bool) public mythicTradable;\nmapping(uint16 => bool) public mythicCreated;\nstring public baseURI = \"https://api.immutable.com/asset/\";\naddress public propertyManager;\nuint16 private constant MAX_UINT16 = 2 ** 16 - 1;\nuint16 public constant MYTHIC_THRESHOLD = 65000;\n","contract":"NewCards","time":0},{"type":"state-data-arrangement ","before":"\nuint16 private constant MAX_UINT16 = 2 ** 16 - 1;\nuint16[] public cardProtos;\nuint8[] public cardQualities;\nuint16[] public protoToSeason;\naddress public propertyManager;\nProto[] public protos;\nSeason[] public seasons;\nmapping(uint256 => bool) public seasonTradable;\nmapping(address => mapping(uint256 => bool)) public factoryApproved;\nmapping(uint16 => mapping(address => bool)) public mythicApproved;\nmapping(uint16 => bool) public mythicTradable;\nmapping(uint16 => bool) public mythicCreated;\nuint16 public constant MYTHIC_THRESHOLD = 65000;","after":"uint16[] public cardProtos;\nuint8[] public cardQualities;\nuint16[] public protoToSeason;\nProto[] public protos;\nSeason[] public seasons;\nmapping(uint256 => bool) public seasonTradable;\nmapping(address => mapping(uint256 => bool)) public factoryApproved;\nmapping(uint16 => mapping(address => bool)) public mythicApproved;\nmapping(uint16 => bool) public mythicTradable;\nmapping(uint16 => bool) public mythicCreated;\naddress public propertyManager;\nuint16 private constant MAX_UINT16 = 2 ** 16 - 1;\nuint16 public constant MYTHIC_THRESHOLD = 65000;\n","contract":"Cards","time":0},{"type":"state-data-arrangement ","before":"\nuint16 private constant MAX_UINT16 = 2 ** 16 - 1;\nCards public old;\nbool public migrating;","after":"Cards public old;\nuint16 private constant MAX_UINT16 = 2 ** 16 - 1;\nbool public migrating;\n","contract":"BatchWrapper","time":0}]}