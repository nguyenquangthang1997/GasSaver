{"time":276,"results":[{"type":"state-data-arrangement ","before":"\nbool public live;\nuint8 public constant decimals = 18;\nuint256 public totalSupply;\nstring public constant name = \"BTU Incentivized DAI\";\nstring public constant symbol = \"bDAI\";\nstring public constant version = \"1\";\nmapping(address => uint256) private _balances;\nmapping(address => uint256) private _pies;\nmapping(address => uint256) private _nonces;\nmapping(address => mapping(address => uint256)) private _allowances;\nERC20Like public dai;\nJoinLike public daiJoin;\nPotLike public pot;\nVatLike public vat;\nSwapperLike public swapper;\naddress public owner;\nbytes32 public DOMAIN_SEPARATOR;\nbytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\nbytes32 public constant CLAIM_TYPEHASH = 0xcbd06f2e482e52538ba0a2e3b1ec074c1ff826895448b9cf7b33c0abbbe904b3;\nbytes32 public constant EXIT_TYPEHASH = 0x703d2576480f8b8746c2232693aae93ab2bda9c8b68427bce6eff0c6238807ed;","after":"uint256 public totalSupply;\nstring public constant name = \"BTU Incentivized DAI\";\nstring public constant symbol = \"bDAI\";\nstring public constant version = \"1\";\nmapping(address => uint256) private _balances;\nmapping(address => uint256) private _pies;\nmapping(address => uint256) private _nonces;\nmapping(address => mapping(address => uint256)) private _allowances;\nERC20Like public dai;\nJoinLike public daiJoin;\nPotLike public pot;\nVatLike public vat;\nSwapperLike public swapper;\nbytes32 public DOMAIN_SEPARATOR;\nbytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\nbytes32 public constant CLAIM_TYPEHASH = 0xcbd06f2e482e52538ba0a2e3b1ec074c1ff826895448b9cf7b33c0abbbe904b3;\nbytes32 public constant EXIT_TYPEHASH = 0x703d2576480f8b8746c2232693aae93ab2bda9c8b68427bce6eff0c6238807ed;\naddress public owner;\nbool public live;\nuint8 public constant decimals = 18;\n","contract":"Bdai","time":0},{"type":"external-function ","before":"function transfer(address[] memory recipients, uint256[] memory amounts)\n\n    public\n\n    returns (bool)\n\n    {\n\n        _transfer(msg.sender, recipients, amounts);\n\n        return true;\n\n    }","after":"function transfer(address[] calldata recipients, uint256[] calldata amounts)\n\n    public\n\n    returns (bool)\n\n    {\n\n        _transfer(msg.sender, recipients, amounts);\n\n        return true;\n\n    }","contract":"Bdai","time":0},{"type":"external-function ","before":"function transferFrom(\n\n        address sender,\n\n        address[] memory recipients,\n\n        uint256[] memory amounts\n\n    ) public returns (bool) {\n\n        uint256 total;\n\n\n        for (uint256 i; i < recipients.length; ++i) {\n\n            total = total.add(amounts[i]);\n\n        }\n\n\n        _allow(sender, msg.sender, total);\n\n        _transfer(sender, recipients, amounts);\n\n\n        return true;\n\n    }","after":"function transferFrom(\n\n        address sender,\n\n        address[] calldata recipients,\n\n        uint256[] calldata amounts\n\n    ) public returns (bool) {\n\n        uint256 total;\n\n\n        for (uint256 i; i < recipients.length; ++i) {\n\n            total = total.add(amounts[i]);\n\n        }\n\n\n        _allow(sender, msg.sender, total);\n\n        _transfer(sender, recipients, amounts);\n\n\n        return true;\n\n    }","contract":"Bdai","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public DOMAIN_SEPARATOR;","after":"bytes32 public immutable DOMAIN_SEPARATOR;","contract":"Bdai","time":0}]}