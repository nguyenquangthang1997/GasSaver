{"time":700,"results":[{"type":"state-data-arrangement ","before":"\nIMetaImplementationUSD private frax3crv_metapool;\nIStableSwap3Pool private three_pool;\nERC20 private three_pool_erc20;\nFRAXStablecoin private FRAX;\nFraxPool private pool;\nFRAXShares private FXS;\nERC20 private collateral_token;\nERC20 private CRV = ERC20(0xD533a949740bb3306d119CC777fa900bA034cd52);\naddress public frax3crv_metapool_address;\naddress public three_pool_address;\naddress public three_pool_token_address;\naddress public frax_contract_address;\naddress public fxs_contract_address;\naddress public collateral_token_address;\naddress public timelock_address;\naddress public owner_address;\naddress public custodian_address;\naddress public pool_address;\nuint256 public minted_frax_historical = 0;\nuint256 public burned_frax_historical = 0;\nuint256 public max_frax_outstanding = uint256(2000000e18);\nuint256 public borrowed_collat_historical = 0;\nuint256 public returned_collat_historical = 0;\nuint256 public collat_borrow_cap = uint256(1000000e6);\nuint256 public min_cr = 850000;\nuint256 private missing_decimals;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public liq_slippage_3crv = 900000;\nuint256 public add_liq_slippage_metapool = 950000;\nuint256 public rem_liq_slippage_metapool = 950000;\nint128 public THREE_POOL_COIN_INDEX = 1;\nbool public custom_floor = false;\nuint256 public frax_floor;\nbool public set_discount = false;\nuint256 public discount_rate;\nbool public override_collat_balance = false;\nuint256 public override_collat_balance_amount;\nuint256 public convergence_window = 1e16;","after":"IMetaImplementationUSD private frax3crv_metapool;\nIStableSwap3Pool private three_pool;\nERC20 private three_pool_erc20;\nFRAXStablecoin private FRAX;\nFraxPool private pool;\nFRAXShares private FXS;\nERC20 private collateral_token;\nERC20 private CRV = ERC20(0xD533a949740bb3306d119CC777fa900bA034cd52);\nuint256 public minted_frax_historical = 0;\nuint256 public burned_frax_historical = 0;\nuint256 public max_frax_outstanding = uint256(2000000e18);\nuint256 public borrowed_collat_historical = 0;\nuint256 public returned_collat_historical = 0;\nuint256 public collat_borrow_cap = uint256(1000000e6);\nuint256 public min_cr = 850000;\nuint256 private missing_decimals;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public liq_slippage_3crv = 900000;\nuint256 public add_liq_slippage_metapool = 950000;\nuint256 public rem_liq_slippage_metapool = 950000;\nuint256 public frax_floor;\nuint256 public discount_rate;\nuint256 public override_collat_balance_amount;\nuint256 public convergence_window = 1e16;\naddress public frax3crv_metapool_address;\naddress public three_pool_address;\naddress public three_pool_token_address;\naddress public frax_contract_address;\naddress public fxs_contract_address;\naddress public collateral_token_address;\naddress public timelock_address;\naddress public owner_address;\naddress public custodian_address;\naddress public pool_address;\nint128 public THREE_POOL_COIN_INDEX = 1;\nbool public custom_floor = false;\nbool public set_discount = false;\nbool public override_collat_balance = false;\n","contract":"CurveAMO","time":44},{"type":"state-data-arrangement ","before":"\nstring public symbol;\nstring public name;\nuint8 public constant decimals = 18;\naddress public FRAXStablecoinAdd;\nuint256 public constant genesis_supply = 100000000e18;\nuint256 public FXS_DAO_min;\naddress public owner_address;\naddress public oracle_address;\naddress public timelock_address;\nFRAXStablecoin private FRAX;\nbool public trackingVotes = true;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;","after":"string public symbol;\nstring public name;\nuint256 public constant genesis_supply = 100000000e18;\nuint256 public FXS_DAO_min;\nFRAXStablecoin private FRAX;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;\naddress public FRAXStablecoinAdd;\naddress public owner_address;\naddress public oracle_address;\naddress public timelock_address;\nuint8 public constant decimals = 18;\nbool public trackingVotes = true;\n","contract":"FRAXShares","time":1},{"type":"state-data-arrangement ","before":"\nChainlinkETHUSDPriceConsumer private eth_usd_pricer;\nuint8 private eth_usd_pricer_decimals;\nUniswapPairOracle private fraxEthOracle;\nUniswapPairOracle private fxsEthOracle;\nstring public symbol;\nstring public name;\nuint8 public constant decimals = 18;\naddress public owner_address;\naddress public creator_address;\naddress public timelock_address;\naddress public controller_address;\naddress public fxs_address;\naddress public frax_eth_oracle_address;\naddress public fxs_eth_oracle_address;\naddress public weth_address;\naddress public eth_usd_consumer_address;\nuint256 public constant genesis_supply = 2000000e18;\naddress[] public frax_pools_array;\nmapping(address => bool) public frax_pools;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public global_collateral_ratio;\nuint256 public redemption_fee;\nuint256 public minting_fee;\nuint256 public frax_step;\nuint256 public refresh_cooldown;\nuint256 public price_target;\nuint256 public price_band;\naddress public DEFAULT_ADMIN_ADDRESS;\nbytes32 public constant COLLATERAL_RATIO_PAUSER = keccak256(\"COLLATERAL_RATIO_PAUSER\");\nbool public collateral_ratio_paused = false;\nuint256 public last_call_time;","after":"ChainlinkETHUSDPriceConsumer private eth_usd_pricer;\nUniswapPairOracle private fraxEthOracle;\nUniswapPairOracle private fxsEthOracle;\nstring public symbol;\nstring public name;\nuint256 public constant genesis_supply = 2000000e18;\naddress[] public frax_pools_array;\nmapping(address => bool) public frax_pools;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public global_collateral_ratio;\nuint256 public redemption_fee;\nuint256 public minting_fee;\nuint256 public frax_step;\nuint256 public refresh_cooldown;\nuint256 public price_target;\nuint256 public price_band;\nbytes32 public constant COLLATERAL_RATIO_PAUSER = keccak256(\"COLLATERAL_RATIO_PAUSER\");\nuint256 public last_call_time;\naddress public owner_address;\naddress public creator_address;\naddress public timelock_address;\naddress public controller_address;\naddress public fxs_address;\naddress public frax_eth_oracle_address;\naddress public fxs_eth_oracle_address;\naddress public weth_address;\naddress public eth_usd_consumer_address;\naddress public DEFAULT_ADMIN_ADDRESS;\nuint8 private eth_usd_pricer_decimals;\nuint8 public constant decimals = 18;\nbool public collateral_ratio_paused = false;\n","contract":"FRAXStablecoin","time":2},{"type":"state-data-arrangement ","before":"\nERC20 private collateral_token;\naddress private collateral_address;\naddress private owner_address;\naddress private frax_contract_address;\naddress private fxs_contract_address;\naddress private timelock_address;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nUniswapPairOracle private collatEthOracle;\naddress public collat_eth_oracle_address;\naddress private weth_address;\nuint256 public minting_fee;\nuint256 public redemption_fee;\nuint256 public buyback_fee;\nuint256 public recollat_fee;\nmapping(address => uint256) public redeemFXSBalances;\nmapping(address => uint256) public redeemCollateralBalances;\nuint256 public unclaimedPoolCollateral;\nuint256 public unclaimedPoolFXS;\nmapping(address => uint256) public lastRedeemed;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_MAX = 1e6;\nuint256 private immutable missing_decimals;\nuint256 public pool_ceiling = 0;\nuint256 public pausedPrice = 0;\nuint256 public bonus_rate = 7500;\nuint256 public redemption_delay = 1;\nbytes32 private constant MINT_PAUSER = keccak256(\"MINT_PAUSER\");\nbytes32 private constant REDEEM_PAUSER = keccak256(\"REDEEM_PAUSER\");\nbytes32 private constant BUYBACK_PAUSER = keccak256(\"BUYBACK_PAUSER\");\nbytes32 private constant RECOLLATERALIZE_PAUSER = keccak256(\"RECOLLATERALIZE_PAUSER\");\nbytes32 private constant COLLATERAL_PRICE_PAUSER = keccak256(\"COLLATERAL_PRICE_PAUSER\");\nbool public mintPaused = false;\nbool public redeemPaused = false;\nbool public recollateralizePaused = false;\nbool public buyBackPaused = false;\nbool public collateralPricePaused = false;","after":"ERC20 private collateral_token;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nUniswapPairOracle private collatEthOracle;\nuint256 public minting_fee;\nuint256 public redemption_fee;\nuint256 public buyback_fee;\nuint256 public recollat_fee;\nmapping(address => uint256) public redeemFXSBalances;\nmapping(address => uint256) public redeemCollateralBalances;\nuint256 public unclaimedPoolCollateral;\nuint256 public unclaimedPoolFXS;\nmapping(address => uint256) public lastRedeemed;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_MAX = 1e6;\nuint256 private immutable missing_decimals;\nuint256 public pool_ceiling = 0;\nuint256 public pausedPrice = 0;\nuint256 public bonus_rate = 7500;\nuint256 public redemption_delay = 1;\nbytes32 private constant MINT_PAUSER = keccak256(\"MINT_PAUSER\");\nbytes32 private constant REDEEM_PAUSER = keccak256(\"REDEEM_PAUSER\");\nbytes32 private constant BUYBACK_PAUSER = keccak256(\"BUYBACK_PAUSER\");\nbytes32 private constant RECOLLATERALIZE_PAUSER = keccak256(\"RECOLLATERALIZE_PAUSER\");\nbytes32 private constant COLLATERAL_PRICE_PAUSER = keccak256(\"COLLATERAL_PRICE_PAUSER\");\naddress private collateral_address;\naddress private owner_address;\naddress private frax_contract_address;\naddress private fxs_contract_address;\naddress private timelock_address;\naddress public collat_eth_oracle_address;\naddress private weth_address;\nbool public mintPaused = false;\nbool public redeemPaused = false;\nbool public recollateralizePaused = false;\nbool public buyBackPaused = false;\nbool public collateralPricePaused = false;\n","contract":"FraxPool","time":7},{"type":"state-data-arrangement ","before":"\naddress owner_address;\naddress timelock_address;\nuint public PERIOD = 3600;\nuint public CONSULT_LENIENCY = 120;\nbool public ALLOW_STALE_CONSULTS = false;\nIUniswapV2Pair public immutable pair;\naddress public immutable token0;\naddress public immutable token1;\nuint    public price0CumulativeLast;\nuint    public price1CumulativeLast;\nuint32  public blockTimestampLast;\nFixedPoint.uq112x112 public price0Average;\nFixedPoint.uq112x112 public price1Average;","after":"uint public PERIOD = 3600;\nuint public CONSULT_LENIENCY = 120;\nIUniswapV2Pair public immutable pair;\nuint    public price0CumulativeLast;\nuint    public price1CumulativeLast;\nFixedPoint.uq112x112 public price0Average;\nFixedPoint.uq112x112 public price1Average;\naddress owner_address;\naddress timelock_address;\naddress public immutable token0;\naddress public immutable token1;\nuint32  public blockTimestampLast;\nbool public ALLOW_STALE_CONSULTS = false;\n","contract":"UniswapPairOracle","time":0}]}