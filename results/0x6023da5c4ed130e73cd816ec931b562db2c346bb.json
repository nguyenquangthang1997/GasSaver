{"time":185,"results":[{"type":"loop-calculation","before":"earlyMintAmount > 0, 'no earl","after":"// move outside for loop\nearlyMintAmount > 0, 'no earl","loc":{"start":{"line":3658,"column":12},"end":{"line":3658,"column":40}},"contract":"GameDisease","time":0},{"type":"state-data-arrangement ","before":"\nnvalid payee index');\n\n        require(_paye\nIndex[payeeIndex] < _payeeAccounts[payeeIndex].length - 1, \"No more respawns\");\n\n        _payeeOutp\n[payeeIndex] += 1;\n\n    }\n\n}\n\n\ncontract GameDisease is ERC721, Ownable, Spli\nERC721Enumerable {\n\n    using SafeMath for uint256;\n\n\n\n    event gifted(uint\ndexed tokenId, address indexed to);\n\n    \nminted(uint256 indexed tokenId, addr\ndexed by);\n\n    event bought(uint\ndexed tokenId, address indexed by);\n\n    event Perm\nRI(string _value, uint256 indexed _id);\n\n\n    \ng(address => bool) public EARLY_BIRDS;\n = \"611f8478445246ab15a022c42642210f479a47e86\ndress public OG_COLLECTION_1 = 0x1c903a\nB;\n\n    address public OG_COLLECTION_2 = 0x838\nEbBe;\n\n    uint256 public OGS_GIFT_\nION = 661;\n\n    uint256 public TEAM_ALLOCATION = 60;\n\n    uint25\nic MAX_SUPPLY = 9999;\n\n    u\n public OPEN_SALE_MAX_MINTS_PER_\n = 15;\n\n    uint256 public EARLY\nWHITELIST_MINTS = 3;\n\n\nnt256 public MINT_PRICE = 0.2\n;\n\n\n\n    // 13hs EST 28/10/2021\n\n\nnt256 public EARLY_BIRD_START = 1\n400;\n\n    // 17hs EST 28/10/2021\n\n    uint256\nc SALE_START = 1635454800;\n\n    // 17hs EST 29/10/2\n  uint256 public OG_GIFT_CLAIM_END = 16355412\n   // 13hs EST 1/11/2021\n\n    uint256 public REVEAL = 163578600\n   uint256 public reserved = OGS_GIFT_ALLOCATION + TEAM_ALLOC","after":"nvalid payee index');\n\n        require(_paye\nIndex[payeeIndex] < _payeeAccounts[payeeIndex].length - 1, \"No more respawns\");\n\n        _payeeOutp\ndexed tokenId, address indexed to);\n\n    \nminted(uint256 indexed tokenId, addr\ndexed by);\n\n    event bought(uint\ndexed tokenId, address indexed by);\n\n    event Perm\nRI(string _value, uint256 indexed _id);\n\n\n    \ng(address => bool) public EARLY_BIRDS;\n = \"611f8478445246ab15a022c42642210f479a47e86\ndress public OG_COLLECTION_1 = 0x1c903a\nB;\n\n    address public OG_COLLECTION_2 = 0x838\nEbBe;\n\n    uint256 public OGS_GIFT_\nION = 661;\n\n    uint256 public TEAM_ALLOCATION = 60;\n\n    uint25\nic MAX_SUPPLY = 9999;\n\n    u\n public OPEN_SALE_MAX_MINTS_PER_\nWHITELIST_MINTS = 3;\n\n\n;\n\n\n\n    // 13hs EST 28/10/2021\n\n\nnt256 public EARLY_BIRD_START = 1\n400;\n\n    // 17hs EST 28/10/2021\n\n    uint256\nc SALE_START = 1635454800;\n\n    // 17hs EST 29/10/2\n  uint256 public OG_GIFT_CLAIM_END = 16355412\n   // 13hs EST 1/11/2021\n\n    uint256 public REVEAL = 163578600\n   uint256 public reserved = OGS_GIFT_ALLOCATION + TEAM_ALLOC\n[payeeIndex] += 1;\n\n    }\n\n}\n\n\ncontract GameDisease is ERC721, Ownable, Spli\nERC721Enumerable {\n\n    using SafeMath for uint256;\n\n\n\n    event gifted(uint\n = 15;\n\n    uint256 public EARLY\nnt256 public MINT_PRICE = 0.2\n","contract":"GameDisease","time":0},{"type":"external-function ","before":"              if (!OGS_early_mints[collection][tokenId]) {\n\n                    OGS_early_mints[collection][tokenId] = true;\n\n                    earlyMints += tokenReward(collection, token","after":"              if (!OGS_early_mints[collection][tokenId]) {\n\n                    OGS_early_mints[collection][tokenId] = true;\n\n                    earlyMints += tokenReward(collection, token","contract":"GameDisease","time":0},{"type":"external-function ","before":"nder, tokenId);\n\n        emit minted(tokenId, msg.sender);\n\n        return tokenId;\n\n    }\n\n\n\n\n\n    /* owner */\n\n\n\n    function setBaseURI(string memory newBaseURI) public onlyOwner {\n\n        require(baseUriChanges < 3, 'out of attempts');\n\n        base","after":"nder, tokenId);\n\n        emit minted(tokenId, msg.sender);\n\n        return tokenId;\n\n    }\n\n\n\n\n\n    /* owner */\n\n\n\n    function setBaseURI(string memory newBaseURI) public onlyOwner {\n\n        require(baseUriChanges < 3, 'out of attempts');\n\n        base","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"Index[payeeIndex] < _payeeAccounts[payeeIndex].length - 1, \"No more respawns\");\n\n        _payeeOutp","after":"Index[payeeIndex] < _payeeAccounts[payeeIndex].length - 1, \"No more respawns\");\n\n        _payeeOutp","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"[payeeIndex] += 1;\n\n    }\n\n}\n\n\ncontract GameDisease is ERC721, Ownable, Spli","after":"[payeeIndex] += 1;\n\n    }\n\n}\n\n\ncontract GameDisease is ERC721, Ownable, Spli","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"ERC721Enumerable {\n\n    using SafeMath for uint256;\n\n\n\n    event gifted(uint","after":"ERC721Enumerable {\n\n    using SafeMath for uint256;\n\n\n\n    event gifted(uint","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"dexed tokenId, address indexed to);\n\n    ","after":"dexed tokenId, address indexed to);\n\n    ","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"minted(uint256 indexed tokenId, addr","after":"minted(uint256 indexed tokenId, addr","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"dexed by);\n\n    event bought(uint","after":"dexed by);\n\n    event bought(uint","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"dexed tokenId, address indexed by);\n\n    event Perm","after":"dexed tokenId, address indexed by);\n\n    event Perm","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"RI(string _value, uint256 indexed _id);\n\n\n    ","after":"RI(string _value, uint256 indexed _id);\n\n\n    ","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"g(address => bool) public EARLY_BIRDS;","after":"g(address => bool) public EARLY_BIRDS;","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":" = \"611f8478445246ab15a022c42642210f479a47e86","after":" = \"611f8478445246ab15a022c42642210f479a47e86","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"dress public OG_COLLECTION_1 = 0x1c903a","after":"dress public OG_COLLECTION_1 = 0x1c903a","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"B;\n\n    address public OG_COLLECTION_2 = 0x838","after":"B;\n\n    address public OG_COLLECTION_2 = 0x838","contract":"GameDisease","time":0},{"type":"constant-restrict-modification  ","before":"EbBe;\n\n    uint256 public OGS_GIFT_","after":"EbBe;\n\n    uint256 public OGS_GIFT_","contract":"GameDisease","time":0},{"type":"immutable-restrict-modification ","before":"(IERC165).interfaceId","after":"(IERC165).interfaceId","contract":"GameDisease","time":0},{"type":"immutable-restrict-modification ","before":"nzeppelin/contracts/tok","after":"nzeppelin/contracts/tok","contract":"GameDisease","time":0},{"type":"immutable-restrict-modification ","before":"*\n\n     * - The divisor canno","after":"*\n\n     * - The divisor canno","contract":"GameDisease","time":0}]}