{"time":603,"results":[{"type":"loop-calculation","before":"uint256 _tokenId = tokensSold + 1;","after":"// move outside for loop\nuint256 _tokenId = tokensSold + 1;","loc":{"start":{"line":1727,"column":12},"end":{"line":1727,"column":45}},"contract":"ERC721","time":0},{"type":"state-data-arrangement ","before":"\nbytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\nbytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\nstring private _name;\nstring private _symbol;\nstring public _preSaleAddrs;\nstring internal baseURI;\nuint internal price = 0.05 ether;\nuint internal presellPrice = 0.05 ether;\nuint256 internal tokensSold = 0;\nbool public _startSale = false;\nuint256 constant MAX_SUPPLY = 5000;\naddress public royalty;\nmapping(uint => ForSale) public nftForSale;\nmapping(uint256 => address) private _owners;\nmapping(address => uint256) private _balances;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nmapping(uint256 => string) private _tokenURIs;\nmapping(address => uint256[]) public tokensPerOwner;\nmapping(address => uint256[]) internal ownerToIds;\nmapping(uint256 => uint256) internal idToOwnerIndex;","after":"bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\nbytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\nstring private _name;\nstring private _symbol;\nstring public _preSaleAddrs;\nstring internal baseURI;\nuint internal price = 0.05 ether;\nuint internal presellPrice = 0.05 ether;\nuint256 internal tokensSold = 0;\nuint256 constant MAX_SUPPLY = 5000;\nmapping(uint => ForSale) public nftForSale;\nmapping(uint256 => address) private _owners;\nmapping(address => uint256) private _balances;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nmapping(uint256 => string) private _tokenURIs;\nmapping(address => uint256[]) public tokensPerOwner;\nmapping(address => uint256[]) internal ownerToIds;\nmapping(uint256 => uint256) internal idToOwnerIndex;\naddress public royalty;\nbool public _startSale = false;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newURI) public returns (bool) {\n\n        require(hasRole(MINTER_ROLE, _msgSender()), \"You must have minter role to change baseURI\");\n\n        baseURI = newURI;\n\n        return true;\n\n\n    }","after":"function setBaseURI(string calldata newURI) public returns (bool) {\n\n        require(hasRole(MINTER_ROLE, _msgSender()), \"You must have minter role to change baseURI\");\n\n        baseURI = newURI;\n\n        return true;\n\n\n    }","contract":"COOLDOGS","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"COOLDOGS","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"COOLDOGS","time":0},{"type":"constant-restrict-modification  ","before":"string public _preSaleAddrs;","after":"string public constant _preSaleAddrs;","contract":"COOLDOGS","time":0},{"type":"constant-restrict-modification  ","before":"uint internal price = 0.05 ether;","after":"uint internal constant price = 0.05 ether;","contract":"COOLDOGS","time":0},{"type":"constant-restrict-modification  ","before":"uint internal presellPrice = 0.05 ether;","after":"uint internal constant presellPrice = 0.05 ether;","contract":"COOLDOGS","time":0}]}