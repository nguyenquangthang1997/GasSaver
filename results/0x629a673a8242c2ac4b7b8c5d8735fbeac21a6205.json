{"time":153,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function transferTokens(\n\n        IERC721Enumerable _nftContract,\n\n        address _from,\n\n        address _to,\n\n        uint256[] memory _tokenIds\n\n    ) public {\n\n        for (uint256 index = 0; index < _tokenIds.length; index++) {\n\n            if (_tokenIds[index] == 0) {\n\n                break;\n\n            }\n\n\n            _nftContract.safeTransferFrom(_from, _to, _tokenIds[index]);\n\n        }\n\n    }","after":"function transferTokens(\n\n        IERC721Enumerable _nftContract,\n\n        address _from,\n\n        address _to,\n\n        uint256[] calldata _tokenIds\n\n    ) public {\n\n        for (uint256 index = 0; index < _tokenIds.length; index++) {\n\n            if (_tokenIds[index] == 0) {\n\n                break;\n\n            }\n\n\n            _nftContract.safeTransferFrom(_from, _to, _tokenIds[index]);\n\n        }\n\n    }","contract":"NFTClient","time":0},{"type":"external-function ","before":"function setTokenURIPrefix(string memory prefix) public onlyOwner {\n\n        _setBaseURI(prefix);\n\n    }","after":"function setTokenURIPrefix(string calldata prefix) public onlyOwner {\n\n        _setBaseURI(prefix);\n\n    }","contract":"SorareTokens","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"SorareTokens","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"SorareTokens","time":0}]}