{"time":373,"results":[{"type":"loop-duplication","before":"\nstart line 1764 column 8, end line 1769 column 8\nfor (uint16 idx = 0; idx < dropAttribute.length; idx++) {\n            if (!dropAttribute[idx].isArray || dropAttribute[idx].key != lastKey) {\n                resultCount++;\n                lastKey = dropAttribute[idx].key;\n            }\n        }\nstart line 1774 column 8, end line 1790 column 8\nfor (uint16 idx = 0; idx < dropAttribute.length; idx++) {\n            if (!dropAttribute[idx].isArray || dropAttribute[idx].key != lastKey) {\n                result[resultCount].isArray = dropAttribute[idx].isArray;\n                result[resultCount].key = RightwayDecoder.decodeDropString(drop, dropAttribute[idx].key);\n                result[resultCount].values = new string[](1);\n                result[resultCount].values[0] = RightwayDecoder.decodeDropString(drop, dropAttribute[idx].value);\n                resultCount++;\n                lastKey = dropAttribute[idx].key;\n            } else {\n                string[] memory oldValues = result[resultCount - 1].values;\n                result[resultCount - 1].values = new string[](oldValues.length + 1);\n                for (uint vidx = 0; vidx < oldValues.length; vidx++) {\n                    result[resultCount - 1].values[vidx] = oldValues[vidx];\n                }\n                result[resultCount - 1].values[oldValues.length] = RightwayDecoder.decodeDropString(drop, dropAttribute[idx].value);\n            }\n        }","after":"// merge loop\n\nstart line 1764 column 8, end line 1769 column 8\nfor (uint16 idx = 0; idx < dropAttribute.length; idx++) {\n            if (!dropAttribute[idx].isArray || dropAttribute[idx].key != lastKey) {\n                resultCount++;\n                lastKey = dropAttribute[idx].key;\n            }\n        }\nstart line 1774 column 8, end line 1790 column 8\nfor (uint16 idx = 0; idx < dropAttribute.length; idx++) {\n            if (!dropAttribute[idx].isArray || dropAttribute[idx].key != lastKey) {\n                result[resultCount].isArray = dropAttribute[idx].isArray;\n                result[resultCount].key = RightwayDecoder.decodeDropString(drop, dropAttribute[idx].key);\n                result[resultCount].values = new string[](1);\n                result[resultCount].values[0] = RightwayDecoder.decodeDropString(drop, dropAttribute[idx].value);\n                resultCount++;\n                lastKey = dropAttribute[idx].key;\n            } else {\n                string[] memory oldValues = result[resultCount - 1].values;\n                result[resultCount - 1].values = new string[](oldValues.length + 1);\n                for (uint vidx = 0; vidx < oldValues.length; vidx++) {\n                    result[resultCount - 1].values[vidx] = oldValues[vidx];\n                }\n                result[resultCount - 1].values[oldValues.length] = RightwayDecoder.decodeDropString(drop, dropAttribute[idx].value);\n            }\n        }","contract":"RightwayMetadata","time":0},{"type":"struct-data-arrangement ","before":"\nuint64 soldOn\nuint256 price\naddress buyer\nTokenRedemption[] redemptions\nAdditionalContent[] additionalContent\nuint16 attributesStart\nuint16 attributesLength","after":"uint256 price\nTokenRedemption[] redemptions\nAdditionalContent[] additionalContent\naddress buyer\nuint64 soldOn\nuint16 attributesStart\nuint16 attributesLength\n","contract":"RightwayMetadata","time":0},{"type":"struct-data-arrangement ","before":"\nstring name\nstring description\nMetadataAttribute[] attributes\nuint256 editionSize\nuint256 editionNumber\nuint256 totalRedemptions\nuint64 redemptionExpiration\nMetadataContent[] content\nTokenRedemption[] redemptions\nuint64 soldOn\naddress buyer\nuint256 price\nbool isMinted\nMetadataAdditionalContent[] additionalContent","after":"string name\nstring description\nMetadataAttribute[] attributes\nuint256 editionSize\nuint256 editionNumber\nuint256 totalRedemptions\nMetadataContent[] content\nTokenRedemption[] redemptions\nuint256 price\nMetadataAdditionalContent[] additionalContent\naddress buyer\nuint64 redemptionExpiration\nuint64 soldOn\nbool isMinted\n","contract":"RightwayMetadata","time":0},{"type":"external-function ","before":"function getMetadata(string storage creator, RightwayDecoder.Drop storage drop, string storage contentApi, uint256 tokenId, TokenState memory state, bool isMinted) public view returns (TokenMetadata memory){\n        TokenMetadata memory result;\n        getTokenMetadata(result, creator, drop, contentApi, tokenId, state);\n        getStateMetadata(result, state, isMinted);\n        return result;\n    }","after":"function getMetadata(string storage creator, RightwayDecoder.Drop storage drop, string storage contentApi, uint256 tokenId, TokenState calldata state, bool isMinted) public view returns (TokenMetadata memory){\n        TokenMetadata memory result;\n        getTokenMetadata(result, creator, drop, contentApi, tokenId, state);\n        getStateMetadata(result, state, isMinted);\n        return result;\n    }","contract":"RightwayMetadata","time":0},{"type":"state-data-arrangement ","before":"\nbytes32 public constant INFRA_ROLE = keccak256('INFRA_ROLE');\nbytes32 public constant REDEEM_ROLE = keccak256('REDEEM_ROLE');\nbytes32 public constant CONTENT_ROLE = keccak256('CONTENT_ROLE');\nstring public creator;\naddress payable public     royaltyAddress;\nuint256 public             royaltyBps;\nRightwayDecoder.Drop internal drop;\nbool public dropSealed;\nmapping(uint256 => RightwayMetadata.TokenState) internal stateByToken;\nstring internal contentApi;\nstring internal metadataApi;\nbytes4 private constant _INTERFACE_ID_FEES = 0xb7799584;","after":"bytes32 public constant INFRA_ROLE = keccak256('INFRA_ROLE');\nbytes32 public constant REDEEM_ROLE = keccak256('REDEEM_ROLE');\nbytes32 public constant CONTENT_ROLE = keccak256('CONTENT_ROLE');\nstring public creator;\nuint256 public             royaltyBps;\nRightwayDecoder.Drop internal drop;\nmapping(uint256 => RightwayMetadata.TokenState) internal stateByToken;\nstring internal contentApi;\nstring internal metadataApi;\naddress payable public     royaltyAddress;\nbytes4 private constant _INTERFACE_ID_FEES = 0xb7799584;\nbool public dropSealed;\n","contract":"RightwayToken","time":0},{"type":"external-function ","before":"function addDropContentLibraries(RightwayDecoder.DropContentLibrary[] memory contentLibraries) public onlyRole(DEFAULT_ADMIN_ROLE) unsealed {\n        for (uint idx = 0; idx < contentLibraries.length; idx++) {\n            drop.contentLibraries.push(contentLibraries[idx]);\n        }\n    }","after":"function addDropContentLibraries(RightwayDecoder.DropContentLibrary[] calldata contentLibraries) public onlyRole(DEFAULT_ADMIN_ROLE) unsealed {\n        for (uint idx = 0; idx < contentLibraries.length; idx++) {\n            drop.contentLibraries.push(contentLibraries[idx]);\n        }\n    }","contract":"RightwayToken","time":0},{"type":"external-function ","before":"function redeem(uint256 tokenId, uint64 timestamp, string memory memo) public onlyRole(REDEEM_ROLE) issealed {\n        require(_exists(tokenId), 'No such token');\n        RightwayMetadata.TokenState storage state = stateByToken[tokenId];\n        state.redemptions.push();\n        uint redemptionIdx = state.redemptions.length - 1;\n        RightwayMetadata.TokenRedemption storage record = state.redemptions[redemptionIdx];\n        record.timestamp = timestamp;\n        record.memo = memo;\n        emit TokenRedeemed(tokenId);\n    }","after":"function redeem(uint256 tokenId, uint64 timestamp, string calldata memo) public onlyRole(REDEEM_ROLE) issealed {\n        require(_exists(tokenId), 'No such token');\n        RightwayMetadata.TokenState storage state = stateByToken[tokenId];\n        state.redemptions.push();\n        uint redemptionIdx = state.redemptions.length - 1;\n        RightwayMetadata.TokenRedemption storage record = state.redemptions[redemptionIdx];\n        record.timestamp = timestamp;\n        record.memo = memo;\n        emit TokenRedeemed(tokenId);\n    }","contract":"RightwayToken","time":0},{"type":"immutable-restrict-modification ","before":"string public creator;","after":"string public immutable creator;","contract":"RightwayToken","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"RightwayToken","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"RightwayToken","time":0}]}