{"time":13,"results":[{"type":"external-function ","before":"function getTradeCalldata(\n\n        address _sourceToken,\n\n        address _destinationToken,\n\n        address _destinationAddress,\n\n        uint256 _sourceQuantity,\n\n        uint256 _minDestinationQuantity,\n\n        bytes memory _data\n\n    )\n\n    external\n\n    view\n\n    returns (address, uint256, bytes memory)\n\n    {\n\n        address[] memory path;\n\n\n        if (_data.length == 0) {\n\n            path = new address[](2);\n\n            path[0] = _sourceToken;\n\n            path[1] = _destinationToken;\n\n        } else {\n\n            path = abi.decode(_data, (address[]));\n\n        }\n\n\n        bytes memory callData = abi.encodeWithSignature(\n\n            \"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\",\n\n            _sourceQuantity,\n\n            _minDestinationQuantity,\n\n            path,\n\n            _destinationAddress,\n\n            block.timestamp\n\n        );\n\n        return (router, 0, callData);\n\n    }","after":"function getTradeCalldata(\n\n        address _sourceToken,\n\n        address _destinationToken,\n\n        address _destinationAddress,\n\n        uint256 _sourceQuantity,\n\n        uint256 _minDestinationQuantity,\n\n        bytes calldata _data\n\n    )\n\n    external\n\n    view\n\n    returns (address, uint256, bytes memory)\n\n    {\n\n        address[] memory path;\n\n\n        if (_data.length == 0) {\n\n            path = new address[](2);\n\n            path[0] = _sourceToken;\n\n            path[1] = _destinationToken;\n\n        } else {\n\n            path = abi.decode(_data, (address[]));\n\n        }\n\n\n        bytes memory callData = abi.encodeWithSignature(\n\n            \"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)\",\n\n            _sourceQuantity,\n\n            _minDestinationQuantity,\n\n            path,\n\n            _destinationAddress,\n\n            block.timestamp\n\n        );\n\n        return (router, 0, callData);\n\n    }","contract":"UniswapV2ExchangeAdapter","time":0}]}