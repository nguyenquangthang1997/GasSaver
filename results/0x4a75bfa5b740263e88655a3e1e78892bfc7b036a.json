{"time":398,"results":[{"type":"state-data-arrangement ","before":"\nLinkTokenInterface public linkToken;\nAggregatorValidatorInterface public validator;\nuint128 public paymentAmount;\nuint32 public maxSubmissionCount;\nuint32 public minSubmissionCount;\nuint32 public restartDelay;\nuint32 public timeout;\nuint8 public override decimals;\nstring public override description;\nint256 immutable public minSubmissionValue;\nint256 immutable public maxSubmissionValue;\nuint256 constant public override version = 3;\nuint256 constant private RESERVE_ROUNDS = 2;\nuint256 constant private MAX_ORACLE_COUNT = 77;\nuint32 constant private ROUND_MAX = 2 ** 32 - 1;\nuint256 private constant VALIDATOR_GAS_LIMIT = 100000;\nstring constant private V3_NO_DATA_ERROR = \"No data present\";\nuint32 private reportingRoundId;\nuint32 internal latestRoundId;\nmapping(address => OracleStatus) private oracles;\nmapping(uint32 => Round) internal rounds;\nmapping(uint32 => RoundDetails) internal details;\nmapping(address => Requester) internal requesters;\naddress[] private oracleAddresses;\nFunds private recordedFunds;","after":"LinkTokenInterface public linkToken;\nAggregatorValidatorInterface public validator;\nstring public override description;\nint256 immutable public minSubmissionValue;\nint256 immutable public maxSubmissionValue;\nuint256 constant public override version = 3;\nuint256 constant private RESERVE_ROUNDS = 2;\nuint256 constant private MAX_ORACLE_COUNT = 77;\nuint256 private constant VALIDATOR_GAS_LIMIT = 100000;\nstring constant private V3_NO_DATA_ERROR = \"No data present\";\nmapping(address => OracleStatus) private oracles;\nmapping(uint32 => Round) internal rounds;\nmapping(uint32 => RoundDetails) internal details;\nmapping(address => Requester) internal requesters;\naddress[] private oracleAddresses;\nFunds private recordedFunds;\nuint128 public paymentAmount;\nuint32 public maxSubmissionCount;\nuint32 public minSubmissionCount;\nuint32 public restartDelay;\nuint32 public timeout;\nuint32 constant private ROUND_MAX = 2 ** 32 - 1;\nuint32 private reportingRoundId;\nuint32 internal latestRoundId;\nuint8 public override decimals;\n","contract":"FluxAggregator","time":1},{"type":"external-function ","before":"\n    function hasAccess(\n        address _user,\n        bytes memory _calldata\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return super.hasAccess(_user, _calldata) || _user == tx.origin;\n","after":"\n    function hasAccess(\n        address _user,\n        bytes calldata _calldata\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return super.hasAccess(_user, _calldata) || _user == tx.origin;\n","contract":"AccessControlledAggregator","time":0},{"type":"external-function ","before":"\n    function hasAccess(\n        address _user,\n        bytes memory\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return accessList[_user] || !checkEnabled;\n","after":"\n    function hasAccess(\n        address _user,\n        bytes memory\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return accessList[_user] || !checkEnabled;\n","contract":"AccessControlledAggregator","time":0},{"type":"immutable-restrict-modification ","before":"uint8 public override decimals;","after":"uint8 public override immutable decimals;","contract":"AccessControlledAggregator","time":1},{"type":"immutable-restrict-modification ","before":"string public override description;","after":"string public override immutable description;","contract":"AccessControlledAggregator","time":1}]}