{"time":152,"results":[{"type":"state-data-arrangement ","before":"\nuint256 private constant CONVERSION_FEE_RESOLUTION = 1000000;\nuint256 private constant AFFILIATE_FEE_RESOLUTION = 1000000;\nuint256 public maxAffiliateFee = 30000;\naddress public signerAddress = 0x0;\nmapping(address => bool) public etherTokens;\nmapping(bytes32 => bool) public conversionHashes;\nbytes4 private constant GET_RETURN_FUNC_SELECTOR = bytes4(uint256(keccak256(\"getReturn(address,address,uint256)\") >> (256 - 4 * 8)));","after":"uint256 private constant CONVERSION_FEE_RESOLUTION = 1000000;\nuint256 private constant AFFILIATE_FEE_RESOLUTION = 1000000;\nuint256 public maxAffiliateFee = 30000;\nmapping(address => bool) public etherTokens;\nmapping(bytes32 => bool) public conversionHashes;\naddress public signerAddress = 0x0;\nbytes4 private constant GET_RETURN_FUNC_SELECTOR = bytes4(uint256(keccak256(\"getReturn(address,address,uint256)\") >> (256 - 4 * 8)));\n","contract":"BancorNetwork","time":0},{"type":"external-function ","before":"function xConvertPrioritized2(\n\n        IERC20Token[] _path,\n\n        uint256 _amount,\n\n        uint256 _minReturn,\n\n        bytes32 _toBlockchain,\n\n        bytes32 _to,\n\n        uint256 _conversionId,\n\n        uint256[] memory _signature\n\n    )\n\n    public\n\n    payable\n\n    returns (uint256)\n\n    {\n\n        return xConvertPrioritized3(_path, _amount, _minReturn, _toBlockchain, _to, _conversionId, _signature, address(0), 0);\n\n    }","after":"function xConvertPrioritized2(\n\n        IERC20Token[] _path,\n\n        uint256 _amount,\n\n        uint256 _minReturn,\n\n        bytes32 _toBlockchain,\n\n        bytes32 _to,\n\n        uint256 _conversionId,\n\n        uint256[] calldata _signature\n\n    )\n\n    public\n\n    payable\n\n    returns (uint256)\n\n    {\n\n        return xConvertPrioritized3(_path, _amount, _minReturn, _toBlockchain, _to, _conversionId, _signature, address(0), 0);\n\n    }","contract":"BancorNetwork","time":0}]}