{"time":9,"results":[{"type":"external-function ","before":"function getVoteCalldata(uint256 _proposalId, bool _support, bytes memory /* _data */) external view returns (address, uint256, bytes memory) {\n        // castVote(uint256 _proposalId, bool _support)\n        bytes memory callData = abi.encodeWithSignature(\"castVote(uint256,bool)\", _proposalId, _support);\n\n        return (governorAlpha, 0, callData);\n    }","after":"function getVoteCalldata(uint256 _proposalId, bool _support, bytes calldata /* _data */) external view returns (address, uint256, bytes memory) {\n        // castVote(uint256 _proposalId, bool _support)\n        bytes memory callData = abi.encodeWithSignature(\"castVote(uint256,bool)\", _proposalId, _support);\n\n        return (governorAlpha, 0, callData);\n    }","contract":"CompoundLikeGovernanceAdapter","time":0},{"type":"external-function ","before":"function getProposeCalldata(bytes memory _proposalData) external view returns (address, uint256, bytes memory) {\n        // Decode proposal data\n        (\n        address[] memory targets,\n        uint256[] memory values,\n        string[] memory signatures,\n        bytes[] memory calldatas,\n        string memory description\n        ) = abi.decode(_proposalData, (address[], uint256[], string[], bytes[], string));\n\n        // propose(address[],uint256[],string[],bytes[],string)\n        bytes memory callData = abi.encodeWithSignature(PROPOSE_SIGNATURE, targets, values, signatures, calldatas, description);\n\n        return (governorAlpha, 0, callData);\n    }","after":"function getProposeCalldata(bytes calldata _proposalData) external view returns (address, uint256, bytes memory) {\n        // Decode proposal data\n        (\n        address[] memory targets,\n        uint256[] memory values,\n        string[] memory signatures,\n        bytes[] memory calldatas,\n        string memory description\n        ) = abi.decode(_proposalData, (address[], uint256[], string[], bytes[], string));\n\n        // propose(address[],uint256[],string[],bytes[],string)\n        bytes memory callData = abi.encodeWithSignature(PROPOSE_SIGNATURE, targets, values, signatures, calldatas, description);\n\n        return (governorAlpha, 0, callData);\n    }","contract":"CompoundLikeGovernanceAdapter","time":0}]}