{"time":21,"results":[{"type":"external-function ","before":"function file(address pool, bool live, string memory name, string memory data) public auth {\n        Pool memory p = Pool(pool, live, name, data);\n        if (address(this) == pool) {\n            pools[0] = p;\n            return;\n        }\n\n        uint index = lookup[pool];\n        if (index > 0) {\n            pools[index] = p;\n            emit PoolUpdated(pool, live, name, data);\n        } else {\n            pools.push(p);\n            lookup[pool] = pools.length - 1;\n            emit PoolCreated(pool, live, name, data);\n        }\n    }","after":"function file(address pool, bool live, string calldata name, string calldata data) public auth {\n        Pool memory p = Pool(pool, live, name, data);\n        if (address(this) == pool) {\n            pools[0] = p;\n            return;\n        }\n\n        uint index = lookup[pool];\n        if (index > 0) {\n            pools[index] = p;\n            emit PoolUpdated(pool, live, name, data);\n        } else {\n            pools.push(p);\n            lookup[pool] = pools.length - 1;\n            emit PoolCreated(pool, live, name, data);\n        }\n    }","contract":"PoolRegistry","time":0}]}