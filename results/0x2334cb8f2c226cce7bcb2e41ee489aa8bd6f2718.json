{"time":773,"results":[{"type":"immutable-restrict-modification ","before":"address private uniFactory;","after":"address private immutable uniFactory;","contract":"ExchangeIssuance","time":0},{"type":"immutable-restrict-modification ","before":"address private sushiFactory;","after":"address private immutable sushiFactory;","contract":"ExchangeIssuance","time":0},{"type":"immutable-restrict-modification ","before":"address private WETH;","after":"address private immutable WETH;","contract":"ExchangeIssuance","time":0},{"type":"immutable-restrict-modification ","before":"address public cEther;","after":"address public immutable cEther;","contract":"FLIRebalanceViewer","time":0},{"type":"external-function ","before":"function setMethodologySettings(MethodologySettings memory _newMethodologySettings) external onlyOperator noRebalanceInProgress {\n        methodology = _newMethodologySettings;\n\n        _validateSettings(methodology, execution, incentive);\n\n        emit MethodologySettingsUpdated(\n            methodology.targetLeverageRatio,\n            methodology.minLeverageRatio,\n            methodology.maxLeverageRatio,\n            methodology.recenteringSpeed,\n            methodology.rebalanceInterval\n        );\n    }","after":"function setMethodologySettings(MethodologySettings calldata _newMethodologySettings) external onlyOperator noRebalanceInProgress {\n        methodology = _newMethodologySettings;\n\n        _validateSettings(methodology, execution, incentive);\n\n        emit MethodologySettingsUpdated(\n            methodology.targetLeverageRatio,\n            methodology.minLeverageRatio,\n            methodology.maxLeverageRatio,\n            methodology.recenteringSpeed,\n            methodology.rebalanceInterval\n        );\n    }","contract":"FlexibleLeverageStrategyAdapter","time":0},{"type":"external-function ","before":"function setExecutionSettings(ExecutionSettings memory _newExecutionSettings) external onlyOperator noRebalanceInProgress {\n        execution = _newExecutionSettings;\n\n        _validateSettings(methodology, execution, incentive);\n\n        emit ExecutionSettingsUpdated(\n            execution.unutilizedLeveragePercentage,\n            execution.twapMaxTradeSize,\n            execution.twapCooldownPeriod,\n            execution.slippageTolerance,\n            execution.exchangeName,\n            execution.leverExchangeData,\n            execution.deleverExchangeData\n        );\n    }","after":"function setExecutionSettings(ExecutionSettings calldata _newExecutionSettings) external onlyOperator noRebalanceInProgress {\n        execution = _newExecutionSettings;\n\n        _validateSettings(methodology, execution, incentive);\n\n        emit ExecutionSettingsUpdated(\n            execution.unutilizedLeveragePercentage,\n            execution.twapMaxTradeSize,\n            execution.twapCooldownPeriod,\n            execution.slippageTolerance,\n            execution.exchangeName,\n            execution.leverExchangeData,\n            execution.deleverExchangeData\n        );\n    }","contract":"FlexibleLeverageStrategyAdapter","time":0},{"type":"external-function ","before":"function setIncentiveSettings(IncentiveSettings memory _newIncentiveSettings) external onlyOperator noRebalanceInProgress {\n        incentive = _newIncentiveSettings;\n\n        _validateSettings(methodology, execution, incentive);\n\n        emit IncentiveSettingsUpdated(\n            incentive.etherReward,\n            incentive.incentivizedLeverageRatio,\n            incentive.incentivizedSlippageTolerance,\n            incentive.incentivizedTwapCooldownPeriod,\n            incentive.incentivizedTwapMaxTradeSize\n        );\n    }","after":"function setIncentiveSettings(IncentiveSettings calldata _newIncentiveSettings) external onlyOperator noRebalanceInProgress {\n        incentive = _newIncentiveSettings;\n\n        _validateSettings(methodology, execution, incentive);\n\n        emit IncentiveSettingsUpdated(\n            incentive.etherReward,\n            incentive.incentivizedLeverageRatio,\n            incentive.incentivizedSlippageTolerance,\n            incentive.incentivizedTwapCooldownPeriod,\n            incentive.incentivizedTwapMaxTradeSize\n        );\n    }","contract":"FlexibleLeverageStrategyAdapter","time":0},{"type":"struct-data-arrangement ","before":"\naddress component\naddress module\nint256 unit\nuint8 positionState\nbytes data","after":"int256 unit\nbytes data\naddress component\naddress module\nuint8 positionState\n","contract":"ISetToken","time":0},{"type":"immutable-restrict-modification ","before":"address public owner;","after":"address public immutable owner;","contract":"MutualUpgradeMock","time":0},{"type":"immutable-restrict-modification ","before":"address public methodologist;","after":"address public immutable methodologist;","contract":"MutualUpgradeMock","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public rewardsDuration = 60 days;","after":"uint256 public constant rewardsDuration = 60 days;","contract":"StakingRewards","time":1},{"type":"immutable-restrict-modification ","before":"address public rewardsDistribution;","after":"address public immutable rewardsDistribution;","contract":"StakingRewards","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public rewardsDuration;","after":"uint256 public immutable rewardsDuration;","contract":"StakingRewardsV2","time":0},{"type":"immutable-restrict-modification ","before":"address public rewardsDistribution;","after":"address public immutable rewardsDistribution;","contract":"StakingRewardsV2","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"StandardTokenMock","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"StandardTokenMock","time":0},{"type":"external-function ","before":"function getTradeCalldata(\n        address _sourceToken,\n        address _destinationToken,\n        address _destinationAddress,\n        uint256 _sourceQuantity,\n        uint256 _minDestinationQuantity,\n        bytes memory /* _data */\n    )\n    external\n    view\n    returns (address, uint256, bytes memory)\n    {\n        // Encode method data for SetToken to invoke\n        bytes memory methodData = abi.encodeWithSignature(\n            \"trade(address,address,address,uint256,uint256)\",\n            _sourceToken,\n            _destinationToken,\n            _destinationAddress,\n            _sourceQuantity,\n            _minDestinationQuantity\n        );\n\n        return (address(this), 0, methodData);\n    }","after":"function getTradeCalldata(\n        address _sourceToken,\n        address _destinationToken,\n        address _destinationAddress,\n        uint256 _sourceQuantity,\n        uint256 _minDestinationQuantity,\n        bytes calldata /* _data */\n    )\n    external\n    view\n    returns (address, uint256, bytes memory)\n    {\n        // Encode method data for SetToken to invoke\n        bytes memory methodData = abi.encodeWithSignature(\n            \"trade(address,address,address,uint256,uint256)\",\n            _sourceToken,\n            _destinationToken,\n            _destinationAddress,\n            _sourceQuantity,\n            _minDestinationQuantity\n        );\n\n        return (address(this), 0, methodData);\n    }","contract":"TradeAdapterMock","time":0},{"type":"immutable-restrict-modification ","before":"address public index;","after":"address public immutable index;","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public vestingAmount;","after":"uint256 public immutable vestingAmount;","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public vestingBegin;","after":"uint256 public immutable vestingBegin;","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public vestingCliff;","after":"uint256 public immutable vestingCliff;","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public vestingEnd;","after":"uint256 public immutable vestingEnd;","contract":"Vesting","time":0}]}