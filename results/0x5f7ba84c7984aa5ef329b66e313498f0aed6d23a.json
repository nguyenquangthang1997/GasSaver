{"time":102,"results":[{"type":"external-function ","before":"function stakeByIds(uint256[] memory tokenIds) public {\n\n        require(\n\n            stakerToTokenIds[msg.sender].length + tokenIds.length <=\n\n            MAX_WALLET_STAKED,\n\n            \"Must have less than 31 mice staked!\"\n\n        );\n\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            require(\n\n                IERC721(anonymiceAddress).ownerOf(tokenIds[i]) == msg.sender &&\n\n                tokenIdToStaker[tokenIds[i]] == nullAddress,\n\n                \"Token must be stakable by you!\"\n\n            );\n\n\n            IERC721(anonymiceAddress).transferFrom(\n\n                msg.sender,\n\n                address(this),\n\n                tokenIds[i]\n\n            );\n\n\n            stakerToTokenIds[msg.sender].push(tokenIds[i]);\n\n\n            tokenIdToTimeStamp[tokenIds[i]] = block.timestamp;\n\n            tokenIdToStaker[tokenIds[i]] = msg.sender;\n\n        }\n\n    }","after":"function stakeByIds(uint256[] calldata tokenIds) public {\n\n        require(\n\n            stakerToTokenIds[msg.sender].length + tokenIds.length <=\n\n            MAX_WALLET_STAKED,\n\n            \"Must have less than 31 mice staked!\"\n\n        );\n\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            require(\n\n                IERC721(anonymiceAddress).ownerOf(tokenIds[i]) == msg.sender &&\n\n                tokenIdToStaker[tokenIds[i]] == nullAddress,\n\n                \"Token must be stakable by you!\"\n\n            );\n\n\n            IERC721(anonymiceAddress).transferFrom(\n\n                msg.sender,\n\n                address(this),\n\n                tokenIds[i]\n\n            );\n\n\n            stakerToTokenIds[msg.sender].push(tokenIds[i]);\n\n\n            tokenIdToTimeStamp[tokenIds[i]] = block.timestamp;\n\n            tokenIdToStaker[tokenIds[i]] = msg.sender;\n\n        }\n\n    }","contract":"Cheeth","time":1},{"type":"external-function ","before":"function unstakeByIds(uint256[] memory tokenIds) public {\n\n        uint256 totalRewards = 0;\n\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            require(\n\n                tokenIdToStaker[tokenIds[i]] == msg.sender,\n\n                \"Message Sender was not original staker!\"\n\n            );\n\n\n            IERC721(anonymiceAddress).transferFrom(\n\n                address(this),\n\n                msg.sender,\n\n                tokenIds[i]\n\n            );\n\n\n            totalRewards =\n\n            totalRewards +\n\n            ((block.timestamp - tokenIdToTimeStamp[tokenIds[i]]) *\n\n            EMISSIONS_RATE);\n\n\n            removeTokenIdFromStaker(msg.sender, tokenIds[i]);\n\n\n            tokenIdToStaker[tokenIds[i]] = nullAddress;\n\n        }\n\n\n        _mint(msg.sender, totalRewards);\n\n    }","after":"function unstakeByIds(uint256[] calldata tokenIds) public {\n\n        uint256 totalRewards = 0;\n\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            require(\n\n                tokenIdToStaker[tokenIds[i]] == msg.sender,\n\n                \"Message Sender was not original staker!\"\n\n            );\n\n\n            IERC721(anonymiceAddress).transferFrom(\n\n                address(this),\n\n                msg.sender,\n\n                tokenIds[i]\n\n            );\n\n\n            totalRewards =\n\n            totalRewards +\n\n            ((block.timestamp - tokenIdToTimeStamp[tokenIds[i]]) *\n\n            EMISSIONS_RATE);\n\n\n            removeTokenIdFromStaker(msg.sender, tokenIds[i]);\n\n\n            tokenIdToStaker[tokenIds[i]] = nullAddress;\n\n        }\n\n\n        _mint(msg.sender, totalRewards);\n\n    }","contract":"Cheeth","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_WALLET_STAKED = 10;","after":"uint256 public constant MAX_WALLET_STAKED = 10;","contract":"Cheeth","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public EMISSIONS_RATE = 11574070000000;","after":"uint256 public constant EMISSIONS_RATE = 11574070000000;","contract":"Cheeth","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public CLAIM_END_TIME = 1641013200;","after":"uint256 public constant CLAIM_END_TIME = 1641013200;","contract":"Cheeth","time":0},{"type":"constant-restrict-modification  ","before":"address nullAddress = 0x0000000000000000000000000000000000000000;","after":"address constant nullAddress = 0x0000000000000000000000000000000000000000;","contract":"Cheeth","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Cheeth","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Cheeth","time":0}]}