{"time":281,"results":[{"type":"state-data-arrangement ","before":"\nuint8 internal constant MAX_POOL_TOKENS = 5;\nstring public name;\nstring public symbol;\nuint8 public decimals;\nISmartToken[] private _poolTokens;","after":"string public name;\nstring public symbol;\nISmartToken[] private _poolTokens;\nuint8 internal constant MAX_POOL_TOKENS = 5;\nuint8 public decimals;\n","contract":"PoolTokensContainer","time":0},{"type":"de-morgan-condition ","before":"!reserves[_token].isSet || !isActive()","after":"!(reserves[_token].isSet || isActive())","loc":{"start":{"line":2917,"column":16},"end":{"line":2917,"column":53}},"contract":"ConverterBase","time":0},{"type":"state-data-arrangement ","before":"\nuint32 internal constant WEIGHT_RESOLUTION = 1000000;\nuint64 internal constant CONVERSION_FEE_RESOLUTION = 1000000;\naddress internal constant ETH_RESERVE_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\nuint16 public constant version = 30;\nIConverterAnchor public anchor;\nIWhitelist public conversionWhitelist;\nIERC20Token[] public reserveTokens;\nmapping(address => Reserve) public reserves;\nuint32 public reserveRatio = 0;\nuint32 public maxConversionFee = 0;\nuint32 public conversionFee = 0;\nbool public constant conversionsEnabled = true;","after":"IConverterAnchor public anchor;\nIWhitelist public conversionWhitelist;\nIERC20Token[] public reserveTokens;\nmapping(address => Reserve) public reserves;\naddress internal constant ETH_RESERVE_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\nuint64 internal constant CONVERSION_FEE_RESOLUTION = 1000000;\nuint32 internal constant WEIGHT_RESOLUTION = 1000000;\nuint32 public reserveRatio = 0;\nuint32 public maxConversionFee = 0;\nuint32 public conversionFee = 0;\nuint16 public constant version = 30;\nbool public constant conversionsEnabled = true;\n","contract":"ConverterBase","time":7},{"type":"state-data-arrangement ","before":"\nuint8 internal constant AMPLIFICATION_FACTOR = 20;\nIPriceOracle public priceOracle;\nIERC20Token public primaryReserveToken;\nIERC20Token public secondaryReserveToken;\nmapping(address => uint256) private stakedBalances;\nmapping(address => ISmartToken) private reservesToPoolTokens;\nmapping(address => IERC20Token) private poolTokensToReserves;\nuint256 private constant RATE_PROPAGATION_PERIOD = 10 minutes;\nFraction public referenceRate;\nuint256 public referenceRateUpdateTime;\nFraction public lastConversionRate;\nmapping(address => uint256) public maxStakedBalances;\nbool public maxStakedBalanceEnabled = true;\nuint256 private constant MAX_RATE_FACTOR_LOWER_BOUND = 1e30;\nuint256 private constant MAX_RATE_FACTOR_UPPER_BOUND = uint256(- 1) / MAX_RATE_FACTOR_LOWER_BOUND;","after":"IPriceOracle public priceOracle;\nIERC20Token public primaryReserveToken;\nIERC20Token public secondaryReserveToken;\nmapping(address => uint256) private stakedBalances;\nmapping(address => ISmartToken) private reservesToPoolTokens;\nmapping(address => IERC20Token) private poolTokensToReserves;\nuint256 private constant RATE_PROPAGATION_PERIOD = 10 minutes;\nFraction public referenceRate;\nuint256 public referenceRateUpdateTime;\nFraction public lastConversionRate;\nmapping(address => uint256) public maxStakedBalances;\nuint256 private constant MAX_RATE_FACTOR_LOWER_BOUND = 1e30;\nuint256 private constant MAX_RATE_FACTOR_UPPER_BOUND = uint256(- 1) / MAX_RATE_FACTOR_LOWER_BOUND;\nuint8 internal constant AMPLIFICATION_FACTOR = 20;\nbool public maxStakedBalanceEnabled = true;\n","contract":"LiquidityPoolV2Converter","time":0}]}