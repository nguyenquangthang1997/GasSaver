{"time":148,"results":[{"type":"loop-duplication","before":"\nstart line 362 column 8, end line 369 column 8\nfor (uint256 i; i < _length; i++) {\n            IDCAPair _pair = IDCAPair(_subsidizedPairs.at(i));\n            bytes memory _swapPath = swapper.findBestSwap(_pair);\n            uint32 _swapInterval = _getSmallestSwapInterval(_pair);\n            if (_swapPath.length > 0 && _hasDelayPassedAlready(_pair, _swapInterval)) {\n                _count++;\n            }\n        }\nstart line 375 column 8, end line 383 column 8\nfor (uint256 i; i < _length; i++) {\n            IDCAPair _pair = IDCAPair(_subsidizedPairs.at(i));\n            bytes memory _swapPath = swapper.findBestSwap(_pair);\n            uint32 _swapInterval = _getSmallestSwapInterval(_pair);\n            if (_swapPath.length > 0 && _hasDelayPassedAlready(_pair, _swapInterval)) {\n                _pairs[--_count] = IDCASwapper.PairToSwap({pair : _pair, swapPath : _swapPath});\n                _smallestIntervals[_count] = _swapInterval;\n            }\n        }","after":"// merge loop\n\nstart line 362 column 8, end line 369 column 8\nfor (uint256 i; i < _length; i++) {\n            IDCAPair _pair = IDCAPair(_subsidizedPairs.at(i));\n            bytes memory _swapPath = swapper.findBestSwap(_pair);\n            uint32 _swapInterval = _getSmallestSwapInterval(_pair);\n            if (_swapPath.length > 0 && _hasDelayPassedAlready(_pair, _swapInterval)) {\n                _count++;\n            }\n        }\nstart line 375 column 8, end line 383 column 8\nfor (uint256 i; i < _length; i++) {\n            IDCAPair _pair = IDCAPair(_subsidizedPairs.at(i));\n            bytes memory _swapPath = swapper.findBestSwap(_pair);\n            uint32 _swapInterval = _getSmallestSwapInterval(_pair);\n            if (_swapPath.length > 0 && _hasDelayPassedAlready(_pair, _swapInterval)) {\n                _pairs[--_count] = IDCASwapper.PairToSwap({pair : _pair, swapPath : _swapPath});\n                _smallestIntervals[_count] = _swapInterval;\n            }\n        }","contract":"DCAKeep3rJob","time":0},{"type":"struct-data-arrangement ","before":"\nIERC20Metadata from\nIERC20Metadata to\nuint32 swapInterval\nuint32 swapsExecuted\nuint256 swapped\nuint32 swapsLeft\nuint256 remaining\nuint160 rate","after":"IERC20Metadata from\nIERC20Metadata to\nuint256 swapped\nuint256 remaining\nuint160 rate\nuint32 swapInterval\nuint32 swapsExecuted\nuint32 swapsLeft\n","contract":"IDCAPairPositionHandler","time":0}]}