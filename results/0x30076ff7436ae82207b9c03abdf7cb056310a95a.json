{"time":106,"results":[{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"FRY","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"FRY","time":0},{"type":"immutable-restrict-modification ","before":"uint8 private _decimals;","after":"uint8 private immutable _decimals;","contract":"FRY","time":0},{"type":"constant-restrict-modification  ","before":"string public termsAndConditions = \"By interacting with this contract, I confirm I am not a US citizen. I agree to be bound by the terms found at https://foundrydao.com/sale/terms\";","after":"string public constant termsAndConditions = \"By interacting with this contract, I confirm I am not a US citizen. I agree to be bound by the terms found at https://foundrydao.com/sale/terms\";","contract":"BucketSale","time":0},{"type":"immutable-restrict-modification ","before":"address public treasury;","after":"address public immutable treasury;","contract":"BucketSale","time":0},{"type":"immutable-restrict-modification ","before":"uint public startOfSale;","after":"uint public immutable startOfSale;","contract":"BucketSale","time":0},{"type":"immutable-restrict-modification ","before":"uint public bucketPeriod;","after":"uint public immutable bucketPeriod;","contract":"BucketSale","time":0},{"type":"immutable-restrict-modification ","before":"uint public bucketSupply;","after":"uint public immutable bucketSupply;","contract":"BucketSale","time":0},{"type":"immutable-restrict-modification ","before":"uint public bucketCount;","after":"uint public immutable bucketCount;","contract":"BucketSale","time":0},{"type":"external-function ","before":"function forward(address _to, bytes memory _data, uint _wei)\n\n    public\n\n    onlyOwner\n\n    returns (bool, bytes memory)\n\n    {\n\n        (bool success, bytes memory resultData) = _to.call.value(_wei)(_data);\n\n        emit Forwarded(_to, _data, _wei, success, resultData);\n\n        return (success, resultData);\n\n    }","after":"function forward(address _to, bytes calldata _data, uint _wei)\n\n    public\n\n    onlyOwner\n\n    returns (bool, bytes memory)\n\n    {\n\n        (bool success, bytes memory resultData) = _to.call.value(_wei)(_data);\n\n        emit Forwarded(_to, _data, _wei, success, resultData);\n\n        return (success, resultData);\n\n    }","contract":"Forwarder","time":0}]}