{"time":374,"results":[{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ERC20","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ERC20","time":1},{"type":"external-function ","before":"function setRegisteredConnectors(address[] memory connectors, bool[] memory isValid)\n\n    public\n\n    override\n\n    onlyOwner\n\n    returns (bool)\n\n    {\n\n        uint256 len = connectors.length;\n\n        require(len == isValid.length, \"Router: LENGTHS\");\n\n        for (uint256 i = 0; i < len; i++) {\n\n            address connector = connectors[i];\n\n            bool status = isValid[i];\n\n            _registeredConnectors[connector] = status;\n\n        }\n\n        emit RegisteredConnectors(connectors, isValid);\n\n        return true;\n\n    }","after":"function setRegisteredConnectors(address[] calldata connectors, bool[] calldata isValid)\n\n    public\n\n    override\n\n    onlyOwner\n\n    returns (bool)\n\n    {\n\n        uint256 len = connectors.length;\n\n        require(len == isValid.length, \"Router: LENGTHS\");\n\n        for (uint256 i = 0; i < len; i++) {\n\n            address connector = connectors[i];\n\n            bool status = isValid[i];\n\n            _registeredConnectors[connector] = status;\n\n        }\n\n        emit RegisteredConnectors(connectors, isValid);\n\n        return true;\n\n    }","contract":"PrimitiveRouter","time":0},{"type":"immutable-restrict-modification ","before":"string public name = \"Test Token\";","after":"string public immutable name = \"Test Token\";","contract":"TestERC20","time":0},{"type":"immutable-restrict-modification ","before":"string public symbol;","after":"string public immutable symbol;","contract":"TestERC20","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public DOMAIN_SEPARATOR;","after":"bytes32 public immutable DOMAIN_SEPARATOR;","contract":"TestERC20","time":0}]}