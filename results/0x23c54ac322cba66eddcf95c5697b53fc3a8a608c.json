{"time":161,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public mintPrice = 0.05 ether;\nuint256 public mintLimit = 20;\nuint256 public supplyLimit;\nbool public saleActive = false;\nuint256 namingPrice = 0 ether;\naddress public wallet1Address;\naddress public wallet2Address;\naddress public wallet3Address;\nuint8 public wallet1Share = 33;\nuint8 public wallet2Share = 50;\nuint8 public wallet3Share = 17;\nuint8 public charLimit = 32;\nmapping(uint256 => uint256) public tokenStyle;\nmapping(uint256 => bool) public allowedStyles;\nmapping(uint256 => uint256) public stylePrice;\nstring public baseURI = \"\";\nuint256 public totalSupply = 0;\nbool public namingAllowed = false;","after":"uint256 public mintPrice = 0.05 ether;\nuint256 public mintLimit = 20;\nuint256 public supplyLimit;\nuint256 namingPrice = 0 ether;\nmapping(uint256 => uint256) public tokenStyle;\nmapping(uint256 => bool) public allowedStyles;\nmapping(uint256 => uint256) public stylePrice;\nstring public baseURI = \"\";\nuint256 public totalSupply = 0;\naddress public wallet1Address;\naddress public wallet2Address;\naddress public wallet3Address;\nbool public saleActive = false;\nuint8 public wallet1Share = 33;\nuint8 public wallet2Share = 50;\nuint8 public wallet3Share = 17;\nuint8 public charLimit = 32;\nbool public namingAllowed = false;\n","contract":"CanineCartel","time":1},{"type":"external-function ","before":"function setBaseURI(string memory _baseURI) external onlyOwner {\n        baseURI = _baseURI;\n        emit BaseURIChanged(_baseURI);\n    }","after":"function setBaseURI(string calldata _baseURI) external onlyOwner {\n        baseURI = _baseURI;\n        emit BaseURIChanged(_baseURI);\n    }","contract":"CanineCartel","time":0},{"type":"external-function ","before":"function nameNFT(uint256 _tokenId, string memory _name) external payable {\n        require(msg.value == namingPrice, \"Incorrect price paid.\");\n        require(namingAllowed, \"Naming is disabled.\");\n        require(ownerOf(_tokenId) == msg.sender, \"Only owner of NFT can change name.\");\n        require(bytes(_name).length <= charLimit, \"Name exceeds characters limit.\");\n        emit NameChanged(_tokenId, _name);\n    }","after":"function nameNFT(uint256 _tokenId, string calldata _name) external payable {\n        require(msg.value == namingPrice, \"Incorrect price paid.\");\n        require(namingAllowed, \"Naming is disabled.\");\n        require(ownerOf(_tokenId) == msg.sender, \"Only owner of NFT can change name.\");\n        require(bytes(_name).length <= charLimit, \"Name exceeds characters limit.\");\n        emit NameChanged(_tokenId, _name);\n    }","contract":"CanineCartel","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"CanineCartel","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"CanineCartel","time":0}]}