{"time":142,"results":[{"type":"loop-calculation","before":"uint256 mintIndex = _tokenIdCounter.current() + 1;","after":"// move outside for loop\nuint256 mintIndex = _tokenIdCounter.current() + 1;","loc":{"start":{"line":1250,"column":12},"end":{"line":1250,"column":61}},"contract":"ImpermanentDigital","time":0},{"type":"loop-calculation","before":"uint256 mintIndex = _tokenIdCounter.current() + 1;","after":"// move outside for loop\nuint256 mintIndex = _tokenIdCounter.current() + 1;","loc":{"start":{"line":1270,"column":12},"end":{"line":1270,"column":61}},"contract":"ImpermanentDigital","time":0},{"type":"state-data-arrangement ","before":"\nCounters.Counter private _tokenIdCounter;\nuint256 public maxTokenSupply;\nuint256 public constant MAX_MINTS_PER_TXN = 8;\nuint256 public mintPrice = 0.1 ether;\nuint256 public maxPresaleMintsPerWallet = 4;\nbool public preSaleIsActive = false;\nbool public saleIsActive = false;\nbool public evolutionIsActive = false;\nstring public baseURI;\nstring public provenance;\nuint256 public startingIndexBlock;\nuint256 public startingIndex;\naddress public afterlifeContractAddress;\naddress public auraContractAddress;\nmapping(address => uint256) private _presaleMints;\naddress[6] private _shareholders;\nuint[6] private _shares;","after":"Counters.Counter private _tokenIdCounter;\nuint256 public maxTokenSupply;\nuint256 public constant MAX_MINTS_PER_TXN = 8;\nuint256 public mintPrice = 0.1 ether;\nuint256 public maxPresaleMintsPerWallet = 4;\nstring public baseURI;\nstring public provenance;\nuint256 public startingIndexBlock;\nuint256 public startingIndex;\nmapping(address => uint256) private _presaleMints;\naddress[6] private _shareholders;\nuint[6] private _shares;\naddress public afterlifeContractAddress;\naddress public auraContractAddress;\nbool public preSaleIsActive = false;\nbool public saleIsActive = false;\nbool public evolutionIsActive = false;\n","contract":"ImpermanentDigital","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) public onlyOwner {\n        baseURI = newBaseURI;\n    }","after":"function setBaseURI(string calldata newBaseURI) public onlyOwner {\n        baseURI = newBaseURI;\n    }","contract":"ImpermanentDigital","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        provenance = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        provenance = provenanceHash;\n    }","contract":"ImpermanentDigital","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ImpermanentDigital","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ImpermanentDigital","time":1}]}