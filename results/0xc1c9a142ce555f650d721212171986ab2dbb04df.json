{"time":598,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nmapping(uint256 => string) private _tokenURIs;\nstring private _baseURI;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"ERC721","time":0},{"type":"constant-restrict-modification  ","before":"uint8 public override decimals = 8;","after":"uint8 public override constant decimals = 8;","contract":"FakePriceProvider","time":0},{"type":"constant-restrict-modification  ","before":"string public override description = \"Test implementation\";","after":"string public override constant description = \"Test implementation\";","contract":"FakePriceProvider","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public override version = 0;","after":"uint256 public override constant version = 0;","contract":"FakePriceProvider","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"FakeWBTC","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"FakeWBTC","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"FakeWHITE","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"FakeWHITE","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"FakeWETH","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"FakeWETH","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"FakeUSDC","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"FakeUSDC","time":0},{"type":"immutable-restrict-modification ","before":"address public factory;","after":"address public immutable factory;","contract":"SushiSwapPairMock","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public DOMAIN_SEPARATOR;","after":"bytes32 public immutable DOMAIN_SEPARATOR;","contract":"SushiSwapPairMock","time":0},{"type":"loop-duplication","before":"\nstart line 3582 column 8, end line 3584 column 8\nfor (uint i = 0; i <= _tokenIds.current(); i++) {\n            if (isAutoUnwrapable(i)) counter++;\n        }\nstart line 3587 column 8, end line 3593 column 8\nfor (uint i = 0; i <= _tokenIds.current(); i++) {\n            if (isAutoUnwrapable(i)) {\n                list[index] = i;\n                index++;\n            }\n            if (index >= counter) return list;\n        }","after":"// merge loop\n\nstart line 3582 column 8, end line 3584 column 8\nfor (uint i = 0; i <= _tokenIds.current(); i++) {\n            if (isAutoUnwrapable(i)) counter++;\n        }\nstart line 3587 column 8, end line 3593 column 8\nfor (uint i = 0; i <= _tokenIds.current(); i++) {\n            if (isAutoUnwrapable(i)) {\n                list[index] = i;\n                index++;\n            }\n            if (index >= counter) return list;\n        }","contract":"WHAssetv2","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public optionCollateralizationRatio = 100;","after":"uint256 public constant optionCollateralizationRatio = 100;","contract":"WHERC20v2","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"WHERC20v2","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"WHERC20v2","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public optionCollateralizationRatio = 100;","after":"uint256 public constant optionCollateralizationRatio = 100;","contract":"WHETHv2","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"WHETHv2","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"WHETHv2","time":0},{"type":"external-function ","before":"function getAmountsOut(uint amountIn, address[] memory path)\n    public\n    view\n    virtual\n    override\n    returns (uint[] memory amounts)\n    {\n        return UniswapV2Library.getAmountsOut(factory, amountIn, path);\n    }","after":"function getAmountsOut(uint amountIn, address[] calldata path)\n    public\n    view\n    virtual\n    override\n    returns (uint[] memory amounts)\n    {\n        return UniswapV2Library.getAmountsOut(factory, amountIn, path);\n    }","contract":"WHSwapRouter","time":0},{"type":"external-function ","before":"function getAmountsIn(uint amountOut, address[] memory path)\n    public\n    view\n    virtual\n    override\n    returns (uint[] memory amounts)\n    {\n        return UniswapV2Library.getAmountsIn(factory, amountOut, path);\n    }","after":"function getAmountsIn(uint amountOut, address[] calldata path)\n    public\n    view\n    virtual\n    override\n    returns (uint[] memory amounts)\n    {\n        return UniswapV2Library.getAmountsIn(factory, amountOut, path);\n    }","contract":"WHSwapRouter","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public lockupPeriod = 1 days;","after":"uint256 public constant lockupPeriod = 1 days;","contract":"WhiteStakingUSDC","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"WhiteStakingUSDC","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"WhiteStakingUSDC","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"WhiteUSDCPool","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"WhiteUSDCPool","time":0}]}