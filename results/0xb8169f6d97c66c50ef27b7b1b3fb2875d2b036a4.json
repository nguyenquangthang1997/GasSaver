{"time":261,"results":[{"type":"external-function ","before":"   */\n    function hasAccess(\n        address _user,\n        bytes memory _calldata\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return super.hasAccess(_user, _calldata) || _user == tx.ori","after":"   */\n    function hasAccess(\n        address _user,\n        bytes calldata _calldata\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return super.hasAccess(_user, _calldata) || _user == tx.ori","contract":"AccessControlledAggregator","time":0},{"type":"external-function ","before":"   */\n    function hasAccess(\n        address _user,\n        bytes memory\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return accessList[_user] || !checkEnab","after":"   */\n    function hasAccess(\n        address _user,\n        bytes memory\n    )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n    {\n        return accessList[_user] || !checkEnab","contract":"AccessControlledAggregator","time":0},{"type":"immutable-restrict-modification ","before":"\n    uint8 public override deci","after":"\n    uint8 public override deci","contract":"AccessControlledAggregator","time":0},{"type":"immutable-restrict-modification ","before":"\n    string public override descrip","after":"\n    string public override descrip","contract":"AccessControlledAggregator","time":0},{"type":"state-data-arrangement ","before":"\n\n    LinkTokenInterface public linkT\n\n    AggregatorValidatorInterface public valid\n\n    uint128 public paymentAm\n\n    uint32 public maxSubmissionC\n\n    uint32 public minSubmissionC\n\n    uint32 public restartD\n\n    uint32 public tim\n\n    uint8 public override deci\n\n    string public override descrip\n\n    int256 immutable public minSubmissionV\n\n    int256 immutable public maxSubmissionV\n\n    uint256 constant public override version\n\n    uint256 constant private RESERVE_ROUNDS\n\n    uint256 constant private MAX_ORACLE_COUNT \n\n    uint32 constant private ROUND_MAX = 2 ** 32\n\n    uint256 private constant VALIDATOR_GAS_LIMIT = 10\n\n    string constant private V3_NO_DATA_ERROR = \"No data pres\n\n    uint32 private reportingRou\n\n    uint32 internal latestRou\n\n    mapping(address => OracleStatus) private ora\n\n    mapping(uint32 => Round) internal ro\n\n    mapping(uint32 => RoundDetails) internal det\n\n    mapping(address => Requester) internal reques\n\n    address[] private oracleAddre\n\n    Funds private recordedF","after":"\n    LinkTokenInterface public linkT\n\n    AggregatorValidatorInterface public valid\n\n    string public override descrip\n\n    int256 immutable public minSubmissionV\n\n    int256 immutable public maxSubmissionV\n\n    uint256 constant public override version\n\n    uint256 constant private RESERVE_ROUNDS\n\n    uint256 constant private MAX_ORACLE_COUNT \n\n    uint256 private constant VALIDATOR_GAS_LIMIT = 10\n\n    string constant private V3_NO_DATA_ERROR = \"No data pres\n\n    mapping(address => OracleStatus) private ora\n\n    mapping(uint32 => Round) internal ro\n\n    mapping(uint32 => RoundDetails) internal det\n\n    mapping(address => Requester) internal reques\n\n    address[] private oracleAddre\n\n    Funds private recordedF\n\n    uint128 public paymentAm\n\n    uint32 public maxSubmissionC\n\n    uint32 public minSubmissionC\n\n    uint32 public restartD\n\n    uint32 public tim\n\n    uint32 constant private ROUND_MAX = 2 ** 32\n\n    uint32 private reportingRou\n\n    uint32 internal latestRou\n\n    uint8 public override deci\n","contract":"FluxAggregator","time":1}]}