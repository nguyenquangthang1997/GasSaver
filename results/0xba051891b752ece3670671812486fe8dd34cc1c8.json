{"time":76,"results":[{"type":"external-function ","before":"   function checkClaimParams\n\n    (\n\n        uint _weiAmount,\n\n        address _tokenAddress,\n\n        uint _tokenAmount,\n\n        uint _expiration,\n\n        address _linkId,\n\n        address payable _linkdropMaster,\n\n        uint _campaignId,\n\n        bytes memory _linkdropSignerSignature,\n\n        address _receiver,\n\n        bytes memory _receiverSignature\n\n    )\n\n    public view\n\n    returns (bool)\n\n    {\n\n        // Make sure proxy contract is deployed\n\n        require(isDeployed(_linkdropMaster, _campaignId), \"LINKDROP_PROXY_CONTRACT_NOT_DEPLOYED\");\n\n\n        uint fee = fees[deployed[salt(_linkdropMaster, _campaignId)]];\n\n\n        return ILinkdropERC20(deployed[salt(_linkdropMaster, _campaignId)]).checkClaimParams\n\n        (\n\n            _weiAmount,\n\n            _tokenAddress,\n\n            _tokenAmount,\n\n            _expiration,\n\n            _linkId,\n\n            _linkdropSignerSignature,\n\n            _receiver,\n\n            _receiverSignature,\n\n            fee\n\n        );\n\n  ","after":"   function checkClaimParams\n\n    (\n\n        uint _weiAmount,\n\n        address _tokenAddress,\n\n        uint _tokenAmount,\n\n        uint _expiration,\n\n        address _linkId,\n\n        address payable _linkdropMaster,\n\n        uint _campaignId,\n\n        bytes calldata _linkdropSignerSignature,\n\n        address _receiver,\n\n        bytes calldata _receiverSignature\n\n    )\n\n    public view\n\n    returns (bool)\n\n    {\n\n        // Make sure proxy contract is deployed\n\n        require(isDeployed(_linkdropMaster, _campaignId), \"LINKDROP_PROXY_CONTRACT_NOT_DEPLOYED\");\n\n\n        uint fee = fees[deployed[salt(_linkdropMaster, _campaignId)]];\n\n\n        return ILinkdropERC20(deployed[salt(_linkdropMaster, _campaignId)]).checkClaimParams\n\n        (\n\n            _weiAmount,\n\n            _tokenAddress,\n\n            _tokenAmount,\n\n            _expiration,\n\n            _linkId,\n\n            _linkdropSignerSignature,\n\n            _receiver,\n\n            _receiverSignature,\n\n            fee\n\n        );\n\n  ","contract":"LinkdropFactory","time":0},{"type":"external-function ","before":"   function checkClaimParamsERC721\n\n    (\n\n        uint _weiAmount,\n\n        address _nftAddress,\n\n        uint _tokenId,\n\n        uint _expiration,\n\n        address _linkId,\n\n        address payable _linkdropMaster,\n\n        uint _campaignId,\n\n        bytes memory _linkdropSignerSignature,\n\n        address _receiver,\n\n        bytes memory _receiverSignature\n\n    )\n\n    public view\n\n    returns (bool)\n\n    {\n\n        // Make sure proxy contract is deployed\n\n        require(isDeployed(_linkdropMaster, _campaignId), \"LINKDROP_PROXY_CONTRACT_NOT_DEPLOYED\");\n\n\n        uint fee = fees[deployed[salt(_linkdropMaster, _campaignId)]];\n\n\n        return ILinkdropERC721(deployed[salt(_linkdropMaster, _campaignId)]).checkClaimParamsERC721\n\n        (\n\n            _weiAmount,\n\n            _nftAddress,\n\n            _tokenId,\n\n            _expiration,\n\n            _linkId,\n\n            _linkdropSignerSignature,\n\n            _receiver,\n\n            _receiverSignature,\n\n            fee\n\n        );\n\n  ","after":"   function checkClaimParamsERC721\n\n    (\n\n        uint _weiAmount,\n\n        address _nftAddress,\n\n        uint _tokenId,\n\n        uint _expiration,\n\n        address _linkId,\n\n        address payable _linkdropMaster,\n\n        uint _campaignId,\n\n        bytes calldata _linkdropSignerSignature,\n\n        address _receiver,\n\n        bytes calldata _receiverSignature\n\n    )\n\n    public view\n\n    returns (bool)\n\n    {\n\n        // Make sure proxy contract is deployed\n\n        require(isDeployed(_linkdropMaster, _campaignId), \"LINKDROP_PROXY_CONTRACT_NOT_DEPLOYED\");\n\n\n        uint fee = fees[deployed[salt(_linkdropMaster, _campaignId)]];\n\n\n        return ILinkdropERC721(deployed[salt(_linkdropMaster, _campaignId)]).checkClaimParamsERC721\n\n        (\n\n            _weiAmount,\n\n            _nftAddress,\n\n            _tokenId,\n\n            _expiration,\n\n            _linkId,\n\n            _linkdropSignerSignature,\n\n            _receiver,\n\n            _receiverSignature,\n\n            fee\n\n        );\n\n  ","contract":"LinkdropFactory","time":0},{"type":"immutable-restrict-modification ","before":"   bytes internal _initco","after":"   bytes internal _initco","contract":"LinkdropFactory","time":0},{"type":"immutable-restrict-modification ","before":"   uint public chain","after":"   uint public chain","contract":"LinkdropFactory","time":0}]}