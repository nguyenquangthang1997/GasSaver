{"time":201,"results":[{"type":"immutable-restrict-modification ","before":"bytes32 public DOMAIN_SEPARATOR;","after":"bytes32 public immutable DOMAIN_SEPARATOR;","contract":"Dai","time":0},{"type":"external-function ","before":"function setAttributeSigned(\n\n        address identity,\n\n        uint8 sigV,\n\n        bytes32 sigR,\n\n        bytes32 sigS,\n\n        bytes32 name,\n\n        bytes memory value,\n\n        uint256 validity\n\n    ) public {\n\n        bytes32 hash = keccak256(\n\n            abi.encodePacked(\n\n                bytes1(0x19),\n\n                bytes1(0),\n\n                this,\n\n                nonce[identityOwner(identity)],\n\n                identity,\n\n                \"setAttribute\",\n\n                name,\n\n                value,\n\n                validity\n\n            )\n\n        );\n\n        setAttribute(\n\n            identity,\n\n            checkSignature(identity, sigV, sigR, sigS, hash),\n\n            name,\n\n            value,\n\n            validity\n\n        );\n\n    }","after":"function setAttributeSigned(\n\n        address identity,\n\n        uint8 sigV,\n\n        bytes32 sigR,\n\n        bytes32 sigS,\n\n        bytes32 name,\n\n        bytes calldata value,\n\n        uint256 validity\n\n    ) public {\n\n        bytes32 hash = keccak256(\n\n            abi.encodePacked(\n\n                bytes1(0x19),\n\n                bytes1(0),\n\n                this,\n\n                nonce[identityOwner(identity)],\n\n                identity,\n\n                \"setAttribute\",\n\n                name,\n\n                value,\n\n                validity\n\n            )\n\n        );\n\n        setAttribute(\n\n            identity,\n\n            checkSignature(identity, sigV, sigR, sigS, hash),\n\n            name,\n\n            value,\n\n            validity\n\n        );\n\n    }","contract":"EthereumDIDRegistry","time":0},{"type":"external-function ","before":"function revokeAttributeSigned(\n\n        address identity,\n\n        uint8 sigV,\n\n        bytes32 sigR,\n\n        bytes32 sigS,\n\n        bytes32 name,\n\n        bytes memory value\n\n    ) public {\n\n        bytes32 hash = keccak256(\n\n            abi.encodePacked(\n\n                bytes1(0x19),\n\n                bytes1(0),\n\n                this,\n\n                nonce[identityOwner(identity)],\n\n                identity,\n\n                \"revokeAttribute\",\n\n                name,\n\n                value\n\n            )\n\n        );\n\n        revokeAttribute(identity, checkSignature(identity, sigV, sigR, sigS, hash), name, value);\n\n    }","after":"function revokeAttributeSigned(\n\n        address identity,\n\n        uint8 sigV,\n\n        bytes32 sigR,\n\n        bytes32 sigS,\n\n        bytes32 name,\n\n        bytes calldata value\n\n    ) public {\n\n        bytes32 hash = keccak256(\n\n            abi.encodePacked(\n\n                bytes1(0x19),\n\n                bytes1(0),\n\n                this,\n\n                nonce[identityOwner(identity)],\n\n                identity,\n\n                \"revokeAttribute\",\n\n                name,\n\n                value\n\n            )\n\n        );\n\n        revokeAttribute(identity, checkSignature(identity, sigV, sigR, sigS, hash), name, value);\n\n    }","contract":"EthereumDIDRegistry","time":0}]}