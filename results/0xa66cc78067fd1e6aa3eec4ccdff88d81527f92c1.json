{"time":138,"results":[{"type":"external-function ","before":"function addToWhitelist(address[] memory addresses) public onlyOwner {\n\n        for (uint256 i = 0; i < addresses.length; i++) {\n\n            require(addresses[i] != address(0), \"Can't add the null address\");\n\n\n            _allowList[addresses[i]] = true;\n\n            _allowListClaimed[addresses[i]] > 0 ? _allowListClaimed[addresses[i]] : 0;\n\n        }\n\n    }","after":"function addToWhitelist(address[] calldata addresses) public onlyOwner {\n\n        for (uint256 i = 0; i < addresses.length; i++) {\n\n            require(addresses[i] != address(0), \"Can't add the null address\");\n\n\n            _allowList[addresses[i]] = true;\n\n            _allowListClaimed[addresses[i]] > 0 ? _allowListClaimed[addresses[i]] : 0;\n\n        }\n\n    }","contract":"AngryBoars","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner {\n\n        require(!isMetadataLocked, \"Metadata is locked\");\n\n        _baseURIExtended = baseURI_;\n\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner {\n\n        require(!isMetadataLocked, \"Metadata is locked\");\n\n        _baseURIExtended = baseURI_;\n\n    }","contract":"AngryBoars","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_SUPPLY = 10000;","after":"uint256 public constant MAX_SUPPLY = 10000;","contract":"AngryBoars","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"AngryBoars","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"AngryBoars","time":0}]}