{"time":850,"results":[{"type":"loop-calculation","before":"uint8 b;","after":"// move outside for loop\nuint8 b;","loc":{"start":{"line":3220,"column":12},"end":{"line":3220,"column":19}},"contract":"strings","time":0},{"type":"loop-calculation","before":"uint a;","after":"// move outside for loop\nuint a;","loc":{"start":{"line":3307,"column":12},"end":{"line":3307,"column":18}},"contract":"strings","time":0},{"type":"loop-calculation","before":"uint b;","after":"// move outside for loop\nuint b;","loc":{"start":{"line":3309,"column":12},"end":{"line":3309,"column":18}},"contract":"strings","time":0},{"type":"loop-calculation","before":"bytes32 testHash;","after":"// move outside for loop\nbytes32 testHash;","loc":{"start":{"line":3847,"column":20},"end":{"line":3847,"column":36}},"contract":"strings","time":0},{"type":"external-function ","before":"function mintMany(address[] _tos, uint256[] _tokenIds, bytes28[2][] memory _movess, uint256[] _symmetries) public onlyAdmin {\n\n        require(_tos.length == _tokenIds.length && _tokenIds.length == _movess.length && _movess.length == _symmetries.length);\n\n        for (uint256 i = 0; i < _tos.length; i++) {\n\n            address _to = _tos[i];\n\n            uint256 _tokenId = _tokenIds[i];\n\n            bytes28[2] memory _moves = _movess[i];\n\n            uint256 _symmetry = _symmetries[i];\n\n            setCloverMoves(_tokenId, _moves);\n\n            if (_symmetry > 0) {\n\n                setSymmetries(_tokenId, _symmetry);\n\n            }\n\n            super._mint(_to, _tokenId);\n\n            setApprovalForAll(clubTokenController, true);\n\n        }\n\n    }","after":"function mintMany(address[] _tos, uint256[] _tokenIds, bytes28[2][] calldata _movess, uint256[] _symmetries) public onlyAdmin {\n\n        require(_tos.length == _tokenIds.length && _tokenIds.length == _movess.length && _movess.length == _symmetries.length);\n\n        for (uint256 i = 0; i < _tos.length; i++) {\n\n            address _to = _tos[i];\n\n            uint256 _tokenId = _tokenIds[i];\n\n            bytes28[2] memory _moves = _movess[i];\n\n            uint256 _symmetry = _symmetries[i];\n\n            setCloverMoves(_tokenId, _moves);\n\n            if (_symmetry > 0) {\n\n                setSymmetries(_tokenId, _symmetry);\n\n            }\n\n            super._mint(_to, _tokenId);\n\n            setApprovalForAll(clubTokenController, true);\n\n        }\n\n    }","contract":"Clovers","time":0},{"type":"immutable-restrict-modification ","before":"string internal name_;","after":"string internal immutable name_;","contract":"Clovers","time":1},{"type":"immutable-restrict-modification ","before":"string internal symbol_;","after":"string internal immutable symbol_;","contract":"Clovers","time":1},{"type":"immutable-restrict-modification ","before":"string public name;","after":"string public immutable name;","contract":"ClubToken","time":0},{"type":"immutable-restrict-modification ","before":"string public symbol;","after":"string public immutable symbol;","contract":"ClubToken","time":0},{"type":"immutable-restrict-modification ","before":"uint8 public decimals;","after":"uint8 public immutable decimals;","contract":"ClubToken","time":0},{"type":"state-data-arrangement ","before":"\nbool public paused;\naddress public clubToken;\naddress public simpleCloversMarket;\naddress public curationMarket;\naddress public support;\nuint256 public virtualSupply;\nuint256 public virtualBalance;\nuint32 public reserveRatio;","after":"uint256 public virtualSupply;\nuint256 public virtualBalance;\naddress public clubToken;\naddress public simpleCloversMarket;\naddress public curationMarket;\naddress public support;\nuint32 public reserveRatio;\nbool public paused;\n","contract":"ClubTokenController","time":0},{"type":"immutable-restrict-modification ","before":"address public clubToken;","after":"address public immutable clubToken;","contract":"ClubTokenController","time":1},{"type":"constant-restrict-modification  ","before":"string public version = '0.3';","after":"string public constant version = '0.3';","contract":"ClubTokenController","time":1},{"type":"struct-data-arrangement ","before":"\n  bool collect\n  uint256 sta\n  address committ","after":"  uint256 sta\n  address committ\n  bool collect\n","contract":"CloversController","time":1},{"type":"immutable-restrict-modification ","before":"  address public clover","after":"  address public clover","contract":"CloversController","time":0},{"type":"immutable-restrict-modification ","before":"  address public clubToke","after":"  address public clubToke","contract":"CloversController","time":0}]}