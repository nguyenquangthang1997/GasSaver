{"time":101,"results":[{"type":"external-function ","before":"function namePet(uint16 id, string memory newName) external {\n\n        (, bool active) = SOPv1.getPetInfo(id);\n\n        require(SOPv1.ownerOf(id) == msg.sender, \"Only the owner of the pet can name it!\");\n\n        require(active, \"Pet needs to be active to name it.\");\n\n        require(keccak256(abi.encodePacked(newName)) != keccak256(abi.encodePacked(SOPv1.petName(id))), \"Pet already has this name.\");\n\n\n        if (keccak256(abi.encodePacked(SOPv1.petName(id))) == keccak256(abi.encodePacked(\"\"))) {\n\n            SOPv1.setPetName(id, newName);\n\n        } else {\n\n            // take CARE tokens from owner\n\n            uint paymentAmount = 100 * 10 ** 18;\n\n            // Token must be approved from the CARE token's address by the owner\n\n            CareToken.burn(msg.sender, paymentAmount);\n\n\n            SOPv1.setPetName(id, newName);\n\n        }\n\n    }","after":"function namePet(uint16 id, string calldata newName) external {\n\n        (, bool active) = SOPv1.getPetInfo(id);\n\n        require(SOPv1.ownerOf(id) == msg.sender, \"Only the owner of the pet can name it!\");\n\n        require(active, \"Pet needs to be active to name it.\");\n\n        require(keccak256(abi.encodePacked(newName)) != keccak256(abi.encodePacked(SOPv1.petName(id))), \"Pet already has this name.\");\n\n\n        if (keccak256(abi.encodePacked(SOPv1.petName(id))) == keccak256(abi.encodePacked(\"\"))) {\n\n            SOPv1.setPetName(id, newName);\n\n        } else {\n\n            // take CARE tokens from owner\n\n            uint paymentAmount = 100 * 10 ** 18;\n\n            // Token must be approved from the CARE token's address by the owner\n\n            CareToken.burn(msg.sender, paymentAmount);\n\n\n            SOPv1.setPetName(id, newName);\n\n        }\n\n    }","contract":"SpiritOrbPetsCarev1","time":0}]}