{"time":148,"results":[{"type":"state-data-arrangement ","before":"\nuint256 internal constant ONE_THOUSAND = 1e18 * 1000;\nuint256 internal constant ONE_HUNDRED = 1e18 * 100;\nuint256 internal constant SECONDS_IN_A_YEAR = 31536000;\naddress internal constant FEE_ADDRESS = 0xfeEFEEfeefEeFeefEEFEEfEeFeefEEFeeFEEFEeF;\nuint256 public collateralizationRatio = SafeDecimalMath.unit() * 125;\nuint256 public interestRate = (5 * SafeDecimalMath.unit()) / 100;\nuint256 public interestPerSecond = interestRate.div(SECONDS_IN_A_YEAR);\nuint256 public issueFeeRate = (5 * SafeDecimalMath.unit()) / 1000;\nuint256 public issueLimit = SafeDecimalMath.unit() * 5000;\nuint256 public minLoanSize = SafeDecimalMath.unit() * 1;\nuint256 public accountLoanLimit = 50;\nbool public loanLiquidationOpen = false;\nuint256 public liquidationDeadline;\nuint256 public totalIssuedSynths;\nuint256 public totalLoansCreated;\nuint256 public totalOpenLoanCount;\nmapping(address => SynthLoanStruct[]) public accountsSynthLoans;\nmapping(address => uint256) public accountOpenLoanCounter;\nbytes32 private constant CONTRACT_SYSTEMSTATUS = \"SystemStatus\";\nbytes32 private constant CONTRACT_SYNTHSETH = \"SynthsETH\";\nbytes32 private constant CONTRACT_SYNTHSUSD = \"SynthsUSD\";\nbytes32 private constant CONTRACT_DEPOT = \"Depot\";\nbytes32 private constant CONTRACT_EXRATES = \"ExchangeRates\";\nbytes32[24] private addressesToCache = [\n    CONTRACT_SYSTEMSTATUS,\n    CONTRACT_SYNTHSETH,\n    CONTRACT_SYNTHSUSD,\n    CONTRACT_DEPOT,\n    CONTRACT_EXRATES\n    ];","after":"uint256 internal constant ONE_THOUSAND = 1e18 * 1000;\nuint256 internal constant ONE_HUNDRED = 1e18 * 100;\nuint256 internal constant SECONDS_IN_A_YEAR = 31536000;\nuint256 public collateralizationRatio = SafeDecimalMath.unit() * 125;\nuint256 public interestRate = (5 * SafeDecimalMath.unit()) / 100;\nuint256 public interestPerSecond = interestRate.div(SECONDS_IN_A_YEAR);\nuint256 public issueFeeRate = (5 * SafeDecimalMath.unit()) / 1000;\nuint256 public issueLimit = SafeDecimalMath.unit() * 5000;\nuint256 public minLoanSize = SafeDecimalMath.unit() * 1;\nuint256 public accountLoanLimit = 50;\nuint256 public liquidationDeadline;\nuint256 public totalIssuedSynths;\nuint256 public totalLoansCreated;\nuint256 public totalOpenLoanCount;\nmapping(address => SynthLoanStruct[]) public accountsSynthLoans;\nmapping(address => uint256) public accountOpenLoanCounter;\nbytes32 private constant CONTRACT_SYSTEMSTATUS = \"SystemStatus\";\nbytes32 private constant CONTRACT_SYNTHSETH = \"SynthsETH\";\nbytes32 private constant CONTRACT_SYNTHSUSD = \"SynthsUSD\";\nbytes32 private constant CONTRACT_DEPOT = \"Depot\";\nbytes32 private constant CONTRACT_EXRATES = \"ExchangeRates\";\nbytes32[24] private addressesToCache = [\n    CONTRACT_SYSTEMSTATUS,\n    CONTRACT_SYNTHSETH,\n    CONTRACT_SYNTHSUSD,\n    CONTRACT_DEPOT,\n    CONTRACT_EXRATES\n    ];\naddress internal constant FEE_ADDRESS = 0xfeEFEEfeefEeFeefEEFEEfEeFeefEEFeeFEEFEeF;\nbool public loanLiquidationOpen = false;\n","contract":"EtherCollateral","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public liquidationDeadline;","after":"uint256 public immutable liquidationDeadline;","contract":"EtherCollateral","time":1}]}