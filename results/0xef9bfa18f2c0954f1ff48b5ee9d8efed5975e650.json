{"time":226,"results":[{"type":"external-function ","before":"   function initialize(\n\n        uint256 _maturity,\n\n        uint256 mintAmount,\n\n        address _underlying,\n\n        string memory name,\n\n        string memory symbol\n\n    ) initializer public {\n\n        __ERC20_init(name, symbol);\n\n        __ERC20Permit_init(name);\n\n        require(_maturity > 0, \"Invalid maturity.\");\n\n        require(mintAmount > 0, \"Invalid mint amount.\");\n\n        require(_underlying != address(0), \"Invalid underlying.\");\n\n        maturity = _maturity;\n\n        underlying = _underlying;\n\n        _mint(msg.sender, mintAmount);\n\n  ","after":"   function initialize(\n\n        uint256 _maturity,\n\n        uint256 mintAmount,\n\n        address _underlying,\n\n        string calldata name,\n\n        string calldata symbol\n\n    ) initializer public {\n\n        __ERC20_init(name, symbol);\n\n        __ERC20Permit_init(name);\n\n        require(_maturity > 0, \"Invalid maturity.\");\n\n        require(mintAmount > 0, \"Invalid mint amount.\");\n\n        require(_underlying != address(0), \"Invalid underlying.\");\n\n        maturity = _maturity;\n\n        underlying = _underlying;\n\n        _mint(msg.sender, mintAmount);\n\n  ","contract":"FYToken","time":0},{"type":"external-function ","before":"   function multiTransfer(address[] memory recipients, uint256[] memory amounts) external {\n\n        require(recipients.length > 0 && amounts.length == recipients.length);\n\n        for (uint256 i = 0; i < recipients.length; i++) transfer(recipients[i], amounts[i]);\n\n  ","after":"   function multiTransfer(address[] calldata recipients, uint256[] calldata amounts) external {\n\n        require(recipients.length > 0 && amounts.length == recipients.length);\n\n        for (uint256 i = 0; i < recipients.length; i++) transfer(recipients[i], amounts[i]);\n\n  ","contract":"FYToken","time":0}]}