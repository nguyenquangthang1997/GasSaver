{"time":248,"results":[{"type":"external-function ","before":"function initialize(\n        address _nftContract,\n        uint256 _tokenId,\n        uint256 _maxPrice,\n        uint256 _secondsToTimeout,\n        Structs.AddressAndAmount calldata _split,\n        Structs.AddressAndAmount calldata _tokenGate,\n        string memory _name,\n        string memory _symbol\n    ) external initializer {\n        // validate maxPrice\n        require(_maxPrice > 0, \"PartyBuy::initialize: must set price higher than 0\");\n        // initialize & validate shared Party variables\n        __Party_init(_nftContract, _tokenId, _split, _tokenGate, _name, _symbol);\n        // set PartyBuy-specific state variables\n        expiresAt = block.timestamp + _secondsToTimeout;\n        maxPrice = _maxPrice;\n    }","after":"function initialize(\n        address _nftContract,\n        uint256 _tokenId,\n        uint256 _maxPrice,\n        uint256 _secondsToTimeout,\n        Structs.AddressAndAmount calldata _split,\n        Structs.AddressAndAmount calldata _tokenGate,\n        string calldata _name,\n        string calldata _symbol\n    ) external initializer {\n        // validate maxPrice\n        require(_maxPrice > 0, \"PartyBuy::initialize: must set price higher than 0\");\n        // initialize & validate shared Party variables\n        __Party_init(_nftContract, _tokenId, _split, _tokenGate, _name, _symbol);\n        // set PartyBuy-specific state variables\n        expiresAt = block.timestamp + _secondsToTimeout;\n        maxPrice = _maxPrice;\n    }","contract":"PartyBuy","time":0},{"type":"external-function ","before":"function emergencyCall(address _contract, bytes memory _calldata)\n    external\n    onlyPartyDAO\n    returns (bool _success, bytes memory _returnData)\n    {\n        (_success, _returnData) = _contract.call(_calldata);\n        require(_success, string(_returnData));\n    }","after":"function emergencyCall(address _contract, bytes calldata _calldata)\n    external\n    onlyPartyDAO\n    returns (bool _success, bytes memory _returnData)\n    {\n        (_success, _returnData) = _contract.call(_calldata);\n        require(_success, string(_returnData));\n    }","contract":"PartyBuy","time":0},{"type":"external-function ","before":"function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","after":"function onERC721Received(address, address, uint256, bytes calldata) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","contract":"PartyBuy","time":0}]}