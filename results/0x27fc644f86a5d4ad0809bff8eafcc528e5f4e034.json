{"time":105,"results":[{"type":"external-function ","before":"function setNFTDetails(\n        INFT[] memory NFTContracts,\n        uint256[] memory ids,\n        uint256[] memory costs\n    ) public onlyOwner {\n        require(\n            NFTContracts.length == ids.length && ids.length == costs.length,\n            \"Farm: setNFTDetails input arrays need to have same length\"\n        );\n        for (uint256 i = 0; i < NFTContracts.length; i++) {\n            connectedNFTs[i].nft = NFTContracts[i];\n            connectedNFTs[i].cost = costs[i];\n            connectedNFTs[i].id = ids[i];\n        }\n        NFTCount = NFTContracts.length;\n    }","after":"function setNFTDetails(\n        INFT[] calldata NFTContracts,\n        uint256[] calldata ids,\n        uint256[] calldata costs\n    ) public onlyOwner {\n        require(\n            NFTContracts.length == ids.length && ids.length == costs.length,\n            \"Farm: setNFTDetails input arrays need to have same length\"\n        );\n        for (uint256 i = 0; i < NFTContracts.length; i++) {\n            connectedNFTs[i].nft = NFTContracts[i];\n            connectedNFTs[i].cost = costs[i];\n            connectedNFTs[i].id = ids[i];\n        }\n        NFTCount = NFTContracts.length;\n    }","contract":"Farm","time":0}]}