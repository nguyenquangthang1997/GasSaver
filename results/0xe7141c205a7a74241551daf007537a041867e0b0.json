{"time":169,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nuint256 public tokenCount = 1;\nuint256 public tokenCountMax = 100;\nmapping(uint256 => string) private _tokenURIs;\nmapping(address => address) public delegates;\nmapping(address => mapping(uint64 => Checkpoint)) public checkpoints;\nmapping(address => uint64) public numCheckpoints;\nmapping(address => uint) public nonces;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\nbytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");","after":"mapping(address => EnumerableSet.UintSet) private _holderTokens;\nEnumerableMap.UintToAddressMap private _tokenOwners;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nstring private _name;\nstring private _symbol;\nuint256 public tokenCount = 1;\nuint256 public tokenCountMax = 100;\nmapping(uint256 => string) private _tokenURIs;\nmapping(address => address) public delegates;\nmapping(address => mapping(uint64 => Checkpoint)) public checkpoints;\nmapping(address => uint64) public numCheckpoints;\nmapping(address => uint) public nonces;\nbytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n","contract":"Anoncats","time":0},{"type":"external-function ","before":"function setTokenURI(uint256 tokenId, string memory _tokenURI) external {\n        require(_exists(tokenId), \"Anoncats: URI set of nonexistent token\");\n        require(_msgSender() == owner(), \"Anoncats: not the contract owner\");\n        require(Anoncats.ownerOf(tokenId) == owner(), \"Anoncats: not in contract owner possession\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }","after":"function setTokenURI(uint256 tokenId, string calldata _tokenURI) external {\n        require(_exists(tokenId), \"Anoncats: URI set of nonexistent token\");\n        require(_msgSender() == owner(), \"Anoncats: not the contract owner\");\n        require(Anoncats.ownerOf(tokenId) == owner(), \"Anoncats: not in contract owner possession\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }","contract":"Anoncats","time":0},{"type":"external-function ","before":"function mint(string memory _tokenURI) external onlyOwner {\n        require(tokenCount <= tokenCountMax, \"Anoncats: max number of token minted\");\n        _safeMint(_msgSender(), tokenCount);\n        _tokenURIs[tokenCount] = _tokenURI;\n        tokenCount = tokenCount.add(1);\n    }","after":"function mint(string calldata _tokenURI) external onlyOwner {\n        require(tokenCount <= tokenCountMax, \"Anoncats: max number of token minted\");\n        _safeMint(_msgSender(), tokenCount);\n        _tokenURIs[tokenCount] = _tokenURI;\n        tokenCount = tokenCount.add(1);\n    }","contract":"Anoncats","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Anoncats","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Anoncats","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public tokenCountMax = 100;","after":"uint256 public constant tokenCountMax = 100;","contract":"Anoncats","time":1}]}