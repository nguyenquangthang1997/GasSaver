{"time":154,"results":[{"type":"external-function ","before":"   function mint(uint256[] memory _tokensId, uint256 _timestamp, bytes memory _signature) public payable saleIsOpen {\n\n\n        uint256 total = totalToken();\n\n        require(_tokensId.length <= 2, \"Max limit\");\n\n        require(total + _tokensId.length <= MAX_ELEMENTS, \"Max limit\");\n\n        require(msg.value >= price(_tokensId.length), \"Value below price\");\n\n\n        address wallet = _msgSender();\n\n\n        address signerOwner = signatureWallet(wallet, _tokensId, _timestamp, _signature);\n\n        require(signerOwner == owner(), \"Not authorized to mint\");\n\n\n        require(block.timestamp >= _timestamp - 30, \"Out of time\");\n\n\n        for (uint8 i = 0; i < _tokensId.length; i++) {\n\n            require(rawOwnerOf(_tokensId[i]) == address(0) && _tokensId[i] > 0 && _tokensId[i] <= MAX_ELEMENTS, \"Token already minted\");\n\n            _mintAnElement(wallet, _tokensId[i]);\n\n        }\n\n\n  ","after":"   function mint(uint256[] calldata _tokensId, uint256 _timestamp, bytes calldata _signature) public payable saleIsOpen {\n\n\n        uint256 total = totalToken();\n\n        require(_tokensId.length <= 2, \"Max limit\");\n\n        require(total + _tokensId.length <= MAX_ELEMENTS, \"Max limit\");\n\n        require(msg.value >= price(_tokensId.length), \"Value below price\");\n\n\n        address wallet = _msgSender();\n\n\n        address signerOwner = signatureWallet(wallet, _tokensId, _timestamp, _signature);\n\n        require(signerOwner == owner(), \"Not authorized to mint\");\n\n\n        require(block.timestamp >= _timestamp - 30, \"Out of time\");\n\n\n        for (uint8 i = 0; i < _tokensId.length; i++) {\n\n            require(rawOwnerOf(_tokensId[i]) == address(0) && _tokensId[i] > 0 && _tokensId[i] <= MAX_ELEMENTS, \"Token already minted\");\n\n            _mintAnElement(wallet, _tokensId[i]);\n\n        }\n\n\n  ","contract":"MekaVerse","time":0},{"type":"external-function ","before":"   function mintUnsoldTokens(uint256[] memory _tokensId) public onlyOwner {\n\n\n        require(PAUSE, \"Pause is disable\");\n\n\n        for (uint256 i = 0; i < _tokensId.length; i++) {\n\n            if (rawOwnerOf(_tokensId[i]) == address(0)) {\n\n                _mintAnElement(owner(), _tokensId[i]);\n\n            }\n\n        }\n\n  ","after":"   function mintUnsoldTokens(uint256[] calldata _tokensId) public onlyOwner {\n\n\n        require(PAUSE, \"Pause is disable\");\n\n\n        for (uint256 i = 0; i < _tokensId.length; i++) {\n\n            if (rawOwnerOf(_tokensId[i]) == address(0)) {\n\n                _mintAnElement(owner(), _tokensId[i]);\n\n            }\n\n        }\n\n  ","contract":"MekaVerse","time":0},{"type":"immutable-restrict-modification ","before":"   string private _na","after":"   string private _na","contract":"MekaVerse","time":1},{"type":"immutable-restrict-modification ","before":"   string private _symb","after":"   string private _symb","contract":"MekaVerse","time":1}]}