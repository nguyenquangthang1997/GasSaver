{"time":186,"results":[{"type":"de-morgan-condition ","before":"!_isExcluded[sender] && !_isExcluded[recipient]","after":"!(_isExcluded[sender] && _isExcluded[recipient])","loc":{"start":{"line":525,"column":19},"end":{"line":525,"column":65}},"contract":"InfinityProtocol","time":0},{"type":"state-data-arrangement ","before":"\nmapping(address => uint) private _rOwned;\nmapping(address => uint) private _tOwned;\nmapping(address => mapping(address => uint)) private _allowances;\nmapping(address => bool) private _isExcluded;\naddress[] private _excluded;\naddress public feeReceiver;\naddress public router;\nuint public maxCycles;\nstring  private constant _NAME = \"infinityprotocol.io\";\nstring  private constant _SYMBOL = \"INFINITY\";\nuint8   private constant _DECIMALS = 8;\nuint private constant _MAX = ~uint(0);\nuint private constant _DECIMALFACTOR = 10 ** uint(_DECIMALS);\nuint private constant _GRANULARITY = 100;\nuint private _tTotal = 100000000 * _DECIMALFACTOR;\nuint private _rTotal = (_MAX - (_MAX % _tTotal));\nuint private _tFeeTotal;\nuint private _tBurnTotal;\nuint private _infinityCycle;\nuint private _tTradeCycle;\nuint private _tBurnCycle;\nuint private _BURN_FEE;\nuint private _FOT_FEE;\nbool private _feeSet;\nuint private constant _MAX_TX_SIZE = 100000000 * _DECIMALFACTOR;","after":"mapping(address => uint) private _rOwned;\nmapping(address => uint) private _tOwned;\nmapping(address => mapping(address => uint)) private _allowances;\nmapping(address => bool) private _isExcluded;\naddress[] private _excluded;\nuint public maxCycles;\nstring  private constant _NAME = \"infinityprotocol.io\";\nstring  private constant _SYMBOL = \"INFINITY\";\nuint private constant _MAX = ~uint(0);\nuint private constant _DECIMALFACTOR = 10 ** uint(_DECIMALS);\nuint private constant _GRANULARITY = 100;\nuint private _tTotal = 100000000 * _DECIMALFACTOR;\nuint private _rTotal = (_MAX - (_MAX % _tTotal));\nuint private _tFeeTotal;\nuint private _tBurnTotal;\nuint private _infinityCycle;\nuint private _tTradeCycle;\nuint private _tBurnCycle;\nuint private _BURN_FEE;\nuint private _FOT_FEE;\nuint private constant _MAX_TX_SIZE = 100000000 * _DECIMALFACTOR;\naddress public feeReceiver;\naddress public router;\nuint8   private constant _DECIMALS = 8;\nbool private _feeSet;\n","contract":"InfinityProtocol","time":0}]}