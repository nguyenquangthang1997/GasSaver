{"time":84,"results":[{"type":"state-data-arrangement ","before":"\nbool public breaker = false;\nuint public minimum = 1000e18;\nbool public config = true;\naddress public governance;\nIERC20 public yCRV = IERC20(0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8);\nYearnGovernance public yGov = YearnGovernance(0x3A22dF48d84957F907e67F4313E3D43179040d6E);\nuint256 public constant DURATION = 7 days;\nuint256 public periodFinish = 0;\nuint256 public rewardRate = 0;\nuint256 public lastUpdateTime;\nuint256 public rewardPerTokenStored;\nmapping(address => uint256) public userRewardPerTokenPaid;\nmapping(address => uint256) public rewards;","after":"uint public minimum = 1000e18;\nIERC20 public yCRV = IERC20(0xdF5e0e81Dff6FAF3A7e52BA697820c5e32D806A8);\nYearnGovernance public yGov = YearnGovernance(0x3A22dF48d84957F907e67F4313E3D43179040d6E);\nuint256 public constant DURATION = 7 days;\nuint256 public periodFinish = 0;\nuint256 public rewardRate = 0;\nuint256 public lastUpdateTime;\nuint256 public rewardPerTokenStored;\nmapping(address => uint256) public userRewardPerTokenPaid;\nmapping(address => uint256) public rewards;\naddress public governance;\nbool public breaker = false;\nbool public config = true;\n","contract":"YearnFeeRewards","time":0}]}