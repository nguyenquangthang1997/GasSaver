{"time":190,"results":[{"type":"state-data-arrangement ","before":"\nToken[] private _tokens;\nIERC20 private _lockToken;\nuint256 private _lockTokenFee;\nmapping(address => uint256) private _tokenVsIndex;\naddress payable private _wallet;\naddress constant private ETH_ADDRESS = address(\n\n        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\n\n    );\nmapping(address => Airdrop[]) private _baseTokenVsAirdrops;\nuint256 private _lockId;\nmapping(address => uint256[]) private _userVsLockIds;\nmapping(uint256 => LockedAsset) private _idVsLockedAsset;\nbool private _paused;","after":"Token[] private _tokens;\nIERC20 private _lockToken;\nuint256 private _lockTokenFee;\nmapping(address => uint256) private _tokenVsIndex;\nmapping(address => Airdrop[]) private _baseTokenVsAirdrops;\nuint256 private _lockId;\nmapping(address => uint256[]) private _userVsLockIds;\nmapping(uint256 => LockedAsset) private _idVsLockedAsset;\naddress payable private _wallet;\naddress constant private ETH_ADDRESS = address(\n\n        0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\n\n    );\nbool private _paused;\n","contract":"Lock","time":0},{"type":"struct-data-arrangement ","before":"\naddress tokenAddress\nuint256 minAmount\nbool emergencyUnlock\nTokenStatus status\nuint256[] tierAmounts\nuint256[] tierFees","after":"uint256 minAmount\nTokenStatus status\nuint256[] tierAmounts\nuint256[] tierFees\naddress tokenAddress\nbool emergencyUnlock\n","contract":"Lock","time":0}]}