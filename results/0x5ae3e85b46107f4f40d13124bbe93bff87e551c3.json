{"time":1642,"results":[{"type":"state-data-arrangement ","before":"\nuint128 constant MAX_UINT128 = uint128(0) - 1;\nNuCypherToken public immutable token;\nuint128 public immutable totalSupply;\nuint256 public immutable mintingCoefficient;\nuint256 public immutable lockDurationCoefficient1;\nuint256 public immutable lockDurationCoefficient2;\nuint32 public immutable secondsPerPeriod;\nuint16 public immutable maximumRewardedPeriods;\nuint256 public immutable firstPhaseMaxIssuance;\nuint256 public immutable firstPhaseTotalSupply;\nuint128 public previousPeriodSupply;\nuint128 public currentPeriodSupply;\nuint16 public currentMintingPeriod;","after":"NuCypherToken public immutable token;\nuint256 public immutable mintingCoefficient;\nuint256 public immutable lockDurationCoefficient1;\nuint256 public immutable lockDurationCoefficient2;\nuint256 public immutable firstPhaseMaxIssuance;\nuint256 public immutable firstPhaseTotalSupply;\nuint128 constant MAX_UINT128 = uint128(0) - 1;\nuint128 public immutable totalSupply;\nuint128 public previousPeriodSupply;\nuint128 public currentPeriodSupply;\nuint32 public immutable secondsPerPeriod;\nuint16 public immutable maximumRewardedPeriods;\nuint16 public currentMintingPeriod;\n","contract":"Issuer","time":2},{"type":"state-data-arrangement ","before":"\nbytes16 internal constant RESERVED_POLICY_ID = bytes16(0);\naddress internal constant RESERVED_NODE = address(0);\nuint256 internal constant MAX_BALANCE = uint256(uint128(0) - 1);\nint256 public constant DEFAULT_FEE_DELTA = int256((uint256(0) - 1) >> 1);\nStakingEscrow public immutable escrow;\nuint32 public immutable secondsPerPeriod;\nmapping(bytes16 => Policy) public policies;\nmapping(address => NodeInfo) public nodes;\nRange public feeRateRange;","after":"uint256 internal constant MAX_BALANCE = uint256(uint128(0) - 1);\nint256 public constant DEFAULT_FEE_DELTA = int256((uint256(0) - 1) >> 1);\nStakingEscrow public immutable escrow;\nmapping(bytes16 => Policy) public policies;\nmapping(address => NodeInfo) public nodes;\nRange public feeRateRange;\naddress internal constant RESERVED_NODE = address(0);\nbytes16 internal constant RESERVED_POLICY_ID = bytes16(0);\nuint32 public immutable secondsPerPeriod;\n","contract":"PolicyManager","time":0},{"type":"de-morgan-condition ","before":"!crosscurrentCommittedPeriod && !crossnextCommittedPeriod","after":"!(crosscurrentCommittedPeriod && crossnextCommittedPeriod)","loc":{"start":{"line":5181,"column":12},"end":{"line":5181,"column":45}},"contract":"StakingEscrow","time":0},{"type":"state-data-arrangement ","before":"\nuint16 internal constant RESERVED_PERIOD = 0;\nuint16 internal constant MAX_CHECKED_VALUES = 5;\nuint16 public constant MAX_SUB_STAKES = 30;\nuint16 internal constant MAX_UINT16 = 65535;\nuint8 internal constant RE_STAKE_DISABLED_INDEX = 0;\nuint8 internal constant WIND_DOWN_INDEX = 1;\nuint8 internal constant MEASURE_WORK_INDEX = 2;\nuint8 internal constant SNAPSHOTS_DISABLED_INDEX = 3;\nuint16 public immutable minLockedPeriods;\nuint16 public immutable minWorkerPeriods;\nuint256 public immutable minAllowableLockedTokens;\nuint256 public immutable maxAllowableLockedTokens;\nbool public immutable isTestContract;\nmapping(address => StakerInfo) public stakerInfo;\naddress[] public stakers;\nmapping(address => address) public stakerFromWorker;\nmapping(uint16 => uint256) public lockedPerPeriod;\nuint128[] public balanceHistory;\nPolicyManagerInterface public policyManager;\nAdjudicatorInterface public adjudicator;\nWorkLockInterface public workLock;","after":"uint256 public immutable minAllowableLockedTokens;\nuint256 public immutable maxAllowableLockedTokens;\nmapping(address => StakerInfo) public stakerInfo;\naddress[] public stakers;\nmapping(address => address) public stakerFromWorker;\nmapping(uint16 => uint256) public lockedPerPeriod;\nuint128[] public balanceHistory;\nPolicyManagerInterface public policyManager;\nAdjudicatorInterface public adjudicator;\nWorkLockInterface public workLock;\nuint16 internal constant RESERVED_PERIOD = 0;\nuint16 internal constant MAX_CHECKED_VALUES = 5;\nuint16 public constant MAX_SUB_STAKES = 30;\nuint16 internal constant MAX_UINT16 = 65535;\nuint16 public immutable minLockedPeriods;\nuint16 public immutable minWorkerPeriods;\nuint8 internal constant RE_STAKE_DISABLED_INDEX = 0;\nuint8 internal constant WIND_DOWN_INDEX = 1;\nuint8 internal constant MEASURE_WORK_INDEX = 2;\nuint8 internal constant SNAPSHOTS_DISABLED_INDEX = 3;\nbool public immutable isTestContract;\n","contract":"StakingEscrow","time":8},{"type":"de-morgan-condition ","before":"!crosscurrentCommittedPeriod && !crossnextCommittedPeriod","after":"!(crosscurrentCommittedPeriod && crossnextCommittedPeriod)","loc":{"start":{"line":6849,"column":12},"end":{"line":6849,"column":45}},"contract":"StakingEscrow","time":0},{"type":"state-data-arrangement ","before":"\nuint16 internal constant RESERVED_PERIOD = 0;\nuint16 internal constant MAX_CHECKED_VALUES = 5;\nuint16 public constant MAX_SUB_STAKES = 30;\nuint16 internal constant MAX_UINT16 = 65535;\nuint8 internal constant RE_STAKE_DISABLED_INDEX = 0;\nuint8 internal constant WIND_DOWN_INDEX = 1;\nuint8 internal constant MEASURE_WORK_INDEX = 2;\nuint8 internal constant SNAPSHOTS_DISABLED_INDEX = 3;\nuint16 public immutable minLockedPeriods;\nuint16 public immutable minWorkerPeriods;\nuint256 public immutable minAllowableLockedTokens;\nuint256 public immutable maxAllowableLockedTokens;\nbool public immutable isTestContract;\nmapping(address => StakerInfo) public stakerInfo;\naddress[] public stakers;\nmapping(address => address) public stakerFromWorker;\nmapping(uint16 => uint256) public lockedPerPeriod;\nuint128[] public balanceHistory;\nPolicyManagerInterface public policyManager;\nAdjudicatorInterface public adjudicator;\nWorkLockInterface public workLock;","after":"uint256 public immutable minAllowableLockedTokens;\nuint256 public immutable maxAllowableLockedTokens;\nmapping(address => StakerInfo) public stakerInfo;\naddress[] public stakers;\nmapping(address => address) public stakerFromWorker;\nmapping(uint16 => uint256) public lockedPerPeriod;\nuint128[] public balanceHistory;\nPolicyManagerInterface public policyManager;\nAdjudicatorInterface public adjudicator;\nWorkLockInterface public workLock;\nuint16 internal constant RESERVED_PERIOD = 0;\nuint16 internal constant MAX_CHECKED_VALUES = 5;\nuint16 public constant MAX_SUB_STAKES = 30;\nuint16 internal constant MAX_UINT16 = 65535;\nuint16 public immutable minLockedPeriods;\nuint16 public immutable minWorkerPeriods;\nuint8 internal constant RE_STAKE_DISABLED_INDEX = 0;\nuint8 internal constant WIND_DOWN_INDEX = 1;\nuint8 internal constant MEASURE_WORK_INDEX = 2;\nuint8 internal constant SNAPSHOTS_DISABLED_INDEX = 3;\nbool public immutable isTestContract;\n","contract":"StakingEscrow","time":2},{"type":"state-data-arrangement ","before":"\naddress public target;\naddress public previousTarget;\nuint8 public isUpgrade;\nuint256 stubSlot;\nuint8 constant UPGRADE_FALSE = 1;\nuint8 constant UPGRADE_TRUE = 2;","after":"uint256 stubSlot;\naddress public target;\naddress public previousTarget;\nuint8 public isUpgrade;\nuint8 constant UPGRADE_FALSE = 1;\nuint8 constant UPGRADE_TRUE = 2;\n","contract":"Upgradeable","time":0},{"type":"state-data-arrangement ","before":"\nuint16 public constant SLOWING_REFUND = 100;\nuint256 private constant MAX_ETH_SUPPLY = 2e10 ether;\nNuCypherToken public immutable token;\nStakingEscrow public immutable escrow;\nuint256 public immutable boostingRefund;\nuint256 public immutable minAllowedBid;\nuint16 public immutable stakingPeriods;\nuint256 public immutable maxAllowableLockedTokens;\nuint256 public immutable minAllowableLockedTokens;\nuint256 public tokenSupply;\nuint256 public startBidDate;\nuint256 public endBidDate;\nuint256 public endCancellationDate;\nuint256 public bonusETHSupply;\nmapping(address => WorkInfo) public workInfo;\nmapping(address => uint256) public compensation;\naddress[] public bidders;\nuint256 public nextBidderToCheck;","after":"uint256 private constant MAX_ETH_SUPPLY = 2e10 ether;\nNuCypherToken public immutable token;\nStakingEscrow public immutable escrow;\nuint256 public immutable boostingRefund;\nuint256 public immutable minAllowedBid;\nuint256 public immutable maxAllowableLockedTokens;\nuint256 public immutable minAllowableLockedTokens;\nuint256 public tokenSupply;\nuint256 public startBidDate;\nuint256 public endBidDate;\nuint256 public endCancellationDate;\nuint256 public bonusETHSupply;\nmapping(address => WorkInfo) public workInfo;\nmapping(address => uint256) public compensation;\naddress[] public bidders;\nuint256 public nextBidderToCheck;\nuint16 public constant SLOWING_REFUND = 100;\nuint16 public immutable stakingPeriods;\n","contract":"WorkLock","time":0},{"type":"state-data-arrangement ","before":"\nuint256 public constant BASIS_FRACTION = 100;\nStakingEscrow public escrow;\nWorkLock public workLock;\naddress public workerOwner;\nuint256 public totalDepositedTokens;\nuint256 public workLockClaimedTokens;\nuint256 public totalWithdrawnReward;\nuint256 public totalWithdrawnETH;\nuint256 public totalWorkLockETHReceived;\nuint256 public totalWorkLockETHRefunded;\nuint256 public totalWorkLockETHWithdrawn;\nuint256 workerFraction;\nuint256 public workerWithdrawnReward;\nmapping(address => Delegator) public delegators;\nbool depositIsEnabled = true;","after":"uint256 public constant BASIS_FRACTION = 100;\nStakingEscrow public escrow;\nWorkLock public workLock;\nuint256 public totalDepositedTokens;\nuint256 public workLockClaimedTokens;\nuint256 public totalWithdrawnReward;\nuint256 public totalWithdrawnETH;\nuint256 public totalWorkLockETHReceived;\nuint256 public totalWorkLockETHRefunded;\nuint256 public totalWorkLockETHWithdrawn;\nuint256 workerFraction;\nuint256 public workerWithdrawnReward;\nmapping(address => Delegator) public delegators;\naddress public workerOwner;\nbool depositIsEnabled = true;\n","contract":"WorkLockPoolingContract","time":0}]}