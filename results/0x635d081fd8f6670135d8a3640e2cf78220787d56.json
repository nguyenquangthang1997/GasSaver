{"time":84,"results":[{"type":"external-function ","before":"function setBlackList(\n\n        address[] memory addresses,\n\n        bool[] memory blackListStates\n\n    )\n\n    public\n\n    onlyOwner\n\n    {\n\n        require(\n\n            addresses.length == blackListStates.length,\n\n            \"Invalid request length\"\n\n        );\n\n        for (uint i = 0; i < addresses.length; i++) {\n\n            blackList[addresses[i]] = blackListStates[i];\n\n        }\n\n    }","after":"function setBlackList(\n\n        address[] calldata addresses,\n\n        bool[] calldata blackListStates\n\n    )\n\n    public\n\n    onlyOwner\n\n    {\n\n        require(\n\n            addresses.length == blackListStates.length,\n\n            \"Invalid request length\"\n\n        );\n\n        for (uint i = 0; i < addresses.length; i++) {\n\n            blackList[addresses[i]] = blackListStates[i];\n\n        }\n\n    }","contract":"AddXyz","time":0},{"type":"immutable-restrict-modification ","before":"address public bondedContract;","after":"address public immutable bondedContract;","contract":"AddXyz","time":0},{"type":"immutable-restrict-modification ","before":"address public unbondedContract;","after":"address public immutable unbondedContract;","contract":"AddXyz","time":0}]}