{"time":137,"results":[{"type":"struct-data-arrangement ","before":"\nIERC20 sellToken\nIERC20 buyToken\naddress receiver\nuint256 sellAmount\nuint256 buyAmount\nuint32 validTo\nbytes32 appData\nuint256 feeAmount\nbytes32 kind\nbool partiallyFillable","after":"IERC20 sellToken\nIERC20 buyToken\nuint256 sellAmount\nuint256 buyAmount\nbytes32 appData\nuint256 feeAmount\nbytes32 kind\naddress receiver\nuint32 validTo\nbool partiallyFillable\n","contract":"GPv2Order","time":0},{"type":"external-function ","before":"    function simulateDelegatecall(\n        address targetContract,\n        bytes memory calldataPayload\n    ) public returns (bytes memory response) {\n        bytes memory innerCall = abi.encodeWithSelector(\n            this.simulateDelegatecallInternal.selector,\n            targetContract,\n            calldataPayload\n        );\n        (, response) = address(this).call(innerCall);\n        bool innerSuccess = response[response.length - 1] == 0x01;\n        setLength(response, response.length - 1);\n        if (innerSuccess) {\n            return response;\n        } else {\n            revertWith(response);\n        }\n ","after":"    function simulateDelegatecall(\n        address targetContract,\n        bytes calldata calldataPayload\n    ) public returns (bytes memory response) {\n        bytes memory innerCall = abi.encodeWithSelector(\n            this.simulateDelegatecallInternal.selector,\n            targetContract,\n            calldataPayload\n        );\n        (, response) = address(this).call(innerCall);\n        bool innerSuccess = response[response.length - 1] == 0x01;\n        setLength(response, response.length - 1);\n        if (innerSuccess) {\n            return response;\n        } else {\n            revertWith(response);\n        }\n ","contract":"GPv2Settlement","time":0},{"type":"external-function ","before":"    function simulateDelegatecallInternal(\n        address targetContract,\n        bytes memory calldataPayload\n    ) external returns (bytes memory response) {\n        bool success;\n        (success, response) = targetContract.delegatecall(\n            calldataPayload\n        );\n        revertWith(abi.encodePacked(response, success));\n ","after":"    function simulateDelegatecallInternal(\n        address targetContract,\n        bytes calldata calldataPayload\n    ) external returns (bytes memory response) {\n        bool success;\n        (success, response) = targetContract.delegatecall(\n            calldataPayload\n        );\n        revertWith(abi.encodePacked(response, success));\n ","contract":"GPv2Settlement","time":0},{"type":"struct-data-arrangement ","before":"\n    uint256 sellTokenI\n    uint256 buyTokenI\n    address rece\n    uint256 sellAm\n    uint256 buyAm\n    uint32 val\n    bytes32 app\n    uint256 feeAm\n    uint256 f\n    uint256 executedAm\n    bytes signa","after":"    uint256 sellTokenI\n    uint256 buyTokenI\n    uint256 sellAm\n    uint256 buyAm\n    bytes32 app\n    uint256 feeAm\n    uint256 f\n    uint256 executedAm\n    bytes signa\n    address rece\n    uint32 val\n","contract":"GPv2Trade","time":0}]}