{"time":146,"results":[{"type":"state-data-arrangement ","before":"\nstring _baseTokenURI;\nuint256 private _price = 0.07 ether;\nbool public _paused = true;\nISpiritOrbPetsv0 public SOPv0;\naddress[] public _approvedContracts;\nbool public _whitelistPaused = true;\nmapping(uint256 => bool) private _claimedMintList;\nuint256 public constant MAX_PET_SUPPLY = 7777;\nuint8 public constant MAX_PET_LEVEL = 30;\nmapping(uint16 => string) public petName;\nmapping(uint16 => Pet) public pets;","after":"string _baseTokenURI;\nuint256 private _price = 0.07 ether;\nISpiritOrbPetsv0 public SOPv0;\naddress[] public _approvedContracts;\nmapping(uint256 => bool) private _claimedMintList;\nuint256 public constant MAX_PET_SUPPLY = 7777;\nmapping(uint16 => string) public petName;\nmapping(uint16 => Pet) public pets;\nbool public _paused = true;\nbool public _whitelistPaused = true;\nuint8 public constant MAX_PET_LEVEL = 30;\n","contract":"SpiritOrbPetsv1","time":0},{"type":"external-function ","before":"function setPetName(uint16 id, string memory name) external inApprovedContractList {\n\n        petName[id] = name;\n\n    }","after":"function setPetName(uint16 id, string calldata name) external inApprovedContractList {\n\n        petName[id] = name;\n\n    }","contract":"SpiritOrbPetsv1","time":0},{"type":"external-function ","before":"function mintPetWhitelisted(uint256[] memory petIdsToClaimFor) public payable {\n\n        uint256 supply = totalSupply();\n\n        require(!_whitelistPaused, \"Whitelisted pet adoption has not yet begun.\");\n\n        require(supply < MAX_PET_SUPPLY, \"Adoption has already ended.\");\n\n\n        uint256 numberOfPets = 0;\n\n\n        for (uint i = 0; i < petIdsToClaimFor.length; i++) {\n\n            require(msg.sender == SOPv0.ownerOf(petIdsToClaimFor[i]), \"You don't own this pet\");\n\n            require(!_claimedMintList[petIdsToClaimFor[i]], \"You have already claimed a mint for this pet!\");\n\n            numberOfPets++;\n\n            _claimedMintList[petIdsToClaimFor[i]] = true;\n\n        }\n\n\n        require(supply + numberOfPets <= MAX_PET_SUPPLY, \"Exceeds maximum Pets available. Please try to adopt less Pets.\");\n\n        require(_price * numberOfPets == msg.value, \"Amount of Ether sent is not correct.\");\n\n\n        // Mint the amount of provided Pets.\n\n        for (uint i = 0; i < numberOfPets; i++) {\n\n            _safeMint(msg.sender, supply + i);\n\n            createPet(uint16(supply + i));\n\n        }\n\n\n        emit Minted(msg.sender, numberOfPets);\n\n    }","after":"function mintPetWhitelisted(uint256[] calldata petIdsToClaimFor) public payable {\n\n        uint256 supply = totalSupply();\n\n        require(!_whitelistPaused, \"Whitelisted pet adoption has not yet begun.\");\n\n        require(supply < MAX_PET_SUPPLY, \"Adoption has already ended.\");\n\n\n        uint256 numberOfPets = 0;\n\n\n        for (uint i = 0; i < petIdsToClaimFor.length; i++) {\n\n            require(msg.sender == SOPv0.ownerOf(petIdsToClaimFor[i]), \"You don't own this pet\");\n\n            require(!_claimedMintList[petIdsToClaimFor[i]], \"You have already claimed a mint for this pet!\");\n\n            numberOfPets++;\n\n            _claimedMintList[petIdsToClaimFor[i]] = true;\n\n        }\n\n\n        require(supply + numberOfPets <= MAX_PET_SUPPLY, \"Exceeds maximum Pets available. Please try to adopt less Pets.\");\n\n        require(_price * numberOfPets == msg.value, \"Amount of Ether sent is not correct.\");\n\n\n        // Mint the amount of provided Pets.\n\n        for (uint i = 0; i < numberOfPets; i++) {\n\n            _safeMint(msg.sender, supply + i);\n\n            createPet(uint16(supply + i));\n\n        }\n\n\n        emit Minted(msg.sender, numberOfPets);\n\n    }","contract":"SpiritOrbPetsv1","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n\n        _baseTokenURI = baseURI;\n\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n\n        _baseTokenURI = baseURI;\n\n    }","contract":"SpiritOrbPetsv1","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _price = 0.07 ether;","after":"uint256 private constant _price = 0.07 ether;","contract":"SpiritOrbPetsv1","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"SpiritOrbPetsv1","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"SpiritOrbPetsv1","time":0}]}