{"time":438,"results":[{"type":"struct-data-arrangement ","before":"\naddress component\naddress module\nint256 unit\nuint8 positionState\nbytes data","after":"int256 unit\nbytes data\naddress component\naddress module\nuint8 positionState\n","contract":"ISetToken","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"ERC20","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"ERC20","time":0},{"type":"external-function ","before":"function initialize(\n\n        ISetToken _setToken,\n\n        NAVIssuanceSettings memory _navIssuanceSettings\n\n    )\n\n    external\n\n    onlySetManager(_setToken, msg.sender)\n\n    onlyValidAndPendingSet(_setToken)\n\n    {\n\n        require(_navIssuanceSettings.reserveAssets.length > 0, \"Reserve assets must be greater than 0\");\n\n        require(_navIssuanceSettings.maxManagerFee < PreciseUnitMath.preciseUnit(), \"Max manager fee must be less than 100%\");\n\n        require(_navIssuanceSettings.maxPremiumPercentage < PreciseUnitMath.preciseUnit(), \"Max premium percentage must be less than 100%\");\n\n        require(_navIssuanceSettings.managerFees[0] <= _navIssuanceSettings.maxManagerFee, \"Manager issue fee must be less than max\");\n\n        require(_navIssuanceSettings.managerFees[1] <= _navIssuanceSettings.maxManagerFee, \"Manager redeem fee must be less than max\");\n\n        require(_navIssuanceSettings.premiumPercentage <= _navIssuanceSettings.maxPremiumPercentage, \"Premium must be less than max\");\n\n        require(_navIssuanceSettings.feeRecipient != address(0), \"Fee Recipient must be non-zero address.\");\n\n        // Initial mint of Set cannot use NAVIssuance since minSetTokenSupply must be > 0\n\n        require(_navIssuanceSettings.minSetTokenSupply > 0, \"Min SetToken supply must be greater than 0\");\n\n\n        for (uint256 i = 0; i < _navIssuanceSettings.reserveAssets.length; i++) {\n\n            isReserveAsset[_setToken][_navIssuanceSettings.reserveAssets[i]] = true;\n\n        }\n\n\n        navIssuanceSettings[_setToken] = _navIssuanceSettings;\n\n\n        _setToken.initializeModule();\n\n    }","after":"function initialize(\n\n        ISetToken _setToken,\n\n        NAVIssuanceSettings calldata _navIssuanceSettings\n\n    )\n\n    external\n\n    onlySetManager(_setToken, msg.sender)\n\n    onlyValidAndPendingSet(_setToken)\n\n    {\n\n        require(_navIssuanceSettings.reserveAssets.length > 0, \"Reserve assets must be greater than 0\");\n\n        require(_navIssuanceSettings.maxManagerFee < PreciseUnitMath.preciseUnit(), \"Max manager fee must be less than 100%\");\n\n        require(_navIssuanceSettings.maxPremiumPercentage < PreciseUnitMath.preciseUnit(), \"Max premium percentage must be less than 100%\");\n\n        require(_navIssuanceSettings.managerFees[0] <= _navIssuanceSettings.maxManagerFee, \"Manager issue fee must be less than max\");\n\n        require(_navIssuanceSettings.managerFees[1] <= _navIssuanceSettings.maxManagerFee, \"Manager redeem fee must be less than max\");\n\n        require(_navIssuanceSettings.premiumPercentage <= _navIssuanceSettings.maxPremiumPercentage, \"Premium must be less than max\");\n\n        require(_navIssuanceSettings.feeRecipient != address(0), \"Fee Recipient must be non-zero address.\");\n\n        // Initial mint of Set cannot use NAVIssuance since minSetTokenSupply must be > 0\n\n        require(_navIssuanceSettings.minSetTokenSupply > 0, \"Min SetToken supply must be greater than 0\");\n\n\n        for (uint256 i = 0; i < _navIssuanceSettings.reserveAssets.length; i++) {\n\n            isReserveAsset[_setToken][_navIssuanceSettings.reserveAssets[i]] = true;\n\n        }\n\n\n        navIssuanceSettings[_setToken] = _navIssuanceSettings;\n\n\n        _setToken.initializeModule();\n\n    }","contract":"NavIssuanceModule","time":1}]}