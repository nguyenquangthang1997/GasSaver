{"time":45,"results":[{"type":"external-function ","before":"function init(\n\n        address owner,\n\n        string memory _name,\n\n        string memory _baseURI\n\n    ) external {\n\n        initOwner(owner);\n\n        name = _name;\n\n        baseURI = _baseURI;\n\n    }","after":"function init(\n\n        address owner,\n\n        string calldata _name,\n\n        string calldata _baseURI\n\n    ) external {\n\n        initOwner(owner);\n\n        name = _name;\n\n        baseURI = _baseURI;\n\n    }","contract":"NFTCollateralVault","time":0},{"type":"external-function ","before":"function depositERC721(address nftContract, uint256[] memory tokenIds) public {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            IERC721(nftContract).safeTransferFrom(msg.sender, address(this), tokenIds[i]);\n\n            // emit AddNftToken(nftContract, tokenIds[i], 1);\n\n        }\n\n    }","after":"function depositERC721(address nftContract, uint256[] calldata tokenIds) public {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            IERC721(nftContract).safeTransferFrom(msg.sender, address(this), tokenIds[i]);\n\n            // emit AddNftToken(nftContract, tokenIds[i], 1);\n\n        }\n\n    }","contract":"NFTCollateralVault","time":0},{"type":"external-function ","before":"function depoistERC1155(address nftContract, uint256[] memory tokenIds, uint256[] memory amounts) public {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        require(tokenIds.length == amounts.length, \"PARAMS_NOT_MATCH\");\n\n        IERC1155(nftContract).safeBatchTransferFrom(msg.sender, address(this), tokenIds, amounts, \"\");\n\n        // for(uint256 i = 0; i < tokenIds.length; i++) {\n\n        //     emit AddNftToken(nftContract, tokenIds[i], amounts[i]);\n\n        // }\n\n    }","after":"function depoistERC1155(address nftContract, uint256[] calldata tokenIds, uint256[] calldata amounts) public {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        require(tokenIds.length == amounts.length, \"PARAMS_NOT_MATCH\");\n\n        IERC1155(nftContract).safeBatchTransferFrom(msg.sender, address(this), tokenIds, amounts, \"\");\n\n        // for(uint256 i = 0; i < tokenIds.length; i++) {\n\n        //     emit AddNftToken(nftContract, tokenIds[i], amounts[i]);\n\n        // }\n\n    }","contract":"NFTCollateralVault","time":0},{"type":"external-function ","before":"function withdrawERC721(address nftContract, uint256[] memory tokenIds) external onlyOwner {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            IERC721(nftContract).safeTransferFrom(address(this), _OWNER_, tokenIds[i]);\n\n            emit RemoveNftToken(nftContract, tokenIds[i], 1);\n\n        }\n\n    }","after":"function withdrawERC721(address nftContract, uint256[] calldata tokenIds) external onlyOwner {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            IERC721(nftContract).safeTransferFrom(address(this), _OWNER_, tokenIds[i]);\n\n            emit RemoveNftToken(nftContract, tokenIds[i], 1);\n\n        }\n\n    }","contract":"NFTCollateralVault","time":0},{"type":"external-function ","before":"function withdrawERC1155(address nftContract, uint256[] memory tokenIds, uint256[] memory amounts) external onlyOwner {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        require(tokenIds.length == amounts.length, \"PARAMS_NOT_MATCH\");\n\n        IERC1155(nftContract).safeBatchTransferFrom(address(this), _OWNER_, tokenIds, amounts, \"\");\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            emit RemoveNftToken(nftContract, tokenIds[i], amounts[i]);\n\n        }\n\n    }","after":"function withdrawERC1155(address nftContract, uint256[] calldata tokenIds, uint256[] calldata amounts) external onlyOwner {\n\n        require(nftContract != address(0), \"DODONftVault: ZERO_ADDRESS\");\n\n        require(tokenIds.length == amounts.length, \"PARAMS_NOT_MATCH\");\n\n        IERC1155(nftContract).safeBatchTransferFrom(address(this), _OWNER_, tokenIds, amounts, \"\");\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n\n            emit RemoveNftToken(nftContract, tokenIds[i], amounts[i]);\n\n        }\n\n    }","contract":"NFTCollateralVault","time":0}]}