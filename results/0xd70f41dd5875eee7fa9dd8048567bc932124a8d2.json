{"time":122,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping(uint256 => address) private _tokenOwner;\nmapping(uint256 => address) private _tokenApprovals;\nmapping(address => Counters.Counter) private _ownedTokensCount;\nmapping(address => mapping(address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function mintPhoto(uint256 tokenId, string memory hash) public onlyOwner {\n\n        require(tokenId <= 100000, \"The maximum amount of tokens is 100.000\");\n\n\n        if (tokenId < 5000) {\n\n            _mint(owner(), tokenId);\n\n            updateCurrentPrice();\n\n        }\n\n        else {\n\n            _mint(address(this), tokenId);\n\n        }\n\n\n        tokenHashes[tokenId] = hash;\n\n    }","after":"function mintPhoto(uint256 tokenId, string calldata hash) public onlyOwner {\n\n        require(tokenId <= 100000, \"The maximum amount of tokens is 100.000\");\n\n\n        if (tokenId < 5000) {\n\n            _mint(owner(), tokenId);\n\n            updateCurrentPrice();\n\n        }\n\n        else {\n\n            _mint(address(this), tokenId);\n\n        }\n\n\n        tokenHashes[tokenId] = hash;\n\n    }","contract":"BitAirtToken","time":0},{"type":"immutable-restrict-modification ","before":"address payable private feesTo;","after":"address payable private immutable feesTo;","contract":"BitAirtToken","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"BitAirtToken","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"BitAirtToken","time":1},{"type":"immutable-restrict-modification ","before":"address payable private feesTo;","after":"address payable private immutable feesTo;","contract":"BitAirtExchange","time":0}]}