{"time":1468,"results":[{"type":"state-data-arrangement ","before":"\nstring public symbol;\nstring public name;\nuint8 public constant decimals = 18;\naddress public FRAXStablecoinAdd;\nuint256 public constant genesis_supply = 100000000e18;\nuint256 public FXS_DAO_min;\naddress public owner_address;\naddress public oracle_address;\naddress public timelock_address;\nFRAXStablecoin private FRAX;\nbool public trackingVotes = true;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;","after":"string public symbol;\nstring public name;\nuint256 public constant genesis_supply = 100000000e18;\nuint256 public FXS_DAO_min;\nFRAXStablecoin private FRAX;\nmapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\nmapping(address => uint32) public numCheckpoints;\naddress public FRAXStablecoinAdd;\naddress public owner_address;\naddress public oracle_address;\naddress public timelock_address;\nuint8 public constant decimals = 18;\nbool public trackingVotes = true;\n","contract":"FRAXShares","time":1},{"type":"state-data-arrangement ","before":"\nChainlinkETHUSDPriceConsumer private eth_usd_pricer;\nuint8 private eth_usd_pricer_decimals;\nUniswapPairOracle private fraxEthOracle;\nUniswapPairOracle private fxsEthOracle;\nstring public symbol;\nstring public name;\nuint8 public constant decimals = 18;\naddress public owner_address;\naddress public creator_address;\naddress public timelock_address;\naddress public controller_address;\naddress public fxs_address;\naddress public frax_eth_oracle_address;\naddress public fxs_eth_oracle_address;\naddress public weth_address;\naddress public eth_usd_consumer_address;\nuint256 public constant genesis_supply = 2000000e18;\naddress[] public frax_pools_array;\nmapping(address => bool) public frax_pools;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public global_collateral_ratio;\nuint256 public redemption_fee;\nuint256 public minting_fee;\nuint256 public frax_step;\nuint256 public refresh_cooldown;\nuint256 public price_target;\nuint256 public price_band;\naddress public DEFAULT_ADMIN_ADDRESS;\nbytes32 public constant COLLATERAL_RATIO_PAUSER = keccak256(\"COLLATERAL_RATIO_PAUSER\");\nbool public collateral_ratio_paused = false;\nuint256 public last_call_time;","after":"ChainlinkETHUSDPriceConsumer private eth_usd_pricer;\nUniswapPairOracle private fraxEthOracle;\nUniswapPairOracle private fxsEthOracle;\nstring public symbol;\nstring public name;\nuint256 public constant genesis_supply = 2000000e18;\naddress[] public frax_pools_array;\nmapping(address => bool) public frax_pools;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 public global_collateral_ratio;\nuint256 public redemption_fee;\nuint256 public minting_fee;\nuint256 public frax_step;\nuint256 public refresh_cooldown;\nuint256 public price_target;\nuint256 public price_band;\nbytes32 public constant COLLATERAL_RATIO_PAUSER = keccak256(\"COLLATERAL_RATIO_PAUSER\");\nuint256 public last_call_time;\naddress public owner_address;\naddress public creator_address;\naddress public timelock_address;\naddress public controller_address;\naddress public fxs_address;\naddress public frax_eth_oracle_address;\naddress public fxs_eth_oracle_address;\naddress public weth_address;\naddress public eth_usd_consumer_address;\naddress public DEFAULT_ADMIN_ADDRESS;\nuint8 private eth_usd_pricer_decimals;\nuint8 public constant decimals = 18;\nbool public collateral_ratio_paused = false;\n","contract":"FRAXStablecoin","time":14},{"type":"state-data-arrangement ","before":"\nERC20 private collateral_token;\naddress private collateral_address;\naddress private owner_address;\naddress private frax_contract_address;\naddress private fxs_contract_address;\naddress private timelock_address;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nUniswapPairOracle private collatEthOracle;\naddress public collat_eth_oracle_address;\naddress private weth_address;\nuint256 public minting_fee;\nuint256 public redemption_fee;\nuint256 public buyback_fee;\nuint256 public recollat_fee;\nmapping(address => uint256) public redeemFXSBalances;\nmapping(address => uint256) public redeemCollateralBalances;\nuint256 public unclaimedPoolCollateral;\nuint256 public unclaimedPoolFXS;\nmapping(address => uint256) public lastRedeemed;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_MAX = 1e6;\nuint256 private immutable missing_decimals;\nuint256 public pool_ceiling = 0;\nuint256 public pausedPrice = 0;\nuint256 public bonus_rate = 7500;\nuint256 public redemption_delay = 1;\nbytes32 private constant MINT_PAUSER = keccak256(\"MINT_PAUSER\");\nbytes32 private constant REDEEM_PAUSER = keccak256(\"REDEEM_PAUSER\");\nbytes32 private constant BUYBACK_PAUSER = keccak256(\"BUYBACK_PAUSER\");\nbytes32 private constant RECOLLATERALIZE_PAUSER = keccak256(\"RECOLLATERALIZE_PAUSER\");\nbytes32 private constant COLLATERAL_PRICE_PAUSER = keccak256(\"COLLATERAL_PRICE_PAUSER\");\nbool public mintPaused = false;\nbool public redeemPaused = false;\nbool public recollateralizePaused = false;\nbool public buyBackPaused = false;\nbool public collateralPricePaused = false;","after":"ERC20 private collateral_token;\nFRAXShares private FXS;\nFRAXStablecoin private FRAX;\nUniswapPairOracle private collatEthOracle;\nuint256 public minting_fee;\nuint256 public redemption_fee;\nuint256 public buyback_fee;\nuint256 public recollat_fee;\nmapping(address => uint256) public redeemFXSBalances;\nmapping(address => uint256) public redeemCollateralBalances;\nuint256 public unclaimedPoolCollateral;\nuint256 public unclaimedPoolFXS;\nmapping(address => uint256) public lastRedeemed;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_PRECISION = 1e6;\nuint256 private constant COLLATERAL_RATIO_MAX = 1e6;\nuint256 private immutable missing_decimals;\nuint256 public pool_ceiling = 0;\nuint256 public pausedPrice = 0;\nuint256 public bonus_rate = 7500;\nuint256 public redemption_delay = 1;\nbytes32 private constant MINT_PAUSER = keccak256(\"MINT_PAUSER\");\nbytes32 private constant REDEEM_PAUSER = keccak256(\"REDEEM_PAUSER\");\nbytes32 private constant BUYBACK_PAUSER = keccak256(\"BUYBACK_PAUSER\");\nbytes32 private constant RECOLLATERALIZE_PAUSER = keccak256(\"RECOLLATERALIZE_PAUSER\");\nbytes32 private constant COLLATERAL_PRICE_PAUSER = keccak256(\"COLLATERAL_PRICE_PAUSER\");\naddress private collateral_address;\naddress private owner_address;\naddress private frax_contract_address;\naddress private fxs_contract_address;\naddress private timelock_address;\naddress public collat_eth_oracle_address;\naddress private weth_address;\nbool public mintPaused = false;\nbool public redeemPaused = false;\nbool public recollateralizePaused = false;\nbool public buyBackPaused = false;\nbool public collateralPricePaused = false;\n","contract":"FraxPool","time":31},{"type":"state-data-arrangement ","before":"\nFRAXStablecoin private FRAX;\nERC20 public rewardsToken;\nERC20 public stakingToken;\nuint256 public periodFinish;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant MULTIPLIER_BASE = 1e6;\nuint256 public rewardRate;\nuint256 public rewardsDuration = 604800;\nuint256 public lastUpdateTime;\nuint256 public rewardPerTokenStored = 0;\nuint256 private pool_weight;\naddress public owner_address;\naddress public timelock_address;\nuint256 public locked_stake_max_multiplier = 3000000;\nuint256 public locked_stake_time_for_max_multiplier = 3 * 365 * 86400;\nuint256 public locked_stake_min_time = 604800;\nstring private locked_stake_min_time_str = \"604800\";\nuint256 public cr_boost_max_multiplier = 3000000;\nmapping(address => uint256) public userRewardPerTokenPaid;\nmapping(address => uint256) public rewards;\nuint256 private _staking_token_supply = 0;\nuint256 private _staking_token_boosted_supply = 0;\nmapping(address => uint256) private _unlocked_balances;\nmapping(address => uint256) private _locked_balances;\nmapping(address => uint256) private _boosted_balances;\nmapping(address => LockedStake[]) private lockedStakes;\nmapping(address => bool) public greylist;\nbool public unlockedStakes;","after":"FRAXStablecoin private FRAX;\nERC20 public rewardsToken;\nERC20 public stakingToken;\nuint256 public periodFinish;\nuint256 private constant PRICE_PRECISION = 1e6;\nuint256 private constant MULTIPLIER_BASE = 1e6;\nuint256 public rewardRate;\nuint256 public rewardsDuration = 604800;\nuint256 public lastUpdateTime;\nuint256 public rewardPerTokenStored = 0;\nuint256 private pool_weight;\nuint256 public locked_stake_max_multiplier = 3000000;\nuint256 public locked_stake_time_for_max_multiplier = 3 * 365 * 86400;\nuint256 public locked_stake_min_time = 604800;\nstring private locked_stake_min_time_str = \"604800\";\nuint256 public cr_boost_max_multiplier = 3000000;\nmapping(address => uint256) public userRewardPerTokenPaid;\nmapping(address => uint256) public rewards;\nuint256 private _staking_token_supply = 0;\nuint256 private _staking_token_boosted_supply = 0;\nmapping(address => uint256) private _unlocked_balances;\nmapping(address => uint256) private _locked_balances;\nmapping(address => uint256) private _boosted_balances;\nmapping(address => LockedStake[]) private lockedStakes;\nmapping(address => bool) public greylist;\naddress public owner_address;\naddress public timelock_address;\nbool public unlockedStakes;\n","contract":"StakingRewards","time":0},{"type":"state-data-arrangement ","before":"\naddress private _beneficiary;\naddress private _owner;\nuint256 private _cliff;\nuint256 private _start;\nuint256 private _duration;\naddress public _FXS_contract_address;\nERC20 FXS;\naddress public _timelock_address;\nbool public _revocable;\nuint256 private _released;\nbool public _revoked;\nuint256[44] private __gap;","after":"uint256 private _cliff;\nuint256 private _start;\nuint256 private _duration;\nERC20 FXS;\nuint256 private _released;\nuint256[44] private __gap;\naddress private _beneficiary;\naddress private _owner;\naddress public _FXS_contract_address;\naddress public _timelock_address;\nbool public _revocable;\nbool public _revoked;\n","contract":"TokenVesting","time":1},{"type":"state-data-arrangement ","before":"\naddress owner_address;\naddress timelock_address;\nuint public PERIOD = 3600;\nuint public CONSULT_LENIENCY = 120;\nbool public ALLOW_STALE_CONSULTS = false;\nIUniswapV2Pair public immutable pair;\naddress public immutable token0;\naddress public immutable token1;\nuint    public price0CumulativeLast;\nuint    public price1CumulativeLast;\nuint32  public blockTimestampLast;\nFixedPoint.uq112x112 public price0Average;\nFixedPoint.uq112x112 public price1Average;","after":"uint public PERIOD = 3600;\nuint public CONSULT_LENIENCY = 120;\nIUniswapV2Pair public immutable pair;\nuint    public price0CumulativeLast;\nuint    public price1CumulativeLast;\nFixedPoint.uq112x112 public price0Average;\nFixedPoint.uq112x112 public price1Average;\naddress owner_address;\naddress timelock_address;\naddress public immutable token0;\naddress public immutable token1;\nuint32  public blockTimestampLast;\nbool public ALLOW_STALE_CONSULTS = false;\n","contract":"UniswapPairOracle","time":2},{"type":"state-data-arrangement ","before":"\naddress owner_address;\naddress timelock_address;\nuint public PERIOD = 3600;\nIUniswapV2Pair public immutable pair;\naddress public immutable token0;\naddress public immutable token1;\nuint    public price0CumulativeLast;\nuint    public price1CumulativeLast;\nuint32  public blockTimestampLast;\nFixedPoint.uq112x112 public price0Average;\nFixedPoint.uq112x112 public price1Average;","after":"uint public PERIOD = 3600;\nIUniswapV2Pair public immutable pair;\nuint    public price0CumulativeLast;\nuint    public price1CumulativeLast;\nFixedPoint.uq112x112 public price0Average;\nFixedPoint.uq112x112 public price1Average;\naddress owner_address;\naddress timelock_address;\naddress public immutable token0;\naddress public immutable token1;\nuint32  public blockTimestampLast;\n","contract":"UniswapPairOracle_OLD","time":0},{"type":"state-data-arrangement ","before":"\nstring public override constant name = 'Uniswap V2';\nstring public override constant symbol = 'UNI-V2';\nuint8 public override constant decimals = 18;\nuint  public override totalSupply;\nmapping(address => uint) public override balanceOf;\nmapping(address => mapping(address => uint)) public override allowance;\nuint public override constant MINIMUM_LIQUIDITY = 10 ** 3;\nbytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\nbytes32 public override DOMAIN_SEPARATOR;\nbytes32 public constant override PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\nmapping(address => uint) public override nonces;\naddress public override factory;\naddress public override token0;\naddress public override token1;\nuint112 private reserve0;\nuint112 private reserve1;\nuint32  private blockTimestampLast;\nuint public override price0CumulativeLast;\nuint public override price1CumulativeLast;\nuint public override kLast;\nuint private unlocked = 1;","after":"string public override constant name = 'Uniswap V2';\nstring public override constant symbol = 'UNI-V2';\nuint  public override totalSupply;\nmapping(address => uint) public override balanceOf;\nmapping(address => mapping(address => uint)) public override allowance;\nuint public override constant MINIMUM_LIQUIDITY = 10 ** 3;\nbytes32 public override DOMAIN_SEPARATOR;\nbytes32 public constant override PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\nmapping(address => uint) public override nonces;\nuint public override price0CumulativeLast;\nuint public override price1CumulativeLast;\nuint public override kLast;\nuint private unlocked = 1;\naddress public override factory;\naddress public override token0;\naddress public override token1;\nuint112 private reserve0;\nuint112 private reserve1;\nbytes4 private constant SELECTOR = bytes4(keccak256(bytes('transfer(address,uint256)')));\nuint32  private blockTimestampLast;\nuint8 public override constant decimals = 18;\n","contract":"UniswapV2Pair","time":85}]}