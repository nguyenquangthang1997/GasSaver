{"time":152,"results":[{"type":"de-morgan-condition ","before":"!(char >= 0x30 && char <= 0x39) && //9-0\n\n            !(char >= 0x41 && char <= 0x5A)","after":"!((char >= 0x30 && char <= 0x39) && //9-0\n\n            (char >= 0x41 && char <= 0x5A))","loc":{"start":{"line":3658,"column":16},"end":{"line":3660,"column":42}},"contract":"Waifus","time":0},{"type":"external-function ","before":"function changeName(uint256 tokenId, string memory newName) public {\n\n        address owner = ownerOf(tokenId);\n\n\n        require(_msgSender() == owner, \"ERC721: caller is not the owner\");\n\n        require(validateName(newName) == true, \"Not a valid new name\");\n\n        require(sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])), \"New name is same as the current one\");\n\n        require(isNameReserved(newName) == false, \"Name already reserved\");\n\n\n        IERC20(_wetAddress).transferFrom(msg.sender, address(this), NAME_CHANGE_PRICE);\n\n        // If already named, dereserve old name\n\n        if (bytes(_tokenName[tokenId]).length > 0) {\n\n            toggleReserveName(_tokenName[tokenId], false);\n\n        }\n\n        toggleReserveName(newName, true);\n\n        _tokenName[tokenId] = newName;\n\n        IERC20(_wetAddress).burn(NAME_CHANGE_PRICE);\n\n        emit NameChange(tokenId, newName);\n\n    }","after":"function changeName(uint256 tokenId, string calldata newName) public {\n\n        address owner = ownerOf(tokenId);\n\n\n        require(_msgSender() == owner, \"ERC721: caller is not the owner\");\n\n        require(validateName(newName) == true, \"Not a valid new name\");\n\n        require(sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])), \"New name is same as the current one\");\n\n        require(isNameReserved(newName) == false, \"Name already reserved\");\n\n\n        IERC20(_wetAddress).transferFrom(msg.sender, address(this), NAME_CHANGE_PRICE);\n\n        // If already named, dereserve old name\n\n        if (bytes(_tokenName[tokenId]).length > 0) {\n\n            toggleReserveName(_tokenName[tokenId], false);\n\n        }\n\n        toggleReserveName(newName, true);\n\n        _tokenName[tokenId] = newName;\n\n        IERC20(_wetAddress).burn(NAME_CHANGE_PRICE);\n\n        emit NameChange(tokenId, newName);\n\n    }","contract":"Waifus","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"Waifus","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"Waifus","time":0},{"type":"immutable-restrict-modification ","before":"address private _wetAddress;","after":"address private immutable _wetAddress;","contract":"Waifus","time":0}]}