{"time":164,"results":[{"type":"loop-calculation","before":"      uint256 mintIndex = _tokenIdCounter.current(","after":"// move outside for loop\n      uint256 mintIndex = _tokenIdCounter.current(","loc":{"start":{"line":1282,"column":12},"end":{"line":1282,"column":61}},"contract":"RoaringLeaders","time":0},{"type":"loop-calculation","before":"      uint256 mintIndex = _tokenIdCounter.current(","after":"// move outside for loop\n      uint256 mintIndex = _tokenIdCounter.current(","loc":{"start":{"line":1302,"column":12},"end":{"line":1302,"column":61}},"contract":"RoaringLeaders","time":0},{"type":"state-data-arrangement ","before":"\n\n\n    Counters.Counter private _tokenIdCo\n\n\n    uint256 public maxTokenS\n\n\n    uint256 public constant MAX_MINTS_PER_TXN\n\n\n    uint256 public mintPrice = 0.065 \n\n\n    uint256 public maxPresaleMintsPerWalle\n\n\n    bool public preSaleIsActive = \n\n\n    bool public saleIsActive = \n\n\n    string public ba\n\n\n    string public prove\n\n\n    uint256 public startingIndex\n\n\n    uint256 public starting\n\n\n    address public elixirContractAd\n\n\n    mapping(address => uint256) private _presale\n\n\n    address[3] private _shareho\n\n\n    uint[3] private _s","after":"\n\n    Counters.Counter private _tokenIdCo\n\n\n    uint256 public maxTokenS\n\n\n    uint256 public constant MAX_MINTS_PER_TXN\n\n\n    uint256 public mintPrice = 0.065 \n\n\n    uint256 public maxPresaleMintsPerWalle\n\n\n    string public ba\n\n\n    string public prove\n\n\n    uint256 public startingIndex\n\n\n    uint256 public starting\n\n\n    mapping(address => uint256) private _presale\n\n\n    address[3] private _shareho\n\n\n    uint[3] private _s\n\n\n    address public elixirContractAd\n\n\n    bool public preSaleIsActive = \n\n\n    bool public saleIsActive = \n","contract":"RoaringLeaders","time":0},{"type":"external-function ","before":"\n\n    function setBaseURI(string memory newBaseURI) public onlyOwner {\n        baseURI = newBaseURI;","after":"\n\n    function setBaseURI(string calldata newBaseURI) public onlyOwner {\n        baseURI = newBaseURI;","contract":"RoaringLeaders","time":0},{"type":"external-function ","before":"/\n    function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        provenance = provenanceHash;","after":"/\n    function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        provenance = provenanceHash;","contract":"RoaringLeaders","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"RoaringLeaders","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"RoaringLeaders","time":1}]}