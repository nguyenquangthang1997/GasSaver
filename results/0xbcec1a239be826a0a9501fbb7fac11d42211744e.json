{"time":352,"results":[{"type":"external-function ","before":"function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n\n    public\n\n    view\n\n    virtual\n\n    override\n\n    returns (uint256[] memory)\n\n    {\n\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n\n        }\n\n\n        return batchBalances;\n\n    }","after":"function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n\n    public\n\n    view\n\n    virtual\n\n    override\n\n    returns (uint256[] memory)\n\n    {\n\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n\n        }\n\n\n        return batchBalances;\n\n    }","contract":"ProvablyRareGem","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256 id,\n\n        uint256 amount,\n\n        bytes memory data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: caller is not owner nor approved\"\n\n        );\n\n        _safeTransferFrom(from, to, id, amount, data);\n\n    }","after":"function safeTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256 id,\n\n        uint256 amount,\n\n        bytes calldata data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: caller is not owner nor approved\"\n\n        );\n\n        _safeTransferFrom(from, to, id, amount, data);\n\n    }","contract":"ProvablyRareGem","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256[] memory ids,\n\n        uint256[] memory amounts,\n\n        bytes memory data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: transfer caller is not owner nor approved\"\n\n        );\n\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n\n    }","after":"function safeBatchTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256[] calldata ids,\n\n        uint256[] calldata amounts,\n\n        bytes calldata data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: transfer caller is not owner nor approved\"\n\n        );\n\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n\n    }","contract":"ProvablyRareGem","time":1},{"type":"external-function ","before":"function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n\n    public\n\n    view\n\n    virtual\n\n    override\n\n    returns (uint256[] memory)\n\n    {\n\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n\n        }\n\n\n        return batchBalances;\n\n    }","after":"function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n\n    public\n\n    view\n\n    virtual\n\n    override\n\n    returns (uint256[] memory)\n\n    {\n\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n\n        }\n\n\n        return batchBalances;\n\n    }","contract":"ProvablyRareGemV2","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256 id,\n\n        uint256 amount,\n\n        bytes memory data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: caller is not owner nor approved\"\n\n        );\n\n        _safeTransferFrom(from, to, id, amount, data);\n\n    }","after":"function safeTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256 id,\n\n        uint256 amount,\n\n        bytes calldata data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: caller is not owner nor approved\"\n\n        );\n\n        _safeTransferFrom(from, to, id, amount, data);\n\n    }","contract":"ProvablyRareGemV2","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256[] memory ids,\n\n        uint256[] memory amounts,\n\n        bytes memory data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: transfer caller is not owner nor approved\"\n\n        );\n\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n\n    }","after":"function safeBatchTransferFrom(\n\n        address from,\n\n        address to,\n\n        uint256[] calldata ids,\n\n        uint256[] calldata amounts,\n\n        bytes calldata data\n\n    ) public virtual override {\n\n        require(\n\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n\n            \"ERC1155: transfer caller is not owner nor approved\"\n\n        );\n\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n\n    }","contract":"ProvablyRareGemV2","time":0}]}