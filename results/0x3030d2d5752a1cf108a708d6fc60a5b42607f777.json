{"time":260,"results":[{"type":"state-data-arrangement ","before":"\nmapping(address => WithdrawalRequest) public withdrawalRequest;\naddress public controller;\naddress public serviceProvider;\naddress public serviceProviderManager;\nIERC20 public cudosToken;\nuint256 public constant PERCENTAGE_MODULO = 100_00;\nbool public isServiceProviderFullySetup;\nbool public exited;\nuint256 public rewardsFeePercentage;\nmapping(address => uint256) public delegatedStake;\nmapping(address => uint256) public rewardDebt;\nuint256 public totalDelegatedStake;\nuint256 public rewardsProgrammeId;\nuint256 public minStakingLength;\nuint256 public accTokensPerShare;","after":"mapping(address => WithdrawalRequest) public withdrawalRequest;\nIERC20 public cudosToken;\nuint256 public constant PERCENTAGE_MODULO = 100_00;\nuint256 public rewardsFeePercentage;\nmapping(address => uint256) public delegatedStake;\nmapping(address => uint256) public rewardDebt;\nuint256 public totalDelegatedStake;\nuint256 public rewardsProgrammeId;\nuint256 public minStakingLength;\nuint256 public accTokensPerShare;\naddress public controller;\naddress public serviceProvider;\naddress public serviceProviderManager;\nbool public isServiceProviderFullySetup;\nbool public exited;\n","contract":"ServiceProvider","time":0},{"type":"state-data-arrangement ","before":"\nbool public userActionsPaused;\nIERC20 public token;\nCudosAccessControls public accessControls;\nStakingRewardsGuild public rewardsGuildBank;\nuint256 public tokenRewardPerBlock;\nRewardProgramme[] public rewardProgrammes;\nmapping(uint256 => bool) public isActiveRewardProgramme;\nmapping(uint256 => mapping(address => UserInfo)) public userInfo;\nuint256 public totalCudosStaked;\nuint256 public weightedTotalCudosStaked;\nuint256 public startBlock;\nmapping(address => address) public serviceProviderToWhitelistedProxyContracts;\nmapping(address => address) public serviceProviderContractToServiceProvider;\naddress public cloneableServiceProviderContract;\nuint256 public minRequiredStakingAmountForServiceProviders = 2_000_000 * 10 ** 18;\nuint256 public maxStakingAmountForServiceProviders = 1_000_000_000 * 10 ** 18;\nuint256 public constant PERCENTAGE_MODULO = 100_00;\nuint256 public minServiceProviderFee = 2_00;\nuint256 public constant numOfBlocksInADay = 6500;\nuint256 public unbondingPeriod = numOfBlocksInADay.mul(21);","after":"IERC20 public token;\nCudosAccessControls public accessControls;\nStakingRewardsGuild public rewardsGuildBank;\nuint256 public tokenRewardPerBlock;\nRewardProgramme[] public rewardProgrammes;\nmapping(uint256 => bool) public isActiveRewardProgramme;\nmapping(uint256 => mapping(address => UserInfo)) public userInfo;\nuint256 public totalCudosStaked;\nuint256 public weightedTotalCudosStaked;\nuint256 public startBlock;\nmapping(address => address) public serviceProviderToWhitelistedProxyContracts;\nmapping(address => address) public serviceProviderContractToServiceProvider;\nuint256 public minRequiredStakingAmountForServiceProviders = 2_000_000 * 10 ** 18;\nuint256 public maxStakingAmountForServiceProviders = 1_000_000_000 * 10 ** 18;\nuint256 public constant PERCENTAGE_MODULO = 100_00;\nuint256 public minServiceProviderFee = 2_00;\nuint256 public constant numOfBlocksInADay = 6500;\nuint256 public unbondingPeriod = numOfBlocksInADay.mul(21);\naddress public cloneableServiceProviderContract;\nbool public userActionsPaused;\n","contract":"StakingRewards","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public startBlock;","after":"uint256 public immutable startBlock;","contract":"StakingRewards","time":0},{"type":"immutable-restrict-modification ","before":"address public cloneableServiceProviderContract;","after":"address public immutable cloneableServiceProviderContract;","contract":"StakingRewards","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public unbondingPeriod = numOfBlocksInADay.mul(21);","after":"uint256 public constant unbondingPeriod = numOfBlocksInADay.mul(21);","contract":"StakingRewards","time":0}]}