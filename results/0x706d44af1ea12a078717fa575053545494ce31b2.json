{"time":27,"results":[{"type":"external-function ","before":"function execute(\n\n        address _target,\n\n        bytes memory _data,\n\n        uint _src,\n\n        uint _session\n\n    )\n\n    public\n\n    payable\n\n    note\n\n    auth\n\n    logicAuth(_target)\n\n    returns (bytes memory response)\n\n    {\n\n        emit LogExecute(\n\n            _target,\n\n            _src,\n\n            _session\n\n        );\n\n\n        // call contract in current context\n\n        assembly {\n\n            let succeeded := delegatecall(sub(gas, 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\n\n            let size := returndatasize\n\n\n\n            response := mload(0x40)\n\n            mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n\n            mstore(response, size)\n\n            returndatacopy(add(response, 0x20), 0, size)\n\n\n\n            switch iszero(succeeded)\n\n            case 1 {\n\n            // throw if delegatecall failed\n\n                revert(add(response, 0x20), size)\n\n            }\n\n        }\n\n    }","after":"function execute(\n\n        address _target,\n\n        bytes calldata _data,\n\n        uint _src,\n\n        uint _session\n\n    )\n\n    public\n\n    payable\n\n    note\n\n    auth\n\n    logicAuth(_target)\n\n    returns (bytes memory response)\n\n    {\n\n        emit LogExecute(\n\n            _target,\n\n            _src,\n\n            _session\n\n        );\n\n\n        // call contract in current context\n\n        assembly {\n\n            let succeeded := delegatecall(sub(gas, 5000), _target, add(_data, 0x20), mload(_data), 0, 0)\n\n            let size := returndatasize\n\n\n\n            response := mload(0x40)\n\n            mstore(0x40, add(response, and(add(add(size, 0x20), 0x1f), not(0x1f))))\n\n            mstore(response, size)\n\n            returndatacopy(add(response, 0x20), 0, size)\n\n\n\n            switch iszero(succeeded)\n\n            case 1 {\n\n            // throw if delegatecall failed\n\n                revert(add(response, 0x20), size)\n\n            }\n\n        }\n\n    }","contract":"UserWallet","time":0},{"type":"immutable-restrict-modification ","before":"address public registry;","after":"address public immutable registry;","contract":"UserWallet","time":0}]}