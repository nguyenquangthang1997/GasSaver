{"time":404,"results":[{"type":"external-function ","before":"d call to randomnessRequest\n\n   */\n\n    function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)\n\n    public\n\n    onlyLINK\n\n    {\n\n        (bytes32 keyHash, uint256 seed) = abi.decode(_data, (bytes32, uint256));\n\n        randomnessReque","after":"d call to randomnessRequest\n\n   */\n\n    function onTokenTransfer(address _sender, uint256 _fee, bytes memory _data)\n\n    public\n\n    onlyLINK\n\n    {\n\n        (bytes32 keyHash, uint256 seed) = abi.decode(_data, (bytes32, uint256));\n\n        randomnessReque","contract":"VRFCoordinator","time":0},{"type":"external-function ","before":"equesting\n\n   * @dev block.\n\n   */\n\n    function fulfillRandomnessRequest(bytes memory _proof) public {\n\n        (bytes32 currentKeyHash, Callback memory callback, bytes32 requestId,\n\n        uint256 randomness) = getRandomnessFromProof(_proof);\n\n\n        // Pay oracle\n\n        address oadd = serviceAgreements[currentKeyHash].vRFOracle;\n\n        withdrawableTokens[oadd] = withdrawableTokens[oadd].add(\n\n            callback.randomnessFee);\n\n\n        // Forget request. Must precede callback (prevents reentrancy)\n\n        delete callbacks[requestId];\n\n        callBackWithRandomness(requestId, randomness, callback.callbackContract);\n\n\n        emit RandomnessRequest","after":"equesting\n\n   * @dev block.\n\n   */\n\n    function fulfillRandomnessRequest(bytes memory _proof) public {\n\n        (bytes32 currentKeyHash, Callback memory callback, bytes32 requestId,\n\n        uint256 randomness) = getRandomnessFromProof(_proof);\n\n\n        // Pay oracle\n\n        address oadd = serviceAgreements[currentKeyHash].vRFOracle;\n\n        withdrawableTokens[oadd] = withdrawableTokens[oadd].add(\n\n            callback.randomnessFee);\n\n\n        // Forget request. Must precede callback (prevents reentrancy)\n\n        delete callbacks[requestId];\n\n        callBackWithRandomness(requestId, randomness, callback.callbackContract);\n\n\n        emit RandomnessRequest","contract":"VRFCoordinator","time":0}]}