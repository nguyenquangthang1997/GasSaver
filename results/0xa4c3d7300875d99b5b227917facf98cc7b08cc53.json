{"time":152,"results":[{"type":"loop-calculation","before":"uint _mintId = totalSupply() + 1;","after":"// move outside for loop\nuint _mintId = totalSupply() + 1;","loc":{"start":{"line":2897,"column":12},"end":{"line":2897,"column":44}},"contract":"BubbleBudz","time":0},{"type":"loop-calculation","before":"uint _mintId = totalSupply() + 1;","after":"// move outside for loop\nuint _mintId = totalSupply() + 1;","loc":{"start":{"line":2937,"column":12},"end":{"line":2937,"column":44}},"contract":"BubbleBudz","time":0},{"type":"loop-calculation","before":"uint _mintId = totalSupply() + 1;","after":"// move outside for loop\nuint _mintId = totalSupply() + 1;","loc":{"start":{"line":2987,"column":12},"end":{"line":2987,"column":44}},"contract":"BubbleBudz","time":0},{"type":"loop-calculation","before":"uint _mintId = totalSupply() + 1;","after":"// move outside for loop\nuint _mintId = totalSupply() + 1;","loc":{"start":{"line":3020,"column":12},"end":{"line":3020,"column":44}},"contract":"BubbleBudz","time":0},{"type":"state-data-arrangement ","before":"\nuint public maxTokens = 10000;\nuint public mintPrice = 0.08 ether;\nuint public mintPriceBubblez = 140 ether;\nuint public maxMintsPerTx = 5;\nuint public totalBubblezBurned = 0;\nuint public normalTokensLimit = 9000;\nuint public normalTokensMinted = 0;\nuint public bubblezTokensLimit = 1000;\nuint public bubblezTokensMinted = 0;\nuint public whitelistMaxMints = 5;\nuint public publicMaxMints = 20;\nmapping(address => uint) public addressToWhitelistMints;\nmapping(address => uint) public addressToPublicMints;\nbool public whitelistMintEnabled;\nuint public whitelistMintTime;\nbool public publicMintEnabled;\nuint public publicMintTime;\nbool public bubblezMintEnabled;\nbytes32 public merkleRoot = 0x8049de73860e8a79864af5e3f96ed42a0db0abd52439d0a5954feddba17cb8ea;\nstring internal baseTokenURI;\nstring internal baseTokenURI_EXT;\naddress public bubblezAddress;\niBubblez public Bubblez;\nmapping(address => bool) internal shareholderToUnlockGovernance;\naddress internal Shareholder_1 = 0x1D628369DD259660482bf6c14Cb558F8d69a8242;\naddress internal Shareholder_2 = 0x1eD3D146cb5945e1C894A70013Ed83F95693EA22;\nuint internal Shareholder_1_Share = 80;\nuint internal Shareholder_2_Share = 20;","after":"uint public maxTokens = 10000;\nuint public mintPrice = 0.08 ether;\nuint public mintPriceBubblez = 140 ether;\nuint public maxMintsPerTx = 5;\nuint public totalBubblezBurned = 0;\nuint public normalTokensLimit = 9000;\nuint public normalTokensMinted = 0;\nuint public bubblezTokensLimit = 1000;\nuint public bubblezTokensMinted = 0;\nuint public whitelistMaxMints = 5;\nuint public publicMaxMints = 20;\nmapping(address => uint) public addressToWhitelistMints;\nmapping(address => uint) public addressToPublicMints;\nuint public whitelistMintTime;\nuint public publicMintTime;\nbytes32 public merkleRoot = 0x8049de73860e8a79864af5e3f96ed42a0db0abd52439d0a5954feddba17cb8ea;\nstring internal baseTokenURI;\nstring internal baseTokenURI_EXT;\niBubblez public Bubblez;\nmapping(address => bool) internal shareholderToUnlockGovernance;\nuint internal Shareholder_1_Share = 80;\nuint internal Shareholder_2_Share = 20;\naddress public bubblezAddress;\naddress internal Shareholder_1 = 0x1D628369DD259660482bf6c14Cb558F8d69a8242;\naddress internal Shareholder_2 = 0x1eD3D146cb5945e1C894A70013Ed83F95693EA22;\nbool public whitelistMintEnabled;\nbool public publicMintEnabled;\nbool public bubblezMintEnabled;\n","contract":"BubbleBudz","time":0},{"type":"external-function ","before":"function setBaseTokenURI(string memory uri_, string memory ext_) external onlyOwner {\n\n        baseTokenURI = uri_;\n\n        baseTokenURI_EXT = ext_;\n\n    }","after":"function setBaseTokenURI(string calldata uri_, string calldata ext_) external onlyOwner {\n\n        baseTokenURI = uri_;\n\n        baseTokenURI_EXT = ext_;\n\n    }","contract":"BubbleBudz","time":0},{"type":"external-function ","before":"function mintWhitelist(bytes32[] memory proof_, uint amount_) public payable onlySender whitelistMint {\n\n        require(isWhitelisted(proof_), \"You are not whitelisted!\");\n\n        require(normalTokensLimit >= normalTokensMinted + amount_, \"No more tokens remaining!\");\n\n        require(maxMintsPerTx >= amount_, \"Over maxmimum mints per tx!\");\n\n        require(msg.value == mintPrice * amount_, \"Invalid value sent!\");\n\n        require(whitelistMaxMints >= addressToWhitelistMints[msg.sender] + amount_, \"Your address doesn't have enough whitelist mint quota!\");\n\n\n        normalTokensMinted += amount_;\n\n        addressToWhitelistMints[msg.sender] += amount_;\n\n\n        for (uint i = 0; i < amount_; i++) {\n\n            uint _mintId = totalSupply() + 1;\n            // iterate from 1\n\n            _mint(msg.sender, _mintId);\n\n            emit Mint(msg.sender, _mintId);\n\n        }\n\n    }","after":"function mintWhitelist(bytes32[] calldata proof_, uint amount_) public payable onlySender whitelistMint {\n\n        require(isWhitelisted(proof_), \"You are not whitelisted!\");\n\n        require(normalTokensLimit >= normalTokensMinted + amount_, \"No more tokens remaining!\");\n\n        require(maxMintsPerTx >= amount_, \"Over maxmimum mints per tx!\");\n\n        require(msg.value == mintPrice * amount_, \"Invalid value sent!\");\n\n        require(whitelistMaxMints >= addressToWhitelistMints[msg.sender] + amount_, \"Your address doesn't have enough whitelist mint quota!\");\n\n\n        normalTokensMinted += amount_;\n\n        addressToWhitelistMints[msg.sender] += amount_;\n\n\n        for (uint i = 0; i < amount_; i++) {\n\n            uint _mintId = totalSupply() + 1;\n            // iterate from 1\n\n            _mint(msg.sender, _mintId);\n\n            emit Mint(msg.sender, _mintId);\n\n        }\n\n    }","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public maxTokens = 10000;","after":"uint public constant maxTokens = 10000;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public mintPrice = 0.08 ether;","after":"uint public constant mintPrice = 0.08 ether;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public mintPriceBubblez = 140 ether;","after":"uint public constant mintPriceBubblez = 140 ether;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public maxMintsPerTx = 5;","after":"uint public constant maxMintsPerTx = 5;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public normalTokensLimit = 9000;","after":"uint public constant normalTokensLimit = 9000;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public bubblezTokensLimit = 1000;","after":"uint public constant bubblezTokensLimit = 1000;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public whitelistMaxMints = 5;","after":"uint public constant whitelistMaxMints = 5;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint public publicMaxMints = 20;","after":"uint public constant publicMaxMints = 20;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"address internal Shareholder_1 = 0x1D628369DD259660482bf6c14Cb558F8d69a8242;","after":"address internal constant Shareholder_1 = 0x1D628369DD259660482bf6c14Cb558F8d69a8242;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"address internal Shareholder_2 = 0x1eD3D146cb5945e1C894A70013Ed83F95693EA22;","after":"address internal constant Shareholder_2 = 0x1eD3D146cb5945e1C894A70013Ed83F95693EA22;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint internal Shareholder_1_Share = 80;","after":"uint internal constant Shareholder_1_Share = 80;","contract":"BubbleBudz","time":0},{"type":"constant-restrict-modification  ","before":"uint internal Shareholder_2_Share = 20;","after":"uint internal constant Shareholder_2_Share = 20;","contract":"BubbleBudz","time":0},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"BubbleBudz","time":0},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"BubbleBudz","time":0}]}