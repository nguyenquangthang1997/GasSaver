{"time":381,"results":[{"type":"state-data-arrangement ","before":"\n  */\n\n    bool internal _n\n  */\n\n    string pu\n  */\n\n    string publ\n  */\n\n    uint8 public\n  */\n\n    uint internal constant borrowRateMaxMantissa = \n  */\n\n    uint internal constant reserveFactorPlusFeesMaxMantis\n  */\n\n    address payable private __pen\n  */\n\n    ComptrollerInterface public co\n  */\n\n    InterestRateModel public interest\n  */\n\n    uint internal initialExchangeRat\n  */\n\n    uint public adminFe\n  */\n\n    uint public fuseFe\n  */\n\n    uint public reserveFacto\n  */\n\n    uint public accrualBl\n  */\n\n    uint public bo\n  */\n\n    uint public tot\n  */\n\n    uint public tota\n  */\n\n    uint public total\n  */\n\n    uint public tota\n  */\n\n    uint public to\n  */\n\n    mapping(address => uint) internal acco\n  */\n\n    mapping(address => mapping(address => uint)) internal transferA\n  */\n\n    mapping(address => BorrowSnapshot) internal accou\n  */\n\n    uint public constant protocolSeizeShareMantissa","after":"  */\n\n    string pu\n  */\n\n    string publ\n  */\n\n    uint internal constant borrowRateMaxMantissa = \n  */\n\n    uint internal constant reserveFactorPlusFeesMaxMantis\n  */\n\n    ComptrollerInterface public co\n  */\n\n    InterestRateModel public interest\n  */\n\n    uint internal initialExchangeRat\n  */\n\n    uint public adminFe\n  */\n\n    uint public fuseFe\n  */\n\n    uint public reserveFacto\n  */\n\n    uint public accrualBl\n  */\n\n    uint public bo\n  */\n\n    uint public tot\n  */\n\n    uint public tota\n  */\n\n    uint public total\n  */\n\n    uint public tota\n  */\n\n    uint public to\n  */\n\n    mapping(address => uint) internal acco\n  */\n\n    mapping(address => mapping(address => uint)) internal transferA\n  */\n\n    mapping(address => BorrowSnapshot) internal accou\n  */\n\n    uint public constant protocolSeizeShareMantissa\n  */\n\n    address payable private __pen\n  */\n\n    bool internal _n\n  */\n\n    uint8 public\n","contract":"CTokenStorage","time":0},{"type":"state-data-arrangement ","before":"\n  */\n\n    mapping(address => Market) publi\nkets\n\n    CToken[] public a\n  */\n\n    mapping(address => bool) internal \nkets\n\n    address[] public all\nrray\n\n    mapping(address => uint256) internal borrow\n  */\n\n    mapping(address => bool) public \nsses\n\n    mapping(address => CToken) public cTokensByU\nrced\n\n    bool public enforce\nens)\n\n    mapping(address => bool) public \nunts\n\n    address[] public white\nrray\n\n    mapping(address => uint256) internal whiteli\n  */\n\n    address public paus\nian;\n\n    bool public _mintGuard\nsed;\n\n    bool public _borrowGuard\nsed;\n\n    bool public transferGuard\nsed;\n\n    bool public seizeGuard\nsed;\n\n    mapping(address => bool) public mintGuard\nsed;\n\n    mapping(address => bool) public borrowGuard","after":"  */\n\n    mapping(address => Market) publi\nkets\n\n    CToken[] public a\n  */\n\n    mapping(address => bool) internal \nkets\n\n    address[] public all\nrray\n\n    mapping(address => uint256) internal borrow\n  */\n\n    mapping(address => bool) public \nsses\n\n    mapping(address => CToken) public cTokensByU\nens)\n\n    mapping(address => bool) public \nunts\n\n    address[] public white\nrray\n\n    mapping(address => uint256) internal whiteli\nsed;\n\n    mapping(address => bool) public mintGuard\nsed;\n\n    mapping(address => bool) public borrowGuard\n  */\n\n    address public paus\nrced\n\n    bool public enforce\nian;\n\n    bool public _mintGuard\nsed;\n\n    bool public _borrowGuard\nsed;\n\n    bool public transferGuard\nsed;\n\n    bool public seizeGuard\n","contract":"ComptrollerV2Storage","time":0},{"type":"state-data-arrangement ","before":"\n  */\n\n    bool public autoImple\nket.\n\n    address public borrowCa\ning.\n\n    mapping(address => uint) public b\ning.\n\n    mapping(address => uint) public s\nges.\n\n    address[] public rewardsDis\necks\n\n    bool internal _n\nized\n\n    bool internal _notEnteredIn","after":"ing.\n\n    mapping(address => uint) public b\ning.\n\n    mapping(address => uint) public s\nges.\n\n    address[] public rewardsDis\nket.\n\n    address public borrowCa\n  */\n\n    bool public autoImple\necks\n\n    bool internal _n\nized\n\n    bool internal _notEnteredIn\n","contract":"ComptrollerV3Storage","time":0}]}