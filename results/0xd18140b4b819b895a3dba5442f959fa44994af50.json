{"time":257,"results":[{"type":"loop-calculation","before":"uint256 midEpochBlock = epochs[mid].date;","after":"// move outside for loop\nuint256 midEpochBlock = epochs[mid].date;","loc":{"start":{"line":2592,"column":12},"end":{"line":2592,"column":52}},"contract":"CvxLocker","time":0},{"type":"state-data-arrangement ","before":"\nIERC20 public constant stakingToken = IERC20(0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B);\naddress public constant cvxCrv = address(0x62B9c7356A2Dc64a1969e19C23e4f579F9810Aa7);\naddress[] public rewardTokens;\nmapping(address => Reward) public rewardData;\nuint256 public constant rewardsDuration = 86400 * 7;\nuint256 public constant lockDuration = rewardsDuration * 17;\nmapping(address => mapping(address => bool)) public rewardDistributors;\nmapping(address => mapping(address => uint256)) public userRewardPerTokenPaid;\nmapping(address => mapping(address => uint256)) public rewards;\nuint256 public lockedSupply;\nuint256 public boostedSupply;\nEpoch[] public epochs;\nmapping(address => Balances) public balances;\nmapping(address => LockedBalance[]) public userLocks;\naddress public boostPayment = address(0x1389388d01708118b497f59521f6943Be2541bb7);\nuint256 public maximumBoostPayment = 0;\nuint256 public boostRate = 10000;\nuint256 public nextMaximumBoostPayment = 0;\nuint256 public nextBoostRate = 10000;\nuint256 public constant denominator = 10000;\nuint256 public minimumStake = 10000;\nuint256 public maximumStake = 10000;\naddress public stakingProxy;\naddress public constant cvxcrvStaking = address(0x3Fe65692bfCD0e6CF84cB1E7d24108E434A7587e);\nuint256 public constant stakeOffsetOnLock = 500;\nuint256 public kickRewardPerEpoch = 100;\nuint256 public kickRewardEpochDelay = 4;\nbool public isShutdown = false;\nstring private _name;\nstring private _symbol;\nuint8 private immutable _decimals;","after":"IERC20 public constant stakingToken = IERC20(0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B);\naddress[] public rewardTokens;\nmapping(address => Reward) public rewardData;\nuint256 public constant rewardsDuration = 86400 * 7;\nuint256 public constant lockDuration = rewardsDuration * 17;\nmapping(address => mapping(address => bool)) public rewardDistributors;\nmapping(address => mapping(address => uint256)) public userRewardPerTokenPaid;\nmapping(address => mapping(address => uint256)) public rewards;\nuint256 public lockedSupply;\nuint256 public boostedSupply;\nEpoch[] public epochs;\nmapping(address => Balances) public balances;\nmapping(address => LockedBalance[]) public userLocks;\nuint256 public maximumBoostPayment = 0;\nuint256 public boostRate = 10000;\nuint256 public nextMaximumBoostPayment = 0;\nuint256 public nextBoostRate = 10000;\nuint256 public constant denominator = 10000;\nuint256 public minimumStake = 10000;\nuint256 public maximumStake = 10000;\nuint256 public constant stakeOffsetOnLock = 500;\nuint256 public kickRewardPerEpoch = 100;\nuint256 public kickRewardEpochDelay = 4;\nstring private _name;\nstring private _symbol;\naddress public constant cvxCrv = address(0x62B9c7356A2Dc64a1969e19C23e4f579F9810Aa7);\naddress public boostPayment = address(0x1389388d01708118b497f59521f6943Be2541bb7);\naddress public stakingProxy;\naddress public constant cvxcrvStaking = address(0x3Fe65692bfCD0e6CF84cB1E7d24108E434A7587e);\nbool public isShutdown = false;\nuint8 private immutable _decimals;\n","contract":"CvxLocker","time":1},{"type":"immutable-restrict-modification ","before":"string private _name;","after":"string private immutable _name;","contract":"CvxLocker","time":1},{"type":"immutable-restrict-modification ","before":"string private _symbol;","after":"string private immutable _symbol;","contract":"CvxLocker","time":1}]}