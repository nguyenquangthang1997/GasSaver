{"time":332,"results":[{"type":"loop-duplication","before":"\nstart line 4383 column 8, end line 4387 column 8\nfor (uint256 i = 0; i < reservesData.srcAmounts.length; i++) {\n\n            totalWeightedDestAmount += reservesData.srcAmounts[i] * reservesData.rates[i];\n\n        }\nstart line 4399 column 8, end line 4443 column 8\nfor (uint256 i = 0; i < reservesData.srcAmounts.length; i++) {\n\n            currentSrcAmount = reservesData.srcAmounts[i];\n\n            require(destAmount * currentSrcAmount * reservesData.rates[i] / destAmount ==\n\n                currentSrcAmount * reservesData.rates[i],\n\n                \"multiplication overflow\");\n\n            destAmountSplit = i == (reservesData.srcAmounts.length - 1)\n\n            ? (destAmount - destAmountSoFar)\n\n            : (destAmount * currentSrcAmount * reservesData.rates[i]) /\n\n            totalWeightedDestAmount;\n\n            destAmountSoFar += destAmountSplit;\n\n\n            newSrcAmounts[i] = calcSrcQty(\n\n                destAmountSplit,\n\n                srcDecimals,\n\n                destDecimals,\n\n                reservesData.rates[i]\n\n            );\n\n            if (newSrcAmounts[i] > currentSrcAmount) {\n\n                // revert back to use current src amounts\n\n                return srcAmount;\n\n            }\n\n\n            newSrcAmount += newSrcAmounts[i];\n\n        }","after":"// merge loop\n\nstart line 4383 column 8, end line 4387 column 8\nfor (uint256 i = 0; i < reservesData.srcAmounts.length; i++) {\n\n            totalWeightedDestAmount += reservesData.srcAmounts[i] * reservesData.rates[i];\n\n        }\nstart line 4399 column 8, end line 4443 column 8\nfor (uint256 i = 0; i < reservesData.srcAmounts.length; i++) {\n\n            currentSrcAmount = reservesData.srcAmounts[i];\n\n            require(destAmount * currentSrcAmount * reservesData.rates[i] / destAmount ==\n\n                currentSrcAmount * reservesData.rates[i],\n\n                \"multiplication overflow\");\n\n            destAmountSplit = i == (reservesData.srcAmounts.length - 1)\n\n            ? (destAmount - destAmountSoFar)\n\n            : (destAmount * currentSrcAmount * reservesData.rates[i]) /\n\n            totalWeightedDestAmount;\n\n            destAmountSoFar += destAmountSplit;\n\n\n            newSrcAmounts[i] = calcSrcQty(\n\n                destAmountSplit,\n\n                srcDecimals,\n\n                destDecimals,\n\n                reservesData.rates[i]\n\n            );\n\n            if (newSrcAmounts[i] > currentSrcAmount) {\n\n                // revert back to use current src amounts\n\n                return srcAmount;\n\n            }\n\n\n            newSrcAmount += newSrcAmounts[i];\n\n        }","contract":"KyberNetwork","time":0}]}