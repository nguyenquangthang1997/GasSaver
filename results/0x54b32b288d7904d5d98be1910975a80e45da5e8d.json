{"time":206,"results":[{"type":"external-function ","before":"function executeForAccount(\n        address contractAddress,\n        uint256 ethValue,\n        bytes memory encodedParams\n    )\n    external\n    override\n    onlyWalletManager\n    returns (bytes memory)\n    {\n        (bool success, bytes memory result) = contractAddress.call{value : ethValue}(encodedParams);\n        require(success, string(result));\n        return result;\n    }","after":"function executeForAccount(\n        address contractAddress,\n        uint256 ethValue,\n        bytes calldata encodedParams\n    )\n    external\n    override\n    onlyWalletManager\n    returns (bytes memory)\n    {\n        (bool success, bytes memory result) = contractAddress.call{value : ethValue}(encodedParams);\n        require(success, string(result));\n        return result;\n    }","contract":"AaveSmartWallet","time":0},{"type":"external-function ","before":"function executeForAccount(\n        address contractAddress,\n        uint256 tokenId,\n        address externalAddress,\n        uint256 ethValue,\n        bytes memory encodedParams\n    )\n    external\n    override\n    onlyController\n    returns (bytes memory)\n    {\n        uint256 uuid = contractAddress.getTokenUUID(tokenId);\n        address wallet = _wallets[uuid];\n        return AaveSmartWallet(wallet).executeForAccount(externalAddress, ethValue, encodedParams);\n    }","after":"function executeForAccount(\n        address contractAddress,\n        uint256 tokenId,\n        address externalAddress,\n        uint256 ethValue,\n        bytes calldata encodedParams\n    )\n    external\n    override\n    onlyController\n    returns (bytes memory)\n    {\n        uint256 uuid = contractAddress.getTokenUUID(tokenId);\n        address wallet = _wallets[uuid];\n        return AaveSmartWallet(wallet).executeForAccount(externalAddress, ethValue, encodedParams);\n    }","contract":"AaveWalletManager","time":0},{"type":"immutable-restrict-modification ","before":"address internal _walletTemplate;","after":"address internal immutable _walletTemplate;","contract":"AaveWalletManager","time":0},{"type":"state-data-arrangement ","before":"\naddress internal _controller;\naddress internal _walletTemplate;\nmapping(uint256 => address) internal _wallets;\nbool internal _paused;","after":"mapping(uint256 => address) internal _wallets;\naddress internal _controller;\naddress internal _walletTemplate;\nbool internal _paused;\n","contract":"WalletManagerBase","time":0}]}