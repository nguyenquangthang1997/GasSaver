{"time":44,"results":[{"type":"state-data-arrangement ","before":"\nbool internal _notEntered;\nstring public name;\nstring public symbol;\nuint8 public decimals;\naddress public gov;\naddress public pendingGov;\naddress public rebaser;\naddress public incentivizer;\nuint256 public totalSupply;\nuint256 public constant internalDecimals = 10 ** 24;\nuint256 public constant BASE = 10 ** 18;\nuint256 public yamsScalingFactor;\nmapping(address => uint256) internal _yamBalances;\nmapping(address => mapping(address => uint256)) internal _allowedFragments;\nuint256 public initSupply;","after":"string public name;\nstring public symbol;\nuint256 public totalSupply;\nuint256 public constant internalDecimals = 10 ** 24;\nuint256 public constant BASE = 10 ** 18;\nuint256 public yamsScalingFactor;\nmapping(address => uint256) internal _yamBalances;\nmapping(address => mapping(address => uint256)) internal _allowedFragments;\nuint256 public initSupply;\naddress public gov;\naddress public pendingGov;\naddress public rebaser;\naddress public incentivizer;\nbool internal _notEntered;\nuint8 public decimals;\n","contract":"YAMTokenStorage","time":0},{"type":"external-function ","before":"function delegateToViewImplementation(bytes memory data) public view returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = address(this).staticcall(abi.encodeWithSignature(\"delegateToImplementation(bytes)\", data));\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return abi.decode(returnData, (bytes));\n\n    }","after":"function delegateToViewImplementation(bytes calldata data) public view returns (bytes memory) {\n\n        (bool success, bytes memory returnData) = address(this).staticcall(abi.encodeWithSignature(\"delegateToImplementation(bytes)\", data));\n\n        assembly {\n\n            if eq(success, 0) {\n\n                revert(add(returnData, 0x20), returndatasize)\n\n            }\n\n        }\n\n        return abi.decode(returnData, (bytes));\n\n    }","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"bool internal _notEntered;","after":"bool internal constant _notEntered;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"string public name;","after":"string public constant name;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol;","after":"string public constant symbol;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"uint8 public decimals;","after":"uint8 public constant decimals;","contract":"YAMDelegator","time":0},{"type":"immutable-restrict-modification ","before":"address public gov;","after":"address public immutable gov;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"address public pendingGov;","after":"address public constant pendingGov;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"address public rebaser;","after":"address public constant rebaser;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"address public incentivizer;","after":"address public constant incentivizer;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public totalSupply;","after":"uint256 public constant totalSupply;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public yamsScalingFactor;","after":"uint256 public constant yamsScalingFactor;","contract":"YAMDelegator","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public initSupply;","after":"uint256 public constant initSupply;","contract":"YAMDelegator","time":0}]}