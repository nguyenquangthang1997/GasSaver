{"time":61,"results":[{"type":"state-data-arrangement ","before":"\naddress public override finder;\nmapping(uint256 => DepositUtilityContracts) private _depositContracts;\nmapping(address => L1TokenRelationships) private _whitelistedTokens;\nuint32 public override optimisticOracleLiveness;\nuint64 public override proposerBondPct;\nbytes32 public override identifier;","after":"mapping(uint256 => DepositUtilityContracts) private _depositContracts;\nmapping(address => L1TokenRelationships) private _whitelistedTokens;\nbytes32 public override identifier;\naddress public override finder;\nuint64 public override proposerBondPct;\nuint32 public override optimisticOracleLiveness;\n","contract":"BridgeAdmin","time":0},{"type":"external-function ","before":"function transferBridgePoolAdmin(address[] memory bridgePools, address newAdmin) public onlyOwner nonReentrant() {\n\n        for (uint8 i = 0; i < bridgePools.length; i++) {\n\n            BridgePoolInterface(bridgePools[i]).changeAdmin(newAdmin);\n\n        }\n\n        emit BridgePoolsAdminTransferred(bridgePools, newAdmin);\n\n    }","after":"function transferBridgePoolAdmin(address[] calldata bridgePools, address newAdmin) public onlyOwner nonReentrant() {\n\n        for (uint8 i = 0; i < bridgePools.length; i++) {\n\n            BridgePoolInterface(bridgePools[i]).changeAdmin(newAdmin);\n\n        }\n\n        emit BridgePoolsAdminTransferred(bridgePools, newAdmin);\n\n    }","contract":"BridgeAdmin","time":0},{"type":"immutable-restrict-modification ","before":"address public override finder;","after":"address public override immutable finder;","contract":"BridgeAdmin","time":0}]}