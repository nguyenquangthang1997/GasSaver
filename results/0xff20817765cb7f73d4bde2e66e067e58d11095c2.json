{"time":194,"results":[{"type":"state-data-arrangement ","before":"\n string internal constant AMP_INTERFACE_NAME = \"AmpToken\"\n string internal constant ERC20_INTERFACE_NAME = \"ERC20Token\"\n string internal constant AMP_TOKENS_SENDER = \"AmpTokensSender\"\n string internal constant AMP_TOKENS_RECIPIENT = \"AmpTokensRecipient\"\n string internal constant AMP_TOKENS_CHECKER = \"AmpTokensChecker\"\n string internal _name\n string internal _symbol\n uint256 internal _totalSupply\n uint256 internal constant _granularity = 1\n mapping(address => uint256) internal _balances\n bytes32[] internal _totalPartitions\n mapping(bytes32 => uint256) internal _indexOfTotalPartitions\n mapping(bytes32 => uint256) public totalSupplyByPartition\n mapping(address => bytes32[]) internal _partitionsOf\n mapping(address => mapping(bytes32 => uint256)) internal _indexOfPartitionsOf\n mapping(address => mapping(bytes32 => uint256)) internal _balanceOfByPartition\n bytes32\n\n    public constant defaultPartition = 0x0000000000000000000000000000000000000000000000000000000000000000\n bytes4 internal constant ZERO_PREFIX = 0x00000000\n mapping(address => mapping(address => bool)) internal _authorizedOperator\n mapping(bytes32 => mapping(address => mapping(address => uint256)))\n\n    internal _allowedByPartition\n mapping(address => mapping(bytes32 => mapping(address => bool)))\n\n    internal _authorizedOperatorByPartition\n address[] public collateralManagers\n mapping(address => bool) internal _isCollateralManager\n bytes4[] public partitionStrategies\n mapping(bytes4 => bool) internal _isPartitionStrategy\n ISwapToken public swapToken\n address\n\n    public constant swapTokenGraveyard = 0x000000000000000000000000000000000000dEaD","after":" string internal constant AMP_INTERFACE_NAME = \"AmpToken\"\n string internal constant ERC20_INTERFACE_NAME = \"ERC20Token\"\n string internal constant AMP_TOKENS_SENDER = \"AmpTokensSender\"\n string internal constant AMP_TOKENS_RECIPIENT = \"AmpTokensRecipient\"\n string internal constant AMP_TOKENS_CHECKER = \"AmpTokensChecker\"\n string internal _name\n string internal _symbol\n uint256 internal _totalSupply\n uint256 internal constant _granularity = 1\n mapping(address => uint256) internal _balances\n bytes32[] internal _totalPartitions\n mapping(bytes32 => uint256) internal _indexOfTotalPartitions\n mapping(bytes32 => uint256) public totalSupplyByPartition\n mapping(address => bytes32[]) internal _partitionsOf\n mapping(address => mapping(bytes32 => uint256)) internal _indexOfPartitionsOf\n mapping(address => mapping(bytes32 => uint256)) internal _balanceOfByPartition\n bytes32\n\n    public constant defaultPartition = 0x0000000000000000000000000000000000000000000000000000000000000000\n mapping(address => mapping(address => bool)) internal _authorizedOperator\n mapping(bytes32 => mapping(address => mapping(address => uint256)))\n\n    internal _allowedByPartition\n mapping(address => mapping(bytes32 => mapping(address => bool)))\n\n    internal _authorizedOperatorByPartition\n address[] public collateralManagers\n mapping(address => bool) internal _isCollateralManager\n bytes4[] public partitionStrategies\n mapping(bytes4 => bool) internal _isPartitionStrategy\n ISwapToken public swapToken\n address\n\n    public constant swapTokenGraveyard = 0x000000000000000000000000000000000000dEaD\n bytes4 internal constant ZERO_PREFIX = 0x00000000\n","contract":"Amp","time":0}]}