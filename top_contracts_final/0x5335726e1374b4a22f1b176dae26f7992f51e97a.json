{"time":220,"results":[{"type":"de-morgan-condition ","before":"  if (!_isExcludedFromFee[from] && !_isExcludedFromF","after":"!(  if (_isExcludedFromFee[from] && _isExcludedFromF)","loc":{"start":{"line":1053,"column":12},"end":{"line":1053,"column":63}},"contract":"LucidDreamCapital","time":0},{"type":"external-function ","before":"h\n    function airdropToWallets(address[] memory airdropWallets, uint256[] memory amount) external onlyOwner() {\n        require(airdropWallets.length == amount.length, \"airdropToWallets:: Arrays must be the same length\");\n        removeAllFee();\n        buyOrSellSwitch = TRANSFER;\n        for(uint256 i = 0; i < airdropWallets.length; i++){\n            address wallet = airdropWallets[i];\n            uint256 airdropAmount = amount[i];\n            _tokenTransfer(msg.sender, wallet, airdropAmount);\n        }\n        restoreAllFee();","after":"h\n    function airdropToWallets(address[] calldata airdropWallets, uint256[] calldata amount) external onlyOwner() {\n        require(airdropWallets.length == amount.length, \"airdropToWallets:: Arrays must be the same length\");\n        removeAllFee();\n        buyOrSellSwitch = TRANSFER;\n        for(uint256 i = 0; i < airdropWallets.length; i++){\n            address wallet = airdropWallets[i];\n            uint256 airdropAmount = amount[i];\n            _tokenTransfer(msg.sender, wallet, airdropAmount);\n        }\n        restoreAllFee();","contract":"LucidDreamCapital","time":0},{"type":"constant-restrict-modification  ","before":";\n    bool public swapEnabled = ","after":";\n    bool public constant swapEnabled = ","contract":"LucidDreamCapital","time":0},{"type":"immutable-restrict-modification ","before":"\n\n    uint256 public minimumTokensBefor","after":"\n\n    uint256 public minimumTokensBefor","contract":"LucidDreamCapital","time":0},{"type":"immutable-restrict-modification ","before":";\n    uint256 public maxTransactionA","after":";\n    uint256 public maxTransactionA","contract":"LucidDreamCapital","time":0},{"type":"immutable-restrict-modification ","before":";\n    uint256 public maxW","after":";\n    uint256 public maxW","contract":"LucidDreamCapital","time":0},{"type":"immutable-restrict-modification ","before":";\n    address public uniswapV","after":";\n    address public uniswapV","contract":"LucidDreamCapital","time":0}]}