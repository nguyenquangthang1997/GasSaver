{"time":114,"results":[{"type":"state-data-arrangement ","before":"\nstring baseURI;\nuint256 public requiredAmount = 3;\nuint256 public maxCharLimit = 200;\nbool public paused = false;\nstring public notRevealedUri;\naddress public sabcAddress;\nmapping (uint256 => Page) public pages;","after":"string baseURI;\nuint256 public requiredAmount = 3;\nuint256 public maxCharLimit = 200;\nstring public notRevealedUri;\nmapping (uint256 => Page) public pages;\naddress public sabcAddress;\nbool public paused = false;\n","contract":"SketchyPages","time":0},{"type":"external-function ","before":"function setMessage(uint256 _tokenId, string memory _newMessage) public {\n    require(msg.sender == ownerOf(_tokenId), \"You are not the owner of this NFT.\");\n    bytes memory strBytes = bytes(_newMessage);\n    require(strBytes.length <= maxCharLimit, \"Message is too long.\");\n    Page storage currentPage = pages[_tokenId];\n    currentPage.message = _newMessage;\n  }","after":"function setMessage(uint256 _tokenId, string calldata _newMessage) public {\n    require(msg.sender == ownerOf(_tokenId), \"You are not the owner of this NFT.\");\n    bytes memory strBytes = bytes(_newMessage);\n    require(strBytes.length <= maxCharLimit, \"Message is too long.\");\n    Page storage currentPage = pages[_tokenId];\n    currentPage.message = _newMessage;\n  }","contract":"SketchyPages","time":0}]}