{"time":492,"results":[{"type":"external-function ","before":"function merge(uint256 _from, uint256 _to, string memory _attribute) public {\n    // Ensure user owns both tokens\n    require(erc721.ownerOf(_from) == msg.sender, \"not owner of _from token\");\n    require(erc721.ownerOf(_to) == msg.sender, \"not owner of _to token\");\n\n    // Destroy token by sending it to the burn address\n    // Will throw if user has not approved Merge contract\n    // for moving his tokens\n    erc721.transferFrom(msg.sender, burnAddress, _from);\n\n    // Emit event\n    emit Merge(\n      msg.sender,\n      _from,\n      _to,\n      _attribute\n    );\n  }","after":"function merge(uint256 _from, uint256 _to, string calldata _attribute) public {\n    // Ensure user owns both tokens\n    require(erc721.ownerOf(_from) == msg.sender, \"not owner of _from token\");\n    require(erc721.ownerOf(_to) == msg.sender, \"not owner of _to token\");\n\n    // Destroy token by sending it to the burn address\n    // Will throw if user has not approved Merge contract\n    // for moving his tokens\n    erc721.transferFrom(msg.sender, burnAddress, _from);\n\n    // Emit event\n    emit Merge(\n      msg.sender,\n      _from,\n      _to,\n      _attribute\n    );\n  }","contract":"Merge","time":0},{"type":"constant-restrict-modification  ","before":"address immutable public burnAddress = 0x000000000000000000000000000000000000dEaD;","after":"address immutable public constant burnAddress = 0x000000000000000000000000000000000000dEaD;","contract":"Merge","time":0}]}