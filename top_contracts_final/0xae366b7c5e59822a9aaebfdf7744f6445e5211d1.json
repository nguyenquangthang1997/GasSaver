{"time":134,"results":[{"type":"state-data-arrangement ","before":"\naddress public routerAddress;\naddress public albtToken;\nmapping(address => uint256) public feeAmountByToken;\nuint8 private immutable _decimals;","after":"mapping(address => uint256) public feeAmountByToken;\naddress public routerAddress;\naddress public albtToken;\nuint8 private immutable _decimals;\n","contract":"RouterProxy","time":0},{"type":"struct-data-arrangement ","before":"\nbool initialized\nmapping(uint8 => mapping(bytes => address)) nativeToWrappedToken\nmapping(address => NativeTokenWithChainId) wrappedToNativeToken\nmapping(uint8 => mapping(bytes32 => bool)) hashesUsed\naddress albtToken\nuint8 chainId","after":"mapping(uint8 => mapping(bytes => address)) nativeToWrappedToken\nmapping(address => NativeTokenWithChainId) wrappedToNativeToken\nmapping(uint8 => mapping(bytes32 => bool)) hashesUsed\naddress albtToken\nbool initialized\nuint8 chainId\n","contract":"LibRouter","time":0}]}