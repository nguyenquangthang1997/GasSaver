{"time":188,"results":[{"type":"de-morgan-condition ","before":"!wListed[sender] && !wListed[recipient]","after":"!(wListed[sender] && wListed[recipient])","loc":{"start":{"line":907,"column":24},"end":{"line":907,"column":62}},"contract":"KaibaInu","time":0},{"type":"external-function ","before":"function TeamSetWhitelistedAddressesAlt( address[] memory addy, bool booly) public onlyTeam {\n        uint256 i;\n        for(i=0; i<addy.length; i++) {\n            wListed[addy[i]] = booly;\n        }\n    }","after":"function TeamSetWhitelistedAddressesAlt( address[] calldata addy, bool booly) public onlyTeam {\n        uint256 i;\n        for(i=0; i<addy.length; i++) {\n            wListed[addy[i]] = booly;\n        }\n    }","contract":"KaibaInu","time":0},{"type":"external-function ","before":"function TeamSetWhitelistedAddresses( address[] memory addy, bool booly) public onlyTeam {\n        uint256 i;\n        for(i=0; i<addy.length; i++) {\n            wListed[addy[i]] = booly;\n            _excluded.add(addy[i]);\n        }\n    }","after":"function TeamSetWhitelistedAddresses( address[] calldata addy, bool booly) public onlyTeam {\n        uint256 i;\n        for(i=0; i<addy.length; i++) {\n            wListed[addy[i]] = booly;\n            _excluded.add(addy[i]);\n        }\n    }","contract":"KaibaInu","time":0},{"type":"external-function ","before":"function SetupAddArrayToWhitelist(address[] memory addressesToAdd) public onlyTeam{\n        for(uint i=0; i<addressesToAdd.length; i++){\n            _whiteList.add(addressesToAdd[i]);\n        }\n    }","after":"function SetupAddArrayToWhitelist(address[] calldata addressesToAdd) public onlyTeam{\n        for(uint i=0; i<addressesToAdd.length; i++){\n            _whiteList.add(addressesToAdd[i]);\n        }\n    }","contract":"KaibaInu","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _circulatingSupply =InitialSupply;","after":"uint256 private constant _circulatingSupply =InitialSupply;","contract":"KaibaInu","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public  buyLimit = _circulatingSupply;","after":"uint256 public  immutable buyLimit = _circulatingSupply;","contract":"KaibaInu","time":1},{"type":"constant-restrict-modification  ","before":"bool botRekt = false;","after":"bool constant botRekt = false;","contract":"KaibaInu","time":1},{"type":"immutable-restrict-modification ","before":"address private _pancakePairAddress;","after":"address private immutable _pancakePairAddress;","contract":"KaibaInu","time":1}]}