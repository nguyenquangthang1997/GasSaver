{"time":173,"results":[{"type":"external-function ","before":"function whitelist(address[] memory addresses) external onlyOwner payable {\n        for (uint i=0; i < addresses.length; i++){\n            whitelisted[addresses[i]] = 4;\n        }\n    }","after":"function whitelist(address[] calldata addresses) external onlyOwner payable {\n        for (uint i=0; i < addresses.length; i++){\n            whitelisted[addresses[i]] = 4;\n        }\n    }","contract":"GoobersNFT","time":0},{"type":"external-function ","before":"function reserveClaims(address[] memory addresses, uint256[] memory amounts) external onlyOwner payable {\n        for (uint i=0; i < addresses.length; i++){\n            reservedClaims[addresses[i]] = amounts[i];\n            unchecked { reservedCount += amounts[i]; }\n        }\n    }","after":"function reserveClaims(address[] calldata addresses, uint256[] calldata amounts) external onlyOwner payable {\n        for (uint i=0; i < addresses.length; i++){\n            reservedClaims[addresses[i]] = amounts[i];\n            unchecked { reservedCount += amounts[i]; }\n        }\n    }","contract":"GoobersNFT","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) external onlyOwner payable {\n        GOOBER_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) external onlyOwner payable {\n        GOOBER_PROVENANCE = provenanceHash;\n    }","contract":"GoobersNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 15000;","after":"uint256 public constant maxSupply = 15000;","contract":"GoobersNFT","time":0}]}