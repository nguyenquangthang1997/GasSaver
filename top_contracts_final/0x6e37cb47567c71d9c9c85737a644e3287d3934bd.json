{"time":350,"results":[{"type":"constant-restrict-modification  ","before":"uint256 presaleNAddressAmount = 303;","after":"uint256 constant presaleNAddressAmount = 303;","contract":"Potenza","time":2},{"type":"constant-restrict-modification  ","before":"uint256 presalePublicAmount = 819;","after":"uint256 constant presalePublicAmount = 819;","contract":"Potenza","time":2},{"type":"constant-restrict-modification  ","before":"uint256 presaleMintsPerAddress = 3;","after":"uint256 constant presaleMintsPerAddress = 3;","contract":"Potenza","time":2},{"type":"constant-restrict-modification  ","before":"uint256 giveaways = 14;","after":"uint256 constant giveaways = 14;","contract":"Potenza","time":2},{"type":"constant-restrict-modification  ","before":"address giveawayAddress = 0x92D5561C7Ee3116B29117d10Ac79227c46C9C689;","after":"address constant giveawayAddress = 0x92D5561C7Ee3116B29117d10Ac79227c46C9C689;","contract":"Potenza","time":2},{"type":"immutable-restrict-modification ","before":"  address public masterMin","after":"  address public masterMin","contract":"Potenza","time":2},{"type":"immutable-restrict-modification ","before":"  uint128 maxTokenI","after":"  uint128 maxTokenI","contract":"Potenza","time":2},{"type":"loop-duplication","before":"\nstart line 2128 column 8, end line 2134 column 8\n  for (uint256 i = 0; i < maxTokensToMint; i++) {\n            require(\n                tokenIds[i] > 0 && tokenIds[i] <= maxTokenId,\n                \"NilPass:TOKEN_NOT_WITHIN_RANGE\"\n            );\n            require(!_exists(tokenIds[i]), \"NilPass:TOKEN_ALREADY_EXISTS\");\n       \nstart line 2136 column 8, end line 2138 column 8\n  for (uint256 i = 0; i < maxTokensToMint; i++) {\n            _safeMint(recipient, tokenIds[i]);\n       ","after":"// merge loop\n\nstart line 2128 column 8, end line 2134 column 8\n  for (uint256 i = 0; i < maxTokensToMint; i++) {\n            require(\n                tokenIds[i] > 0 && tokenIds[i] <= maxTokenId,\n                \"NilPass:TOKEN_NOT_WITHIN_RANGE\"\n            );\n            require(!_exists(tokenIds[i]), \"NilPass:TOKEN_ALREADY_EXISTS\");\n       \nstart line 2136 column 8, end line 2138 column 8\n  for (uint256 i = 0; i < maxTokensToMint; i++) {\n            _safeMint(recipient, tokenIds[i]);\n       ","contract":"NilPassCore","time":0}]}