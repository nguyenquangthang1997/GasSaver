{"time":133,"results":[{"type":"external-function ","before":"function setBlindBoxURI(string memory _newURI) public onlyOwner {\n        blindTokenURI = _newURI;\n    }","after":"function setBlindBoxURI(string calldata _newURI) public onlyOwner {\n        blindTokenURI = _newURI;\n    }","contract":"TrippyGelatoCreamery","time":0},{"type":"external-function ","before":"function setPresaleList(address[] memory _allowList, uint8 numAllowedToMint) external onlyOwner {\n        for (uint256 i = 0; i < _allowList.length; i++) {\n            presaleList[_allowList[i]] = true;\n            _allowMaxList[_allowList[i]] = numAllowedToMint;\n        }\n    }","after":"function setPresaleList(address[] calldata _allowList, uint8 numAllowedToMint) external onlyOwner {\n        for (uint256 i = 0; i < _allowList.length; i++) {\n            presaleList[_allowList[i]] = true;\n            _allowMaxList[_allowList[i]] = numAllowedToMint;\n        }\n    }","contract":"TrippyGelatoCreamery","time":0},{"type":"external-function ","before":"function airdrop(address[] memory addresses, uint256[] memory amounts) external onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n            mintNFTs(addresses[i], amounts[i]);\n        }\n    }","after":"function airdrop(address[] calldata addresses, uint256[] calldata amounts) external onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n            mintNFTs(addresses[i], amounts[i]);\n        }\n    }","contract":"TrippyGelatoCreamery","time":0}]}