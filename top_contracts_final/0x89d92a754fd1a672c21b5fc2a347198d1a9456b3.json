{"time":145,"results":[{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _baseURIextended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _baseURIextended = baseURI_;\n    }","contract":"flooredApe","time":0},{"type":"external-function ","before":"function batchFreeMint(\n        address[] memory whiteList,\n        uint256 amount\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(publicBool, \"Function not currently accessible\");\n        require(_tokenIdCounter.current() < 50001, \"Tokens are sold out.\");\n        for (uint256 j = 0; j < whiteList.length; j++) {\n            address to = whiteList[j];\n            for (uint256 i = 0; i < amount; i++) {\n                _safeMint(to, _tokenIdCounter.current());\n                _setTokenURI(_tokenIdCounter.current(), degen);\n                _tokenIdCounter.increment();\n            }\n        }\n    }","after":"function batchFreeMint(\n        address[] calldata whiteList,\n        uint256 amount\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(publicBool, \"Function not currently accessible\");\n        require(_tokenIdCounter.current() < 50001, \"Tokens are sold out.\");\n        for (uint256 j = 0; j < whiteList.length; j++) {\n            address to = whiteList[j];\n            for (uint256 i = 0; i < amount; i++) {\n                _safeMint(to, _tokenIdCounter.current());\n                _setTokenURI(_tokenIdCounter.current(), degen);\n                _tokenIdCounter.increment();\n            }\n        }\n    }","contract":"flooredApe","time":0},{"type":"external-function ","before":"function batchOwnMint (\n        address[] memory whiteList,\n        uint256 amount\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(adminBool, \"Function not currently accessible\");\n        require(_ogTokenIdCounter.current() < 1001, \"OG Tokens are sold out\");\n        for (uint256 j = 0; j < whiteList.length; j++) {\n            address to = whiteList[j];\n            for (uint256 i = 0; i < amount; i++) {\n                _safeMint(to, _ogTokenIdCounter.current());\n                _setTokenURI(_ogTokenIdCounter.current(), og);\n                _ogTokenIdCounter.increment();\n            }\n        }\n    }","after":"function batchOwnMint (\n        address[] calldata whiteList,\n        uint256 amount\n    ) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(adminBool, \"Function not currently accessible\");\n        require(_ogTokenIdCounter.current() < 1001, \"OG Tokens are sold out\");\n        for (uint256 j = 0; j < whiteList.length; j++) {\n            address to = whiteList[j];\n            for (uint256 i = 0; i < amount; i++) {\n                _safeMint(to, _ogTokenIdCounter.current());\n                _setTokenURI(_ogTokenIdCounter.current(), og);\n                _ogTokenIdCounter.increment();\n            }\n        }\n    }","contract":"flooredApe","time":0},{"type":"external-function ","before":"function setContractURI(string memory uri) public onlyRole(DEFAULT_ADMIN_ROLE){\n        uriValue = uri;\n    }","after":"function setContractURI(string calldata uri) public onlyRole(DEFAULT_ADMIN_ROLE){\n        uriValue = uri;\n    }","contract":"flooredApe","time":0},{"type":"external-function ","before":"function batchRole(bytes32 role, address[] memory arr)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        for (uint256 i = 0; i < arr.length; i++) {\n            grantRole(role, arr[i]);\n        }\n    }","after":"function batchRole(bytes32 role, address[] calldata arr)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        for (uint256 i = 0; i < arr.length; i++) {\n            grantRole(role, arr[i]);\n        }\n    }","contract":"flooredApe","time":0},{"type":"external-function ","before":"function batchRevoke(bytes32 role, address[] memory arr)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        for (uint256 i = 0; i < arr.length; i++) {\n            revokeRole(role, arr[i]);\n        }\n    }","after":"function batchRevoke(bytes32 role, address[] calldata arr)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        for (uint256 i = 0; i < arr.length; i++) {\n            revokeRole(role, arr[i]);\n        }\n    }","contract":"flooredApe","time":0},{"type":"constant-restrict-modification  ","before":"string private degen = \"degen.json\";","after":"string private constant degen = \"degen.json\";","contract":"flooredApe","time":0},{"type":"constant-restrict-modification  ","before":"string private og = \"og.json\";","after":"string private constant og = \"og.json\";","contract":"flooredApe","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MINT_RATE = 0.02 ether;","after":"uint256 public constant MINT_RATE = 0.02 ether;","contract":"flooredApe","time":0}]}