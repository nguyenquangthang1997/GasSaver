{"time":183,"results":[{"type":"external-function ","before":"}\n\n    function setBaseURI(\n        string memory baseURI,\n        uint256 startId,\n        uint256 endId\n    ) public onlyOwner {\n        require(\n            keccak256(bytes(tokenURI(startId))) ==\n                keccak256(bytes(EMPTY_STRING)),\n            \"Start ID Overlap\"\n        );\n        require(\n            keccak256(bytes(tokenURI(endId))) == keccak256(bytes(EMPTY_STRING)),\n            \"End ID Overlap\"\n        );\n\n        baseTokenUris.push(\n            BaseTokenUriById({startId: startId, endId: endId, baseURI: baseURI})\n        )","after":"}\n\n    function setBaseURI(\n        string calldata baseURI,\n        uint256 startId,\n        uint256 endId\n    ) public onlyOwner {\n        require(\n            keccak256(bytes(tokenURI(startId))) ==\n                keccak256(bytes(EMPTY_STRING)),\n            \"Start ID Overlap\"\n        );\n        require(\n            keccak256(bytes(tokenURI(endId))) == keccak256(bytes(EMPTY_STRING)),\n            \"End ID Overlap\"\n        );\n\n        baseTokenUris.push(\n            BaseTokenUriById({startId: startId, endId: endId, baseURI: baseURI})\n        )","contract":"EuniceDAO","time":0},{"type":"constant-restrict-modification  ","before":";\n\n    string private EMPTY_STRIN","after":";\n\n    string private EMPTY_STRIN","contract":"EuniceDAO","time":1}]}