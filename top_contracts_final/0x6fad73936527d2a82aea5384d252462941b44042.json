{"time":218,"results":[{"type":"external-function ","before":"function setTokenURI(string memory _tokenURI) public onlyOwner {\r\n      _setURI(_tokenURI);\r\n  }","after":"function setTokenURI(string calldata _tokenURI) public onlyOwner {\r\n      _setURI(_tokenURI);\r\n  }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function setContractName(string memory _name) public onlyOwner {\r\n    name = _name;\r\n  }","after":"function setContractName(string calldata _name) public onlyOwner {\r\n    name = _name;\r\n  }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function approveAndSetDefault(\r\n    bytes32 _ethSignedMessageHash,\r\n    bytes memory _signature,\r\n    uint256 flufId,\r\n    uint256 _defaultBackground,\r\n    uint256 _defaultMusic\r\n  ) public {\r\n    // Require _signature to be from signingWallet\r\n    require(\r\n      recoverSigner(_ethSignedMessageHash, _signature) == signingWallet,\r\n      \"VAULT LOCK: Message must be sent from authorized signer.\"\r\n    );\r\n    // Set Approval\r\n    setApprovalForAll(address(this), true);\r\n    setDefaultForFluf(flufId, _defaultBackground, _defaultMusic);\r\n  }","after":"function approveAndSetDefault(\r\n    bytes32 _ethSignedMessageHash,\r\n    bytes calldata _signature,\r\n    uint256 flufId,\r\n    uint256 _defaultBackground,\r\n    uint256 _defaultMusic\r\n  ) public {\r\n    // Require _signature to be from signingWallet\r\n    require(\r\n      recoverSigner(_ethSignedMessageHash, _signature) == signingWallet,\r\n      \"VAULT LOCK: Message must be sent from authorized signer.\"\r\n    );\r\n    // Set Approval\r\n    setApprovalForAll(address(this), true);\r\n    setDefaultForFluf(flufId, _defaultBackground, _defaultMusic);\r\n  }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function listNewAsset(\r\n    uint256 _id,\r\n    string memory _assetName,\r\n    string memory _assetType\r\n  ) public onlyOwner returns (bool) {\r\n    assets[_id].assetName = _assetName;\r\n    assets[_id].assetType = _assetType;\r\n    return true;\r\n  }","after":"function listNewAsset(\r\n    uint256 _id,\r\n    string calldata _assetName,\r\n    string calldata _assetType\r\n  ) public onlyOwner returns (bool) {\r\n    assets[_id].assetName = _assetName;\r\n    assets[_id].assetType = _assetType;\r\n    return true;\r\n  }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function listNewAssetBatch(\r\n    uint256[] memory _ids,\r\n    string[] memory _assetNames,\r\n    string[] memory _assetTypes\r\n  ) public onlyOwner returns (bool) {\r\n    for (uint256 i = 0; i < _ids.length; i++) {\r\n      assets[_ids[i]].assetName = _assetNames[i];\r\n      assets[_ids[i]].assetType = _assetTypes[i];\r\n    }\r\n    return true;\r\n  }","after":"function listNewAssetBatch(\r\n    uint256[] calldata _ids,\r\n    string[] calldata _assetNames,\r\n    string[] calldata _assetTypes\r\n  ) public onlyOwner returns (bool) {\r\n    for (uint256 i = 0; i < _ids.length; i++) {\r\n      assets[_ids[i]].assetName = _assetNames[i];\r\n      assets[_ids[i]].assetType = _assetTypes[i];\r\n    }\r\n    return true;\r\n  }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function mintBatch(uint256[] memory ids, uint256[] memory amounts)\r\n    public\r\n    onlyOwner\r\n  {\r\n    _mintBatch(msg.sender, ids, amounts, \"\");\r\n  }","after":"function mintBatch(uint256[] calldata ids, uint256[] calldata amounts)\r\n    public\r\n    onlyOwner\r\n  {\r\n    _mintBatch(msg.sender, ids, amounts, \"\");\r\n  }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }","after":"function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }","contract":"FlufSceneAndMusic","time":0},{"type":"external-function ","before":"function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }","after":"function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }","contract":"FlufSceneAndMusic","time":0}]}