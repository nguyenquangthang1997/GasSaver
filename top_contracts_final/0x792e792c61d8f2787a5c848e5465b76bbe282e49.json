{"time":107,"results":[{"type":"external-function ","before":"function airdropOneToMany(uint256 _id, address[] memory holders)\n        public\n        _ownerOnly\n    {\n        for (uint256 i = 0; i < holders.length; i++) {\n            _mint(holders[i], _id, 1, \"\");\n        }\n    }","after":"function airdropOneToMany(uint256 _id, address[] calldata holders)\n        public\n        _ownerOnly\n    {\n        for (uint256 i = 0; i < holders.length; i++) {\n            _mint(holders[i], _id, 1, \"\");\n        }\n    }","contract":"NFT2040Wearables","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external _ownerOnly {\n        _baseURIExtended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external _ownerOnly {\n        _baseURIExtended = baseURI_;\n    }","contract":"NFT2040Wearables","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"NFT2040Wearables","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"NFT2040Wearables","time":0},{"type":"immutable-restrict-modification ","before":"address public owner;","after":"address public immutable owner;","contract":"NFT2040Wearables","time":0}]}