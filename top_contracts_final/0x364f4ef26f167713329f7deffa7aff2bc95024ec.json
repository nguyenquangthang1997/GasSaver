{"time":159,"results":[{"type":"external-function ","before":"function createNewRelease(string memory _name) public whenPaused onlyOwner {\n    require(currentTokenId < maxTokenCount, \"Cannot create more releases\");\n\n    currentTokenId += 1;\n    brickName[currentTokenId] = _name;\n  }","after":"function createNewRelease(string calldata _name) public whenPaused onlyOwner {\n    require(currentTokenId < maxTokenCount, \"Cannot create more releases\");\n\n    currentTokenId += 1;\n    brickName[currentTokenId] = _name;\n  }","contract":"MonsterBricks","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _baseURI) public onlyOwner {\n    baseURI = _baseURI;\n  }","after":"function setBaseURI(string calldata _baseURI) public onlyOwner {\n    baseURI = _baseURI;\n  }","contract":"MonsterBricks","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"MonsterBricks","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"MonsterBricks","time":0},{"type":"external-function ","before":"function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","after":"function burnBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","contract":"MonsterBricks","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxTokenCount = 30;","after":"uint256 public constant maxTokenCount = 30;","contract":"MonsterBricks","time":1}]}