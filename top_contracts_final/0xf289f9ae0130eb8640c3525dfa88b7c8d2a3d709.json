{"time":80,"results":[{"type":"external-function ","before":"function unlockRifiPermit(\n        address[] memory senders,\n        address[] memory receivers,\n        uint256[] memory amounts,\n        uint256 receiveEpoch,\n        uint256 deadline,\n        address sender,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external ensure(deadline) {\n        verify(\n            keccak256(\n                abi.encode(\n                    UNLOCK_TYPE_HASH,\n                    receivers,\n                    amounts,\n                    receiveEpoch,\n                    deadline,\n                    nonces[sender]++\n                )\n            ),\n            sender,\n            v,\n            r,\n            s\n        );\n        _unlockRifi(senders, receivers, amounts, receiveEpoch, sender);\n    }","after":"function unlockRifiPermit(\n        address[] calldata senders,\n        address[] calldata receivers,\n        uint256[] calldata amounts,\n        uint256 receiveEpoch,\n        uint256 deadline,\n        address sender,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external ensure(deadline) {\n        verify(\n            keccak256(\n                abi.encode(\n                    UNLOCK_TYPE_HASH,\n                    receivers,\n                    amounts,\n                    receiveEpoch,\n                    deadline,\n                    nonces[sender]++\n                )\n            ),\n            sender,\n            v,\n            r,\n            s\n        );\n        _unlockRifi(senders, receivers, amounts, receiveEpoch, sender);\n    }","contract":"RIFIChainBridge","time":0},{"type":"external-function ","before":"function unlockRifi(\n        address[] memory senders,\n        address[] memory receivers,\n        uint256[] memory amounts,\n        uint256 receiveEpoch\n    ) external {\n        _unlockRifi(senders, receivers, amounts, receiveEpoch, msg.sender);\n    }","after":"function unlockRifi(\n        address[] calldata senders,\n        address[] calldata receivers,\n        uint256[] calldata amounts,\n        uint256 receiveEpoch\n    ) external {\n        _unlockRifi(senders, receivers, amounts, receiveEpoch, msg.sender);\n    }","contract":"RIFIChainBridge","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public DOMAIN_SEPARATOR;","after":"bytes32 public immutable DOMAIN_SEPARATOR;","contract":"RIFIChainBridge","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public UNLOCK_TYPE_HASH;","after":"bytes32 public immutable UNLOCK_TYPE_HASH;","contract":"RIFIChainBridge","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public LOCK_TYPE_HASH;","after":"bytes32 public immutable LOCK_TYPE_HASH;","contract":"RIFIChainBridge","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public UPDATE_EPOCH_TYPE_HASH;","after":"bytes32 public immutable UPDATE_EPOCH_TYPE_HASH;","contract":"RIFIChainBridge","time":0}]}