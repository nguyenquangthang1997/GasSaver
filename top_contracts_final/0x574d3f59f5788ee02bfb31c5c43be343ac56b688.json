{"time":165,"results":[{"type":"external-function ","before":"function airdropToWallets(address[] memory airdropWallets, uint256[] memory amounts) external onlyOwner returns (bool){\n        require(!tradingActive, \"Trading is already active, cannot airdrop after launch.\");\n        require(airdropWallets.length == amounts.length, \"arrays must be the same length\");\n        require(airdropWallets.length < 200, \"Can only airdrop 200 wallets per txn due to gas limits\"); // allows for airdrop + launch at the same exact time, reducing delays and reducing sniper input.\n        for(uint256 i = 0; i < airdropWallets.length; i++){\n            address wallet = airdropWallets[i];\n            uint256 amount = amounts[i];\n            _transfer(msg.sender, wallet, amount);\n        }\n        return true;\n    }","after":"function airdropToWallets(address[] calldata airdropWallets, uint256[] calldata amounts) external onlyOwner returns (bool){\n        require(!tradingActive, \"Trading is already active, cannot airdrop after launch.\");\n        require(airdropWallets.length == amounts.length, \"arrays must be the same length\");\n        require(airdropWallets.length < 200, \"Can only airdrop 200 wallets per txn due to gas limits\"); // allows for airdrop + launch at the same exact time, reducing delays and reducing sniper input.\n        for(uint256 i = 0; i < airdropWallets.length; i++){\n            address wallet = airdropWallets[i];\n            uint256 amount = amounts[i];\n            _transfer(msg.sender, wallet, amount);\n        }\n        return true;\n    }","contract":"Champ","time":0}]}