{"time":33,"results":[{"type":"external-function ","before":"function addToSchedule(address[] memory addresses, VestingSchedule[] memory entries) external onlyOwner {\n\t\trequire(entries.length > 0, 'Vesting: no entries');\n\t\trequire(addresses.length == entries.length, 'Vesting: length mismatch');\n\n\t\tuint256 length = addresses.length; // Gas optimisation\n\t\tfor (uint256 i = 0; i < length; i++) {\n\t\t\taddress to = addresses[i];\n\n\t\t\trequire(to != address(0), 'Vesting: to address must not be 0');\n\n\t\t\tschedule[to].push(entries[i]);\n\n\t\t\temit ScheduleChanged(to, schedule[to]);\n\t\t}\n\t}","after":"function addToSchedule(address[] calldata addresses, VestingSchedule[] calldata entries) external onlyOwner {\n\t\trequire(entries.length > 0, 'Vesting: no entries');\n\t\trequire(addresses.length == entries.length, 'Vesting: length mismatch');\n\n\t\tuint256 length = addresses.length; // Gas optimisation\n\t\tfor (uint256 i = 0; i < length; i++) {\n\t\t\taddress to = addresses[i];\n\n\t\t\trequire(to != address(0), 'Vesting: to address must not be 0');\n\n\t\t\tschedule[to].push(entries[i]);\n\n\t\t\temit ScheduleChanged(to, schedule[to]);\n\t\t}\n\t}","contract":"Vesting","time":1}]}