{"time":276,"results":[{"type":"struct-data-arrangement ","before":"\nuint id\naddress payable account\nuint collateral\nbytes32 currency\nuint amount\nbool short\nuint accruedInterest\nuint interestIndex\nuint lastInteraction","after":"uint id\nuint collateral\nbytes32 currency\nuint amount\nuint accruedInterest\nuint interestIndex\nuint lastInteraction\naddress payable account\nbool short\n","contract":"ICollateralLoan","time":0},{"type":"external-function ","before":"function createLoan(Loan memory loan) public onlyAssociatedContract {\n        loans[loan.account].push(loan);\n    }","after":"function createLoan(Loan calldata loan) public onlyAssociatedContract {\n        loans[loan.account].push(loan);\n    }","contract":"CollateralState","time":0},{"type":"external-function ","before":"function updateLoan(Loan memory loan) public onlyAssociatedContract {\n        Loan[] storage accountLoans = loans[loan.account];\n        for (uint i = 0; i < accountLoans.length; i++) {\n            if (accountLoans[i].id == loan.id) {\n                loans[loan.account][i] = loan;\n            }\n        }\n    }","after":"function updateLoan(Loan calldata loan) public onlyAssociatedContract {\n        Loan[] storage accountLoans = loans[loan.account];\n        for (uint i = 0; i < accountLoans.length; i++) {\n            if (accountLoans[i].id == loan.id) {\n                loans[loan.account][i] = loan;\n            }\n        }\n    }","contract":"CollateralState","time":0},{"type":"constant-restrict-modification  ","before":"uint public maxLoansPerAccount = 50;","after":"uint public constant maxLoansPerAccount = 50;","contract":"CollateralEth","time":0}]}