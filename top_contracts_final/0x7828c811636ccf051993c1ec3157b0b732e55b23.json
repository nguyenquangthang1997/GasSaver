{"time":167,"results":[{"type":"external-function ","before":"function mint(uint256 numberOfTokens, bytes memory pass)\n        public\n        payable\n        nonReentrant\n    {\n        if (\n            startPresaleDate <= block.timestamp &&\n            startMintDate > block.timestamp\n        ) {\n            uint256 mintablePresale = validateTicket(pass);\n            require(\n                numberOfTokens <= mintablePresale,\n                \"DR: Minting Too Many Presale\"\n            );\n            useTicket(pass, numberOfTokens);\n        } else {\n            require(startMintDate <= block.timestamp, \"DR: Sale Not Started\");\n            require(\n                numberOfTokens <= MAX_PURCHASE_COUNT,\n                \"DR: Minting Too Many\"\n            );\n        }\n\n        require(totalMinted() + numberOfTokens <= MAX_SUPPLY, \"DR: Sold Out\");\n\n        require(\n            msg.value >= numberOfTokens * MINT_PRICE,\n            \"DR: Insufficient Payment\"\n        );\n\n        for (uint256 i = 0; i < numberOfTokens; i++) {\n            _safeMint(msg.sender);\n        }\n    }","after":"function mint(uint256 numberOfTokens, bytes calldata pass)\n        public\n        payable\n        nonReentrant\n    {\n        if (\n            startPresaleDate <= block.timestamp &&\n            startMintDate > block.timestamp\n        ) {\n            uint256 mintablePresale = validateTicket(pass);\n            require(\n                numberOfTokens <= mintablePresale,\n                \"DR: Minting Too Many Presale\"\n            );\n            useTicket(pass, numberOfTokens);\n        } else {\n            require(startMintDate <= block.timestamp, \"DR: Sale Not Started\");\n            require(\n                numberOfTokens <= MAX_PURCHASE_COUNT,\n                \"DR: Minting Too Many\"\n            );\n        }\n\n        require(totalMinted() + numberOfTokens <= MAX_SUPPLY, \"DR: Sold Out\");\n\n        require(\n            msg.value >= numberOfTokens * MINT_PRICE,\n            \"DR: Insufficient Payment\"\n        );\n\n        for (uint256 i = 0; i < numberOfTokens; i++) {\n            _safeMint(msg.sender);\n        }\n    }","contract":"DegenerateRegenerate","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _baseTokenURI) external onlyOwner {\n        baseTokenURI = _baseTokenURI;\n    }","after":"function setBaseURI(string calldata _baseTokenURI) external onlyOwner {\n        baseTokenURI = _baseTokenURI;\n    }","contract":"DegenerateRegenerate","time":0},{"type":"immutable-restrict-modification ","before":"address private presaleSigner;","after":"address private immutable presaleSigner;","contract":"DegenerateRegenerate","time":1},{"type":"immutable-restrict-modification ","before":"address private staffSigner;","after":"address private immutable staffSigner;","contract":"DegenerateRegenerate","time":1},{"type":"immutable-restrict-modification ","before":"address private obeySigner;","after":"address private immutable obeySigner;","contract":"DegenerateRegenerate","time":1}]}