{"time":136,"results":[{"type":"external-function ","before":"function mutate(uint256[] memory shapeIds, uint256 shapeType, bytes calldata signature) public nonReentrant {\n      require(shapeType <= 6, \"Unknown shape type\");\n      if (_msgSender() != owner()) require(saleIsActive, \"The mint has not started yet\");\n\n      require(_validateMutateSignature(\n        signature,\n        shapeIds,\n        shapeType\n      ), \"Invalid data provided\");\n\n      Shapes.validateAndBurn(shapeIds, _msgSender());\n\n      uint256 tokenId = totalSupply();\n      _safeMint(_msgSender(), tokenId);\n      tokenTypes[tokenId] = ShapeShifter(shapeType);\n\n      emit TokensMinted(_msgSender(), tokenId, shapeType);\n    }","after":"function mutate(uint256[] calldata shapeIds, uint256 shapeType, bytes calldata signature) public nonReentrant {\n      require(shapeType <= 6, \"Unknown shape type\");\n      if (_msgSender() != owner()) require(saleIsActive, \"The mint has not started yet\");\n\n      require(_validateMutateSignature(\n        signature,\n        shapeIds,\n        shapeType\n      ), \"Invalid data provided\");\n\n      Shapes.validateAndBurn(shapeIds, _msgSender());\n\n      uint256 tokenId = totalSupply();\n      _safeMint(_msgSender(), tokenId);\n      tokenTypes[tokenId] = ShapeShifter(shapeType);\n\n      emit TokensMinted(_msgSender(), tokenId, shapeType);\n    }","contract":"MegaShapeShifterz","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) public onlyOwner {\n      require(!metadataFinalised, \"Metadata already finalised\");\n      _megaBaseURI = newBaseURI;\n    }","after":"function setBaseURI(string calldata newBaseURI) public onlyOwner {\n      require(!metadataFinalised, \"Metadata already finalised\");\n      _megaBaseURI = newBaseURI;\n    }","contract":"MegaShapeShifterz","time":0},{"type":"immutable-restrict-modification ","before":"address public royaltyAddress;","after":"address public immutable royaltyAddress;","contract":"MegaShapeShifterz","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public ROYALTY_SIZE = 750;","after":"uint256 public constant ROYALTY_SIZE = 750;","contract":"MegaShapeShifterz","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public ROYALTY_DENOMINATOR = 10000;","after":"uint256 public constant ROYALTY_DENOMINATOR = 10000;","contract":"MegaShapeShifterz","time":0}]}