{"time":180,"results":[{"type":"loop-duplication","before":"\nstart line 197 column 8, end line 203 column 8\nfor(uint i = 0; i < tokenIds.length; i++) {\r\n                require(tokenIds[i]>=firtsTokenId,\"Requested TokenId is above lower bound\");\r\n                require(tokenIds[i] <firtsTokenId+ maxSupply,\"Requested TokenId is below upper bound\"); \r\n                require(claimerContract.ownerOf(tokenIds[i]) == msg.sender, \"Must own the requested tokenId to claim a NWO\");\r\n                uint _claimedTokendId = startIndex + tokenIds[i];    \r\n                require(!_exists(_claimedTokendId), \"One of the NWO has already been claimed\");\r\n        }\nstart line 206 column 8, end line 213 column 8\nfor(uint i = 0; i < tokenIds.length; i++) {\r\n                for(uint j = 0; j <claimRatio;j++) {\r\n                    uint claimedTokendId = startIndex + tokenIds[i]  + j*maxSupply;\r\n                    if (!_exists(claimedTokendId)) {\r\n                        _safeMint(msg.sender, claimedTokendId);\r\n                    }    \r\n                }\r\n        }","after":"// merge loop\n\nstart line 197 column 8, end line 203 column 8\nfor(uint i = 0; i < tokenIds.length; i++) {\r\n                require(tokenIds[i]>=firtsTokenId,\"Requested TokenId is above lower bound\");\r\n                require(tokenIds[i] <firtsTokenId+ maxSupply,\"Requested TokenId is below upper bound\"); \r\n                require(claimerContract.ownerOf(tokenIds[i]) == msg.sender, \"Must own the requested tokenId to claim a NWO\");\r\n                uint _claimedTokendId = startIndex + tokenIds[i];    \r\n                require(!_exists(_claimedTokendId), \"One of the NWO has already been claimed\");\r\n        }\nstart line 206 column 8, end line 213 column 8\nfor(uint i = 0; i < tokenIds.length; i++) {\r\n                for(uint j = 0; j <claimRatio;j++) {\r\n                    uint claimedTokendId = startIndex + tokenIds[i]  + j*maxSupply;\r\n                    if (!_exists(claimedTokendId)) {\r\n                        _safeMint(msg.sender, claimedTokendId);\r\n                    }    \r\n                }\r\n        }","contract":"NewWorldOrder","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\r\n        PROVENANCE = provenanceHash;\r\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\r\n        PROVENANCE = provenanceHash;\r\n    }","contract":"NewWorldOrder","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\r\n        _setBaseURI(baseURI);\r\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\r\n        _setBaseURI(baseURI);\r\n    }","contract":"NewWorldOrder","time":0},{"type":"external-function ","before":"function moriesOwnerClaimNTokens(uint[] memory tokenIds) public {\r\n            claimNTokens(tokenIds,mories,moriesRatio,moriesStartIndex,moriesMaxSupply,moriesFirstTokenId);\r\n    }","after":"function moriesOwnerClaimNTokens(uint[] calldata tokenIds) public {\r\n            claimNTokens(tokenIds,mories,moriesRatio,moriesStartIndex,moriesMaxSupply,moriesFirstTokenId);\r\n    }","contract":"NewWorldOrder","time":0},{"type":"external-function ","before":"function lossamosOwnerClaimNTokens(uint[] memory tokenIds) public {\r\n            claimNTokens(tokenIds,lossamos,lossamosRatio,lossamosStartIndex,lossamosMaxSupply,lossamosFirstTokenId);\r\n    }","after":"function lossamosOwnerClaimNTokens(uint[] calldata tokenIds) public {\r\n            claimNTokens(tokenIds,lossamos,lossamosRatio,lossamosStartIndex,lossamosMaxSupply,lossamosFirstTokenId);\r\n    }","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_TOKEN=10626;","after":"uint256 public constant MAX_TOKEN=10626;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public moriesRatio=1;","after":"uint256 public constant moriesRatio=1;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public moriesFirstTokenId=0;","after":"uint256 public constant moriesFirstTokenId=0;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public moriesStartIndex = 0 ;","after":"uint256 public constant moriesStartIndex = 0 ;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public moriesMaxSupply = 10000 ;","after":"uint256 public constant moriesMaxSupply = 10000 ;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public lossamosRatio=5;","after":"uint256 public constant lossamosRatio=5;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public lossamosFirstTokenId=1;","after":"uint256 public constant lossamosFirstTokenId=1;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public lossamosStartIndex = 10000 ;","after":"uint256 public constant lossamosStartIndex = 10000 ;","contract":"NewWorldOrder","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public lossamosMaxSupply = 125 ;","after":"uint256 public constant lossamosMaxSupply = 125 ;","contract":"NewWorldOrder","time":0}]}