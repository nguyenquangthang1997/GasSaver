{"time":122,"results":[{"type":"external-function ","before":" */\n    function devMint(\n        uint256 artwork_,\n        string memory msg_,\n        address to_\n    ) public onlyOwner {\n        require(artwork_ >= 1 && artwork_ <= 5, \"Artwork id must be 1 thru 5\");\n\n        // increment dev mint counter\n        _artworkDevMints[artwork_ - 1].increment();\n        uint256 devMintCounterId = _artworkDevMints[artwork_ - 1].current();\n        require(\n            devMintCounterId <= maxDevMintsPerArtwork,\n            \"Dev mint supply exhausted\"\n        );\n        _mint(artwork_, msg_, to_","after":" */\n    function devMint(\n        uint256 artwork_,\n        string calldata msg_,\n        address to_\n    ) public onlyOwner {\n        require(artwork_ >= 1 && artwork_ <= 5, \"Artwork id must be 1 thru 5\");\n\n        // increment dev mint counter\n        _artworkDevMints[artwork_ - 1].increment();\n        uint256 devMintCounterId = _artworkDevMints[artwork_ - 1].current();\n        require(\n            devMintCounterId <= maxDevMintsPerArtwork,\n            \"Dev mint supply exhausted\"\n        );\n        _mint(artwork_, msg_, to_","contract":"Beijing2022","time":0},{"type":"external-function ","before":" */\n    function mint(uint256 artwork_, string memory msg_) public payable {\n        require(_mintOpen, \"Minting is closed\");\n        require(artwork_ >= 1 && artwork_ <= 5, \"Artwork id must be 1 thru 5\");\n\n        // increment artwork counter\n        _artworks[artwork_ - 1].increment();\n        uint256 artworkCounterId = _artworks[artwork_ - 1].current();\n        require(\n            artworkCounterId + maxDevMintsPerArtwork <= maxSupplyEachArtwork,\n            \"Artwork Supply Depleted\"\n        );\n\n        require(msg.value >= price, \"Must pay for minting\");\n        (bool success, ) = owner().call{value: msg.value}(\"\");\n        require(success, \"Transfer Failed\");\n        _mint(artwork_, msg_, _msgSender()","after":" */\n    function mint(uint256 artwork_, string memory msg_) public payable {\n        require(_mintOpen, \"Minting is closed\");\n        require(artwork_ >= 1 && artwork_ <= 5, \"Artwork id must be 1 thru 5\");\n\n        // increment artwork counter\n        _artworks[artwork_ - 1].increment();\n        uint256 artworkCounterId = _artworks[artwork_ - 1].current();\n        require(\n            artworkCounterId + maxDevMintsPerArtwork <= maxSupplyEachArtwork,\n            \"Artwork Supply Depleted\"\n        );\n\n        require(msg.value >= price, \"Must pay for minting\");\n        (bool success, ) = owner().call{value: msg.value}(\"\");\n        require(success, \"Transfer Failed\");\n        _mint(artwork_, msg_, _msgSender()","contract":"Beijing2022","time":0},{"type":"external-function ","before":" */\n    function setBaseTokenURI(string memory baseTokenURI_) public onlyOwner {\n        _baseTokenURI = baseTokenURI","after":" */\n    function setBaseTokenURI(string calldata baseTokenURI_) public onlyOwner {\n        _baseTokenURI = baseTokenURI","contract":"Beijing2022","time":0},{"type":"external-function ","before":" */\n    function setContractURI(string memory contractURI_) public onlyOwner {\n        _contractURI = contractURI","after":" */\n    function setContractURI(string calldata contractURI_) public onlyOwner {\n        _contractURI = contractURI","contract":"Beijing2022","time":0},{"type":"constant-restrict-modification  ","before":"ice\n    uint256 public maxSupplyEachArtwork","after":"ice\n    uint256 public constant maxSupplyEachArtwork","contract":"Beijing2022","time":0},{"type":"constant-restrict-modification  ","before":"22;\n    uint256 public maxDevMintsPerArtwor","after":"22;\n    uint256 public maxDevMintsPerArtwor","contract":"Beijing2022","time":0},{"type":"constant-restrict-modification  ","before":"20;\n    uint256 public price = 0.2022 *","after":"20;\n    uint256 public constant price = 0.2022 *","contract":"Beijing2022","time":0}]}