{"time":118,"results":[{"type":"external-function ","before":" 0;\n        if (beginTime < BONUS_TIME_LIMIT_1) {\n            weightedTime += (min(endTime, BONUS_TIME_LIMIT_1) - beginTime) * 4;\n        }\n        if (beginTime < BONUS_TIME_LIMIT_2 && endTime > BONUS_TIME_LIMIT_1) {\n            weightedTime += (min(endTime, BONUS_TIME_LIMIT_2) - max(beginTime, BONUS_TIME_LIMIT_1)) * 2;\n        }\n        if (endTim","after":" 0;\n        if (beginTime < BONUS_TIME_LIMIT_1) {\n            weightedTime += (min(endTime, BONUS_TIME_LIMIT_1) - beginTime) * 4;\n        }\n        if (beginTime < BONUS_TIME_LIMIT_2 && endTime > BONUS_TIME_LIMIT_1) {\n            weightedTime += (min(endTime, BONUS_TIME_LIMIT_2) - max(beginTime, BONUS_TIME_LIMIT_1)) * 2;\n        }\n        if (endTim","contract":"GoofToken","time":0},{"type":"external-function ","before":"laimFull() public {\n        claimFullFor(msg.sender);\n    }\n\n    function claimFullFor(address addr) public {\n        uint256[] memory id = delegate.walletOfOwner(addr);\n        uint256 totalReward = 0;\n        for (uint256 i = 0; i < id.length; i++) {\n            totalReward += claim(id[i]);\n  ","after":"laimFull() public {\n        claimFullFor(msg.sender);\n    }\n\n    function claimFullFor(address addr) public {\n        uint256[] memory id = delegate.walletOfOwner(addr);\n        uint256 totalReward = 0;\n        for (uint256 i = 0; i < id.length; i++) {\n            totalReward += claim(id[i]);\n  ","contract":"GoofToken","time":0},{"type":"external-function ","before":"\n            // allow letter, numbers, punctuation, but no risk of HTML tags (<>) or\n            // impersonating another goofball (# sign)\n            if (!(ch >= 32 && ch <= 126) || ch == 60 || ch == 62 || ch == 35) {\n                return false;\n            }\n            prevChar = ch;\n        }\n        if (prevChar == 32) {\n            // No trailing space\n            return false;\n        }\n        return true;\n    }\n\n    function toLower(bytes memory name) private pure returns (bytes memory) {\n        bytes memory lowerCased = new bytes(name.length);\n        for (uint256 i = 0; i < name.length; i++) {\n            uint8 ch = uint8(name[i]);\n            if (ch >= 65 && ch <= 90) {\n                lowerCased[i] = bytes1(\n                    ch +\n                        97 - /* 'a' */\n                        65 /* 'A' */\n                );\n            } else {\n                lower","after":"\n            // allow letter, numbers, punctuation, but no risk of HTML tags (<>) or\n            // impersonating another goofball (# sign)\n            if (!(ch >= 32 && ch <= 126) || ch == 60 || ch == 62 || ch == 35) {\n                return false;\n            }\n            prevChar = ch;\n        }\n        if (prevChar == 32) {\n            // No trailing space\n            return false;\n        }\n        return true;\n    }\n\n    function toLower(bytes memory name) private pure returns (bytes memory) {\n        bytes memory lowerCased = new bytes(name.length);\n        for (uint256 i = 0; i < name.length; i++) {\n            uint8 ch = uint8(name[i]);\n            if (ch >= 65 && ch <= 90) {\n                lowerCased[i] = bytes1(\n                    ch +\n                        97 - /* 'a' */\n                        65 /* 'A' */\n                );\n            } else {\n                lower","contract":"GoofToken","time":0}]}