{"time":556,"results":[{"type":"state-data-arrangement ","before":"\nstring public SPOILEDBANANASOCIETY_PROVENANCE = \"\";\nstring private baseURI;\nuint256 public constant MAX_TOKENS = 10000;\nuint256 public constant RESERVED_TOKENS = 20;\nuint256 public constant TOKEN_PRICE = 80000000000000000;\nuint256 public constant MAX_TOKENS_PURCHASE = 20;\nuint256 public numTokensMinted = 0;\nuint256 public numTokensBurned = 0;\nbool public mintIsActive = false;\nbool public presaleIsActive = false;\nmapping (address => bool) public presaleWalletList;\nbool public freeWalletIsActive = false;\nmapping (address => bool) public freeWalletList;","after":"string public SPOILEDBANANASOCIETY_PROVENANCE = \"\";\nstring private baseURI;\nuint256 public constant MAX_TOKENS = 10000;\nuint256 public constant RESERVED_TOKENS = 20;\nuint256 public constant TOKEN_PRICE = 80000000000000000;\nuint256 public constant MAX_TOKENS_PURCHASE = 20;\nuint256 public numTokensMinted = 0;\nuint256 public numTokensBurned = 0;\nmapping (address => bool) public presaleWalletList;\nmapping (address => bool) public freeWalletList;\nbool public mintIsActive = false;\nbool public presaleIsActive = false;\nbool public freeWalletIsActive = false;\n","contract":"SpoiledBananaSociety","time":0},{"type":"external-function ","before":"function initPresaleWalletList(address[] memory walletList) external onlyOwner {\n\t    for (uint256 i = 0; i < walletList.length; i++) {\n\t\t    presaleWalletList[walletList[i]] = true;\n\t    }\n    }","after":"function initPresaleWalletList(address[] calldata walletList) external onlyOwner {\n\t    for (uint256 i = 0; i < walletList.length; i++) {\n\t\t    presaleWalletList[walletList[i]] = true;\n\t    }\n    }","contract":"SpoiledBananaSociety","time":0},{"type":"external-function ","before":"function initFreeWalletList(address[] memory walletList) external onlyOwner {\n\t    for (uint256 i = 0; i < walletList.length; i++) {\n\t\t    freeWalletList[walletList[i]] = true;\n\t    }\n    }","after":"function initFreeWalletList(address[] calldata walletList) external onlyOwner {\n\t    for (uint256 i = 0; i < walletList.length; i++) {\n\t\t    freeWalletList[walletList[i]] = true;\n\t    }\n    }","contract":"SpoiledBananaSociety","time":0},{"type":"external-function ","before":"function setBaseURI(string memory uri) external onlyOwner {\n        baseURI = uri;\n    }","after":"function setBaseURI(string calldata uri) external onlyOwner {\n        baseURI = uri;\n    }","contract":"SpoiledBananaSociety","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) external onlyOwner {\n        SPOILEDBANANASOCIETY_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) external onlyOwner {\n        SPOILEDBANANASOCIETY_PROVENANCE = provenanceHash;\n    }","contract":"SpoiledBananaSociety","time":0}]}