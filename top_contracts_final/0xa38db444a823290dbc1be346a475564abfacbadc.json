{"time":220,"results":[{"type":"state-data-arrangement ","before":"\nmapping( uint256=>string ) _baseTokenURIs;\naddress private _serum;\naddress private _babyLLama;\nmapping( uint256=>uint256 ) _injectedSerum;\nbool private _startInjection = false;","after":"mapping( uint256=>string ) _baseTokenURIs;\nmapping( uint256=>uint256 ) _injectedSerum;\naddress private _serum;\naddress private _babyLLama;\nbool private _startInjection = false;\n","contract":"AlienLlama","time":0},{"type":"external-function ","before":"function batchInjectionSerum( uint256[] memory llamaTokenIds, uint256[] memory serumTypes ) public nonReentrant{\n        require(llamaTokenIds.length == serumTypes.length, \"Invalid Parameter\");\n        require(llamaTokenIds.length <= 30, \"Max is 30\");\n        for( uint256 i; i < llamaTokenIds.length ; i++ ){\n            _injectionSerum(llamaTokenIds[i], serumTypes[i]);\n        }\n    }","after":"function batchInjectionSerum( uint256[] calldata llamaTokenIds, uint256[] calldata serumTypes ) public nonReentrant{\n        require(llamaTokenIds.length == serumTypes.length, \"Invalid Parameter\");\n        require(llamaTokenIds.length <= 30, \"Max is 30\");\n        for( uint256 i; i < llamaTokenIds.length ; i++ ){\n            _injectionSerum(llamaTokenIds[i], serumTypes[i]);\n        }\n    }","contract":"AlienLlama","time":1},{"type":"external-function ","before":"function setBaseURI(string memory baseURI, uint256 serumType) public onlyOwner {\n        _baseTokenURIs[serumType] = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI, uint256 serumType) public onlyOwner {\n        _baseTokenURIs[serumType] = baseURI;\n    }","contract":"AlienLlama","time":0},{"type":"immutable-restrict-modification ","before":"address private _serum;","after":"address private immutable _serum;","contract":"AlienLlama","time":0},{"type":"immutable-restrict-modification ","before":"address private _babyLLama;","after":"address private immutable _babyLLama;","contract":"AlienLlama","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"BabyLlamaSerum","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"BabyLlamaSerum","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _price = 0.07 ether;","after":"uint256 private constant _price = 0.07 ether;","contract":"BabyLlamaSerum","time":1},{"type":"constant-restrict-modification  ","before":"address private labManager = 0xd5C98c4e77c5e79D81349cD3C5A5695811F5FD70;","after":"address private constant labManager = 0xd5C98c4e77c5e79D81349cD3C5A5695811F5FD70;","contract":"BabyLlamaSerum","time":1}]}