{"time":124,"results":[{"type":"external-function ","before":"function claimMany(uint256[] memory tokenIds) external {\n        require(saleStarted == true, \"Sale has not started.\");\n        require( tokenIds.length <= 40, \"tokens > 40\" );\n        require(totalSupply() + tokenIds.length <= MAX_SUPPLY, \"totalSupply > MAX_SUPPLY\");\n\n        for(uint i=0; i<tokenIds.length; i++){\n            uint tokenId = tokenIds[i];\n            if(lm.ownerOfAux(tokenId) != (msg.sender)) {\n                continue;\n            }\n            if (!_exists(tokenId)) {\n                _safeMint(msg.sender, tokenId);\n            }\n        }\n    }","after":"function claimMany(uint256[] calldata tokenIds) external {\n        require(saleStarted == true, \"Sale has not started.\");\n        require( tokenIds.length <= 40, \"tokens > 40\" );\n        require(totalSupply() + tokenIds.length <= MAX_SUPPLY, \"totalSupply > MAX_SUPPLY\");\n\n        for(uint i=0; i<tokenIds.length; i++){\n            uint tokenId = tokenIds[i];\n            if(lm.ownerOfAux(tokenId) != (msg.sender)) {\n                continue;\n            }\n            if (!_exists(tokenId)) {\n                _safeMint(msg.sender, tokenId);\n            }\n        }\n    }","contract":"ManekiGang","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseTokenURI) external onlyOwner {\n        _baseTokenURI = baseTokenURI;\n    }","after":"function setBaseURI(string calldata baseTokenURI) external onlyOwner {\n        _baseTokenURI = baseTokenURI;\n    }","contract":"ManekiGang","time":0},{"type":"external-function ","before":"function setProvenance(string memory newProvenance) public onlyOwner {\n        /* Provenance can only be changed before reveal. */\n        require(revealOffset == 0, \"!!reveal\");\n        PROVENANCE = newProvenance;\n    }","after":"function setProvenance(string calldata newProvenance) public onlyOwner {\n        /* Provenance can only be changed before reveal. */\n        require(revealOffset == 0, \"!!reveal\");\n        PROVENANCE = newProvenance;\n    }","contract":"ManekiGang","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public MAX_SUPPLY;","after":"uint256 public immutable MAX_SUPPLY;","contract":"ManekiGang","time":0}]}