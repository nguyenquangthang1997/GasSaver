{"time":58,"results":[{"type":"state-data-arrangement ","before":"\nRate(uint256 burn_rate, uint256 reward_rat\naddress rewardPool);\n    event\nsfer(address indexed from, address indexed to\nt256 value);\n    event Mint(address indexed from, address indexed to,\nndexed owner, address indexed s\n6 value);\n\n    // for minters\n    \n_minters;\n\n    //token base data\n    uint256 intern\n    mapping(address => uint256) public _balances;\nress => mapping (address => uint256)) publ\ny = 0;\n\n    ///\n    bool public \nr = false;\n\n    // hardcode limit \nuint256 public constant _maxGovernV\nate = 2000;//2000/10000\n    uint256 p\nRate = 10;  //10/10000\n    uint256 public constant _rateBase = 10000; \n\n\n for use if transaction fees ever became necessary\n    uint256 public ","after":"Rate(uint256 burn_rate, uint256 reward_rat\naddress rewardPool);\n    event\nsfer(address indexed from, address indexed to\nt256 value);\n    event Mint(address indexed from, address indexed to,\nndexed owner, address indexed s\n_minters;\n\n    //token base data\n    uint256 intern\n    mapping(address => uint256) public _balances;\nress => mapping (address => uint256)) publ\ny = 0;\n\n    ///\n    bool public \nr = false;\n\n    // hardcode limit \nuint256 public constant _maxGovernV\nate = 2000;//2000/10000\n    uint256 p\nRate = 10;  //10/10000\n    uint256 public constant _rateBase = 10000; \n\n\n for use if transaction fees ever became necessary\n    uint256 public \n6 value);\n\n    // for minters\n    \n","contract":"DegoToken","time":0},{"type":"constant-restrict-modification  ","before":" for use if transaction fees ever became necessary\n    uint256 public ","after":" for use if transaction fees ever became necessary\n    uint256 public ","contract":"DegoToken","time":0}]}