{"time":140,"results":[{"type":"external-function ","before":"function setWhiteList(address[] memory whiteListAddress, bool bEnable) external onlyOwner {\n        for (uint256 i = 0; i < whiteListAddress.length; i++) {\n            _mappingWhiteList[whiteListAddress[i]] = bEnable;\n        }\n    }","after":"function setWhiteList(address[] calldata whiteListAddress, bool bEnable) external onlyOwner {\n        for (uint256 i = 0; i < whiteListAddress.length; i++) {\n            _mappingWhiteList[whiteListAddress[i]] = bEnable;\n        }\n    }","contract":"FengShuiDrivers","time":0},{"type":"external-function ","before":"function setRevealURI(string memory revealURI) external onlyOwner {\n        _revealURI = revealURI;\n    }","after":"function setRevealURI(string calldata revealURI) external onlyOwner {\n        _revealURI = revealURI;\n    }","contract":"FengShuiDrivers","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) external onlyOwner {\n        _tokenBaseURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) external onlyOwner {\n        _tokenBaseURI = baseURI;\n    }","contract":"FengShuiDrivers","time":0},{"type":"external-function ","before":"function airdrop(address[] memory airdropAddress, uint256 numberOfTokens) external onlyOwner {\n        for (uint256 k = 0; k < airdropAddress.length; k++) {\n            for (uint256 i = 0; i < numberOfTokens; i++) {\n                uint256 tokenId = _publicFSD.current();\n\n                if (_publicFSD.current() < FSD_MAX) {\n                    _publicFSD.increment();\n                    if (!_exists(tokenId)) _safeMint(airdropAddress[k], tokenId);\n                }\n            }\n        }\n    }","after":"function airdrop(address[] calldata airdropAddress, uint256 numberOfTokens) external onlyOwner {\n        for (uint256 k = 0; k < airdropAddress.length; k++) {\n            for (uint256 i = 0; i < numberOfTokens; i++) {\n                uint256 tokenId = _publicFSD.current();\n\n                if (_publicFSD.current() < FSD_MAX) {\n                    _publicFSD.increment();\n                    if (!_exists(tokenId)) _safeMint(airdropAddress[k], tokenId);\n                }\n            }\n        }\n    }","contract":"FengShuiDrivers","time":0},{"type":"constant-restrict-modification  ","before":"bool private _enableOnChainWhiteList = true;","after":"bool private constant _enableOnChainWhiteList = true;","contract":"FengShuiDrivers","time":0},{"type":"immutable-restrict-modification ","before":"address private _creator;","after":"address private immutable _creator;","contract":"FengShuiDrivers","time":0}]}