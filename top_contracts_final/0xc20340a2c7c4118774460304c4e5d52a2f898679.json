{"time":174,"results":[{"type":"external-function ","before":"function setBaseURI(string memory _baseURI) external onlyOwner {\n        _setBaseURI(_baseURI);\n    }","after":"function setBaseURI(string calldata _baseURI) external onlyOwner {\n        _setBaseURI(_baseURI);\n    }","contract":"NobiToadz","time":0},{"type":"external-function ","before":"function initializePaymentSplitter (address[] memory payees, uint256[] memory shares_) external onlyOwner {\n        require (!initialized, \"Payment Split Already Initialized!\");\n        require(payees.length == shares_.length, \"PaymentSplitter: payees and shares length mismatch\");\n        require(payees.length > 0, \"PaymentSplitter: no payees\");\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(payees[i], shares_[i]);\n        }\n        initialized=true;\n    }","after":"function initializePaymentSplitter (address[] calldata payees, uint256[] calldata shares_) external onlyOwner {\n        require (!initialized, \"Payment Split Already Initialized!\");\n        require(payees.length == shares_.length, \"PaymentSplitter: payees and shares length mismatch\");\n        require(payees.length > 0, \"PaymentSplitter: no payees\");\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(payees[i], shares_[i]);\n        }\n        initialized=true;\n    }","contract":"NobiToadz","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxMintsPerTx = 5;","after":"uint256 public constant maxMintsPerTx = 5;","contract":"NobiToadz","time":0}]}