{"time":144,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public constant MAX_TURTLES = 3333;\nuint256 public constant PRIVATE_RESERVE = 10;\nuint256 public constant FREE_RESERVE = 1111;\nuint256 public TURTLE_PRICE = 30000000000000000;\nuint256 public constant PURCHASE_LIMIT = 20;\nstring public TURTLES_PROVENANCE = \"\";\naddress private constant TEAM1 = 0xb17308B7942aeCE53B36B9799e15E3d9420a2BC4;\naddress private constant TEAM2 = 0xa0B4aB49Ea3C060175BBc47e0316abc6C8904202;\naddress public verifiedSigner;\nuint256 public totalSupply;\nuint256 public reservedSupply;\nbool public revealed;\nbool public paused;\nbool public terminated;\nbool public uriLocked;\nmapping(uint256 => uint256) public genesisTurtles;\nmapping(address => uint256) public freeMintUsed;\nstring public baseURI;","after":"uint256 public constant MAX_TURTLES = 3333;\nuint256 public constant PRIVATE_RESERVE = 10;\nuint256 public constant FREE_RESERVE = 1111;\nuint256 public TURTLE_PRICE = 30000000000000000;\nuint256 public constant PURCHASE_LIMIT = 20;\nstring public TURTLES_PROVENANCE = \"\";\nuint256 public totalSupply;\nuint256 public reservedSupply;\nmapping(uint256 => uint256) public genesisTurtles;\nmapping(address => uint256) public freeMintUsed;\nstring public baseURI;\naddress private constant TEAM1 = 0xb17308B7942aeCE53B36B9799e15E3d9420a2BC4;\naddress private constant TEAM2 = 0xa0B4aB49Ea3C060175BBc47e0316abc6C8904202;\naddress public verifiedSigner;\nbool public revealed;\nbool public paused;\nbool public terminated;\nbool public uriLocked;\n","contract":"TurtleVerse","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash)\n        external\n    {\n        requireOnlyOwner();\n        require(\n            bytes(TURTLES_PROVENANCE).length == 0,\n            \"Provenance hash already set.\"\n        );\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is empty\");\n        TURTLES_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash)\n        external\n    {\n        requireOnlyOwner();\n        require(\n            bytes(TURTLES_PROVENANCE).length == 0,\n            \"Provenance hash already set.\"\n        );\n        require(bytes(provenanceHash).length > 0, \"Provenance hash is empty\");\n        TURTLES_PROVENANCE = provenanceHash;\n    }","contract":"TurtleVerse","time":0},{"type":"external-function ","before":"function setURI(string memory uri) external {\n        requireOnlyOwner();\n        require(!uriLocked, \"URI locked\");\n        baseURI = uri;\n    }","after":"function setURI(string calldata uri) external {\n        requireOnlyOwner();\n        require(!uriLocked, \"URI locked\");\n        baseURI = uri;\n    }","contract":"TurtleVerse","time":0}]}