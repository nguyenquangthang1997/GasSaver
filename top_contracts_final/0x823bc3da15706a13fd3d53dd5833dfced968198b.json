{"time":99,"results":[{"type":"external-function ","before":"function mint(string memory id) public payable {\n        require(mintingIsActive, \"Minting not live\");\n        require(_tokenIdCounter.current() < maxTokenSupply, \"Exceeds max supply\");\n        require(mintPrice <= msg.value, \"Incorrect ether value\");\n\n        _tokenIdCounter.increment();\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        emit MintedToken(_tokenIdCounter.current(), id);\n    }","after":"function mint(string calldata id) public payable {\n        require(mintingIsActive, \"Minting not live\");\n        require(_tokenIdCounter.current() < maxTokenSupply, \"Exceeds max supply\");\n        require(mintPrice <= msg.value, \"Incorrect ether value\");\n\n        _tokenIdCounter.increment();\n        _safeMint(msg.sender, _tokenIdCounter.current());\n        emit MintedToken(_tokenIdCounter.current(), id);\n    }","contract":"ImpermanentAIGallery","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) public onlyOwner {\n        require(!isLocked, \"Locked\");\n        baseURI = newBaseURI;\n    }","after":"function setBaseURI(string calldata newBaseURI) public onlyOwner {\n        require(!isLocked, \"Locked\");\n        baseURI = newBaseURI;\n    }","contract":"ImpermanentAIGallery","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        require(!isLocked, \"Locked\");\n        provenance = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        require(!isLocked, \"Locked\");\n        provenance = provenanceHash;\n    }","contract":"ImpermanentAIGallery","time":0}]}