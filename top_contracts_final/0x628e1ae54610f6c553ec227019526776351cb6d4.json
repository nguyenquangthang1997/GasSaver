{"time":136,"results":[{"type":"external-function ","before":"function setUri(string memory uri) external onlyOwner {\n        _setURI(uri);\n    }","after":"function setUri(string calldata uri) external onlyOwner {\n        _setURI(uri);\n    }","contract":"BloodShedBearsMintPass","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"BloodShedBearsMintPass","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"BloodShedBearsMintPass","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public maxPresaleMint_ = 3;","after":"uint256 public constant maxPresaleMint_ = 3;","contract":"BloodShedBearsMintPass","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public teamReserveAvailableMint_ = 20;","after":"uint256 public constant teamReserveAvailableMint_ = 20;","contract":"BloodShedBearsMintPass","time":0}]}