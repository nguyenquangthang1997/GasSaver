{"time":133,"results":[{"type":"state-data-arrangement ","before":"\naddress public raribleContractAddress;\nuint256 public raribleTokenId = 706480;\naddress public gmDAOAddress = 0xD18e205b41eEe3D208D3B10445DB95Ff02ba4acA;\nuint256 public royaltyPercent = 20;\nuint256 public maxSupply = 900;\nuint256 public maxNormalTokens = 870;\nuint256 public maxSpecialTokens = 30;\nstring public baseTokenURI;\nbool public isMigrationActive;\nuint256 public nextNormalTokenId = 0;\nuint256 public nextSpecialTokenId = maxSupply - maxSpecialTokens;\nmapping(address => uint256) public sentV1Tokens;","after":"uint256 public raribleTokenId = 706480;\nuint256 public royaltyPercent = 20;\nuint256 public maxSupply = 900;\nuint256 public maxNormalTokens = 870;\nuint256 public maxSpecialTokens = 30;\nstring public baseTokenURI;\nuint256 public nextNormalTokenId = 0;\nuint256 public nextSpecialTokenId = maxSupply - maxSpecialTokens;\nmapping(address => uint256) public sentV1Tokens;\naddress public raribleContractAddress;\naddress public gmDAOAddress = 0xD18e205b41eEe3D208D3B10445DB95Ff02ba4acA;\nbool public isMigrationActive;\n","contract":"GmV2","time":0},{"type":"external-function ","before":"m v2 token.\n     */\n    function onERC1155BatchReceived(\n        address,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes memory\n    ) external override migrationActive nonReentrant returns (bytes4) {\n        require(msg.sender == address(raribleContractAddress), \"WRONG_NFT_CONTRACT\");\n        require(ids[0] == raribleTokenId, \"ONLY_GM\");\n        require(ids.length == 1, \"ONLY_GM\");\n\n        sentV1Tokens[from] += values[0];\n\n        return bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],ui","after":"m v2 token.\n     */\n    function onERC1155BatchReceived(\n        address,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes memory\n    ) external override migrationActive nonReentrant returns (bytes4) {\n        require(msg.sender == address(raribleContractAddress), \"WRONG_NFT_CONTRACT\");\n        require(ids[0] == raribleTokenId, \"ONLY_GM\");\n        require(ids.length == 1, \"ONLY_GM\");\n\n        sentV1Tokens[from] += values[0];\n\n        return bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],ui","contract":"GmV2","time":0},{"type":"external-function ","before":"☉☉ ADMIN ACTIONS ☉☉☉\n\n    function setBaseURI(string memory uri) external onlyOwner","after":"☉☉ ADMIN ACTIONS ☉☉☉\n\n    function setBaseURI(string memory uri) external onlyOwner","contract":"GmV2","time":0},{"type":"constant-restrict-modification  ","before":"address public gmDAOAddress = 0xD18e205b41eEe3D208D3B10445DB95Ff02ba4acA;","after":"address public constant gmDAOAddress = 0xD18e205b41eEe3D208D3B10445DB95Ff02ba4acA;","contract":"GmV2","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 900;","after":"uint256 public constant maxSupply = 900;","contract":"GmV2","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxNormalTokens = 870;","after":"uint256 public constant maxNormalTokens = 870;","contract":"GmV2","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSpecialTokens = 30;","after":"uint256 public constant maxSpecialTokens = 30;","contract":"GmV2","time":0}]}