{"time":226,"results":[{"type":"external-function ","before":"function setBaseURI(string memory newUri) \n    public \n    onlyOwner {\n        BASE_URI = newUri;\n    }","after":"function setBaseURI(string calldata newUri) \n    public \n    onlyOwner {\n        BASE_URI = newUri;\n    }","contract":"MetaBoomers","time":0},{"type":"external-function ","before":"function presaleMint(address account, uint numberOfTokens, uint256 allowance, string memory key, bytes32[] calldata proof)\n    public\n    payable\n    onlyAccounts\n    {\n        require(msg.sender == account, \"Not allowed\");\n        require(IS_PRESALE_ACTIVE, \"Pre-sale haven't started\");\n        require(msg.value >= numberOfTokens * PRESALE_MINT_PRICE, \"Not enough ethers sent\");\n\n        string memory payload = string(abi.encodePacked(Strings.toString(allowance), \":\", key));\n\n        require(_verify(_leaf(msg.sender, payload), proof), \"Invalid merkle proof\");\n        \n        uint current = _tokenIdCounter.current();\n        \n        require(current + numberOfTokens < INCREASED_MAX_TOKEN_ID, \"Exceeds total supply\");\n        require(addressToMintCount[msg.sender] + numberOfTokens <= allowance, \"Exceeds allowance\");\n\n        addressToMintCount[msg.sender] += numberOfTokens;\n\n        for (uint i = 0; i < numberOfTokens; i++) {\n            mintInternal();\n        }\n    }","after":"function presaleMint(address account, uint numberOfTokens, uint256 allowance, string calldata key, bytes32[] calldata proof)\n    public\n    payable\n    onlyAccounts\n    {\n        require(msg.sender == account, \"Not allowed\");\n        require(IS_PRESALE_ACTIVE, \"Pre-sale haven't started\");\n        require(msg.value >= numberOfTokens * PRESALE_MINT_PRICE, \"Not enough ethers sent\");\n\n        string memory payload = string(abi.encodePacked(Strings.toString(allowance), \":\", key));\n\n        require(_verify(_leaf(msg.sender, payload), proof), \"Invalid merkle proof\");\n        \n        uint current = _tokenIdCounter.current();\n        \n        require(current + numberOfTokens < INCREASED_MAX_TOKEN_ID, \"Exceeds total supply\");\n        require(addressToMintCount[msg.sender] + numberOfTokens <= allowance, \"Exceeds allowance\");\n\n        addressToMintCount[msg.sender] += numberOfTokens;\n\n        for (uint i = 0; i < numberOfTokens; i++) {\n            mintInternal();\n        }\n    }","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address COMMUNITY_WALLET = 0xb07996B2dAB2E70D867EEA20F6b80F2Eb9DA15aD;","after":"address constant COMMUNITY_WALLET = 0xb07996B2dAB2E70D867EEA20F6b80F2Eb9DA15aD;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_1 = 0x936152245B8e47cCde665C228868F403a45c035b;","after":"address constant TEAM_1 = 0x936152245B8e47cCde665C228868F403a45c035b;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_2 = 0xA800F34505e8b340cf3Ab8793cB40Bf09042B28F;","after":"address constant TEAM_2 = 0xA800F34505e8b340cf3Ab8793cB40Bf09042B28F;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_3 = 0xCF06446c0372Bf1BB771d0E9AD9c16fD0d3cdD7B;","after":"address constant TEAM_3 = 0xCF06446c0372Bf1BB771d0E9AD9c16fD0d3cdD7B;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_4 = 0xbDf3EA86444E2C19fc170D89438eE02868F85706;","after":"address constant TEAM_4 = 0xbDf3EA86444E2C19fc170D89438eE02868F85706;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_5 = 0x808FD8816c71AeD45071dfce57e2929af507f033;","after":"address constant TEAM_5 = 0x808FD8816c71AeD45071dfce57e2929af507f033;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_6 = 0xBDE8236C535B86be55F8a3c0af862d316Ce0A6FC;","after":"address constant TEAM_6 = 0xBDE8236C535B86be55F8a3c0af862d316Ce0A6FC;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_7 = 0x0eD45B6e251d59c7f5A0aa162238D73E96cc61f6;","after":"address constant TEAM_7 = 0x0eD45B6e251d59c7f5A0aa162238D73E96cc61f6;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_8 = 0xd536cDDf1aDEB9d805efe265A1278302BAA1e988;","after":"address constant TEAM_8 = 0xd536cDDf1aDEB9d805efe265A1278302BAA1e988;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_9 = 0x433AA2913eFc08042899aB9b6fCFC7B7E901Fa8a;","after":"address constant TEAM_9 = 0x433AA2913eFc08042899aB9b6fCFC7B7E901Fa8a;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_10 = 0xa80f0bA14407Ae078B7dE5cbEBcd2367a5e1576E;","after":"address constant TEAM_10 = 0xa80f0bA14407Ae078B7dE5cbEBcd2367a5e1576E;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_11 = 0x2a92e1d6614c3e6817E7E9bfA004525814118a82;","after":"address constant TEAM_11 = 0x2a92e1d6614c3e6817E7E9bfA004525814118a82;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address TEAM_12 = 0x0F0Fb9aFD70CfF14C9e5E443f11b4f5585297c0D;","after":"address constant TEAM_12 = 0x0F0Fb9aFD70CfF14C9e5E443f11b4f5585297c0D;","contract":"MetaBoomers","time":0},{"type":"constant-restrict-modification  ","before":"address GAME_REWARDS_ADDRESS = address(0x150556ad0c82183618ED86164FC8a380fe37a225);","after":"address constant GAME_REWARDS_ADDRESS = address(0x150556ad0c82183618ED86164FC8a380fe37a225);","contract":"YieldToken","time":0}]}