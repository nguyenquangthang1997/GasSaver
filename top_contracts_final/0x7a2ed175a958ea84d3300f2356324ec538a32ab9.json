{"time":14,"results":[{"type":"external-function ","before":"function dictate(uint256 printIndex, string memory _text) public {\n\t\t// check that the message sender owns the token \n\t\t// the function in DadaCollectible.sol that returns the owner address given a unique printIndex\n\t\t// is DrawingPrintToAddress\n\t\trequire(getOwner(printIndex) == msg.sender, \"Sender not authorized to dictate.\");\n\n\t\t// push a new document with the dictator address, message, and timestamp\n\t\tdocuments[printIndex].push(Document(msg.sender, _text, block.timestamp));\n\t\t// increase the documents counter for this key\n\t\tdocumentsCount[printIndex]++;\n\t\t// emit an event for this newly created record\n\t\temit Record(msg.sender, printIndex, _text);\n\t}","after":"function dictate(uint256 printIndex, string calldata _text) public {\n\t\t// check that the message sender owns the token \n\t\t// the function in DadaCollectible.sol that returns the owner address given a unique printIndex\n\t\t// is DrawingPrintToAddress\n\t\trequire(getOwner(printIndex) == msg.sender, \"Sender not authorized to dictate.\");\n\n\t\t// push a new document with the dictator address, message, and timestamp\n\t\tdocuments[printIndex].push(Document(msg.sender, _text, block.timestamp));\n\t\t// increase the documents counter for this key\n\t\tdocumentsCount[printIndex]++;\n\t\t// emit an event for this newly created record\n\t\temit Record(msg.sender, printIndex, _text);\n\t}","contract":"Scribe","time":0},{"type":"constant-restrict-modification  ","before":"address creepsContract = 0x068696A3cf3c4676B65F1c9975dd094260109d02;","after":"address constant creepsContract = 0x068696A3cf3c4676B65F1c9975dd094260109d02;","contract":"Scribe","time":0}]}