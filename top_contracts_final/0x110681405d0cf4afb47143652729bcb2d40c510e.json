{"time":148,"results":[{"type":"state-data-arrangement ","before":"\nstring public provenanceHash;\nbool public revealed;\nbool public randomOffsetGenerated;\nuint256 internal _tokenOffset;\nuint256 internal _linkFee;\nbytes32 internal _linkKeyHash;\nstring internal _baseTokenURI;\nstring internal _unrevealedTokenURI;\nstring internal _specialEditionsURI;\nbool internal _someSpecialEditionRevealed;\nmapping(uint256 => bool) internal _specialEditionRevealedMapping;","after":"string public provenanceHash;\nuint256 internal _tokenOffset;\nuint256 internal _linkFee;\nbytes32 internal _linkKeyHash;\nstring internal _baseTokenURI;\nstring internal _unrevealedTokenURI;\nstring internal _specialEditionsURI;\nmapping(uint256 => bool) internal _specialEditionRevealedMapping;\nbool public revealed;\nbool public randomOffsetGenerated;\nbool internal _someSpecialEditionRevealed;\n","contract":"SpeakerHeads","time":0},{"type":"external-function ","before":"function setUnrevealedTokenURI(string memory newURI)\n        public\n        onlyOwner\n        isNotRevealed\n    {\n        _unrevealedTokenURI = newURI;\n    }","after":"function setUnrevealedTokenURI(string calldata newURI)\n        public\n        onlyOwner\n        isNotRevealed\n    {\n        _unrevealedTokenURI = newURI;\n    }","contract":"SpeakerHeads","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _newBaseURI)\n        public\n        onlyOwner\n        isNotRevealed\n    {\n        _baseTokenURI = _newBaseURI;\n    }","after":"function setBaseURI(string calldata _newBaseURI)\n        public\n        onlyOwner\n        isNotRevealed\n    {\n        _baseTokenURI = _newBaseURI;\n    }","contract":"SpeakerHeads","time":0},{"type":"external-function ","before":"function setSpecialEditionsURI(string memory _newSpecialEditionURI)\n        public\n        onlyOwner\n    {\n        require(\n            _someSpecialEditionRevealed == false,\n            \"At least one SE already revealed\"\n        );\n        _specialEditionsURI = _newSpecialEditionURI;\n    }","after":"function setSpecialEditionsURI(string calldata _newSpecialEditionURI)\n        public\n        onlyOwner\n    {\n        require(\n            _someSpecialEditionRevealed == false,\n            \"At least one SE already revealed\"\n        );\n        _specialEditionsURI = _newSpecialEditionURI;\n    }","contract":"SpeakerHeads","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory _provenanceHash)\n        public\n        onlyOwner\n        isNotRevealed\n    {\n        require(\n            bytes(provenanceHash).length == 0,\n            \"Provenance hash already set\"\n        );\n        provenanceHash = _provenanceHash;\n    }","after":"function setProvenanceHash(string calldata _provenanceHash)\n        public\n        onlyOwner\n        isNotRevealed\n    {\n        require(\n            bytes(provenanceHash).length == 0,\n            \"Provenance hash already set\"\n        );\n        provenanceHash = _provenanceHash;\n    }","contract":"SpeakerHeads","time":0},{"type":"immutable-restrict-modification ","before":"uint256 internal _linkFee;","after":"uint256 internal immutable _linkFee;","contract":"SpeakerHeads","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 internal _linkKeyHash;","after":"bytes32 internal immutable _linkKeyHash;","contract":"SpeakerHeads","time":0},{"type":"immutable-restrict-modification ","before":"address internal _teamAddress;","after":"address internal immutable _teamAddress;","contract":"SpeakerHeads","time":0}]}