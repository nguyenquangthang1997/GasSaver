{"time":188,"results":[{"type":"external-function ","before":"function addToWhitelist(address[] memory _addresses) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            whitelist[_addresses[i]] = true;\n        }\n    }","after":"function addToWhitelist(address[] calldata _addresses) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            whitelist[_addresses[i]] = true;\n        }\n    }","contract":"GameObjectEthMinter","time":0},{"type":"external-function ","before":"function addWhitelistMultiple(\n        address[] memory _addresses,\n        uint256[] memory multiples\n    ) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            whitelistMultiples[_addresses[i]] = multiples[i];\n        }\n    }","after":"function addWhitelistMultiple(\n        address[] calldata _addresses,\n        uint256[] calldata multiples\n    ) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            whitelistMultiples[_addresses[i]] = multiples[i];\n        }\n    }","contract":"GameObjectEthMinter","time":0},{"type":"external-function ","before":"function removeFromWhitelist(address[] memory _addresses) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            address addr = _addresses[i];\n            whitelist[addr] = false;\n        }\n    }","after":"function removeFromWhitelist(address[] calldata _addresses) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            address addr = _addresses[i];\n            whitelist[addr] = false;\n        }\n    }","contract":"GameObjectEthMinter","time":0},{"type":"immutable-restrict-modification ","before":"uint256 whitelistLandAmount;","after":"uint256 immutable whitelistLandAmount;","contract":"GameObjectEthMinter","time":0}]}