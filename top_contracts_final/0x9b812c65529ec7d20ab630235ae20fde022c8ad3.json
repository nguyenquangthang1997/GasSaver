{"time":97,"results":[{"type":"external-function ","before":"   function claim(uint256 amount, bytes memory signature) public {\n        uint256 total = totalSupply() + amount;\n        require(total <= MAX_SUPPLY, \"CybeeDAO: Exceed max supply\");\n\n        bytes32 digest = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    CLAIM_CALL_HASH_TYPE,\n                    msg.sender,\n                    amount,\n                    _nonces[msg.sender]\n                )\n            )\n        );\n        require(\n            ECDSA.recover(digest, signature) == cSigner,\n            \"CybeeDAO: Invalid signature\"\n        );\n\n        uint256 userNonce = _nonces[msg.sender];\n        _nonces[msg.sender] = userNonce + 1;\n\n        _mint(msg.sender, amount);\n        emit Claimed(msg.sender, amount, userNonce);\n  ","after":"   function claim(uint256 amount, bytes calldata signature) public {\n        uint256 total = totalSupply() + amount;\n        require(total <= MAX_SUPPLY, \"CybeeDAO: Exceed max supply\");\n\n        bytes32 digest = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    CLAIM_CALL_HASH_TYPE,\n                    msg.sender,\n                    amount,\n                    _nonces[msg.sender]\n                )\n            )\n        );\n        require(\n            ECDSA.recover(digest, signature) == cSigner,\n            \"CybeeDAO: Invalid signature\"\n        );\n\n        uint256 userNonce = _nonces[msg.sender];\n        _nonces[msg.sender] = userNonce + 1;\n\n        _mint(msg.sender, amount);\n        emit Claimed(msg.sender, amount, userNonce);\n  ","contract":"CybeeDAO","time":0},{"type":"constant-restrict-modification  ","before":"   uint256 public maxMintCap =","after":"   uint256 public constant maxMintCap =","contract":"CybeeDAO","time":0}]}