{"time":261,"results":[{"type":"struct-data-arrangement ","before":"\naddress creatorAddress\nstring mode\nstring style\nuint8 var1\nuint8 var2\nbool blackBackground\nbool displayAddress\nuint256 iteration","after":"string mode\nstring style\nuint256 iteration\naddress creatorAddress\nuint8 var1\nuint8 var2\nbool blackBackground\nbool displayAddress\n","contract":"StudioUno","time":0},{"type":"external-function ","before":"function publicMint(string memory mode, string memory style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused whenPublicMintingNotPaused {\n        require(msg.value >= publicPrice, \"S1: wrong price\");\n        require(supplyLeft > 0, \"S1: sold out\");\n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) ) , \"S1: wrong style\");\n        \n        supplyLeft--;\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);                        \n    }","after":"function publicMint(string calldata mode, string calldata style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused whenPublicMintingNotPaused {\n        require(msg.value >= publicPrice, \"S1: wrong price\");\n        require(supplyLeft > 0, \"S1: sold out\");\n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) ) , \"S1: wrong style\");\n        \n        supplyLeft--;\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);                        \n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function cryptoArteEarlyCollectorMint(bytes memory signature, string memory mode, string memory style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused {\n        require(isWhitelistedAsCryptoArteEarlyCollector(signature), \"S1: not whitelisted\");\n               \n        if (hasMinted[msg.sender] == false) {\n            require(msg.value >= 0, \"S1: not free\");\n        }\n        else {\n            require(msg.value >= earlyCollectorPrice, \"S1: wrong price\");\n        }\n                        \n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"4\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"5\")) ) , \"S1: wrong style\");\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);                                    \n    }","after":"function cryptoArteEarlyCollectorMint(bytes calldata signature, string calldata mode, string calldata style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused {\n        require(isWhitelistedAsCryptoArteEarlyCollector(signature), \"S1: not whitelisted\");\n               \n        if (hasMinted[msg.sender] == false) {\n            require(msg.value >= 0, \"S1: not free\");\n        }\n        else {\n            require(msg.value >= earlyCollectorPrice, \"S1: wrong price\");\n        }\n                        \n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"4\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"5\")) ) , \"S1: wrong style\");\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);                                    \n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function cryptoArteHolderMint(bytes memory signature, string memory mode, string memory style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused {\n        require(isWhitelistedAsCryptoArteHolder(signature), \"S1: not whitelisted\");\n        require(msg.value >= holderPrice, \"S1: wrong price\");\n\n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong style\");\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);                                         \n    }","after":"function cryptoArteHolderMint(bytes calldata signature, string calldata mode, string calldata style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused {\n        require(isWhitelistedAsCryptoArteHolder(signature), \"S1: not whitelisted\");\n        require(msg.value >= holderPrice, \"S1: wrong price\");\n\n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong style\");\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);                                         \n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function cryptoArtePrimeHolderMint(bytes memory signature, string memory mode, string memory style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused {\n        require(isWhitelistedAsCryptoArtePrimeHolder(signature), \"S1: not whitelisted\");\n        \n        if (hasMinted[msg.sender] == false) {\n            require(msg.value >= 0, \"S1: not free\");\n        }\n        else {\n            require(msg.value >= primeHolderPrice, \"S1: wrong price\");\n        }\n        \n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"4\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"6\")) ) , \"S1: wrong style\");\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);        \n    }","after":"function cryptoArtePrimeHolderMint(bytes calldata signature, string calldata mode, string calldata style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external payable nonReentrant() whenNotPaused {\n        require(isWhitelistedAsCryptoArtePrimeHolder(signature), \"S1: not whitelisted\");\n        \n        if (hasMinted[msg.sender] == false) {\n            require(msg.value >= 0, \"S1: not free\");\n        }\n        else {\n            require(msg.value >= primeHolderPrice, \"S1: wrong price\");\n        }\n        \n        require(( keccak256(abi.encode(mode)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(mode)) == keccak256(abi.encode(\"4\")) ) , \"S1: wrong mode\");\n        require(( keccak256(abi.encode(style)) == keccak256(abi.encode(\"1\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"2\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"3\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"4\")) || keccak256(abi.encode(style)) == keccak256(abi.encode(\"6\")) ) , \"S1: wrong style\");\n        _mintTo(msg.sender, msg.sender, mode, style, var1, var2, blackBackground, displayAddress);        \n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function freeMintTo(address _receiver, address creatorAddress, string memory mode, string memory style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external nonReentrant() onlyOwner {\n        _mintTo(_receiver, creatorAddress, mode, style, var1, var2, blackBackground, displayAddress);\n    }","after":"function freeMintTo(address _receiver, address creatorAddress, string calldata mode, string calldata style, uint8 var1, uint8 var2, bool blackBackground, bool displayAddress) external nonReentrant() onlyOwner {\n        _mintTo(_receiver, creatorAddress, mode, style, var1, var2, blackBackground, displayAddress);\n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        baseURI = _newBaseURI;\n    }","after":"function setBaseURI(string calldata _newBaseURI) external onlyOwner {\n        baseURI = _newBaseURI;\n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function setArtScriptJSONProperties(string memory _jsonProperties) external onlyOwner whenArtScriptNotLocked {\n        script.jsonProperties = _jsonProperties;        \n    }","after":"function setArtScriptJSONProperties(string calldata _jsonProperties) external onlyOwner whenArtScriptNotLocked {\n        script.jsonProperties = _jsonProperties;        \n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function setArtScript1(string memory _script1) external onlyOwner whenArtScriptNotLocked {            \n        script.script1 = _script1;\n    }","after":"function setArtScript1(string calldata _script1) external onlyOwner whenArtScriptNotLocked {            \n        script.script1 = _script1;\n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function setArtScript2(string memory _script2) external onlyOwner whenArtScriptNotLocked {              \n        script.script2 = _script2;\n    }","after":"function setArtScript2(string calldata _script2) external onlyOwner whenArtScriptNotLocked {              \n        script.script2 = _script2;\n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function setArtScript3(string memory _script3) external onlyOwner whenArtScriptNotLocked {        \n        script.script3 = _script3;\n    }","after":"function setArtScript3(string calldata _script3) external onlyOwner whenArtScriptNotLocked {        \n        script.script3 = _script3;\n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function setArtScript4(string memory _script4) external onlyOwner whenArtScriptNotLocked {        \n        script.script4 = _script4;\n    }","after":"function setArtScript4(string calldata _script4) external onlyOwner whenArtScriptNotLocked {        \n        script.script4 = _script4;\n    }","contract":"StudioUno","time":0},{"type":"external-function ","before":"function setArtScript5(string memory _script5) external onlyOwner whenArtScriptNotLocked {        \n        script.script5 = _script5;\n    }","after":"function setArtScript5(string calldata _script5) external onlyOwner whenArtScriptNotLocked {        \n        script.script5 = _script5;\n    }","contract":"StudioUno","time":0}]}