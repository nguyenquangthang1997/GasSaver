{"time":145,"results":[{"type":"state-data-arrangement ","before":"\nstring public _baseTokenURI;\nuint256 public _reserved = 150;\nuint256 public _maxChampPerWallet = 2;\nuint256 public _totalToBeMinted = 8888;\nuint256 public _price = 0.2 ether;\nbool public _paused = true;\nbytes32 public _merkleRoot;\naddress immutable _team;\nbool public _presale = true;\nuint256 public _presaleReserved = 0;","after":"string public _baseTokenURI;\nuint256 public _reserved = 150;\nuint256 public _maxChampPerWallet = 2;\nuint256 public _totalToBeMinted = 8888;\nuint256 public _price = 0.2 ether;\nbytes32 public _merkleRoot;\nuint256 public _presaleReserved = 0;\naddress immutable _team;\nbool public _paused = true;\nbool public _presale = true;\n","contract":"Champions","time":0},{"type":"external-function ","before":"function whitelistSummon(uint256 amount, bytes32[] memory proof)\n        external\n        payable\n    {\n        require(!_paused, \"Paused\");\n        require(_presale, \"!presale\");\n        require(verify(proof, _merkleRoot), \"!whitelist\");\n        require(\n            amount + balanceOf(msg.sender) <= _maxChampPerWallet && amount > 0,\n            \"!ChampsAmount\"\n        );\n        uint256 supply = totalSupply();\n        require(\n            amount <= _presaleReserved &&\n                supply + amount <= _totalToBeMinted - _reserved,\n            \">availableSupply\"\n        );\n\n        require(msg.value >= _price * amount, \"!EthAmount\");\n\n        for (uint256 i; i < amount; i++) {\n            _safeMint(msg.sender, supply + i);\n        }\n\n        _presaleReserved -= amount;\n    }","after":"function whitelistSummon(uint256 amount, bytes32[] calldata proof)\n        external\n        payable\n    {\n        require(!_paused, \"Paused\");\n        require(_presale, \"!presale\");\n        require(verify(proof, _merkleRoot), \"!whitelist\");\n        require(\n            amount + balanceOf(msg.sender) <= _maxChampPerWallet && amount > 0,\n            \"!ChampsAmount\"\n        );\n        uint256 supply = totalSupply();\n        require(\n            amount <= _presaleReserved &&\n                supply + amount <= _totalToBeMinted - _reserved,\n            \">availableSupply\"\n        );\n\n        require(msg.value >= _price * amount, \"!EthAmount\");\n\n        for (uint256 i; i < amount; i++) {\n            _safeMint(msg.sender, supply + i);\n        }\n\n        _presaleReserved -= amount;\n    }","contract":"Champions","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public _totalToBeMinted = 8888;","after":"uint256 public immutable _totalToBeMinted = 8888;","contract":"Champions","time":0}]}