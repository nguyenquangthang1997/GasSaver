{"time":174,"results":[{"type":"external-function ","before":"function setContractURI(string memory baseContractURI_) public onlyOwner {\n        _baseContractURI = baseContractURI_;\n    }","after":"function setContractURI(string calldata baseContractURI_) public onlyOwner {\n        _baseContractURI = baseContractURI_;\n    }","contract":"TheOtherAvatars","time":0},{"type":"external-function ","before":"function artistMint(address[] memory artists, uint256[] memory tokens) public lock onlyOwner {\n        for (uint i; i < artists.length; i++) {\n            uint256 tokenId = tokens[i];\n            require(tokenId > 0 && tokenId <= artistTokensCount, \"tokenId does not belong to artists\");\n            address artist = artists[i];\n            _safeMint(artist, tokenId);\n        }\n    }","after":"function artistMint(address[] calldata artists, uint256[] calldata tokens) public lock onlyOwner {\n        for (uint i; i < artists.length; i++) {\n            uint256 tokenId = tokens[i];\n            require(tokenId > 0 && tokenId <= artistTokensCount, \"tokenId does not belong to artists\");\n            address artist = artists[i];\n            _safeMint(artist, tokenId);\n        }\n    }","contract":"TheOtherAvatars","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) public onlyOwner {\n        _baseTokenURI = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) public onlyOwner {\n        _baseTokenURI = baseURI_;\n    }","contract":"TheOtherAvatars","time":0},{"type":"external-function ","before":"   function pushArtists(address[] memory artists, uint256[] memory indexes) public onlyOwner {\n        require(artists.length == indexes.length);\n        \n        for (uint i; i < artists.length; i++) {\n            uint256 index = indexes[i];\n            address artist = artists[i];\n            require(index > 0, \"First index is reserved\");\n            _artistAtIndex[index] = artist;\n        }\n  ","after":"   function pushArtists(address[] calldata artists, uint256[] calldata indexes) public onlyOwner {\n        require(artists.length == indexes.length);\n        \n        for (uint i; i < artists.length; i++) {\n            uint256 index = indexes[i];\n            address artist = artists[i];\n            require(index > 0, \"First index is reserved\");\n            _artistAtIndex[index] = artist;\n        }\n  ","contract":"TheOtherAvatars","time":0},{"type":"external-function ","before":"   function pushRoyaltyTokenInfo(uint256[] memory tokenRows, uint256[] memory indexes) public onlyOwner {\n        require(tokenRows.length == indexes.length);\n\n        for (uint i; i < tokenRows.length; i++) {\n            uint256 index = indexes[i];\n            uint256 tokenRow = tokenRows[i];\n            _tokenArtists[index] = tokenRow;\n        }\n  ","after":"   function pushRoyaltyTokenInfo(uint256[] calldata tokenRows, uint256[] calldata indexes) public onlyOwner {\n        require(tokenRows.length == indexes.length);\n\n        for (uint i; i < tokenRows.length; i++) {\n            uint256 index = indexes[i];\n            uint256 tokenRow = tokenRows[i];\n            _tokenArtists[index] = tokenRow;\n        }\n  ","contract":"TheOtherAvatars","time":1}]}