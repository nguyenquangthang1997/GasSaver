{"time":167,"results":[{"type":"external-function ","before":"function mint(uint256 salt, bytes memory sig) public {\n        require(_verify(_hash(msg.sender, salt), sig), \"Invalid token\");\n        require(!hasMinted[msg.sender], \"Already minted\");\n\n        uint256 tokenId = totalSupply() + 1;\n        require(tokenId <= MAX_SUPPLY, \"Max supply exceeded\");\n        _safeMint(msg.sender, tokenId);\n        _tokenIds.increment();\n\n        hasMinted[msg.sender] = true;\n    }","after":"function mint(uint256 salt, bytes calldata sig) public {\n        require(_verify(_hash(msg.sender, salt), sig), \"Invalid token\");\n        require(!hasMinted[msg.sender], \"Already minted\");\n\n        uint256 tokenId = totalSupply() + 1;\n        require(tokenId <= MAX_SUPPLY, \"Max supply exceeded\");\n        _safeMint(msg.sender, tokenId);\n        _tokenIds.increment();\n\n        hasMinted[msg.sender] = true;\n    }","contract":"NFT","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        _baseTokenURI = _newBaseURI;\n    }","after":"function setBaseURI(string calldata _newBaseURI) public onlyOwner {\n        _baseTokenURI = _newBaseURI;\n    }","contract":"NFT","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_SUPPLY = 2048;","after":"uint256 public constant MAX_SUPPLY = 2048;","contract":"NFT","time":1}]}