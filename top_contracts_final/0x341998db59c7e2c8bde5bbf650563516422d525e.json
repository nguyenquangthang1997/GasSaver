{"time":133,"results":[{"type":"de-morgan-condition ","before":"otal reflections\");\n      ","after":"!(otal reflections\");\n      )","loc":{"start":{"line":336,"column":20},"end":{"line":336,"column":45}},"contract":"DINJA","time":0},{"type":"external-function ","before":"tion increaseMaxWallet() external onlyOwner() {\n        //Max wallet increased to 2% of the supply if at all it is ever required\n        _maxWallet = 20000000000 * 10**9;\n    }\n\n    function setSwapThresholdAmount(uint256 SwapThresholdAmount) external onlyOwner() {\n        require(SwapThresholdAmount > 1000000000, \"Swap Threshold Amount cannot be less than 1 Billion\");\n        numTokensSellToAddToLiquidity = SwapThresholdAmount * 1","after":"tion increaseMaxWallet() external onlyOwner() {\n        //Max wallet increased to 2% of the supply if at all it is ever required\n        _maxWallet = 20000000000 * 10**9;\n    }\n\n    function setSwapThresholdAmount(uint256 SwapThresholdAmount) external onlyOwner() {\n        require(SwapThresholdAmount > 1000000000, \"Swap Threshold Amount cannot be less than 1 Billion\");\n        numTokensSellToAddToLiquidity = SwapThresholdAmount * 1","contract":"DINJA","time":0},{"type":"immutable-restrict-modification ","before":"H(\n        address token,\n        ui","after":"H(\n        address token,\n        ui","contract":"DINJA","time":0},{"type":"constant-restrict-modification  ","before":" Context, IERC20, Ownable {\n    usin","after":" Context, IERC20, Ownable {\n    usin","contract":"DINJA","time":0},{"type":"constant-restrict-modification  ","before":"ces;\n    mapping (address => bool) privat","after":"ces;\n    mapping (address => bool) privat","contract":"DINJA","time":0}]}