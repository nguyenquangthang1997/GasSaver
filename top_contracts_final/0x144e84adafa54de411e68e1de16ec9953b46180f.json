{"time":162,"results":[{"type":"state-data-arrangement ","before":"\naddress passwordSigner = 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266;\nuint256 public maxSupply = 2000;\nuint16 public reserved = 60;\nbool public whitelistSale = false;\nbool public sale = false;\nbool public revealed = false;\nstring unrevealedUri = \"ipfs://bafybeihdr2tmpjnnwe6cqksiudiztb7lyj3ofjbkgr5d4vwkqodvpmszue\";\nmapping (address => bool) public alreadyMinted;","after":"uint256 public maxSupply = 2000;\nstring unrevealedUri = \"ipfs://bafybeihdr2tmpjnnwe6cqksiudiztb7lyj3ofjbkgr5d4vwkqodvpmszue\";\nmapping (address => bool) public alreadyMinted;\naddress passwordSigner = 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266;\nuint16 public reserved = 60;\nbool public whitelistSale = false;\nbool public sale = false;\nbool public revealed = false;\n","contract":"Shiitake","time":0},{"type":"external-function ","before":"function mint(uint256 tokenAmt, bytes memory signature) external {\n        require(whitelistSale ? isWhitelisted(msg.sender, signature) : sale, \"You were not added to the whitelist. Please contact a mod if you think this was a mistake.\");\n        \n        require(!alreadyMinted[msg.sender], \"You have already minted Shiitakes.\");\n        \n        require(tokenAmt <= 2, \"Max per transaction is 2\");\n        \n        require(totalSupply() + tokenAmt <= maxSupply - reserved, \"Would exceed max supply\");\n        \n        for(uint256 i = 0; i < tokenAmt; i++) {\n            uint256 mintIndex = totalSupply () + 1;\n            _safeMint(msg.sender, mintIndex);\n        }\n        \n        alreadyMinted[msg.sender] = true;\n    }","after":"function mint(uint256 tokenAmt, bytes calldata signature) external {\n        require(whitelistSale ? isWhitelisted(msg.sender, signature) : sale, \"You were not added to the whitelist. Please contact a mod if you think this was a mistake.\");\n        \n        require(!alreadyMinted[msg.sender], \"You have already minted Shiitakes.\");\n        \n        require(tokenAmt <= 2, \"Max per transaction is 2\");\n        \n        require(totalSupply() + tokenAmt <= maxSupply - reserved, \"Would exceed max supply\");\n        \n        for(uint256 i = 0; i < tokenAmt; i++) {\n            uint256 mintIndex = totalSupply () + 1;\n            _safeMint(msg.sender, mintIndex);\n        }\n        \n        alreadyMinted[msg.sender] = true;\n    }","contract":"Shiitake","time":0},{"type":"constant-restrict-modification  ","before":"address passwordSigner = 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266;","after":"address constant passwordSigner = 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266;","contract":"Shiitake","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 2000;","after":"uint256 public constant maxSupply = 2000;","contract":"Shiitake","time":1},{"type":"constant-restrict-modification  ","before":"string unrevealedUri = \"ipfs://bafybeihdr2tmpjnnwe6cqksiudiztb7lyj3ofjbkgr5d4vwkqodvpmszue\";","after":"string constant unrevealedUri = \"ipfs://bafybeihdr2tmpjnnwe6cqksiudiztb7lyj3ofjbkgr5d4vwkqodvpmszue\";","contract":"Shiitake","time":1}]}