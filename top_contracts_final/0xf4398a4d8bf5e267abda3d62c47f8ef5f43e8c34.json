{"time":191,"results":[{"type":"external-function ","before":"function mint(\n        string memory tokenURI_,\n        address royaltiesRecipient,\n        uint256 royaltiesAmount\n    ) public override onlyMinter(msg.sender) returns (uint256) {\n        return\n            mintTo(msg.sender, tokenURI_, royaltiesRecipient, royaltiesAmount);\n    }","after":"function mint(\n        string calldata tokenURI_,\n        address royaltiesRecipient,\n        uint256 royaltiesAmount\n    ) public override onlyMinter(msg.sender) returns (uint256) {\n        return\n            mintTo(msg.sender, tokenURI_, royaltiesRecipient, royaltiesAmount);\n    }","contract":"VerticalCrypto","time":0},{"type":"external-function ","before":"function mintBatch(\n        string[] memory tokenURIs_,\n        address[] memory feeRecipients,\n        uint256[] memory feeAmounts\n    ) public override onlyMinter(msg.sender) returns (uint256[] memory) {\n        return mintBatchTo(msg.sender, tokenURIs_, feeRecipients, feeAmounts);\n    }","after":"function mintBatch(\n        string[] calldata tokenURIs_,\n        address[] calldata feeRecipients,\n        uint256[] calldata feeAmounts\n    ) public override onlyMinter(msg.sender) returns (uint256[] memory) {\n        return mintBatchTo(msg.sender, tokenURIs_, feeRecipients, feeAmounts);\n    }","contract":"VerticalCrypto","time":0},{"type":"external-function ","before":"function addMinters(address[] memory newMinters) public onlyOwner {\n        _addMinters(newMinters);\n    }","after":"function addMinters(address[] calldata newMinters) public onlyOwner {\n        _addMinters(newMinters);\n    }","contract":"VerticalCrypto","time":0},{"type":"external-function ","before":"function removeMinters(address[] memory removedMinters) public onlyOwner {\n        for (uint256 i; i < removedMinters.length; i++) {\n            _removeMinter(removedMinters[i]);\n        }\n    }","after":"function removeMinters(address[] calldata removedMinters) public onlyOwner {\n        for (uint256 i; i < removedMinters.length; i++) {\n            _removeMinter(removedMinters[i]);\n        }\n    }","contract":"VerticalCrypto","time":0},{"type":"external-function ","before":"function setContractURI(string memory contractURI_) external onlyOwner {\n        _setContractURI(contractURI_);\n    }","after":"function setContractURI(string calldata contractURI_) external onlyOwner {\n        _setContractURI(contractURI_);\n    }","contract":"VerticalCrypto","time":0}]}