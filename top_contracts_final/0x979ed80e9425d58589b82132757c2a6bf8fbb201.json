{"time":95,"results":[{"type":"external-function ","before":"function createNode(string memory nodeName, uint256 count) external {\n\n        require(count > 0, \"Count should be not 0\");\n        address account = msg.sender;\n        uint256 ownerCount = nodeOwners[account];\n        require(isNameAvailable(account, nodeName), \"CREATE NODE: Name not available\");\n        require(ownerCount + count <= maxNodes, \"Count Limited\");\n        require(ownerCount == 0 || _nodesOfUser[account][ownerCount-1].creationTime < block.timestamp, \"You are creating many nodes in short time. Please try again later.\");\n\n        uint256 price = nodePrice * count;\n\n        SINU.transferFrom(account, address(this), price);\n        SINU.transfer(burnAddress, price*burnFee/feeDenomiator);\n        SINU.transfer(teamWallet, price*teamFee/feeDenomiator);\n\n        for (uint256 i = 0; i < count; i ++) {\n            uint256 time = block.timestamp + i;\n            _nodesOfUser[account].push(\n                NodeEntity({\n                    name: nodeName,\n                    creationTime: time,\n                    lastClaimTime: time,\n                    feeTime: time + feeDuration,\n                    dueTime: time + feeDuration + overDuration\n                })\n            );\n            nodeOwners[account]++;\n            totalNodesCreated++;\n        }\n    }","after":"function createNode(string calldata nodeName, uint256 count) external {\n\n        require(count > 0, \"Count should be not 0\");\n        address account = msg.sender;\n        uint256 ownerCount = nodeOwners[account];\n        require(isNameAvailable(account, nodeName), \"CREATE NODE: Name not available\");\n        require(ownerCount + count <= maxNodes, \"Count Limited\");\n        require(ownerCount == 0 || _nodesOfUser[account][ownerCount-1].creationTime < block.timestamp, \"You are creating many nodes in short time. Please try again later.\");\n\n        uint256 price = nodePrice * count;\n\n        SINU.transferFrom(account, address(this), price);\n        SINU.transfer(burnAddress, price*burnFee/feeDenomiator);\n        SINU.transfer(teamWallet, price*teamFee/feeDenomiator);\n\n        for (uint256 i = 0; i < count; i ++) {\n            uint256 time = block.timestamp + i;\n            _nodesOfUser[account].push(\n                NodeEntity({\n                    name: nodeName,\n                    creationTime: time,\n                    lastClaimTime: time,\n                    feeTime: time + feeDuration,\n                    dueTime: time + feeDuration + overDuration\n                })\n            );\n            nodeOwners[account]++;\n            totalNodesCreated++;\n        }\n    }","contract":"StrongInuNodePool","time":0},{"type":"constant-restrict-modification  ","before":"address public burnAddress = 0x000000000000000000000000000000000000dEaD;","after":"address public constant burnAddress = 0x000000000000000000000000000000000000dEaD;","contract":"StrongInuNodePool","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public feeDenomiator = 1000;","after":"uint256 public constant feeDenomiator = 1000;","contract":"StrongInuNodePool","time":0},{"type":"immutable-restrict-modification ","before":"address private _deployer;","after":"address private immutable _deployer;","contract":"StrongInuNodePool","time":0}]}