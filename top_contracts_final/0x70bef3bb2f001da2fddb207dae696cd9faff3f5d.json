{"time":120,"results":[{"type":"external-function ","before":"  function setWhitelist(address[] memory addresses_, bool value_) public onlyOwner {\n        for (uint i = 0; i < addresses_.length; i++) {\n            _isWhitelisted[addresses_[i]] = value_;\n        }\n   ","after":"  function setWhitelist(address[] calldata addresses_, bool value_) public onlyOwner {\n        for (uint i = 0; i < addresses_.length; i++) {\n            _isWhitelisted[addresses_[i]] = value_;\n        }\n   ","contract":"NinjaSquadToken","time":0},{"type":"immutable-restrict-modification ","before":"address _teamAddress;","after":"address immutable _teamAddress;","contract":"NinjaSquadToken","time":0},{"type":"immutable-restrict-modification ","before":"address _ecosystemAddress;","after":"address immutable _ecosystemAddress;","contract":"NinjaSquadToken","time":0},{"type":"immutable-restrict-modification ","before":"address _partnershipAddress;","after":"address immutable _partnershipAddress;","contract":"NinjaSquadToken","time":0},{"type":"constant-restrict-modification  ","before":"bytes32 private immutable _MINT_WITH_SIGNATURE_TYPEHASH =\n        keccak256(\"MintWithSignature(address to_,uint256 amount_,uint256 nonce_,uint256 deadline_)\");","after":"bytes32 private immutable constant _MINT_WITH_SIGNATURE_TYPEHASH =\n        keccak256(\"MintWithSignature(address to_,uint256 amount_,uint256 nonce_,uint256 deadline_)\");","contract":"NinjaSquadToken","time":0},{"type":"constant-restrict-modification  ","before":"\n    bytes32 private immutable _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadlin","after":"\n    bytes32 private immutable constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadlin","contract":"NinjaSquadToken","time":0}]}