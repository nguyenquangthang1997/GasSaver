{"time":195,"results":[{"type":"de-morgan-condition ","before":"!_isExcludedFromFee[from] && !_isExcludedFromFee[to]","after":"!(_isExcludedFromFee[from] && _isExcludedFromFee[to])","loc":{"start":{"line":1030,"column":12},"end":{"line":1030,"column":63}},"contract":"SAMURINU","time":0},{"type":"constant-restrict-modification  ","before":"bool public swapEnabled = true;","after":"bool public constant swapEnabled = true;","contract":"SAMURINU","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public minimumTokensBeforeSwap;","after":"uint256 public immutable minimumTokensBeforeSwap;","contract":"SAMURINU","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public maxTransactionAmount;","after":"uint256 public immutable maxTransactionAmount;","contract":"SAMURINU","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public maxWallet;","after":"uint256 public immutable maxWallet;","contract":"SAMURINU","time":1},{"type":"immutable-restrict-modification ","before":"address public uniswapV2Pair;","after":"address public immutable uniswapV2Pair;","contract":"SAMURINU","time":1}]}