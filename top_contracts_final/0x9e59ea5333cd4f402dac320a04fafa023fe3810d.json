{"time":453,"results":[{"type":"constant-restrict-modification  ","before":"string public override versionRecipient = \"2.2.0+opengsn.batched.irelayrecipient\";","after":"string public override constant versionRecipient = \"2.2.0+opengsn.batched.irelayrecipient\";","contract":"BatchForwarder","time":0},{"type":"immutable-restrict-modification ","before":"address public trustedForwarder;","after":"address public immutable trustedForwarder;","contract":"BatchForwarder","time":0},{"type":"immutable-restrict-modification ","before":"   address public trustedForward","after":"   address public trustedForward","contract":"BatchForwarder","time":0},{"type":"constant-restrict-modification  ","before":"string public override versionPenalizer = \"2.2.0+opengsn.penalizer.ipenalizer\";","after":"string public override constant versionPenalizer = \"2.2.0+opengsn.penalizer.ipenalizer\";","contract":"Penalizer","time":0},{"type":"struct-data-arrangement ","before":"\nuint256 balanceBefore\nbytes32 preReturnValue\nbool relayedCallSuccess\nbytes relayedCallReturnValue\nbytes recipientContext\nbytes data\nbool rejectOnRecipientRevert","after":"uint256 balanceBefore\nbytes32 preReturnValue\nbytes relayedCallReturnValue\nbytes recipientContext\nbytes data\nbool relayedCallSuccess\nbool rejectOnRecipientRevert\n","contract":"RelayHub","time":0},{"type":"constant-restrict-modification  ","before":"string public override versionHub = \"2.2.0+opengsn.hub.irelayhub\";","after":"string public override constant versionHub = \"2.2.0+opengsn.hub.irelayhub\";","contract":"RelayHub","time":0},{"type":"constant-restrict-modification  ","before":"string public override versionSM = \"2.2.0+opengsn.stakemanager.istakemanager\";","after":"string public override constant versionSM = \"2.2.0+opengsn.stakemanager.istakemanager\";","contract":"StakeManager","time":0},{"type":"external-function ","before":"function callExecute(Forwarder forwarder, Forwarder.ForwardRequest memory req,\n        bytes32 domainSeparator, bytes32 requestTypeHash, bytes memory suffixData, bytes memory sig) public payable {\n        (bool success, bytes memory error) = forwarder.execute{value:msg.value}(req, domainSeparator, requestTypeHash, suffixData, sig);\n        emit Result(success, success ? \"\" : this.decodeErrorMessage(error));\n    }","after":"function callExecute(Forwarder forwarder, Forwarder.ForwardRequest calldata req,\n        bytes32 domainSeparator, bytes32 requestTypeHash, bytes calldata suffixData, bytes calldata sig) public payable {\n        (bool success, bytes memory error) = forwarder.execute{value:msg.value}(req, domainSeparator, requestTypeHash, suffixData, sig);\n        emit Result(success, success ? \"\" : this.decodeErrorMessage(error));\n    }","contract":"TestForwarder","time":0},{"type":"external-function ","before":"function emitMessage(string memory message) public {\n\n        // solhint-disable-next-line avoid-tx-origin\n        emit TestForwarderMessage(message, _msgData(), _msgSender(), msg.sender, tx.origin);\n    }","after":"function emitMessage(string calldata message) public {\n\n        // solhint-disable-next-line avoid-tx-origin\n        emit TestForwarderMessage(message, _msgData(), _msgSender(), msg.sender, tx.origin);\n    }","contract":"TestForwarderTarget","time":0},{"type":"constant-restrict-modification  ","before":"string public override versionRecipient = \"2.2.0+opengsn.test.recipient\";","after":"string public override constant versionRecipient = \"2.2.0+opengsn.test.recipient\";","contract":"TestForwarderTarget","time":0},{"type":"immutable-restrict-modification ","before":"address public trustedForwarder;","after":"address public immutable trustedForwarder;","contract":"TestForwarderTarget","time":0},{"type":"immutable-restrict-modification ","before":"   address public trustedForward","after":"   address public trustedForward","contract":"TestForwarderTarget","time":0},{"type":"constant-restrict-modification  ","before":"string public override versionRecipient = \"2.2.0+opengsn.payablewithemit.irelayrecipient\";","after":"string public override constant versionRecipient = \"2.2.0+opengsn.payablewithemit.irelayrecipient\";","contract":"PayableWithEmit","time":0},{"type":"external-function ","before":"function setExpectedApprovalData(bytes memory val) public {\n        expectedApprovalData = val;\n    }","after":"function setExpectedApprovalData(bytes calldata val) public {\n        expectedApprovalData = val;\n    }","contract":"TestPaymasterPreconfiguredApproval","time":1},{"type":"constant-restrict-modification  ","before":"string public override versionPaymaster = \"2.2.0+opengsn.test-vgl.ipaymaster\";","after":"string public override constant versionPaymaster = \"2.2.0+opengsn.test-vgl.ipaymaster\";","contract":"TestPaymasterVariableGasLimits","time":0},{"type":"external-function ","before":"function emitMessage(string memory message) public payable returns (string memory) {\n        uint256 gasLeft = gasleft();\n        if (paymaster != address(0)) {\n            withdrawAllBalance();\n        }\n\n        emit SampleRecipientEmitted(message, _msgSender(), msg.sender, tx.origin, msg.value, gasLeft, address(this).balance);\n        return \"emitMessage return value\";\n    }","after":"function emitMessage(string calldata message) public payable returns (string memory) {\n        uint256 gasLeft = gasleft();\n        if (paymaster != address(0)) {\n            withdrawAllBalance();\n        }\n\n        emit SampleRecipientEmitted(message, _msgSender(), msg.sender, tx.origin, msg.value, gasLeft, address(this).balance);\n        return \"emitMessage return value\";\n    }","contract":"TestRecipient","time":0},{"type":"constant-restrict-modification  ","before":"string public override versionRecipient = \"2.2.0+opengsn.test.irelayrecipient\";","after":"string public override constant versionRecipient = \"2.2.0+opengsn.test.irelayrecipient\";","contract":"TestRecipient","time":0},{"type":"external-function ","before":"function relayCall(\n        IRelayHub hub,\n        uint maxAcceptanceBudget,\n        GsnTypes.RelayRequest memory relayRequest,\n        bytes memory signature,\n        uint externalGasLimit)\n    public\n    {\n        hub.relayCall{gas:externalGasLimit}(maxAcceptanceBudget, relayRequest, signature, \"\", externalGasLimit);\n    }","after":"function relayCall(\n        IRelayHub hub,\n        uint maxAcceptanceBudget,\n        GsnTypes.RelayRequest calldata relayRequest,\n        bytes calldata signature,\n        uint externalGasLimit)\n    public\n    {\n        hub.relayCall{gas:externalGasLimit}(maxAcceptanceBudget, relayRequest, signature, \"\", externalGasLimit);\n    }","contract":"TestRelayWorkerContract","time":0}]}