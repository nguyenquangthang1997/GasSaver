{"time":52,"results":[{"type":"external-function ","before":"function claimWeek(\n        address _liquidityProvider,\n        uint _week,\n        uint _claimedBalance,\n        bytes32[] memory _merkleProof\n    )\n        public\n    {\n        require(!claimed[_week][_liquidityProvider]);\n        require(verifyClaim(_liquidityProvider, _week, _claimedBalance, _merkleProof), 'Incorrect merkle proof');\n\n        claimed[_week][_liquidityProvider] = true;\n        disburse(_liquidityProvider, _claimedBalance);\n    }","after":"function claimWeek(\n        address _liquidityProvider,\n        uint _week,\n        uint _claimedBalance,\n        bytes32[] calldata _merkleProof\n    )\n        public\n    {\n        require(!claimed[_week][_liquidityProvider]);\n        require(verifyClaim(_liquidityProvider, _week, _claimedBalance, _merkleProof), 'Incorrect merkle proof');\n\n        claimed[_week][_liquidityProvider] = true;\n        disburse(_liquidityProvider, _claimedBalance);\n    }","contract":"MerkleRedeem","time":0},{"type":"external-function ","before":"function claimWeeks(\n        address _liquidityProvider,\n        Claim[] memory claims\n    )\n        public\n    {\n        uint totalBalance = 0;\n        Claim memory claim ;\n        for(uint i = 0; i < claims.length; i++) {\n            claim = claims[i];\n\n            require(!claimed[claim.week][_liquidityProvider]);\n            require(verifyClaim(_liquidityProvider, claim.week, claim.balance, claim.merkleProof), 'Incorrect merkle proof');\n\n            totalBalance += claim.balance;\n            claimed[claim.week][_liquidityProvider] = true;\n        }\n        disburse(_liquidityProvider, totalBalance);\n    }","after":"function claimWeeks(\n        address _liquidityProvider,\n        Claim[] calldata claims\n    )\n        public\n    {\n        uint totalBalance = 0;\n        Claim memory claim ;\n        for(uint i = 0; i < claims.length; i++) {\n            claim = claims[i];\n\n            require(!claimed[claim.week][_liquidityProvider]);\n            require(verifyClaim(_liquidityProvider, claim.week, claim.balance, claim.merkleProof), 'Incorrect merkle proof');\n\n            totalBalance += claim.balance;\n            claimed[claim.week][_liquidityProvider] = true;\n        }\n        disburse(_liquidityProvider, totalBalance);\n    }","contract":"MerkleRedeem","time":0}]}