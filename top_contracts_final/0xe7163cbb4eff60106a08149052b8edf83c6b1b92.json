{"time":219,"results":[{"type":"loop-duplication","before":"\nstart line 1813 column 8, end line 1819 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            require(\n                tokenIds[i] > 0 && tokenIds[i] <= maxTokenId,\n                \"NilPass:TOKEN_NOT_WITHIN_RANGE\"\n            );\n            require(!_exists(tokenIds[i]), \"NilPass:TOKEN_ALREADY_EXISTS\");\n        }\nstart line 1821 column 8, end line 1823 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            _safeMint(recipient, tokenIds[i]);\n        }","after":"// merge loop\n\nstart line 1813 column 8, end line 1819 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            require(\n                tokenIds[i] > 0 && tokenIds[i] <= maxTokenId,\n                \"NilPass:TOKEN_NOT_WITHIN_RANGE\"\n            );\n            require(!_exists(tokenIds[i]), \"NilPass:TOKEN_ALREADY_EXISTS\");\n        }\nstart line 1821 column 8, end line 1823 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            _safeMint(recipient, tokenIds[i]);\n        }","contract":"NilPassCore","time":0},{"type":"loop-duplication","before":"\nstart line 2232 column 8, end line 2234 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            require(!nUsed[tokenIds[i]], \"Perseverance:N_ALREADY_USED\");\n        }\nstart line 2236 column 8, end line 2242 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            uint256 tokenId = _tokenIds.current();\n            _safeMint(recipient, tokenId);\n            _tokenIds.increment();\n\n            nUsed[tokenIds[i]] = true;\n        }","after":"// merge loop\n\nstart line 2232 column 8, end line 2234 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            require(!nUsed[tokenIds[i]], \"Perseverance:N_ALREADY_USED\");\n        }\nstart line 2236 column 8, end line 2242 column 8\nfor (uint256 i = 0; i < maxTokensToMint; i++) {\n            uint256 tokenId = _tokenIds.current();\n            _safeMint(recipient, tokenId);\n            _tokenIds.increment();\n\n            nUsed[tokenIds[i]] = true;\n        }","contract":"Perseverance","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _newBaseURI) public onlyDAO {\n        baseTokenURI = _newBaseURI;\n    }","after":"function setBaseURI(string calldata _newBaseURI) public onlyDAO {\n        baseTokenURI = _newBaseURI;\n    }","contract":"Perseverance","time":0},{"type":"constant-restrict-modification  ","before":"uint32 allowListSaleLaunchTime = 1635701400;","after":"uint32 constant allowListSaleLaunchTime = 1635701400;","contract":"Perseverance","time":1},{"type":"constant-restrict-modification  ","before":"uint32 preSaleLaunchTime = 1635703200;","after":"uint32 constant preSaleLaunchTime = 1635703200;","contract":"Perseverance","time":1},{"type":"constant-restrict-modification  ","before":"uint32 publicSaleLaunchTime = 1635710400;","after":"uint32 constant publicSaleLaunchTime = 1635710400;","contract":"Perseverance","time":1},{"type":"immutable-restrict-modification ","before":"uint256 price;","after":"uint256 immutable price;","contract":"Perseverance","time":1},{"type":"immutable-restrict-modification ","before":"address public masterMint;","after":"address public immutable masterMint;","contract":"Perseverance","time":1},{"type":"immutable-restrict-modification ","before":"uint128 maxTokenId;","after":"uint128 immutable maxTokenId;","contract":"Perseverance","time":1}]}