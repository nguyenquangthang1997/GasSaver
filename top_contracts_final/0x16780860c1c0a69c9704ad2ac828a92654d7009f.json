{"time":172,"results":[{"type":"external-function ","before":"function preMintGorilla(address[] memory recipients) external onlyOwnerOrTeam {\n\n        uint256 totalRecipients = recipients.length;\n        uint256 total = _totalSupply();\n\n        require(total + totalRecipients <= MAX_ELEMENTS, \"Max limit\");\n\n        require(\n            totalRecipients > 0,\n            \"Number of recipients must be greater than 0\"\n        );\n\n        require(\n            preMintedGorillas + totalRecipients <= gorillaReserveMax,\n            \"Exceeds max pre-mint Gorillas\"\n        );\n\n        for (uint256 i = 0; i < totalRecipients; i++) {\n            address to = recipients[i];\n            require(to != address(0), \"receiver can not be empty address\");\n            _mintAnElement(to);\n        }\n\n        preMintedGorillas += totalRecipients;\n    }","after":"function preMintGorilla(address[] calldata recipients) external onlyOwnerOrTeam {\n\n        uint256 totalRecipients = recipients.length;\n        uint256 total = _totalSupply();\n\n        require(total + totalRecipients <= MAX_ELEMENTS, \"Max limit\");\n\n        require(\n            totalRecipients > 0,\n            \"Number of recipients must be greater than 0\"\n        );\n\n        require(\n            preMintedGorillas + totalRecipients <= gorillaReserveMax,\n            \"Exceeds max pre-mint Gorillas\"\n        );\n\n        for (uint256 i = 0; i < totalRecipients; i++) {\n            address to = recipients[i];\n            require(to != address(0), \"receiver can not be empty address\");\n            _mintAnElement(to);\n        }\n\n        preMintedGorillas += totalRecipients;\n    }","contract":"GreatGenesisGorillas","time":0},{"type":"external-function ","before":"function addToWhitelistAmounts(address[] memory _listToAdd, uint256[] memory _amountPerAddress) public onlyOwner {\n        uint256 totalAddresses = _listToAdd.length;\n        uint256 totalAmounts = _amountPerAddress.length;\n\n        require(totalAddresses == totalAmounts, \"Amounts of entered items do not match\");\n\n        for (uint256 i = 0; i < totalAddresses; i++) {\n          whitelist[_listToAdd[i]] = _amountPerAddress[i];\n        }\n    }","after":"function addToWhitelistAmounts(address[] calldata _listToAdd, uint256[] calldata _amountPerAddress) public onlyOwner {\n        uint256 totalAddresses = _listToAdd.length;\n        uint256 totalAmounts = _amountPerAddress.length;\n\n        require(totalAddresses == totalAmounts, \"Amounts of entered items do not match\");\n\n        for (uint256 i = 0; i < totalAddresses; i++) {\n          whitelist[_listToAdd[i]] = _amountPerAddress[i];\n        }\n    }","contract":"GreatGenesisGorillas","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        GENESIS_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        GENESIS_PROVENANCE = provenanceHash;\n    }","contract":"GreatGenesisGorillas","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_ELEMENTS = 2000;","after":"uint256 public constant MAX_ELEMENTS = 2000;","contract":"GreatGenesisGorillas","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private presaleMaxPerMint = 5;","after":"uint256 private constant presaleMaxPerMint = 5;","contract":"GreatGenesisGorillas","time":1},{"type":"constant-restrict-modification  ","before":"uint public gorillaReserveMax = 21;","after":"uint public constant gorillaReserveMax = 21;","contract":"GreatGenesisGorillas","time":1}]}