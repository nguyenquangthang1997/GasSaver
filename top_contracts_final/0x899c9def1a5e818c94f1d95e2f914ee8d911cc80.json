{"time":166,"results":[{"type":"struct-data-arrangement ","before":"\nbool running\nbool collected\nbool refunding\nuint256 price\nuint256 balance\nuint16 backers\nuint256 hardcap\naddress payable owner\nuint8 percent\nmapping(address => uint8) lucky\nmapping(address => uint8) universal","after":"uint256 price\nuint256 balance\nuint256 hardcap\nmapping(address => uint8) lucky\nmapping(address => uint8) universal\naddress payable owner\nuint16 backers\nbool running\nbool collected\nbool refunding\nuint8 percent\n","contract":"Letsmint","time":1},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"Letsmint","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"Letsmint","time":0},{"type":"constant-restrict-modification  ","before":"string public name=\"Letsmint\";","after":"string public constant name=\"Letsmint\";","contract":"Letsmint","time":0},{"type":"constant-restrict-modification  ","before":"uint32 MAX_COLLECTIONS = 65535;","after":"uint32 constant MAX_COLLECTIONS = 65535;","contract":"Letsmint","time":0}]}