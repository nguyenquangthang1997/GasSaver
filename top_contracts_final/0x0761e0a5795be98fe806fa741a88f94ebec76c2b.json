{"time":60,"results":[{"type":"external-function ","before":"function setPubEncKey(string memory encKey) public {\n        pubEncKeys[msg.sender] = encKey;\n    }","after":"function setPubEncKey(string calldata encKey) public {\n        pubEncKeys[msg.sender] = encKey;\n    }","contract":"Messaging","time":0},{"type":"external-function ","before":"function sendMessage(\n        uint256 _thread_id,\n        string memory _uri,\n        address _receiver,\n        string memory _sender_key,\n        string memory _receiver_key,\n        bool encrypted\n    ) public {\n        if (_thread_id == 0) {\n            emit ThreadCreated(\n                _receiver,\n                msg.sender,\n                threadCount,\n                block.timestamp,\n                _sender_key,\n                _receiver_key,\n                encrypted\n            );\n\n            emit MessageSent(_receiver, _uri, block.timestamp, msg.sender, threadCount);\n\n            threadCount++;\n\n        } else {\n            emit MessageSent(_receiver, _uri, block.timestamp, msg.sender, _thread_id);\n        }\n    }","after":"function sendMessage(\n        uint256 _thread_id,\n        string calldata _uri,\n        address _receiver,\n        string calldata _sender_key,\n        string calldata _receiver_key,\n        bool encrypted\n    ) public {\n        if (_thread_id == 0) {\n            emit ThreadCreated(\n                _receiver,\n                msg.sender,\n                threadCount,\n                block.timestamp,\n                _sender_key,\n                _receiver_key,\n                encrypted\n            );\n\n            emit MessageSent(_receiver, _uri, block.timestamp, msg.sender, threadCount);\n\n            threadCount++;\n\n        } else {\n            emit MessageSent(_receiver, _uri, block.timestamp, msg.sender, _thread_id);\n        }\n    }","contract":"Messaging","time":0}]}