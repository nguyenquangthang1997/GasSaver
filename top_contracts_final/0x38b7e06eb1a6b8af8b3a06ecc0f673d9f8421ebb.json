{"time":154,"results":[{"type":"external-function ","before":"t();\n            _mint(receivers[i], OG_PASS_ID, 1 ,\"\");\n        }\n    }\n\n    function airdrop(address[] calldata receivers) external onlyOwner {\n        require(TOKENS_MINTED.current() + receivers.length <= MAX_TOKENS, \"EXCEED_MAX_TOKENS\");\n        for (uint256 i = 0; i < receivers.length; i++) {\n             TOKENS_MINTED.increment();\n            _mint(receivers[i], PASS_ID, 1 ,\"\");\n        }\n    }\n\n    function presale(bytes memory signature) external payable {\n        require(presaleLive, \"PRESALE_IS_NOT_ACT","after":"t();\n            _mint(receivers[i], OG_PASS_ID, 1 ,\"\");\n        }\n    }\n\n    function airdrop(address[] calldata receivers) external onlyOwner {\n        require(TOKENS_MINTED.current() + receivers.length <= MAX_TOKENS, \"EXCEED_MAX_TOKENS\");\n        for (uint256 i = 0; i < receivers.length; i++) {\n             TOKENS_MINTED.increment();\n            _mint(receivers[i], PASS_ID, 1 ,\"\");\n        }\n    }\n\n    function presale(bytes memory signature) external payable {\n        require(presaleLive, \"PRESALE_IS_NOT_ACT","contract":"VIP_8SIAN_GOLD_PASS","time":0},{"type":"external-function ","before":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","after":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","contract":"VIP_8SIAN_GOLD_PASS","time":0},{"type":"external-function ","before":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","after":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","contract":"VIP_8SIAN_GOLD_PASS","time":0},{"type":"constant-restrict-modification  ","before":"                \n*/\n\ncontract VIP_8SIAN_GOLD_PASS is ERC1155, Ownable  {\n   ","after":"                \n*/\n\ncontract VIP_8SIAN_GOLD_PASS is ERC1155, Ownable  {\n   ","contract":"VIP_8SIAN_GOLD_PASS","time":0}]}