{"time":133,"results":[{"type":"state-data-arrangement ","before":"\nbytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\nmapping (address => uint256) internal _balances;\nmapping (address => mapping (address => uint256)) internal _allowances;\nuint256 internal _totalSupply;\nstring internal _name;\nstring internal _symbol;\nuint8 internal _decimals;\nuint256 public marketingFee;\naddress public marketingAddress = 0x01F386bD553028D9C70c61BA038aCC0f24684081;\nmapping (address => bool) public isExcludedFromFee;\nmapping (address => bool) public isExcludedFromMaxTx;\nmapping(address => bool) public isBlackListed;\nuint256 public maxTransaction = 1000000000000000;\nbool public swapEnabled = false;\nuint256 public changesAllowed = 0;","after":"bytes32 constant private ERC20TOKEN_ERC1820_INTERFACE_ID = keccak256( \"ERC20Token\" );\nmapping (address => uint256) internal _balances;\nmapping (address => mapping (address => uint256)) internal _allowances;\nuint256 internal _totalSupply;\nstring internal _name;\nstring internal _symbol;\nuint256 public marketingFee;\nmapping (address => bool) public isExcludedFromFee;\nmapping (address => bool) public isExcludedFromMaxTx;\nmapping(address => bool) public isBlackListed;\nuint256 public maxTransaction = 1000000000000000;\nuint256 public changesAllowed = 0;\naddress public marketingAddress = 0x01F386bD553028D9C70c61BA038aCC0f24684081;\nuint8 internal _decimals;\nbool public swapEnabled = false;\n","contract":"ERC20","time":0},{"type":"external-function ","before":"function blackListBOTs(address[] memory _bot) public {\n        require(msg.sender == marketingAddress);\n        for(uint256 i=0; i<_bot.length; i++){\n            isBlackListed[_bot[i]] = true;\n        }\n    }","after":"function blackListBOTs(address[] calldata _bot) public {\n        require(msg.sender == marketingAddress);\n        for(uint256 i=0; i<_bot.length; i++){\n            isBlackListed[_bot[i]] = true;\n        }\n    }","contract":"LiquidSwap","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public DOMAIN_SEPARATOR;","after":"bytes32 public immutable DOMAIN_SEPARATOR;","contract":"LiquidSwap","time":0},{"type":"immutable-restrict-modification ","before":"uint256 internal _totalSupply;","after":"uint256 internal immutable _totalSupply;","contract":"LiquidSwap","time":0},{"type":"immutable-restrict-modification ","before":"uint8 internal _decimals;","after":"uint8 internal immutable _decimals;","contract":"LiquidSwap","time":0}]}