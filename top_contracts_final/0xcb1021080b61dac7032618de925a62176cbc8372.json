{"time":137,"results":[{"type":"external-function ","before":"function mintPresale(uint256 qty, bytes memory signature) public payable {\n        require(saleState == SaleState.PRESALE, \"SALE_INACTIVE\");\n        require(qty <= maxPerTransaction, \"TOO_MANY_TOKENS\");\n        require((_tokenId.current() + qty) <= PRESALE_SUPPLY, \"SOLD_OUT\");\n        require(\n            balanceOf(msg.sender) + qty <= maxPerWalletPresale,\n            \"MAX_PER_WALLET\"\n        );\n        require(msg.value == price * qty, \"INVALID_PRICE\");\n        bytes32 messageHash = keccak256(abi.encode(msg.sender));\n        require(verify(messageHash, signature), \"INVALID_SIGNATURE\");\n\n        for (uint256 i = 0; i < qty; i++) {\n            _tokenId.increment();\n            _safeMint(msg.sender, _tokenId.current());\n        }\n\n        emit Mint(msg.sender, qty);\n    }","after":"function mintPresale(uint256 qty, bytes calldata signature) public payable {\n        require(saleState == SaleState.PRESALE, \"SALE_INACTIVE\");\n        require(qty <= maxPerTransaction, \"TOO_MANY_TOKENS\");\n        require((_tokenId.current() + qty) <= PRESALE_SUPPLY, \"SOLD_OUT\");\n        require(\n            balanceOf(msg.sender) + qty <= maxPerWalletPresale,\n            \"MAX_PER_WALLET\"\n        );\n        require(msg.value == price * qty, \"INVALID_PRICE\");\n        bytes32 messageHash = keccak256(abi.encode(msg.sender));\n        require(verify(messageHash, signature), \"INVALID_SIGNATURE\");\n\n        for (uint256 i = 0; i < qty; i++) {\n            _tokenId.increment();\n            _safeMint(msg.sender, _tokenId.current());\n        }\n\n        emit Mint(msg.sender, qty);\n    }","contract":"KeepersOfTheInn","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","contract":"KeepersOfTheInn","time":0},{"type":"constant-restrict-modification  ","before":"address private buenoWallet = 0xc358522c2eb462e4886F4c5a53e5e380a616b63A;","after":"address private constant buenoWallet = 0xc358522c2eb462e4886F4c5a53e5e380a616b63A;","contract":"KeepersOfTheInn","time":0}]}