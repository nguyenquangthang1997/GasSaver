{"time":115,"results":[{"type":"external-function ","before":"function offsetTransaction(address _to, address _broker, uint256 _carbonTon, string memory _receiptId, string memory _onBehalfOf, address _token )\n        public\n        onlyBurner {\n            require(transactionsOffset[_receiptId] == 0, \"Transaction already offset\");\n\n            transactionsOffset[_receiptId] = _carbonTon;\n            ERC20CarbonInventory(carbonInventory).retireCredits(_broker, _carbonTon);\n            ERC20BurnableAdmin(_token).forcedBurn(_to, _carbonTon);\n\n            emit Offset(_to, _carbonTon, _receiptId, _onBehalfOf);\n    }","after":"function offsetTransaction(address _to, address _broker, uint256 _carbonTon, string calldata _receiptId, string calldata _onBehalfOf, address _token )\n        public\n        onlyBurner {\n            require(transactionsOffset[_receiptId] == 0, \"Transaction already offset\");\n\n            transactionsOffset[_receiptId] = _carbonTon;\n            ERC20CarbonInventory(carbonInventory).retireCredits(_broker, _carbonTon);\n            ERC20BurnableAdmin(_token).forcedBurn(_to, _carbonTon);\n\n            emit Offset(_to, _carbonTon, _receiptId, _onBehalfOf);\n    }","contract":"CarbonInventoryControl","time":0}]}