{"time":180,"results":[{"type":"external-function ","before":"function addProject(string memory _projectName, address _artistAddress, uint256 _pricePerTokenInWei) public onlyWhitelisted {\n\n        uint256 projectId = nextProjectId;\n        projectIdToArtistAddress[projectId] = _artistAddress;\n        projects[projectId].name = _projectName;\n        projectIdToCurrencySymbol[projectId] = \"ETH\";\n        projectIdToPricePerTokenInWei[projectId] = _pricePerTokenInWei;\n        projects[projectId].paused=true;\n        projects[projectId].maxInvocations = ONE_MILLION;\n        nextProjectId = nextProjectId.add(1);\n    }","after":"function addProject(string calldata _projectName, address _artistAddress, uint256 _pricePerTokenInWei) public onlyWhitelisted {\n\n        uint256 projectId = nextProjectId;\n        projectIdToArtistAddress[projectId] = _artistAddress;\n        projects[projectId].name = _projectName;\n        projectIdToCurrencySymbol[projectId] = \"ETH\";\n        projectIdToPricePerTokenInWei[projectId] = _pricePerTokenInWei;\n        projects[projectId].paused=true;\n        projects[projectId].maxInvocations = ONE_MILLION;\n        nextProjectId = nextProjectId.add(1);\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectCurrencyInfo(uint256 _projectId, string memory _currencySymbol, address _currencyAddress) onlyArtist(_projectId) public {\n        projectIdToCurrencySymbol[_projectId] = _currencySymbol;\n        projectIdToCurrencyAddress[_projectId] = _currencyAddress;\n    }","after":"function updateProjectCurrencyInfo(uint256 _projectId, string calldata _currencySymbol, address _currencyAddress) onlyArtist(_projectId) public {\n        projectIdToCurrencySymbol[_projectId] = _currencySymbol;\n        projectIdToCurrencyAddress[_projectId] = _currencyAddress;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectName(uint256 _projectId, string memory _projectName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].name = _projectName;\n    }","after":"function updateProjectName(uint256 _projectId, string calldata _projectName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].name = _projectName;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectArtistName(uint256 _projectId, string memory _projectArtistName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].artist = _projectArtistName;\n    }","after":"function updateProjectArtistName(uint256 _projectId, string calldata _projectArtistName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].artist = _projectArtistName;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectDescription(uint256 _projectId, string memory _projectDescription) onlyArtist(_projectId) public {\n        projects[_projectId].description = _projectDescription;\n    }","after":"function updateProjectDescription(uint256 _projectId, string calldata _projectDescription) onlyArtist(_projectId) public {\n        projects[_projectId].description = _projectDescription;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectWebsite(uint256 _projectId, string memory _projectWebsite) onlyArtist(_projectId) public {\n        projects[_projectId].website = _projectWebsite;\n    }","after":"function updateProjectWebsite(uint256 _projectId, string calldata _projectWebsite) onlyArtist(_projectId) public {\n        projects[_projectId].website = _projectWebsite;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectLicense(uint256 _projectId, string memory _projectLicense) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].license = _projectLicense;\n    }","after":"function updateProjectLicense(uint256 _projectId, string calldata _projectLicense) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].license = _projectLicense;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function addProjectScript(uint256 _projectId, string memory _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].scripts[projects[_projectId].scriptCount] = _script;\n        projects[_projectId].scriptCount = projects[_projectId].scriptCount.add(1);\n    }","after":"function addProjectScript(uint256 _projectId, string calldata _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].scripts[projects[_projectId].scriptCount] = _script;\n        projects[_projectId].scriptCount = projects[_projectId].scriptCount.add(1);\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectScript(uint256 _projectId, uint256 _scriptId, string memory _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        require(_scriptId < projects[_projectId].scriptCount, \"scriptId out of range\");\n        projects[_projectId].scripts[_scriptId] = _script;\n    }","after":"function updateProjectScript(uint256 _projectId, uint256 _scriptId, string calldata _script) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        require(_scriptId < projects[_projectId].scriptCount, \"scriptId out of range\");\n        projects[_projectId].scripts[_scriptId] = _script;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectScriptJSON(uint256 _projectId, string memory _projectScriptJSON) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].scriptJSON = _projectScriptJSON;\n    }","after":"function updateProjectScriptJSON(uint256 _projectId, string calldata _projectScriptJSON) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].scriptJSON = _projectScriptJSON;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectIpfsHash(uint256 _projectId, string memory _ipfsHash) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].ipfsHash = _ipfsHash;\n    }","after":"function updateProjectIpfsHash(uint256 _projectId, string calldata _ipfsHash) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n        projects[_projectId].ipfsHash = _ipfsHash;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"external-function ","before":"function updateProjectBaseURI(uint256 _projectId, string memory _newBaseURI) onlyArtist(_projectId) public {\n        projects[_projectId].projectBaseURI = _newBaseURI;\n    }","after":"function updateProjectBaseURI(uint256 _projectId, string calldata _newBaseURI) onlyArtist(_projectId) public {\n        projects[_projectId].projectBaseURI = _newBaseURI;\n    }","contract":"GenArt721CoreV2_DoodleLabs","time":0},{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0}]}