{"time":134,"results":[{"type":"external-function ","before":"function multiTransferFrom(address from_, address to_, uint256[] memory tokenIds_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            transferFrom(from_, to_, tokenIds_[i]);\n        }\n    }","after":"function multiTransferFrom(address from_, address to_, uint256[] calldata tokenIds_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            transferFrom(from_, to_, tokenIds_[i]);\n        }\n    }","contract":"AscendedNFT","time":0},{"type":"external-function ","before":"function multiSafeTransferFrom(address from_, address to_, uint256[] memory tokenIds_, bytes memory data_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            safeTransferFrom(from_, to_, tokenIds_[i], data_);\n        }\n    }","after":"function multiSafeTransferFrom(address from_, address to_, uint256[] calldata tokenIds_, bytes calldata data_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            safeTransferFrom(from_, to_, tokenIds_[i], data_);\n        }\n    }","contract":"AscendedNFT","time":0},{"type":"external-function ","before":"function setPayableGovernanceShareholders(address payable[] memory addresses_, uint256[] memory shares_) public onlyPayableGovernanceSetter {\n        require(_payableGovernanceAddresses.length == 0 && _payableGovernanceShares.length == 0, \"Payable Governance already set! To set again, reset first!\");\n        require(addresses_.length == shares_.length, \"Address and Shares length mismatch!\");\n        uint256 _totalShares;\n        for (uint256 i = 0; i < addresses_.length; i++) {\n            _totalShares += shares_[i];\n            _payableGovernanceAddresses.push(addresses_[i]);\n            _payableGovernanceShares.push(shares_[i]);\n        }\n        require(_totalShares == 1000, \"Total Shares is not 1000!\");\n    }","after":"function setPayableGovernanceShareholders(address payable[] calldata addresses_, uint256[] calldata shares_) public onlyPayableGovernanceSetter {\n        require(_payableGovernanceAddresses.length == 0 && _payableGovernanceShares.length == 0, \"Payable Governance already set! To set again, reset first!\");\n        require(addresses_.length == shares_.length, \"Address and Shares length mismatch!\");\n        uint256 _totalShares;\n        for (uint256 i = 0; i < addresses_.length; i++) {\n            _totalShares += shares_[i];\n            _payableGovernanceAddresses.push(addresses_[i]);\n            _payableGovernanceShares.push(shares_[i]);\n        }\n        require(_totalShares == 1000, \"Total Shares is not 1000!\");\n    }","contract":"AscendedNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxMintsPerWl = 4;","after":"uint256 public constant maxMintsPerWl = 4;","contract":"AscendedNFT","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public maxMintsPerTx = 10;","after":"uint256 public constant maxMintsPerTx = 10;","contract":"AscendedNFT","time":1}]}