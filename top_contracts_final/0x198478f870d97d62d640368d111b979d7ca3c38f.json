{"time":162,"results":[{"type":"external-function ","before":"tity)))\n          );\n        return PRIVATE_SIGNER == hash.recover(signature);\n    }   \n\n    function gift(address[] calldata receivers) external onlyOwner {\n        require(teamTokensMinted + receivers.length <= M_8SIAN_TEAM_RESERVE, \"EXCEED_TEAM_RESERVE\");\n        require(_tokensMinted.current() + receivers.length <= M_8SIAN_MAX, \"EXCEED_MAX\");\n        for (uint256 i = 0; i < receivers.length; i++) {\n            teamTokensMinted++;\n            _tokensMinted.increment();\n            _safeMint(receivers[i], _tokensMinted.current());\n        }\n    }\n\n    function founderMint(uint256 tokenQuantity) external onlyOwner {\n        require(teamTokensMinted + tokenQuantity <= M_8SIAN_TEAM_RESERVE, \"EXCEED_TEAM_RESERVE\");\n        require(_tokensMinted.current() + tokenQuantity <= M_8SIAN_MAX, \"EXCEED_MAX\");\n        for(uint256 i = 0; i < tokenQuantity; i++) {\n        ","after":"tity)))\n          );\n        return PRIVATE_SIGNER == hash.recover(signature);\n    }   \n\n    function gift(address[] calldata receivers) external onlyOwner {\n        require(teamTokensMinted + receivers.length <= M_8SIAN_TEAM_RESERVE, \"EXCEED_TEAM_RESERVE\");\n        require(_tokensMinted.current() + receivers.length <= M_8SIAN_MAX, \"EXCEED_MAX\");\n        for (uint256 i = 0; i < receivers.length; i++) {\n            teamTokensMinted++;\n            _tokensMinted.increment();\n            _safeMint(receivers[i], _tokensMinted.current());\n        }\n    }\n\n    function founderMint(uint256 tokenQuantity) external onlyOwner {\n        require(teamTokensMinted + tokenQuantity <= M_8SIAN_TEAM_RESERVE, \"EXCEED_TEAM_RESERVE\");\n        require(_tokensMinted.current() + tokenQuantity <= M_8SIAN_MAX, \"EXCEED_MAX\");\n        for(uint256 i = 0; i < tokenQuantity; i++) {\n        ","contract":"_8SIAN_","time":0},{"type":"external-function ","before":"amTokensMinted++;\n            _tokensMinted.increment();\n            _safeMint(msg.sender, _tokensMinted.current());\n        }\n    }\n\n    function privateMint(bytes memory signature, uint256 tokenQuantity, uint256 allowedQuantity) external payable {\n        require(privateLive, \"MINT_CLOSED\");\n        require(matchAddresSigner(signature, \"TYPE-PRIVATE\", allowedQuantity), \"DIRECT_MINT_DISALLOWED\");\n        require(publicTokensMinted + tokenQuantity <= M_8SIAN_PUBLIC, \"EXCEED_PUBLIC\");\n        require(_tokensMinted.current() + tokenQuantity <= M_8SIAN_MAX, \"EXCEED_MAX\");\n        require(PRIVATE_MINT_LIST[msg.sender] + tokenQuantity <= allowedQuantity, \"EXCEED_PER_WALLET\");\n        require(M_8SIAN_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n\n        for (uint256 i = 0;","after":"amTokensMinted++;\n            _tokensMinted.increment();\n            _safeMint(msg.sender, _tokensMinted.current());\n        }\n    }\n\n    function privateMint(bytes memory signature, uint256 tokenQuantity, uint256 allowedQuantity) external payable {\n        require(privateLive, \"MINT_CLOSED\");\n        require(matchAddresSigner(signature, \"TYPE-PRIVATE\", allowedQuantity), \"DIRECT_MINT_DISALLOWED\");\n        require(publicTokensMinted + tokenQuantity <= M_8SIAN_PUBLIC, \"EXCEED_PUBLIC\");\n        require(_tokensMinted.current() + tokenQuantity <= M_8SIAN_MAX, \"EXCEED_MAX\");\n        require(PRIVATE_MINT_LIST[msg.sender] + tokenQuantity <= allowedQuantity, \"EXCEED_PER_WALLET\");\n        require(M_8SIAN_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n\n        for (uint256 i = 0;","contract":"_8SIAN_","time":0},{"type":"constant-restrict-modification  ","before":" to `to`.\n     * - When `from` is ze","after":" to `to`.\n     * - When `from` is ze","contract":"_8SIAN_","time":1},{"type":"constant-restrict-modification  ","before":"` and `to` are never both zero.\n     *\n     * To learn more about hooks, hea","after":"` and `to` are never both zero.\n     *\n     * To learn more about hooks, hea","contract":"_8SIAN_","time":1}]}