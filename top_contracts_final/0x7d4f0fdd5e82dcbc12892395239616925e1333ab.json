{"time":132,"results":[{"type":"state-data-arrangement ","before":"\nstring baseURI;\nstring public baseExtension = \".json\";\nuint256 public PresalePrice = 0.0375 ether;\nuint256 public cost = 0.05 ether;\nuint256 public maxSupply = 10000;\nuint256 private preSaleMax = 250;\nuint256 public maxMintAmount = 10;\nuint256 private reserved = 100;\nuint256 private maxPerTranscationPreSale = 1;\nbool public paused = true;\nbool public revealed = false;\nstring public notRevealedUri;\nbool private saleStarted;\nbool public preSaleStarted = false;\nmapping(address => _canPreSale) public PresaleList;","after":"string baseURI;\nstring public baseExtension = \".json\";\nuint256 public PresalePrice = 0.0375 ether;\nuint256 public cost = 0.05 ether;\nuint256 public maxSupply = 10000;\nuint256 private preSaleMax = 250;\nuint256 public maxMintAmount = 10;\nuint256 private reserved = 100;\nuint256 private maxPerTranscationPreSale = 1;\nstring public notRevealedUri;\nmapping(address => _canPreSale) public PresaleList;\nbool public paused = true;\nbool public revealed = false;\nbool private saleStarted;\nbool public preSaleStarted = false;\n","contract":"MultiverseOfWomen","time":0},{"type":"external-function ","before":"function addAddressesToPresaleList(address[] memory addrs) public onlyOwner {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            PresaleList[addrs[i]]._canMint = true;\n        }\n    }","after":"function addAddressesToPresaleList(address[] calldata addrs) public onlyOwner {\n        for (uint256 i = 0; i < addrs.length; i++) {\n            PresaleList[addrs[i]]._canMint = true;\n        }\n    }","contract":"MultiverseOfWomen","time":0},{"type":"external-function ","before":"function claimReserved(address[] memory addrs) external onlyOwner {\n        uint256 len = addrs.length;\n        require( len <= reserved, \"That would exceed the max reserved.\");\n\n        uint256 _tokenId = totalSupply();\n        for (uint256 i = 0 ; i < len; i++) {\n            _safeMint(addrs[i], _tokenId + i);\n        }\n\n        reserved = reserved - len  ;\n    }","after":"function claimReserved(address[] calldata addrs) external onlyOwner {\n        uint256 len = addrs.length;\n        require( len <= reserved, \"That would exceed the max reserved.\");\n\n        uint256 _tokenId = totalSupply();\n        for (uint256 i = 0 ; i < len; i++) {\n            _safeMint(addrs[i], _tokenId + i);\n        }\n\n        reserved = reserved - len  ;\n    }","contract":"MultiverseOfWomen","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","after":"function setBaseExtension(string calldata _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","contract":"MultiverseOfWomen","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 10000;","after":"uint256 public constant maxSupply = 10000;","contract":"MultiverseOfWomen","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private maxPerTranscationPreSale = 1;","after":"uint256 private constant maxPerTranscationPreSale = 1;","contract":"MultiverseOfWomen","time":1}]}