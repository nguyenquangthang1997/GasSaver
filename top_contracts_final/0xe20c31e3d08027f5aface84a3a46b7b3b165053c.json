{"time":131,"results":[{"type":"de-morgan-condition ","before":"!recipient.isContract() || !IController(controller()).greyList(recipient)","after":"!(recipient.isContract() || IController(controller()).greyList(recipient))","loc":{"start":{"line":902,"column":16},"end":{"line":902,"column":88}},"contract":"NoMintRewardPool","time":0},{"type":"external-function ","before":"function notifyPoolsIncludingProfitShare(uint256[] memory amounts,\n    address[] memory pools,\n    uint256 profitShareIncentiveForWeek,\n    uint256 firstProfitShareTimestamp,\n    uint256 sum\n  ) public onlyGovernance {\n    require(amounts.length == pools.length, \"Amounts and pools lengths mismatch\");\n\n    profitShareIncentiveDaily = profitShareIncentiveForWeek.div(7);\n    IERC20(farm).transferFrom(msg.sender, address(this), profitShareIncentiveForWeek);\n    lastProfitShareTimestamp = 0;\n    notifyProfitSharing();\n    lastProfitShareTimestamp = firstProfitShareTimestamp;\n\n    notifyPools(amounts, pools, sum.sub(profitShareIncentiveForWeek));\n  }","after":"function notifyPoolsIncludingProfitShare(uint256[] calldata amounts,\n    address[] calldata pools,\n    uint256 profitShareIncentiveForWeek,\n    uint256 firstProfitShareTimestamp,\n    uint256 sum\n  ) public onlyGovernance {\n    require(amounts.length == pools.length, \"Amounts and pools lengths mismatch\");\n\n    profitShareIncentiveDaily = profitShareIncentiveForWeek.div(7);\n    IERC20(farm).transferFrom(msg.sender, address(this), profitShareIncentiveForWeek);\n    lastProfitShareTimestamp = 0;\n    notifyProfitSharing();\n    lastProfitShareTimestamp = firstProfitShareTimestamp;\n\n    notifyPools(amounts, pools, sum.sub(profitShareIncentiveForWeek));\n  }","contract":"NotifyHelper","time":0}]}