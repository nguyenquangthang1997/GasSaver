{"time":185,"results":[{"type":"state-data-arrangement ","before":"\nstring public BIZARRO_PROVENANCE = \"\";\nstring public LICENSE_TEXT = \"Each Bizarro comes with FULL commercial rights for that specific Bizarro (i.e. that combination of traits), EXCEPT for the pre-defined royalty fee that is collected by the owner of this smart contract when the Bizarro is sold to a new owner. This royalty fee does not apply in any other situation (such as if you choose to rent/license your Bizarro, etc).\";\nbool licenseLocked = true;\nuint256 public constant bizarroPrice = 80000000000000000;\nuint public constant maxBizarroPurchase = 20;\nuint256 public constant MAX_BIZARROS = 10000;\nbool public saleIsActive = false;\nmapping(uint => string) public bizarroNames;\nuint public bizarroReserve = 130;","after":"string public BIZARRO_PROVENANCE = \"\";\nstring public LICENSE_TEXT = \"Each Bizarro comes with FULL commercial rights for that specific Bizarro (i.e. that combination of traits), EXCEPT for the pre-defined royalty fee that is collected by the owner of this smart contract when the Bizarro is sold to a new owner. This royalty fee does not apply in any other situation (such as if you choose to rent/license your Bizarro, etc).\";\nuint256 public constant bizarroPrice = 80000000000000000;\nuint public constant maxBizarroPurchase = 20;\nuint256 public constant MAX_BIZARROS = 10000;\nmapping(uint => string) public bizarroNames;\nuint public bizarroReserve = 130;\nbool licenseLocked = true;\nbool public saleIsActive = false;\n","contract":"Bizarros","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        BIZARRO_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        BIZARRO_PROVENANCE = provenanceHash;\n    }","contract":"Bizarros","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"Bizarros","time":0},{"type":"external-function ","before":"function changeLicense(string memory _license) public onlyOwner {\n        require(licenseLocked == false, \"License already locked\");\n        LICENSE_TEXT = _license;\n    }","after":"function changeLicense(string calldata _license) public onlyOwner {\n        require(licenseLocked == false, \"License already locked\");\n        LICENSE_TEXT = _license;\n    }","contract":"Bizarros","time":0},{"type":"external-function ","before":"function changeBizarroName(uint _tokenId, string memory _name) public {\n        require(ownerOf(_tokenId) == msg.sender, \"Hey, your wallet doesn't own this Bizarro!\");\n        require(sha256(bytes(_name)) != sha256(bytes(bizarroNames[_tokenId])), \"New name is the same as the current name\");\n        bizarroNames[_tokenId] = _name;\n\n        emit bizarroNameChange(msg.sender, _tokenId, _name);\n\n    }","after":"function changeBizarroName(uint _tokenId, string calldata _name) public {\n        require(ownerOf(_tokenId) == msg.sender, \"Hey, your wallet doesn't own this Bizarro!\");\n        require(sha256(bytes(_name)) != sha256(bytes(bizarroNames[_tokenId])), \"New name is the same as the current name\");\n        bizarroNames[_tokenId] = _name;\n\n        emit bizarroNameChange(msg.sender, _tokenId, _name);\n\n    }","contract":"Bizarros","time":0}]}