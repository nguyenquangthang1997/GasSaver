{"time":151,"results":[{"type":"external-function ","before":"function setURI(string memory _uri) public onlyOwner {\n        _setURI(_uri);\n    }","after":"function setURI(string calldata _uri) public onlyOwner {\n        _setURI(_uri);\n    }","contract":"NFTArtGenPresale","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"NFTArtGenPresale","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"NFTArtGenPresale","time":0},{"type":"immutable-restrict-modification ","before":"uint32 public totalSupply = 0;","after":"uint32 public immutable totalSupply = 0;","contract":"NFTArtGenPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint32 private commission = 49;","after":"uint32 private constant commission = 49;","contract":"NFTArtGenPresale","time":0},{"type":"constant-restrict-modification  ","before":"address payable commissionAddress =\n        payable(0x460Fd5059E7301680fA53E63bbBF7272E643e89C);","after":"address payable constant commissionAddress =\n        payable(0x460Fd5059E7301680fA53E63bbBF7272E643e89C);","contract":"NFTArtGenPresale","time":0}]}