{"time":150,"results":[{"type":"state-data-arrangement ","before":"\n   uint256 public TVC_MAX = 15\n   uint256 public TVC_PRICE = 0.05 eth\n   uint256 public TVC_MINT =\n   uint256 public phase =\n   mapping(string => bool) private _usedNonc\n   mapping(uint256 => mapping(address => uint256)) public listPurchas\n   string private _contractU\n   string private _tokenBaseURI = \"https://theviking.club/api/metadata\n   address private _devAddress = 0xa65159C939FbED795164bb40F7507d9E5D54Ff\n   address private _signerAddress = 0x12342b9f93DA1bD4b0154eB8A033650CC1b4ba\n   string public pro\n   uint256 public giftedAmou\n   uint256 public publicAmountMint\n   bool public saleLi\n   bool public lock","after":"   uint256 public TVC_MAX = 15\n   uint256 public TVC_PRICE = 0.05 eth\n   uint256 public TVC_MINT =\n   uint256 public phase =\n   mapping(string => bool) private _usedNonc\n   mapping(uint256 => mapping(address => uint256)) public listPurchas\n   string private _contractU\n   string private _tokenBaseURI = \"https://theviking.club/api/metadata\n   string public pro\n   uint256 public giftedAmou\n   uint256 public publicAmountMint\n   address private _devAddress = 0xa65159C939FbED795164bb40F7507d9E5D54Ff\n   address private _signerAddress = 0x12342b9f93DA1bD4b0154eB8A033650CC1b4ba\n   bool public saleLi\n   bool public lock\n","contract":"VikingClub","time":0},{"type":"external-function ","before":"   function buy(bytes32 hash, bytes memory signature, string memory nonce, uint256 tokenQuantity) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n        require(matchAddresSigner(hash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(!_usedNonces[nonce], \"HASH_USED\");\n        require(hashTransaction(msg.sender, tokenQuantity, nonce) == hash, \"HASH_FAIL\");\n        require(totalSupply() < TVC_MAX, \"OUT_OF_STOCK\");\n        require(publicAmountMinted + tokenQuantity <= TVC_MAX, \"EXCEED_PUBLIC\");\n        require(listPurchases[phase][msg.sender] + tokenQuantity <= TVC_MINT, \"EXCEED_ALLOC\");\n        require(tokenQuantity <= TVC_MINT, \"EXCEED_TVC_MINT\");\n        require(TVC_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n       \n        for(uint256 i = 0; i < tokenQuantity; i++) {\n            publicAmountMinted++;\n             listPurchases[phase][msg.sender]++;\n            _safeMint(msg.sender, totalSupply() + 1);\n        }\n        _usedNonces[nonce] = true;\n  ","after":"   function buy(bytes32 hash, bytes calldata signature, string calldata nonce, uint256 tokenQuantity) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n        require(matchAddresSigner(hash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(!_usedNonces[nonce], \"HASH_USED\");\n        require(hashTransaction(msg.sender, tokenQuantity, nonce) == hash, \"HASH_FAIL\");\n        require(totalSupply() < TVC_MAX, \"OUT_OF_STOCK\");\n        require(publicAmountMinted + tokenQuantity <= TVC_MAX, \"EXCEED_PUBLIC\");\n        require(listPurchases[phase][msg.sender] + tokenQuantity <= TVC_MINT, \"EXCEED_ALLOC\");\n        require(tokenQuantity <= TVC_MINT, \"EXCEED_TVC_MINT\");\n        require(TVC_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n       \n        for(uint256 i = 0; i < tokenQuantity; i++) {\n            publicAmountMinted++;\n             listPurchases[phase][msg.sender]++;\n            _safeMint(msg.sender, totalSupply() + 1);\n        }\n        _usedNonces[nonce] = true;\n  ","contract":"VikingClub","time":0},{"type":"constant-restrict-modification  ","before":"   address private _devAddress = 0xa65159C939FbED795164bb40F7507d9E5D54Ff","after":"   address private constant _devAddress = 0xa65159C939FbED795164bb40F7507d9E5D54Ff","contract":"VikingClub","time":0}]}