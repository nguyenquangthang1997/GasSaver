{"time":166,"results":[{"type":"external-function ","before":"function addVestingGrantsBatch(\n        address[] memory accounts,\n        uint256[] memory grantAmounts,\n        bool[] memory isRevocables\n    ) external override onlyBy(vestingAdmin) {\n        require(accounts.length > 0, \"Vesting: empty\");\n        require(accounts.length <= BATCH_MAX_NUM, \"Vesting: exceed max\");\n        require(\n            grantAmounts.length == accounts.length,\n            \"Vesting: grant amounts length different\"\n        );\n        require(\n            isRevocables.length == accounts.length,\n            \"Vesting: is revocables length different\"\n        );\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            _addVestingGrant(accounts[i], grantAmounts[i], isRevocables[i]);\n        }\n    }","after":"function addVestingGrantsBatch(\n        address[] calldata accounts,\n        uint256[] calldata grantAmounts,\n        bool[] calldata isRevocables\n    ) external override onlyBy(vestingAdmin) {\n        require(accounts.length > 0, \"Vesting: empty\");\n        require(accounts.length <= BATCH_MAX_NUM, \"Vesting: exceed max\");\n        require(\n            grantAmounts.length == accounts.length,\n            \"Vesting: grant amounts length different\"\n        );\n        require(\n            isRevocables.length == accounts.length,\n            \"Vesting: is revocables length different\"\n        );\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            _addVestingGrant(accounts[i], grantAmounts[i], isRevocables[i]);\n        }\n    }","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"address public tokenAddress;","after":"address public immutable tokenAddress;","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"bool public allowAccumulate;","after":"bool public immutable allowAccumulate;","contract":"Vesting","time":0}]}