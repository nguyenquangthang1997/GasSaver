{"time":105,"results":[{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        _provenanceHash = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        _provenanceHash = provenanceHash;\n    }","contract":"GoldHeart","time":0},{"type":"external-function ","before":"function setBaseURL(string memory baseURI) public onlyOwner {\n        _baseURL = baseURI;\n    }","after":"function setBaseURL(string calldata baseURI) public onlyOwner {\n        _baseURL = baseURI;\n    }","contract":"GoldHeart","time":0},{"type":"external-function ","before":"function addToPresaleList(address[] memory addresses) public onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n          require(addresses[i] != address(0), \"Can't add the null address\");\n          presaleList[addresses[i]] = true;\n        }\n    }","after":"function addToPresaleList(address[] calldata addresses) public onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n          require(addresses[i] != address(0), \"Can't add the null address\");\n          presaleList[addresses[i]] = true;\n        }\n    }","contract":"GoldHeart","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _maxSupply = 5555;","after":"uint256 private constant _maxSupply = 5555;","contract":"GoldHeart","time":0}]}