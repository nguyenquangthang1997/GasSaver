{"time":140,"results":[{"type":"external-function ","before":"function createToken(\r\n        uint256 _tokenId,\r\n        string memory _uri,\r\n        string memory _baseUri\r\n    ) public onlyOwner {\r\n        require(bytes(_tokenURI(_tokenId)).length == 0, \"token exists\");\r\n        _setTokenURI(_tokenId, _uri);\r\n        _setTokenBaseURI(_tokenId, _baseUri);\r\n    }","after":"function createToken(\r\n        uint256 _tokenId,\r\n        string calldata _uri,\r\n        string calldata _baseUri\r\n    ) public onlyOwner {\r\n        require(bytes(_tokenURI(_tokenId)).length == 0, \"token exists\");\r\n        _setTokenURI(_tokenId, _uri);\r\n        _setTokenBaseURI(_tokenId, _baseUri);\r\n    }","contract":"AvocadoGuild","time":0},{"type":"external-function ","before":"function setTokenURI(uint256 tokenId, string memory _uri) public onlyOwner {\r\n        _setTokenURI(tokenId, _uri);\r\n    }","after":"function setTokenURI(uint256 tokenId, string calldata _uri) public onlyOwner {\r\n        _setTokenURI(tokenId, _uri);\r\n    }","contract":"AvocadoGuild","time":0},{"type":"external-function ","before":"function setTokenBaseURI(uint256 tokenId, string memory _uri)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _setTokenBaseURI(tokenId, _uri);\r\n    }","after":"function setTokenBaseURI(uint256 tokenId, string calldata _uri)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _setTokenBaseURI(tokenId, _uri);\r\n    }","contract":"AvocadoGuild","time":0},{"type":"external-function ","before":"function mint(\r\n        address account,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public onlyOwner {\r\n        _mint(account, id, amount, data);\r\n    }","after":"function mint(\r\n        address account,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) public onlyOwner {\r\n        _mint(account, id, amount, data);\r\n    }","contract":"AvocadoGuild","time":0},{"type":"external-function ","before":"function mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public onlyOwner {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }","after":"function mintBatch(\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) public onlyOwner {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }","contract":"AvocadoGuild","time":0},{"type":"external-function ","before":"function burnBatch(\r\n        address owner,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) public {\r\n        require(\r\n            owner == msg.sender || isApprovedForAll(owner, msg.sender) == true,\r\n            \"Need operator approval for 3rd party burns.\"\r\n        );\r\n        _burnBatch(owner, ids, amounts);\r\n    }","after":"function burnBatch(\r\n        address owner,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts\r\n    ) public {\r\n        require(\r\n            owner == msg.sender || isApprovedForAll(owner, msg.sender) == true,\r\n            \"Need operator approval for 3rd party burns.\"\r\n        );\r\n        _burnBatch(owner, ids, amounts);\r\n    }","contract":"AvocadoGuild","time":0},{"type":"external-function ","before":"function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }","after":"function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }","contract":"AvocadoGuild","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }","after":"function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }","contract":"AvocadoGuild","time":0}]}