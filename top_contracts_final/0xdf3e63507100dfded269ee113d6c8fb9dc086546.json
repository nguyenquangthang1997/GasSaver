{"time":122,"results":[{"type":"de-morgan-condition ","before":"!vestingAdded[_user] && !refunded[_user]","after":"!(vestingAdded[_user] && refunded[_user])","loc":{"start":{"line":160,"column":12},"end":{"line":160,"column":51}},"contract":"SynapseVesting","time":0},{"type":"external-function ","before":"function addSaleContract(\n        address[] memory _contractAddresses,\n        uint256 _tokensPerCent,\n        uint256 _maxAmount,\n        uint256 _percentOnStart,\n        uint256 _startDate,\n        uint256 _endDate\n    ) external onlyOwner whenNotLocked {\n        require(_contractAddresses.length > 0, \"data is missing\");\n        require(_startDate < _endDate, \"startDate cannot exceed endDate\");\n        SaleContract memory s;\n        s.contractAddresses = _contractAddresses;\n        s.tokensPerCent = _tokensPerCent;\n        s.maxAmount = _maxAmount;\n        s.startDate = _startDate;\n        s.percentOnStart = _percentOnStart;\n        s.endDate = _endDate;\n        saleContracts.push(s);\n    }","after":"function addSaleContract(\n        address[] calldata _contractAddresses,\n        uint256 _tokensPerCent,\n        uint256 _maxAmount,\n        uint256 _percentOnStart,\n        uint256 _startDate,\n        uint256 _endDate\n    ) external onlyOwner whenNotLocked {\n        require(_contractAddresses.length > 0, \"data is missing\");\n        require(_startDate < _endDate, \"startDate cannot exceed endDate\");\n        SaleContract memory s;\n        s.contractAddresses = _contractAddresses;\n        s.tokensPerCent = _tokensPerCent;\n        s.maxAmount = _maxAmount;\n        s.startDate = _startDate;\n        s.percentOnStart = _percentOnStart;\n        s.endDate = _endDate;\n        saleContracts.push(s);\n    }","contract":"SynapseVesting","time":0}]}