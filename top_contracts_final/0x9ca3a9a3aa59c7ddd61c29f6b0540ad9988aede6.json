{"time":157,"results":[{"type":"loop-duplication","before":"\nstart line 1880 column 8, end line 1881 column 136\nfor(uint i = 0; i < _tokenIds.length; i++)\n            require(oldGala.mintQuantities(msg.sender, _tokenIds[i]) == _supplies[i] && _supplies[i] != endValue, \"supply is not valid\");\nstart line 1882 column 8, end line 1885 column 8\nfor(uint i = 0; i < _tokenIds.length; i++) {\n            safeMint(msg.sender, _tokenIds[i], _supplies[i]);\n            oldGala.setMintQuantities(msg.sender, _tokenIds[i], endValue);\n        }","after":"// merge loop\n\nstart line 1880 column 8, end line 1881 column 136\nfor(uint i = 0; i < _tokenIds.length; i++)\n            require(oldGala.mintQuantities(msg.sender, _tokenIds[i]) == _supplies[i] && _supplies[i] != endValue, \"supply is not valid\");\nstart line 1882 column 8, end line 1885 column 8\nfor(uint i = 0; i < _tokenIds.length; i++) {\n            safeMint(msg.sender, _tokenIds[i], _supplies[i]);\n            oldGala.setMintQuantities(msg.sender, _tokenIds[i], endValue);\n        }","contract":"NewkinoERC1155TokenForGala","time":0},{"type":"external-function ","before":"function _setTokenURIPrefix(string memory _tokenURIPrefix) public onlyAdmin {\n        tokenURIPrefix = _tokenURIPrefix;\n    }","after":"function _setTokenURIPrefix(string calldata _tokenURIPrefix) public onlyAdmin {\n        tokenURIPrefix = _tokenURIPrefix;\n    }","contract":"NewkinoERC1155TokenForGala","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"NewkinoERC1155TokenForGala","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"NewkinoERC1155TokenForGala","time":0}]}