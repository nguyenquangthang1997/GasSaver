{"time":174,"results":[{"type":"external-function ","before":"function mintBatchToken(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        uint256 inc_counter\r\n    ) public virtual onlyOwnerOrOperator {\r\n\r\n        _mintBatch(to, ids, amounts, \"\");\r\n        if(inc_counter > 0){\r\n        _tokenIdTracker += inc_counter;\r\n        }\r\n    }","after":"function mintBatchToken(\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        uint256 inc_counter\r\n    ) public virtual onlyOwnerOrOperator {\r\n\r\n        _mintBatch(to, ids, amounts, \"\");\r\n        if(inc_counter > 0){\r\n        _tokenIdTracker += inc_counter;\r\n        }\r\n    }","contract":"HappyAstronauts","time":0},{"type":"external-function ","before":"function setURI(string memory _newURI) public onlyOwnerOrOperator {\r\n        _setURI(_newURI);\r\n    }","after":"function setURI(string calldata _newURI) public onlyOwnerOrOperator {\r\n        _setURI(_newURI);\r\n    }","contract":"HappyAstronauts","time":0},{"type":"external-function ","before":"function setCustomURI(\r\n        uint256 _tokenId,\r\n        string memory _newURI) public onlyOwnerOrOperator {\r\n        customUri[_tokenId] = _newURI;\r\n    }","after":"function setCustomURI(\r\n        uint256 _tokenId,\r\n        string calldata _newURI) public onlyOwnerOrOperator {\r\n        customUri[_tokenId] = _newURI;\r\n    }","contract":"HappyAstronauts","time":0},{"type":"external-function ","before":"function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","after":"function burnBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","contract":"HappyAstronauts","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"HappyAstronauts","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"HappyAstronauts","time":0}]}