{"time":35,"results":[{"type":"external-function ","before":"function claim(\n        uint256 amount,\n        bytes32 userRoot,\n        bytes32[] memory proof\n    ) external nonReentrant whenNotPaused whenClaimable {\n        require(!_claims[_msgSender()], \"FlyzClaim: Already claimed\");\n        require(\n            MerkleProof.verify(proof, merkelRoot, keccak256(abi.encodePacked(_msgSender(), amount, userRoot))),\n            \"FlyzClaim: Proof not verified\"\n        );\n\n        _claims[_msgSender()] = true;\n        treasury.mintRewards(_msgSender(), amount);\n        totalRewards += amount;\n        emit Claim(_msgSender(), amount);\n    }","after":"function claim(\n        uint256 amount,\n        bytes32 userRoot,\n        bytes32[] calldata proof\n    ) external nonReentrant whenNotPaused whenClaimable {\n        require(!_claims[_msgSender()], \"FlyzClaim: Already claimed\");\n        require(\n            MerkleProof.verify(proof, merkelRoot, keccak256(abi.encodePacked(_msgSender(), amount, userRoot))),\n            \"FlyzClaim: Proof not verified\"\n        );\n\n        _claims[_msgSender()] = true;\n        treasury.mintRewards(_msgSender(), amount);\n        totalRewards += amount;\n        emit Claim(_msgSender(), amount);\n    }","contract":"FlyzClaim","time":0}]}