{"time":191,"results":[{"type":"external-function ","before":"function addToWhiteList(\n        address[] memory _addresses\n    ) \n        external\n        onlyOwner\n    {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            require(_addresses[i] != address(0), \"Cannot add the null address\");\n            whiteList[_addresses[i]] = true;\n            /**\n            * @dev We don't want to reset _whiteListClaimed count\n            * if we try to add someone more than once.\n            */\n            whiteListClaimed[_addresses[i]] > 0 ? whiteListClaimed[_addresses[i]] : 0;\n        }\n    }","after":"function addToWhiteList(\n        address[] calldata _addresses\n    ) \n        external\n        onlyOwner\n    {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            require(_addresses[i] != address(0), \"Cannot add the null address\");\n            whiteList[_addresses[i]] = true;\n            /**\n            * @dev We don't want to reset _whiteListClaimed count\n            * if we try to add someone more than once.\n            */\n            whiteListClaimed[_addresses[i]] > 0 ? whiteListClaimed[_addresses[i]] : 0;\n        }\n    }","contract":"UnitedMetaverseNation","time":0},{"type":"external-function ","before":"function setURIs(\n        string memory _blindURI, \n        string memory _URI\n    ) \n        external \n        onlyOwner \n    {\n        blindURI = _blindURI;\n        baseURI = _URI;\n    }","after":"function setURIs(\n        string calldata _blindURI, \n        string calldata _URI\n    ) \n        external \n        onlyOwner \n    {\n        blindURI = _blindURI;\n        baseURI = _URI;\n    }","contract":"UnitedMetaverseNation","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public NFTPrice = 100000000000000000;","after":"uint256 public constant NFTPrice = 100000000000000000;","contract":"UnitedMetaverseNation","time":1}]}