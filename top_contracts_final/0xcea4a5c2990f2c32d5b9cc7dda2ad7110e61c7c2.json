{"time":104,"results":[{"type":"external-function ","before":"function setBaseURI(string memory newURI) external onlyOwner {\n        _metadataURI = newURI;\n    }","after":"function setBaseURI(string calldata newURI) external onlyOwner {\n        _metadataURI = newURI;\n    }","contract":"Atheneum","time":0},{"type":"external-function ","before":"function mint(\n        string[] memory _topics,\n        string[] memory _svgHashes\n    ) external payable returns (uint256) {\n        require(_tokenSupply+_topics.length < maxSupply, \"Maximum supply has been reached\");\n\n        require(_topics.length < _maxMintsPerTx, \"Attempting to mint too many tokens.\");\n\n        // require(\n        //     bytes(_topic).length <= _maxInputLength,\n        //     \"Name of the image is too long\"\n        // );\n\n        require(_topics.length == _svgHashes.length, \"Bad input parameters\");\n\n        require(msg.value >= _getPurchasePrice()*_topics.length, \"Insufficient message value\");\n\n        // require(\n        //     !_namePurchases[_topic],\n        //     \"That named piece has already been purchased\"\n        // );\n        uint256 _newTokenId = 0;\n\n        for(uint i = 0; i < _topics.length; i++) {\n            _newTokenId = _mint(\n            msg.sender,\n            _topics[i],\n            _svgHashes[i]);   \n        }\n\n        return _newTokenId;\n    }","after":"function mint(\n        string[] calldata _topics,\n        string[] calldata _svgHashes\n    ) external payable returns (uint256) {\n        require(_tokenSupply+_topics.length < maxSupply, \"Maximum supply has been reached\");\n\n        require(_topics.length < _maxMintsPerTx, \"Attempting to mint too many tokens.\");\n\n        // require(\n        //     bytes(_topic).length <= _maxInputLength,\n        //     \"Name of the image is too long\"\n        // );\n\n        require(_topics.length == _svgHashes.length, \"Bad input parameters\");\n\n        require(msg.value >= _getPurchasePrice()*_topics.length, \"Insufficient message value\");\n\n        // require(\n        //     !_namePurchases[_topic],\n        //     \"That named piece has already been purchased\"\n        // );\n        uint256 _newTokenId = 0;\n\n        for(uint i = 0; i < _topics.length; i++) {\n            _newTokenId = _mint(\n            msg.sender,\n            _topics[i],\n            _svgHashes[i]);   \n        }\n\n        return _newTokenId;\n    }","contract":"Atheneum","time":0},{"type":"external-function ","before":"function ownerMint(\n        // address _owner,\n        string[] memory _topics,\n        string[] memory _svgHashes\n    ) external onlyOwner returns (uint256) {\n        require(_tokenSupply + _topics.length < maxSupply, \"Maximum supply has been reached\");\n        // require(\n        //     bytes(_topic).length <= _maxInputLength,\n        //     \"Name of the image is too long\"\n        // );\n        // require(\n        //     !_namePurchases[_topic],\n        //     \"That named piece has already been purchased\"\n        // );\n        uint256 _newTokenId = 0;\n\n        for(uint i = 0; i < _topics.length; i++) {\n            _newTokenId = _mint(\n            msg.sender,\n            _topics[i],\n            _svgHashes[i]);   \n        }\n\n        return _newTokenId;\n    }","after":"function ownerMint(\n        // address _owner,\n        string[] calldata _topics,\n        string[] calldata _svgHashes\n    ) external onlyOwner returns (uint256) {\n        require(_tokenSupply + _topics.length < maxSupply, \"Maximum supply has been reached\");\n        // require(\n        //     bytes(_topic).length <= _maxInputLength,\n        //     \"Name of the image is too long\"\n        // );\n        // require(\n        //     !_namePurchases[_topic],\n        //     \"That named piece has already been purchased\"\n        // );\n        uint256 _newTokenId = 0;\n\n        for(uint i = 0; i < _topics.length; i++) {\n            _newTokenId = _mint(\n            msg.sender,\n            _topics[i],\n            _svgHashes[i]);   \n        }\n\n        return _newTokenId;\n    }","contract":"Atheneum","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 5000;","after":"uint256 public constant maxSupply = 5000;","contract":"Atheneum","time":1}]}