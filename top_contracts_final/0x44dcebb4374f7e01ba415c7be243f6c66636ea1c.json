{"time":174,"results":[{"type":"external-function ","before":"function mint(\n        address to,\n        uint256 tokenId,\n        string memory _tokenURI,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public validRoyalties(basisPoints) {\n        require(\n            owner() == Signable.recoverAddress(tokenId, _tokenURI, v, r, s),\n            \"Valid signature required\"\n        );\n        require(msg.sender == to, \"Can only mint to msg.sender\");\n\n        _mintSingle(to, tokenId, _tokenURI, receiver, basisPoints);\n    }","after":"function mint(\n        address to,\n        uint256 tokenId,\n        string calldata _tokenURI,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public validRoyalties(basisPoints) {\n        require(\n            owner() == Signable.recoverAddress(tokenId, _tokenURI, v, r, s),\n            \"Valid signature required\"\n        );\n        require(msg.sender == to, \"Can only mint to msg.sender\");\n\n        _mintSingle(to, tokenId, _tokenURI, receiver, basisPoints);\n    }","contract":"VerisartERC721","time":0},{"type":"external-function ","before":"function mintBulk(\n        address to,\n        uint256 tokenId,\n        string[] memory _tokenURIs,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public validRoyalties(basisPoints) {\n        require(\n            owner() ==\n                Signable.recoverAddressBulk(tokenId, _tokenURIs, v, r, s),\n            \"Valid signature required\"\n        );\n\n        require(msg.sender == to, \"Can only mint to msg.sender\");\n\n        _mintBulk(to, tokenId, _tokenURIs, receiver, basisPoints);\n    }","after":"function mintBulk(\n        address to,\n        uint256 tokenId,\n        string[] calldata _tokenURIs,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public validRoyalties(basisPoints) {\n        require(\n            owner() ==\n                Signable.recoverAddressBulk(tokenId, _tokenURIs, v, r, s),\n            \"Valid signature required\"\n        );\n\n        require(msg.sender == to, \"Can only mint to msg.sender\");\n\n        _mintBulk(to, tokenId, _tokenURIs, receiver, basisPoints);\n    }","contract":"VerisartERC721","time":0},{"type":"external-function ","before":"function mintVerisart(\n        address _to,\n        uint256 tokenId,\n        string memory _tokenURI,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public onlyOwner validRoyalties(basisPoints) {\n        address to = Signable.recoverPersonalAddress(tokenId, _tokenURI, v, r, s);\n\n        require(to == _to, \"Signature wrong for expected `to`\");\n\n        _mintSingle(to, tokenId, _tokenURI, receiver, basisPoints);\n    }","after":"function mintVerisart(\n        address _to,\n        uint256 tokenId,\n        string calldata _tokenURI,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public onlyOwner validRoyalties(basisPoints) {\n        address to = Signable.recoverPersonalAddress(tokenId, _tokenURI, v, r, s);\n\n        require(to == _to, \"Signature wrong for expected `to`\");\n\n        _mintSingle(to, tokenId, _tokenURI, receiver, basisPoints);\n    }","contract":"VerisartERC721","time":0},{"type":"external-function ","before":"function mintBulkVerisart(\n        address _to,\n        uint256 tokenId,\n        string[] memory _tokenURIs,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public onlyOwner validRoyalties(basisPoints) {\n        address to = Signable.recoverPersonalAddressBulk(\n            tokenId,\n            _tokenURIs,\n            v,\n            r,\n            s\n        );\n\n        require(to == _to, \"Signature wrong for expected `to`\");\n\n        _mintBulk(to, tokenId, _tokenURIs, receiver, basisPoints);\n    }","after":"function mintBulkVerisart(\n        address _to,\n        uint256 tokenId,\n        string[] calldata _tokenURIs,\n        address payable receiver,\n        uint256 basisPoints,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public onlyOwner validRoyalties(basisPoints) {\n        address to = Signable.recoverPersonalAddressBulk(\n            tokenId,\n            _tokenURIs,\n            v,\n            r,\n            s\n        );\n\n        require(to == _to, \"Signature wrong for expected `to`\");\n\n        _mintBulk(to, tokenId, _tokenURIs, receiver, basisPoints);\n    }","contract":"VerisartERC721","time":0}]}