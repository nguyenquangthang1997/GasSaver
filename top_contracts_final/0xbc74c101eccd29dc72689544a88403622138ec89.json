{"time":201,"results":[{"type":"external-function ","before":"function setPrefix(string memory _prefix) public onlyOwner {\r\n        prefix = _prefix;\r\n    }","after":"function setPrefix(string calldata _prefix) public onlyOwner {\r\n        prefix = _prefix;\r\n    }","contract":"LevelingUpHeroesEpic","time":0},{"type":"external-function ","before":"function setPrefixDiscounted(string memory _prefix) public onlyOwner {\r\n        prefixDiscounted = _prefix;\r\n    }","after":"function setPrefixDiscounted(string calldata _prefix) public onlyOwner {\r\n        prefixDiscounted = _prefix;\r\n    }","contract":"LevelingUpHeroesEpic","time":0},{"type":"external-function ","before":"function mintWhitelist(bytes32 hash, bytes memory signature, uint256 numberOfTokens) external payable {\r\n        require(_verify(hash, signature), \"This hash's signature is invalid.\");\r\n        require(_hash(prefix, msg.sender) == hash, \"The address hash does not match the signed hash.\");\r\n        require(_whitelistClaimed[msg.sender] + numberOfTokens <= whitelistMaxMint, 'You cannot mint this many.');\r\n\r\n        _whitelistClaimed[msg.sender] += numberOfTokens;\r\n        _nonReservedMintHelper(numberOfTokens);\r\n    }","after":"function mintWhitelist(bytes32 hash, bytes calldata signature, uint256 numberOfTokens) external payable {\r\n        require(_verify(hash, signature), \"This hash's signature is invalid.\");\r\n        require(_hash(prefix, msg.sender) == hash, \"The address hash does not match the signed hash.\");\r\n        require(_whitelistClaimed[msg.sender] + numberOfTokens <= whitelistMaxMint, 'You cannot mint this many.');\r\n\r\n        _whitelistClaimed[msg.sender] += numberOfTokens;\r\n        _nonReservedMintHelper(numberOfTokens);\r\n    }","contract":"LevelingUpHeroesEpic","time":0},{"type":"external-function ","before":"function mintWhitelistDiscounted(bytes32 hash, bytes memory signature, uint256 numberOfTokens) external payable {\r\n        require(_verify(hash, signature), \"This hash's signature is invalid.\");\r\n        require(_hash(prefixDiscounted, msg.sender) == hash, \"The address hash does not match the signed hash.\");\r\n        require(_whitelistClaimed[msg.sender] + numberOfTokens <= whitelistMaxMint, 'You cannot mint this many.');\r\n        require(discountedPrice == msg.value, \"Invalid amount.\");\r\n\r\n        _whitelistClaimed[msg.sender] += numberOfTokens;\r\n        _safeMint(msg.sender, numberOfTokens);\r\n    }","after":"function mintWhitelistDiscounted(bytes32 hash, bytes calldata signature, uint256 numberOfTokens) external payable {\r\n        require(_verify(hash, signature), \"This hash's signature is invalid.\");\r\n        require(_hash(prefixDiscounted, msg.sender) == hash, \"The address hash does not match the signed hash.\");\r\n        require(_whitelistClaimed[msg.sender] + numberOfTokens <= whitelistMaxMint, 'You cannot mint this many.');\r\n        require(discountedPrice == msg.value, \"Invalid amount.\");\r\n\r\n        _whitelistClaimed[msg.sender] += numberOfTokens;\r\n        _safeMint(msg.sender, numberOfTokens);\r\n    }","contract":"LevelingUpHeroesEpic","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseTokenURI_) external onlyOwner {\r\n        baseTokenURI = baseTokenURI_;\r\n    }","after":"function setBaseURI(string calldata baseTokenURI_) external onlyOwner {\r\n        baseTokenURI = baseTokenURI_;\r\n    }","contract":"LevelingUpHeroesEpic","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public nonReservedMax;","after":"uint256 public immutable nonReservedMax;","contract":"LevelingUpHeroesEpic","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public reservedMax;","after":"uint256 public immutable reservedMax;","contract":"LevelingUpHeroesEpic","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public max;","after":"uint256 public immutable max;","contract":"LevelingUpHeroesEpic","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public nonReservedMinted;","after":"uint256 public immutable nonReservedMinted;","contract":"LevelingUpHeroesEpic","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public reservedMinted;","after":"uint256 public immutable reservedMinted;","contract":"LevelingUpHeroesEpic","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public discountedPrice;","after":"uint256 public immutable discountedPrice;","contract":"LevelingUpHeroesEpic","time":1}]}