{"time":128,"results":[{"type":"external-function ","before":"function setTokenURI(string memory newURI) external onlyOwner {\n        _setURI(newURI);\n    }","after":"function setTokenURI(string calldata newURI) external onlyOwner {\n        _setURI(newURI);\n    }","contract":"Cans","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"Cans","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"Cans","time":1},{"type":"immutable-restrict-modification ","before":"uint public START_TIME;","after":"uint public immutable START_TIME;","contract":"Cans","time":0},{"type":"immutable-restrict-modification ","before":"uint public END_TIME;","after":"uint public immutable END_TIME;","contract":"Cans","time":1},{"type":"immutable-restrict-modification ","before":"address public SODA_CONTRACT;","after":"address public immutable SODA_CONTRACT;","contract":"Cans","time":1}]}