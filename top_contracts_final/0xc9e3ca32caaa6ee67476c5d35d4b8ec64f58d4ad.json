{"time":172,"results":[{"type":"external-function ","before":" \n    function mintPresaleFrens(\n        uint256 quantity, \n        uint256 _MAX_CLAIM_FRENS_ON_PRESALE, \n        uint256 _START_PRESALE_MINT_TIMESTAMP, \n        bytes memory _SIGNATURE\n    )\n        external\n        payable\n        onlyPresale\n        callerIsUser\n    {\n        require(isPresaleEligible(_MAX_CLAIM_FRENS_ON_PRESALE, _START_PRESALE_MINT_TIMESTAMP, _SIGNATURE), \"NOT_ELIGIBLE_FOR_PRESALE\");\n        require(block.timestamp >= _START_PRESALE_MINT_TIMESTAMP, \"YOUR_PRESALE_MINTING_TIME_NOT_STARTED\");\n        require(quantity > 0 && presaleClaimed[msg.sender] + quantity <= _MAX_CLAIM_FRENS_ON_PRESALE, \"EXCEEDS_MAX_CLAIMED_NUM_ON_ADDR_OR_BELOW_ONE\");\n        require(FREN_PRICE * quantity == msg.value, \"SENDING_INVALID_ETHERS\");\n        require(totalSupply() + quantity <= MAX_FRENS - RESERVED_FRENS + MINTED_RESERVED_FRENS, \"EXCEEDS_MAX_SUPPLY\");\n\n\n        for (uint256 i = 0; i < quantity; i++) {\n            _safeMint(msg.sender, totalSupply() - MINTED_RESERVED_FRENS + RESERVED_FRENS + 1);\n        }\n        presaleClaimed[msg.sender] += quantity;\n        \n        emit FRENSMinted(msg.sender, quantity, totalSupply());","after":" \n    function mintPresaleFrens(\n        uint256 quantity, \n        uint256 _MAX_CLAIM_FRENS_ON_PRESALE, \n        uint256 _START_PRESALE_MINT_TIMESTAMP, \n        bytes calldata _SIGNATURE\n    )\n        external\n        payable\n        onlyPresale\n        callerIsUser\n    {\n        require(isPresaleEligible(_MAX_CLAIM_FRENS_ON_PRESALE, _START_PRESALE_MINT_TIMESTAMP, _SIGNATURE), \"NOT_ELIGIBLE_FOR_PRESALE\");\n        require(block.timestamp >= _START_PRESALE_MINT_TIMESTAMP, \"YOUR_PRESALE_MINTING_TIME_NOT_STARTED\");\n        require(quantity > 0 && presaleClaimed[msg.sender] + quantity <= _MAX_CLAIM_FRENS_ON_PRESALE, \"EXCEEDS_MAX_CLAIMED_NUM_ON_ADDR_OR_BELOW_ONE\");\n        require(FREN_PRICE * quantity == msg.value, \"SENDING_INVALID_ETHERS\");\n        require(totalSupply() + quantity <= MAX_FRENS - RESERVED_FRENS + MINTED_RESERVED_FRENS, \"EXCEEDS_MAX_SUPPLY\");\n\n\n        for (uint256 i = 0; i < quantity; i++) {\n            _safeMint(msg.sender, totalSupply() - MINTED_RESERVED_FRENS + RESERVED_FRENS + 1);\n        }\n        presaleClaimed[msg.sender] += quantity;\n        \n        emit FRENSMinted(msg.sender, quantity, totalSupply());","contract":"RugPullFrens","time":0},{"type":"external-function ","before":"\n\n    function ownerClaimFrensId(uint256[] memory id, address addr) external onlyOwner {\n        for(uint256 i = 0 ; i < id.length; i++) {\n            _safeMint(addr, id[i]);\n        }\n        ","after":"\n\n    function ownerClaimFrensId(uint256[] calldata id, address addr) external onlyOwner {\n        for(uint256 i = 0 ; i < id.length; i++) {\n            _safeMint(addr, id[i]);\n        }\n        ","contract":"RugPullFrens","time":0}]}