{"time":75,"results":[{"type":"state-data-arrangement ","before":"\nstring constant private _name = \"CORE MultiChain Token\";\nstring constant private _symbol = \"CMCX\";\nuint256 constant private _decimals = 18;\nuint256 private _totalSupply = 20000000000 * (10**_decimals);\nuint256 constant public maxSupply = 20000000000 * (10**_decimals);\nbool public safeguard;\nmapping (address => uint256) private _balanceOf;\nmapping (address => mapping (address => uint256)) private _allowance;\nbytes4 internal constant _INTERFACE_ID_ERC1363_TRANSFER = 0x4bbee2df;\nbytes4 internal constant _INTERFACE_ID_ERC1363_APPROVE = 0xfb9ec8ce;\nbytes4 private constant _ERC1363_RECEIVED = 0x88a7ca5c;\nbytes4 private constant _ERC1363_APPROVED = 0x7b04a2d0;","after":"string constant private _name = \"CORE MultiChain Token\";\nstring constant private _symbol = \"CMCX\";\nuint256 constant private _decimals = 18;\nuint256 private _totalSupply = 20000000000 * (10**_decimals);\nuint256 constant public maxSupply = 20000000000 * (10**_decimals);\nmapping (address => uint256) private _balanceOf;\nmapping (address => mapping (address => uint256)) private _allowance;\nbytes4 internal constant _INTERFACE_ID_ERC1363_TRANSFER = 0x4bbee2df;\nbytes4 internal constant _INTERFACE_ID_ERC1363_APPROVE = 0xfb9ec8ce;\nbytes4 private constant _ERC1363_RECEIVED = 0x88a7ca5c;\nbytes4 private constant _ERC1363_APPROVED = 0x7b04a2d0;\nbool public safeguard;\n","contract":"CMCXToken","time":0},{"type":"external-function ","before":"function airdropACTIVE(address[] memory recipients,uint256[] memory tokenAmount) external returns(bool) {\n        uint256 totalAddresses = recipients.length;\n        address msgSender = msg.sender; //make a local variable to save gas cost in loop\n        require(totalAddresses <= 100,\"Too many recipients\");\n        for(uint i = 0; i < totalAddresses; i++)\n        {\n          //This will loop through all the recipients and send them the specified tokens\n          //Input data validation is unncessary, as that is done by SafeMath and which also saves some gas.\n          _transfer(msgSender, recipients[i], tokenAmount[i]);\n        }\n        return true;\n    }","after":"function airdropACTIVE(address[] calldata recipients,uint256[] calldata tokenAmount) external returns(bool) {\n        uint256 totalAddresses = recipients.length;\n        address msgSender = msg.sender; //make a local variable to save gas cost in loop\n        require(totalAddresses <= 100,\"Too many recipients\");\n        for(uint i = 0; i < totalAddresses; i++)\n        {\n          //This will loop through all the recipients and send them the specified tokens\n          //Input data validation is unncessary, as that is done by SafeMath and which also saves some gas.\n          _transfer(msgSender, recipients[i], tokenAmount[i]);\n        }\n        return true;\n    }","contract":"CMCXToken","time":0}]}