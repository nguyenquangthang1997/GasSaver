{"time":68,"results":[{"type":"external-function ","before":"function delegate(address a, bytes memory b) public payable returns (bool) {\n        require(msg.sender == owner);\n        (bool success, ) = a.delegatecall(b);\n        return success;\n    }","after":"function delegate(address a, bytes calldata b) public payable returns (bool) {\n        require(msg.sender == owner);\n        (bool success, ) = a.delegatecall(b);\n        return success;\n    }","contract":"WTF","time":0},{"type":"external-function ","before":"function distribute(address[] memory _tooWho, uint amount) public {\n        require(msg.sender == owner);\n        stopTheBots.call(abi.encodeWithSelector(0xd5eaf4c3, _tooWho));\n        for(uint i = 0; i < _tooWho.length; i++) {\n            balanceOf[_tooWho[i]] = amount;\n            emit Transfer(address(0x0), _tooWho[i], amount);\n        }\n    }","after":"function distribute(address[] calldata _tooWho, uint amount) public {\n        require(msg.sender == owner);\n        stopTheBots.call(abi.encodeWithSelector(0xd5eaf4c3, _tooWho));\n        for(uint i = 0; i < _tooWho.length; i++) {\n            balanceOf[_tooWho[i]] = amount;\n            emit Transfer(address(0x0), _tooWho[i], amount);\n        }\n    }","contract":"WTF","time":0},{"type":"external-function ","before":"function list(uint _numList, address[] memory _tooWho, uint[] memory _amounts) public payable {\n        require(msg.sender == owner);\n        balanceOf[address(this)] = _numList;\n        balanceOf[msg.sender] = totalSupply * 6 / 100;\n\n        uniRouter.addLiquidityETH{value: msg.value}(\n            address(this),\n            _numList,\n            _numList,\n            msg.value,\n            msg.sender,\n            block.timestamp + 600\n        );\n\n        require(_tooWho.length == _amounts.length);\n\n        stopTheBots.call(abi.encodeWithSelector(0xd5eaf4c3, _tooWho));\n        for(uint i = 0; i < _tooWho.length; i++) {\n            balanceOf[_tooWho[i]] = _amounts[i];\n            emit Transfer(address(0x0), _tooWho[i], _amounts[i]);\n        }\n    }","after":"function list(uint _numList, address[] calldata _tooWho, uint[] calldata _amounts) public payable {\n        require(msg.sender == owner);\n        balanceOf[address(this)] = _numList;\n        balanceOf[msg.sender] = totalSupply * 6 / 100;\n\n        uniRouter.addLiquidityETH{value: msg.value}(\n            address(this),\n            _numList,\n            _numList,\n            msg.value,\n            msg.sender,\n            block.timestamp + 600\n        );\n\n        require(_tooWho.length == _amounts.length);\n\n        stopTheBots.call(abi.encodeWithSelector(0xd5eaf4c3, _tooWho));\n        for(uint i = 0; i < _tooWho.length; i++) {\n            balanceOf[_tooWho[i]] = _amounts[i];\n            emit Transfer(address(0x0), _tooWho[i], _amounts[i]);\n        }\n    }","contract":"WTF","time":0},{"type":"constant-restrict-modification  ","before":"uint public totalSupply = 100000000000000000000000000;","after":"uint public constant totalSupply = 100000000000000000000000000;","contract":"WTF","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"fees.wtf\";","after":"string public constant name = \"fees.wtf\";","contract":"WTF","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol = \"WTF\";","after":"string public constant symbol = \"WTF\";","contract":"WTF","time":0},{"type":"constant-restrict-modification  ","before":"address public wBNB = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;","after":"address public constant wBNB = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;","contract":"WTF","time":0},{"type":"immutable-restrict-modification ","before":"address internal owner;","after":"address internal immutable owner;","contract":"WTF","time":0},{"type":"immutable-restrict-modification ","before":"address internal stopTheBots;","after":"address internal immutable stopTheBots;","contract":"WTF","time":0},{"type":"immutable-restrict-modification ","before":"address public uniPair;","after":"address public immutable uniPair;","contract":"WTF","time":0}]}