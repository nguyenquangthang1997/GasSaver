{"time":191,"results":[{"type":"external-function ","before":"function freeMint(uint256 _amount, bytes32[] memory proof) external payable {\n        require(freeMintState, \"Bored Bad Bunny: FreeMint is OFF\");\n        require(!paused, \"Bored Bad Bunny: contract is paused\");\n        require(\n            _amount <= 1,\n            \"Bored Bad Bunny: You can't mint so much tokens\"\n        );\n        require(\n            _freeMintClaimed[msg.sender] + _amount <= 1,\n            \"Bored Bad Bunny: You can't mint so much tokens\"\n        );\n\n        require(verifyFreeMint(msg.sender, proof), \"Bored Bad Bunny: You are not selected for the free mint\");\n\n        require(\n            totalNFT + _amount <= maxSupplyWithFreeMint,\n            \"Bored Bad Bunny: max supply exceeded\"\n        );\n        uint256 _newItemId;\n        for (uint256 ind = 0; ind < _amount; ind++) {\n            _tokenIds.increment();\n            _newItemId = _tokenIds.current();\n            _safeMint(msg.sender, _newItemId);\n            _freeMintClaimed[msg.sender] = _freeMintClaimed[msg.sender] + 1;\n            totalNFT = totalNFT + 1;\n            \n        }\n    }","after":"function freeMint(uint256 _amount, bytes32[] calldata proof) external payable {\n        require(freeMintState, \"Bored Bad Bunny: FreeMint is OFF\");\n        require(!paused, \"Bored Bad Bunny: contract is paused\");\n        require(\n            _amount <= 1,\n            \"Bored Bad Bunny: You can't mint so much tokens\"\n        );\n        require(\n            _freeMintClaimed[msg.sender] + _amount <= 1,\n            \"Bored Bad Bunny: You can't mint so much tokens\"\n        );\n\n        require(verifyFreeMint(msg.sender, proof), \"Bored Bad Bunny: You are not selected for the free mint\");\n\n        require(\n            totalNFT + _amount <= maxSupplyWithFreeMint,\n            \"Bored Bad Bunny: max supply exceeded\"\n        );\n        uint256 _newItemId;\n        for (uint256 ind = 0; ind < _amount; ind++) {\n            _tokenIds.increment();\n            _newItemId = _tokenIds.current();\n            _safeMint(msg.sender, _newItemId);\n            _freeMintClaimed[msg.sender] = _freeMintClaimed[msg.sender] + 1;\n            totalNFT = totalNFT + 1;\n            \n        }\n    }","contract":"BoredBadBunny","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension)\n        public\n        onlyOwner\n    {\n        baseExtension = _newBaseExtension;\n    }","after":"function setBaseExtension(string calldata _newBaseExtension)\n        public\n        onlyOwner\n    {\n        baseExtension = _newBaseExtension;\n    }","contract":"BoredBadBunny","time":0},{"type":"external-function ","before":"function setNotRevealedURI(string memory _notRevealedURI) public onlyOwner {\n        notRevealedUri = _notRevealedURI;\n    }","after":"function setNotRevealedURI(string calldata _notRevealedURI) public onlyOwner {\n        notRevealedUri = _notRevealedURI;\n    }","contract":"BoredBadBunny","time":0},{"type":"constant-restrict-modification  ","before":"uint256 _price = 400000000000000000;","after":"uint256 constant _price = 400000000000000000;","contract":"BoredBadBunny","time":0}]}