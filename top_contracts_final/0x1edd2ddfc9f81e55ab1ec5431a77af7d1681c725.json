{"time":231,"results":[{"type":"external-function ","before":"function addShogunateName(string memory name) public onlyOwner {\n\t\tvalidShogunate[name] = true;\n\t}","after":"function addShogunateName(string calldata name) public onlyOwner {\n\t\tvalidShogunate[name] = true;\n\t}","contract":"KatanaNSamurai","time":0},{"type":"external-function ","before":"function deleteShogunateName(string memory name) public onlyOwner {\n\t\tvalidShogunate[name] = false;\n\t}","after":"function deleteShogunateName(string calldata name) public onlyOwner {\n\t\tvalidShogunate[name] = false;\n\t}","contract":"KatanaNSamurai","time":0},{"type":"external-function ","before":"function shogunate(uint256 _tokenId, string memory _from, string memory _to) public {\n\t\trequire(hasShogunateStarted == true, \"Shogunate hasn't started.\");\n\t\trequire(_tokenId <= totalSupply(), \"TokenId out of totalSupply.\");\n\t\trequire(ownerOf(_tokenId) == msg.sender, \"Not the tokenId owner.\");\n\n\t\tif (keccak256(abi.encodePacked(_from)) == keccak256(abi.encodePacked(\"None\"))) { // Join shogunate\n\t\t\trequire(keccak256(abi.encodePacked(shogunateBelong[_tokenId])) == keccak256(abi.encodePacked(\"\")), \"Shogunate is not None.\");\n\t\t\trequire(validShogunate[_to] == true, \"Shogunate name is invalid.\");\n\t\t\t\n\t\t\tshogunateBelong[_tokenId] = _to;\n\t\t\tshogunateQuantity[_to] = shogunateQuantity[_to].add(1);\n\t\t} else { // Change shogunate \n\t\t\trequire(keccak256(abi.encodePacked(shogunateBelong[_tokenId])) == keccak256(abi.encodePacked(_from)), \"Shogunate verification failed.\");\n\t\t\trequire(validShogunate[_to] == true, \"Shogunate name is invalid.\");\n\t\t\t\n\t\t\tshogunateBelong[_tokenId] = _to;\n\t\t\tshogunateQuantity[_to] = shogunateQuantity[_to].add(1);\n\t\t\tshogunateQuantity[_from] = shogunateQuantity[_from].sub(1);\n\t\t}\n\t\t\n\t\temit shogunateEvent(msg.sender, _tokenId, _from, _to);\n\t}","after":"function shogunate(uint256 _tokenId, string calldata _from, string calldata _to) public {\n\t\trequire(hasShogunateStarted == true, \"Shogunate hasn't started.\");\n\t\trequire(_tokenId <= totalSupply(), \"TokenId out of totalSupply.\");\n\t\trequire(ownerOf(_tokenId) == msg.sender, \"Not the tokenId owner.\");\n\n\t\tif (keccak256(abi.encodePacked(_from)) == keccak256(abi.encodePacked(\"None\"))) { // Join shogunate\n\t\t\trequire(keccak256(abi.encodePacked(shogunateBelong[_tokenId])) == keccak256(abi.encodePacked(\"\")), \"Shogunate is not None.\");\n\t\t\trequire(validShogunate[_to] == true, \"Shogunate name is invalid.\");\n\t\t\t\n\t\t\tshogunateBelong[_tokenId] = _to;\n\t\t\tshogunateQuantity[_to] = shogunateQuantity[_to].add(1);\n\t\t} else { // Change shogunate \n\t\t\trequire(keccak256(abi.encodePacked(shogunateBelong[_tokenId])) == keccak256(abi.encodePacked(_from)), \"Shogunate verification failed.\");\n\t\t\trequire(validShogunate[_to] == true, \"Shogunate name is invalid.\");\n\t\t\t\n\t\t\tshogunateBelong[_tokenId] = _to;\n\t\t\tshogunateQuantity[_to] = shogunateQuantity[_to].add(1);\n\t\t\tshogunateQuantity[_from] = shogunateQuantity[_from].sub(1);\n\t\t}\n\t\t\n\t\temit shogunateEvent(msg.sender, _tokenId, _from, _to);\n\t}","contract":"KatanaNSamurai","time":0}]}