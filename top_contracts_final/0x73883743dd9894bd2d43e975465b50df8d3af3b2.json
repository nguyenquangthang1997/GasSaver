{"time":192,"results":[{"type":"external-function ","before":"function mintPuppy(uint256[] memory ogDogeList) external {\n        require(mintIsActive, \"Mint is not enable now.\");\n        require(ogDogeList.length <= maxToMint, \"Mint amount is bigger than max limit.\");\n\n        for(uint256 i = 0; i < ogDogeList.length; i++) {\n            require(msg.sender == dogePound.ownerOf(ogDogeList[i]), \"Invalid ogdoge id.\");\n            require(!exists(ogDogeList[i]), \"The puppy already minted.\");\n            _safeMint(msg.sender, ogDogeList[i]);\n            emit Mint(ogDogeList[i]);\n        }\n    }","after":"function mintPuppy(uint256[] calldata ogDogeList) external {\n        require(mintIsActive, \"Mint is not enable now.\");\n        require(ogDogeList.length <= maxToMint, \"Mint amount is bigger than max limit.\");\n\n        for(uint256 i = 0; i < ogDogeList.length; i++) {\n            require(msg.sender == dogePound.ownerOf(ogDogeList[i]), \"Invalid ogdoge id.\");\n            require(!exists(ogDogeList[i]), \"The puppy already minted.\");\n            _safeMint(msg.sender, ogDogeList[i]);\n            emit Mint(ogDogeList[i]);\n        }\n    }","contract":"Puppy","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory _provenanceHash) external onlyOwner {\n        PROVENANCE_HASH = _provenanceHash;\n    }","after":"function setProvenanceHash(string calldata _provenanceHash) external onlyOwner {\n        PROVENANCE_HASH = _provenanceHash;\n    }","contract":"Puppy","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) external onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) external onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"Puppy","time":0}]}