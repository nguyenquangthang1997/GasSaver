{"time":140,"results":[{"type":"external-function ","before":"function setURI(string memory newUri) public onlyRole(OPERATOR_ROLE) {\n        _setURI(newUri);\n    }","after":"function setURI(string calldata newUri) public onlyRole(OPERATOR_ROLE) {\n        _setURI(newUri);\n    }","contract":"NomadReward","time":0},{"type":"external-function ","before":"function setContractURI(string memory newContractURI)\n    external\n    onlyRole(OPERATOR_ROLE)\n    {\n        _contractURI = newContractURI;\n    }","after":"function setContractURI(string calldata newContractURI)\n    external\n    onlyRole(OPERATOR_ROLE)\n    {\n        _contractURI = newContractURI;\n    }","contract":"NomadReward","time":0},{"type":"external-function ","before":"function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public onlyRole(OPERATOR_ROLE) {\n        _mintBatch(to, ids, amounts, data);\n    }","after":"function mintBatch(\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public onlyRole(OPERATOR_ROLE) {\n        _mintBatch(to, ids, amounts, data);\n    }","contract":"NomadReward","time":1},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"NomadReward","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"NomadReward","time":0}]}