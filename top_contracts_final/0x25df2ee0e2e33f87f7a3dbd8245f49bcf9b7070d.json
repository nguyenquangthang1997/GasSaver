{"time":103,"results":[{"type":"external-function ","before":"function setCardStakingValues(uint256[] memory _cardIds, uint256[] memory _values)\n    external onlyOwner {\n      for (uint256 i = 0; i < _cardIds.length; i++) {\n        cardStakingValues[_cardIds[i]] = _values[i];\n      }\n  }","after":"function setCardStakingValues(uint256[] calldata _cardIds, uint256[] calldata _values)\n    external onlyOwner {\n      for (uint256 i = 0; i < _cardIds.length; i++) {\n        cardStakingValues[_cardIds[i]] = _values[i];\n      }\n  }","contract":"TLOLStakingPool","time":0},{"type":"external-function ","before":"function stake(uint256[] memory _tokenId, uint256[] memory _amount)\n    external {\n\n      uint256 addedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        IRainiNft1155 tokenContract = IRainiNft1155(nftContractAddress);\n\n        uint128 cardId = tokenContract.tokenVars(_tokenId[i]).cardId;\n\n        addedStakingValue += cardStakingValues[cardId] * _amount[i];\n\n        tokenContract.safeTransferFrom(_msgSender(), address(this), _tokenId[i], _amount[i], bytes('0x0'));\n\n        stakedNFTs[_msgSender()][_tokenId[i]] += _amount[i];\n      }\n\n      balanceUpdate(_msgSender(), addedStakingValue, false);\n  }","after":"function stake(uint256[] calldata _tokenId, uint256[] calldata _amount)\n    external {\n\n      uint256 addedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        IRainiNft1155 tokenContract = IRainiNft1155(nftContractAddress);\n\n        uint128 cardId = tokenContract.tokenVars(_tokenId[i]).cardId;\n\n        addedStakingValue += cardStakingValues[cardId] * _amount[i];\n\n        tokenContract.safeTransferFrom(_msgSender(), address(this), _tokenId[i], _amount[i], bytes('0x0'));\n\n        stakedNFTs[_msgSender()][_tokenId[i]] += _amount[i];\n      }\n\n      balanceUpdate(_msgSender(), addedStakingValue, false);\n  }","contract":"TLOLStakingPool","time":0},{"type":"external-function ","before":"function unstake(uint256[] memory _tokenId, uint256[] memory _amount)\n    external {\n\n      uint256 subtractedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        require(stakedNFTs[_msgSender()][_tokenId[i]] >= _amount[i], 'not enough supply');\n\n        IRainiNft1155 tokenContract = IRainiNft1155(nftContractAddress);\n\n        uint128 cardId = tokenContract.tokenVars(_tokenId[i]).cardId;\n\n        subtractedStakingValue += cardStakingValues[cardId] * _amount[i];\n\n        tokenContract.safeTransferFrom(address(this), _msgSender(), _tokenId[i], _amount[i], bytes('0x0'));\n\n        stakedNFTs[_msgSender()][_tokenId[i]] -= _amount[i];\n      }\n\n      balanceUpdate(_msgSender(), subtractedStakingValue, true);\n  }","after":"function unstake(uint256[] calldata _tokenId, uint256[] calldata _amount)\n    external {\n\n      uint256 subtractedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        require(stakedNFTs[_msgSender()][_tokenId[i]] >= _amount[i], 'not enough supply');\n\n        IRainiNft1155 tokenContract = IRainiNft1155(nftContractAddress);\n\n        uint128 cardId = tokenContract.tokenVars(_tokenId[i]).cardId;\n\n        subtractedStakingValue += cardStakingValues[cardId] * _amount[i];\n\n        tokenContract.safeTransferFrom(address(this), _msgSender(), _tokenId[i], _amount[i], bytes('0x0'));\n\n        stakedNFTs[_msgSender()][_tokenId[i]] -= _amount[i];\n      }\n\n      balanceUpdate(_msgSender(), subtractedStakingValue, true);\n  }","contract":"TLOLStakingPool","time":0},{"type":"external-function ","before":"function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }","after":"function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }","contract":"TLOLStakingPool","time":0},{"type":"external-function ","before":"function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }","after":"function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }","contract":"TLOLStakingPool","time":0},{"type":"immutable-restrict-modification ","before":"address public nftContractAddress;","after":"address public immutable nftContractAddress;","contract":"TLOLStakingPool","time":0}]}