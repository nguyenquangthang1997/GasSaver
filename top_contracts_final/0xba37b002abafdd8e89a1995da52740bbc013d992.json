{"time":161,"results":[{"type":"struct-data-arrangement ","before":"\nuint id\naddress proposer\nmapping(address => uint) forVotes\nmapping(address => uint) againstVotes\nuint totalForVotes\nuint totalAgainstVotes\nuint start\nuint end\naddress executor\nstring hash\nuint totalVotesAvailable\nuint quorum\nuint quorumRequired\nbool open","after":"uint id\nmapping(address => uint) forVotes\nmapping(address => uint) againstVotes\nuint totalForVotes\nuint totalAgainstVotes\nuint start\nuint end\nstring hash\nuint totalVotesAvailable\nuint quorum\nuint quorumRequired\naddress proposer\naddress executor\nbool open\n","contract":"YearnGovernance","time":0},{"type":"external-function ","before":"function propose(address executor, string memory hash) public {\n        require(votesOf(msg.sender) > minimum, \"<minimum\");\n        proposals[proposalCount++] = Proposal({\n            id: proposalCount,\n            proposer: msg.sender,\n            totalForVotes: 0,\n            totalAgainstVotes: 0,\n            start: block.number,\n            end: period.add(block.number),\n            executor: executor,\n            hash: hash,\n            totalVotesAvailable: totalVotes,\n            quorum: 0,\n            quorumRequired: quorum,\n            open: true\n        });\n        \n        emit NewProposal(proposalCount, msg.sender, block.number, period, executor);\n        voteLock[msg.sender] = lock.add(block.number);\n    }","after":"function propose(address executor, string calldata hash) public {\n        require(votesOf(msg.sender) > minimum, \"<minimum\");\n        proposals[proposalCount++] = Proposal({\n            id: proposalCount,\n            proposer: msg.sender,\n            totalForVotes: 0,\n            totalAgainstVotes: 0,\n            start: block.number,\n            end: period.add(block.number),\n            executor: executor,\n            hash: hash,\n            totalVotesAvailable: totalVotes,\n            quorum: 0,\n            quorumRequired: quorum,\n            open: true\n        });\n        \n        emit NewProposal(proposalCount, msg.sender, block.number, period, executor);\n        voteLock[msg.sender] = lock.add(block.number);\n    }","contract":"YearnGovernance","time":0}]}