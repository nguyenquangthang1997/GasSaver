{"time":177,"results":[{"type":"external-function ","before":"function setBaseTokenURI(string memory URI) public onlyOwner {\n    _baseTokenURI = URI;\n  }","after":"function setBaseTokenURI(string calldata URI) public onlyOwner {\n    _baseTokenURI = URI;\n  }","contract":"GlizzyGang","time":0},{"type":"external-function ","before":"function setMetadataURI(string memory URI) public onlyOwner {\n    metadataURI = URI;\n  }","after":"function setMetadataURI(string calldata URI) public onlyOwner {\n    metadataURI = URI;\n  }","contract":"GlizzyGang","time":0},{"type":"external-function ","before":"function setPlaceholderURI(string memory URI) public onlyOwner {\n    _placeholderURI = URI;\n  }","after":"function setPlaceholderURI(string calldata URI) public onlyOwner {\n    _placeholderURI = URI;\n  }","contract":"GlizzyGang","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n    require(bytes(PROVENANCE_HASH).length == 0, \"Provenance hash has already been set\");\n\n    PROVENANCE_HASH = provenanceHash;\n  }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n    require(bytes(PROVENANCE_HASH).length == 0, \"Provenance hash has already been set\");\n\n    PROVENANCE_HASH = provenanceHash;\n  }","contract":"GlizzyGang","time":0},{"type":"external-function ","before":"function presaleMint(bytes memory signature, uint256 amount)\n    public\n    payable\n    nonReentrant\n    isValidPresaleSignature(signature)\n  {\n    require(presaleActive,                                         \"Presale has not started\");\n    require(msg.value == MINT_PRICE * amount,                      \"Invalid Ether amount sent\");\n    require(presaleMints[msg.sender] + amount <= PRESALE_MAX_MINT, \"Exceeds remaining presale balance\");\n\n    _mintAmount(amount, msg.sender);\n\n    presaleMints[msg.sender] += amount;\n    _presaleMinted += amount;\n  }","after":"function presaleMint(bytes calldata signature, uint256 amount)\n    public\n    payable\n    nonReentrant\n    isValidPresaleSignature(signature)\n  {\n    require(presaleActive,                                         \"Presale has not started\");\n    require(msg.value == MINT_PRICE * amount,                      \"Invalid Ether amount sent\");\n    require(presaleMints[msg.sender] + amount <= PRESALE_MAX_MINT, \"Exceeds remaining presale balance\");\n\n    _mintAmount(amount, msg.sender);\n\n    presaleMints[msg.sender] += amount;\n    _presaleMinted += amount;\n  }","contract":"GlizzyGang","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 internal _LINK_KEY_HASH;","after":"bytes32 internal immutable _LINK_KEY_HASH;","contract":"GlizzyGang","time":1},{"type":"immutable-restrict-modification ","before":"uint256 internal _LINK_FEE;","after":"uint256 internal immutable _LINK_FEE;","contract":"GlizzyGang","time":1},{"type":"immutable-restrict-modification ","before":"\n\n  address internal _sig","after":"\n\n  address internal _sig","contract":"GlizzyGang","time":1}]}