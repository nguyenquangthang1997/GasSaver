{"time":871,"results":[{"type":"loop-calculation","before":"uint256[4] memory v = [\n                        uint256(uint8(a[i * 3]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3]) & 0xF),\n                        uint256(uint8(a[i * 3 + 2]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3 + 2]) & 0xF)\n                    ];","after":"// move outside for loop\nuint256[4] memory v = [\n                        uint256(uint8(a[i * 3]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3]) & 0xF),\n                        uint256(uint8(a[i * 3 + 2]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3 + 2]) & 0xF)\n                    ];","loc":{"start":{"line":403,"column":20},"end":{"line":408,"column":21}},"contract":"PublicCryptopunksData","time":0},{"type":"external-function ","before":"function setPalette(bytes memory _palette) external onlyDeployer unsealed {\n        palette = _palette;\n    }","after":"function setPalette(bytes calldata _palette) external onlyDeployer unsealed {\n        palette = _palette;\n    }","contract":"PublicCryptopunksData","time":0},{"type":"external-function ","before":"function addAsset(\n        uint8 index,\n        bytes memory encoding,\n        string memory name\n    ) external onlyDeployer unsealed {\n        assets[index] = encoding;\n        assetNames[index] = name;\n    }","after":"function addAsset(\n        uint8 index,\n        bytes calldata encoding,\n        string calldata name\n    ) external onlyDeployer unsealed {\n        assets[index] = encoding;\n        assetNames[index] = name;\n    }","contract":"PublicCryptopunksData","time":0},{"type":"immutable-restrict-modification ","before":"address internal deployer;","after":"address internal immutable deployer;","contract":"PublicCryptopunksData","time":1},{"type":"external-function ","before":"function addAttributeRanges(\n        uint16[] memory slotMaxes,\n        uint16[][][] memory slotRanges\n    ) external onlyOwner unsealed {\n        genderToSlotMaxes.push(slotMaxes);\n        genderToSlotToAttributeRanges.push(slotRanges);\n\n        if (genderToSlotMaxes.length == 2) {\n            contractSealed = true;\n        }\n    }","after":"function addAttributeRanges(\n        uint16[] calldata slotMaxes,\n        uint16[][][] calldata slotRanges\n    ) external onlyOwner unsealed {\n        genderToSlotMaxes.push(slotMaxes);\n        genderToSlotToAttributeRanges.push(slotRanges);\n\n        if (genderToSlotMaxes.length == 2) {\n            contractSealed = true;\n        }\n    }","contract":"OtherPunks","time":0},{"type":"loop-calculation","before":"uint256[4] memory v = [\n                        uint256(uint8(a[i * 3]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3]) & 0xF),\n                        uint256(uint8(a[i * 3 + 2]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3 + 2]) & 0xF)\n                    ];","after":"// move outside for loop\nuint256[4] memory v = [\n                        uint256(uint8(a[i * 3]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3]) & 0xF),\n                        uint256(uint8(a[i * 3 + 2]) & 0xF0) >> 4,\n                        uint256(uint8(a[i * 3 + 2]) & 0xF)\n                    ];","loc":{"start":{"line":3116,"column":20},"end":{"line":3121,"column":21}},"contract":"CryptopunksData","time":0},{"type":"external-function ","before":"function setPalette(bytes memory _palette) external onlyDeployer unsealed {\n        palette = _palette;\n    }","after":"function setPalette(bytes calldata _palette) external onlyDeployer unsealed {\n        palette = _palette;\n    }","contract":"CryptopunksData","time":0},{"type":"external-function ","before":"function addAsset(\n        uint8 index,\n        bytes memory encoding,\n        string memory name\n    ) external onlyDeployer unsealed {\n        assets[index] = encoding;\n        assetNames[index] = name;\n    }","after":"function addAsset(\n        uint8 index,\n        bytes calldata encoding,\n        string calldata name\n    ) external onlyDeployer unsealed {\n        assets[index] = encoding;\n        assetNames[index] = name;\n    }","contract":"CryptopunksData","time":0},{"type":"external-function ","before":"function addPunks(uint8 index, bytes memory _punks)\n        external\n        onlyDeployer\n        unsealed\n    {\n        punks[index] = _punks;\n    }","after":"function addPunks(uint8 index, bytes calldata _punks)\n        external\n        onlyDeployer\n        unsealed\n    {\n        punks[index] = _punks;\n    }","contract":"CryptopunksData","time":0},{"type":"immutable-restrict-modification ","before":"address internal deployer;","after":"address internal immutable deployer;","contract":"CryptopunksData","time":0}]}