{"time":174,"results":[{"type":"struct-data-arrangement ","before":"\nuint32 maxSupply\nuint32 saleLimit\nuint256 tokenPrice\nbool whitelistOnly","after":"uint256 tokenPrice\nuint32 maxSupply\nuint32 saleLimit\nbool whitelistOnly\n","contract":"CyberBoxPass","time":0},{"type":"external-function ","before":"function setURI(string memory uri) public onlyOwner {\n        _setURI(uri);\n    }","after":"function setURI(string calldata uri) public onlyOwner {\n        _setURI(uri);\n    }","contract":"CyberBoxPass","time":0},{"type":"external-function ","before":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","after":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","contract":"CyberBoxPass","time":0},{"type":"external-function ","before":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","after":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","contract":"CyberBoxPass","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"CyberBox Pass\";","after":"string public constant name = \"CyberBox Pass\";","contract":"CyberBoxPass","time":1},{"type":"constant-restrict-modification  ","before":"string public symbol = \"CBXP\";","after":"string public constant symbol = \"CBXP\";","contract":"CyberBoxPass","time":1}]}