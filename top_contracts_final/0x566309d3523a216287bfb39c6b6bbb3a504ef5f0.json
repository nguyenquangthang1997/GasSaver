{"time":133,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public sunflowerPercent;\nstring public tokenBaseURI;\nbool public isArtCodeSealed;\nstring public artCode;\nstring public artCodeDependencies;\nstring public artDescription;\nuint256 currentTokenID;\nuint256 public maxTokens;\nuint256 public tokenPrice;\naddress payable public artistAddress;\naddress payable constant platformAddress = payable(0xf0bE1F2FB8abfa9aBF7d218a226ef4F046f09a40);\nmapping(uint256 => bytes32) internal blockhashForToken;","after":"uint256 public sunflowerPercent;\nstring public tokenBaseURI;\nstring public artCode;\nstring public artCodeDependencies;\nstring public artDescription;\nuint256 currentTokenID;\nuint256 public maxTokens;\nuint256 public tokenPrice;\nmapping(uint256 => bytes32) internal blockhashForToken;\naddress payable public artistAddress;\naddress payable constant platformAddress = payable(0xf0bE1F2FB8abfa9aBF7d218a226ef4F046f09a40);\nbool public isArtCodeSealed;\n","contract":"SunflowerArt","time":0},{"type":"external-function ","before":"function initialize(string memory _name, string memory _symbol, uint256 _maxTokens, uint256 _tokenPrice, address _artistAddress) public initializer {\n    __ERC721_init(_name, _symbol);\n    __ERC721Enumerable_init_unchained();\n    __Ownable_init();\n    __Pausable_init();\n    isArtCodeSealed = false;\n    sunflowerPercent = 10;\n    tokenBaseURI = \"\";\n\n    maxTokens = _maxTokens;\n    tokenPrice = _tokenPrice;\n    currentTokenID = 0;\n\n    artistAddress = payable(_artistAddress);\n\n    pauseMinting();\n  }","after":"function initialize(string calldata _name, string calldata _symbol, uint256 _maxTokens, uint256 _tokenPrice, address _artistAddress) public initializer {\n    __ERC721_init(_name, _symbol);\n    __ERC721Enumerable_init_unchained();\n    __Ownable_init();\n    __Pausable_init();\n    isArtCodeSealed = false;\n    sunflowerPercent = 10;\n    tokenBaseURI = \"\";\n\n    maxTokens = _maxTokens;\n    tokenPrice = _tokenPrice;\n    currentTokenID = 0;\n\n    artistAddress = payable(_artistAddress);\n\n    pauseMinting();\n  }","contract":"SunflowerArt","time":0},{"type":"external-function ","before":"function setArtCode(string memory _artCode, string memory _artCodeDependencies, string memory _artDescription) public onlyOwner {\n    require(isArtCodeSealed == false, \"Art code is sealed.\");\n    artCode = _artCode;\n    artCodeDependencies = _artCodeDependencies;\n    artDescription = _artDescription;\n  }","after":"function setArtCode(string calldata _artCode, string calldata _artCodeDependencies, string calldata _artDescription) public onlyOwner {\n    require(isArtCodeSealed == false, \"Art code is sealed.\");\n    artCode = _artCode;\n    artCodeDependencies = _artCodeDependencies;\n    artDescription = _artDescription;\n  }","contract":"SunflowerArt","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _tokenBaseURI) public onlyOwner {\n    tokenBaseURI = _tokenBaseURI;\n  }","after":"function setBaseURI(string calldata _tokenBaseURI) public onlyOwner {\n    tokenBaseURI = _tokenBaseURI;\n  }","contract":"SunflowerArt","time":0}]}