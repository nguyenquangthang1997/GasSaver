{"time":157,"results":[{"type":"external-function ","before":"function mint(uint256[] memory _tokensId, uint256 _timestamp, bytes memory _signature) public payable saleIsOpen {\r\n\r\n        uint256 total = totalToken();\r\n        require(_tokensId.length <= 2, \"Max limit\");\r\n        require(total + _tokensId.length <= MAX_ELEMENTS, \"Max limit\");\r\n        require(msg.value >= price(_tokensId.length), \"Value below price\");\r\n\r\n        address wallet = _msgSender();\r\n\r\n        address signerOwner = signatureWallet(wallet,_tokensId,_timestamp,_signature);\r\n        require(signerOwner == owner(), \"Not authorized to mint\");\r\n\r\n        require(block.timestamp >= _timestamp - 30, \"Out of time\");\r\n\r\n        for(uint8 i = 0; i < _tokensId.length; i++){\r\n            require(rawOwnerOf(_tokensId[i]) == address(0) && _tokensId[i] > 0 && _tokensId[i] <= MAX_ELEMENTS, \"Token already minted\");\r\n            _mintAnElement(wallet, _tokensId[i]);\r\n        }\r\n\r\n    }","after":"function mint(uint256[] calldata _tokensId, uint256 _timestamp, bytes calldata _signature) public payable saleIsOpen {\r\n\r\n        uint256 total = totalToken();\r\n        require(_tokensId.length <= 2, \"Max limit\");\r\n        require(total + _tokensId.length <= MAX_ELEMENTS, \"Max limit\");\r\n        require(msg.value >= price(_tokensId.length), \"Value below price\");\r\n\r\n        address wallet = _msgSender();\r\n\r\n        address signerOwner = signatureWallet(wallet,_tokensId,_timestamp,_signature);\r\n        require(signerOwner == owner(), \"Not authorized to mint\");\r\n\r\n        require(block.timestamp >= _timestamp - 30, \"Out of time\");\r\n\r\n        for(uint8 i = 0; i < _tokensId.length; i++){\r\n            require(rawOwnerOf(_tokensId[i]) == address(0) && _tokensId[i] > 0 && _tokensId[i] <= MAX_ELEMENTS, \"Token already minted\");\r\n            _mintAnElement(wallet, _tokensId[i]);\r\n        }\r\n\r\n    }","contract":"MekaVerse","time":0},{"type":"external-function ","before":"function mintUnsoldTokens(uint256[] memory _tokensId) public onlyOwner {\r\n\r\n        require(PAUSE, \"Pause is disable\");\r\n\r\n        for (uint256 i = 0; i < _tokensId.length; i++) {\r\n            if(rawOwnerOf(_tokensId[i]) == address(0)){\r\n                _mintAnElement(owner(), _tokensId[i]);\r\n            }\r\n        }\r\n    }","after":"function mintUnsoldTokens(uint256[] calldata _tokensId) public onlyOwner {\r\n\r\n        require(PAUSE, \"Pause is disable\");\r\n\r\n        for (uint256 i = 0; i < _tokensId.length; i++) {\r\n            if(rawOwnerOf(_tokensId[i]) == address(0)){\r\n                _mintAnElement(owner(), _tokensId[i]);\r\n            }\r\n        }\r\n    }","contract":"MekaVerse","time":0}]}