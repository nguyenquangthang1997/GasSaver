{"time":97,"results":[{"type":"external-function ","before":"function EMERGENCY_UNSTAKE_SPECIFIED_TOKENS_TO_CONTRACT_OWNER_WALLET(bool approved, uint[] memory tokenIds) external onlyOwner {\n        require(approved, \"You have to approve this action! After that, the owner won't be able to stake this or other tokens. Require wallet change to fix.\");\n        for(uint i = 0; i < tokenIds.length; i++) {\n            IERC721(erc721Address).safeTransferFrom(address(this), msg.sender, stakedTokens.at(i));\n            stakedTokens.remove(tokenIds[i]);\n        }\n    }","after":"function EMERGENCY_UNSTAKE_SPECIFIED_TOKENS_TO_CONTRACT_OWNER_WALLET(bool approved, uint[] calldata tokenIds) external onlyOwner {\n        require(approved, \"You have to approve this action! After that, the owner won't be able to stake this or other tokens. Require wallet change to fix.\");\n        for(uint i = 0; i < tokenIds.length; i++) {\n            IERC721(erc721Address).safeTransferFrom(address(this), msg.sender, stakedTokens.at(i));\n            stakedTokens.remove(tokenIds[i]);\n        }\n    }","contract":"Fridge","time":1}]}