{"time":145,"results":[{"type":"external-function ","before":"function mintColorsBatch(uint256[] memory tokenIds) external whenNotPaused {\n        uint256 _totalSupply = totalSupply();\n        require(!_isPublicMintActiveInternal(_totalSupply),\"presale over\");\n        require(tokenIds.length <= maxMintAmount,\"exceeds max mint per tx\");\n        require(tokenIds.length > 0,\"Mint should be > 0\");\n\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            require(!hasClaimed[tokenIds[i]], \"Color already claimed.\");\n            require(\n                msg.sender == IERC721(THE_COLORS).ownerOf(tokenIds[i]),\n                \"Only owner can claim.\"\n            );\n            hasClaimed[tokenIds[i]] = true;\n            _mintOnce();\n        }\n    }","after":"function mintColorsBatch(uint256[] calldata tokenIds) external whenNotPaused {\n        uint256 _totalSupply = totalSupply();\n        require(!_isPublicMintActiveInternal(_totalSupply),\"presale over\");\n        require(tokenIds.length <= maxMintAmount,\"exceeds max mint per tx\");\n        require(tokenIds.length > 0,\"Mint should be > 0\");\n\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            require(!hasClaimed[tokenIds[i]], \"Color already claimed.\");\n            require(\n                msg.sender == IERC721(THE_COLORS).ownerOf(tokenIds[i]),\n                \"Only owner can claim.\"\n            );\n            hasClaimed[tokenIds[i]] = true;\n            _mintOnce();\n        }\n    }","contract":"ConcaveNFT","time":0}]}