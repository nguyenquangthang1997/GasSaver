{"time":162,"results":[{"type":"external-function ","before":"   \n    function mint(\n        uint32 _amount,\n        bytes32[] memory _proof,\n        uint32 freeTokensAmount,\n        uint32 tier\n    ) external payable whenNotPaused onlyIfAvailable(_amount) nonReentrant {\n        if (_boxStatus == BoxStatus.STEALTH) {\n            stealthMint(_amount);\n        } else {\n            freemint(_amount, _proof, freeTokensAmount, tier);\n       ","after":"   \n    function mint(\n        uint32 _amount,\n        bytes32[] calldata _proof,\n        uint32 freeTokensAmount,\n        uint32 tier\n    ) external payable whenNotPaused onlyIfAvailable(_amount) nonReentrant {\n        if (_boxStatus == BoxStatus.STEALTH) {\n            stealthMint(_amount);\n        } else {\n            freemint(_amount, _proof, freeTokensAmount, tier);\n       ","contract":"BlackBoxPrtcl","time":0},{"type":"external-function ","before":"   \n    function changeBaseURI(string memory newBaseURI)\n        public\n        onlyOwner\n        notLocked\n    {\n        require(\n            (keccak256(abi.encodePacked((_baseTokenURI))) !=\n                keccak256(abi.encodePacked((newBaseURI)))),\n            \"Base URI cannot be same as previous\"\n        );\n        _baseTokenURI = newBaseUR","after":"   \n    function changeBaseURI(string calldata newBaseURI)\n        public\n        onlyOwner\n        notLocked\n    {\n        require(\n            (keccak256(abi.encodePacked((_baseTokenURI))) !=\n                keccak256(abi.encodePacked((newBaseURI)))),\n            \"Base URI cannot be same as previous\"\n        );\n        _baseTokenURI = newBaseUR","contract":"BlackBoxPrtcl","time":0},{"type":"external-function ","before":"   \n    function changeNotRevealedURI(string memory newNotRevealedUri)\n        public\n        onlyOwner\n        notRevealed\n    {\n        require(\n            (keccak256(abi.encodePacked((newNotRevealedUri))) !=\n                keccak256(abi.encodePacked((_notRevealedUri)))),\n            \"Base URI cannot be same as previous\"\n        );\n        _notRevealedUri = newNotRevealedUr","after":"   \n    function changeNotRevealedURI(string calldata newNotRevealedUri)\n        public\n        onlyOwner\n        notRevealed\n    {\n        require(\n            (keccak256(abi.encodePacked((newNotRevealedUri))) !=\n                keccak256(abi.encodePacked((_notRevealedUri)))),\n            \"Base URI cannot be same as previous\"\n        );\n        _notRevealedUri = newNotRevealedUr","contract":"BlackBoxPrtcl","time":0},{"type":"immutable-restrict-modification ","before":"ry;\n    uint32 private ","after":"ry;\n    uint32 private ","contract":"BlackBoxPrtcl","time":1},{"type":"immutable-restrict-modification ","before":"ES;\n    uint32 private _STEALTH_MIN","after":"ES;\n    uint32 private _STEALTH_MIN","contract":"BlackBoxPrtcl","time":1}]}