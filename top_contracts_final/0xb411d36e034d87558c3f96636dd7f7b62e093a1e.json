{"time":132,"results":[{"type":"state-data-arrangement ","before":"\nuint public price;\nuint public immutable maxSupply;\nuint public supplyCap;\nbool public mintingEnabled;\nbool public whitelistMintingEnabled;\nuint public walletLimit;\naddress public whitelistSigner;\nmapping(address => uint) public mints;\nstring private _baseURIPrefix;","after":"uint public price;\nuint public immutable maxSupply;\nuint public supplyCap;\nuint public walletLimit;\nmapping(address => uint) public mints;\nstring private _baseURIPrefix;\naddress public whitelistSigner;\nbool public mintingEnabled;\nbool public whitelistMintingEnabled;\n","contract":"KYOTO","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newUri) external onlyOwner {\r\n        _baseURIPrefix = newUri;\r\n    }","after":"function setBaseURI(string calldata newUri) external onlyOwner {\r\n        _baseURIPrefix = newUri;\r\n    }","contract":"KYOTO","time":0},{"type":"external-function ","before":"function mintWhitelisted(uint256 qty, bytes memory sig) \r\n        external \r\n        payable\r\n        checkSupply(qty)\r\n        saleOpen(Sale.WHITELIST)\r\n        onWhitelist(sig)\r\n        validateInput(qty)\r\n    {\r\n        batchMint(qty);\r\n    }","after":"function mintWhitelisted(uint256 qty, bytes calldata sig) \r\n        external \r\n        payable\r\n        checkSupply(qty)\r\n        saleOpen(Sale.WHITELIST)\r\n        onWhitelist(sig)\r\n        validateInput(qty)\r\n    {\r\n        batchMint(qty);\r\n    }","contract":"KYOTO","time":0}]}