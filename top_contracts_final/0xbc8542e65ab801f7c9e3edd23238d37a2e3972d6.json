{"time":138,"results":[{"type":"external-function ","before":"function setURI(string memory newuri) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _setURI(newuri);\n    }","after":"function setURI(string calldata newuri) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _setURI(newuri);\n    }","contract":"NiftyLaunchComics","time":0},{"type":"external-function ","before":"function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public whenNotPaused {\n        require(account == _msgSender() || isApprovedForAll(account, _msgSender()), \"Caller is not owner nor approved\");\n\n        _burnBatch(account, ids, values);\n    }","after":"function burnBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) public whenNotPaused {\n        require(account == _msgSender() || isApprovedForAll(account, _msgSender()), \"Caller is not owner nor approved\");\n\n        _burnBatch(account, ids, values);\n    }","contract":"NiftyLaunchComics","time":0},{"type":"external-function ","before":"function mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public onlyRole(MINTER_ROLE) {\n        _mint(to, id, amount, data);\n    }","after":"function mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public onlyRole(MINTER_ROLE) {\n        _mint(to, id, amount, data);\n    }","contract":"NiftyLaunchComics","time":0},{"type":"external-function ","before":"function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public onlyRole(MINTER_ROLE) {\n        _mintBatch(to, ids, amounts, data);\n    }","after":"function mintBatch(\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public onlyRole(MINTER_ROLE) {\n        _mintBatch(to, ids, amounts, data);\n    }","contract":"NiftyLaunchComics","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"NiftyLaunchComics","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"NiftyLaunchComics","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"Nifty Launch Comics\";","after":"string public constant name = \"Nifty Launch Comics\";","contract":"NiftyLaunchComics","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol = \"NLC\";","after":"string public constant symbol = \"NLC\";","contract":"NiftyLaunchComics","time":0}]}