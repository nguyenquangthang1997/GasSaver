{"time":138,"results":[{"type":"de-morgan-condition ","before":"!_isExcludedMaxTransactionAmount[to] && !_isExcludedMaxTransactionAmount[from]","after":"!(_isExcludedMaxTransactionAmount[to] && _isExcludedMaxTransactionAmount[from])","loc":{"start":{"line":551,"column":25},"end":{"line":551,"column":102}},"contract":"PochiInu","time":0},{"type":"external-function ","before":"function airdropToWallets(address[] memory wallets, uint256[] memory amountsInTokens) external onlyOwner {\n        require(wallets.length == amountsInTokens.length, \"arrays must be the same length\");\n        require(wallets.length < 200, \"Can only airdrop 200 wallets per txn due to gas limits\"); // allows for airdrop + launch at the same exact time, reducing delays and reducing sniper input.\n        for(uint256 i = 0; i < wallets.length; i++){\n            address wallet = wallets[i];\n            uint256 amount = amountsInTokens[i]*1e18;\n            _transfer(msg.sender, wallet, amount);\n        }\n    }","after":"function airdropToWallets(address[] calldata wallets, uint256[] calldata amountsInTokens) external onlyOwner {\n        require(wallets.length == amountsInTokens.length, \"arrays must be the same length\");\n        require(wallets.length < 200, \"Can only airdrop 200 wallets per txn due to gas limits\"); // allows for airdrop + launch at the same exact time, reducing delays and reducing sniper input.\n        for(uint256 i = 0; i < wallets.length; i++){\n            address wallet = wallets[i];\n            uint256 amount = amountsInTokens[i]*1e18;\n            _transfer(msg.sender, wallet, amount);\n        }\n    }","contract":"PochiInu","time":0}]}