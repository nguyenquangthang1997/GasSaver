{"time":148,"results":[{"type":"state-data-arrangement ","before":"\nstring public PROVENANCE;\nuint256 public tokenPrice = 70000000000000000;\nuint256 public presaleTokenPrice = 70000000000000000;\nuint public maxTokenPurchase = 25;\nuint public maxTokenPerWallet = 100;\nuint256 public MAX_TOKENS = 10000;\nbool public saleIsActive = false;\nstring public baseExtension = \".json\";\nstring private _baseURIextended;\nuint256 public mintSupply = 517;\naddress public devAddress = 0xb80f48D100c33AD54182eF32224D4C33Ba94e5B3;\naddress public ownerAddress1 = 0xa9D8eE8273d1b3511ec0BF514452f6eCf035f5CF;\naddress public ownerAddress2 = 0x1c3De6976e8e81C2069767B5C0591f548fe49420;\nmapping (address => bool) private _isWhiteListed;\nmapping (address => uint) private _numberOfWallets;","after":"string public PROVENANCE;\nuint256 public tokenPrice = 70000000000000000;\nuint256 public presaleTokenPrice = 70000000000000000;\nuint public maxTokenPurchase = 25;\nuint public maxTokenPerWallet = 100;\nuint256 public MAX_TOKENS = 10000;\nstring public baseExtension = \".json\";\nstring private _baseURIextended;\nuint256 public mintSupply = 517;\nmapping (address => bool) private _isWhiteListed;\nmapping (address => uint) private _numberOfWallets;\naddress public devAddress = 0xb80f48D100c33AD54182eF32224D4C33Ba94e5B3;\naddress public ownerAddress1 = 0xa9D8eE8273d1b3511ec0BF514452f6eCf035f5CF;\naddress public ownerAddress2 = 0x1c3De6976e8e81C2069767B5C0591f548fe49420;\nbool public saleIsActive = false;\n","contract":"WLD","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner() {\n        _baseURIextended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner() {\n        _baseURIextended = baseURI_;\n    }","contract":"WLD","time":0},{"type":"external-function ","before":"function setProvenance(string memory provenance) public onlyOwner {\n        PROVENANCE = provenance;\n    }","after":"function setProvenance(string calldata provenance) public onlyOwner {\n        PROVENANCE = provenance;\n    }","contract":"WLD","time":0},{"type":"external-function ","before":"function airdropTokens(uint256[] memory _ids, address[] memory _owes) public onlyOwner {\n\t\trequire(_ids.length == _owes.length && _ids.length <= 200 && _owes.length <= 200, \"Should not airdrop more than 200 items\");\n\n        for(uint i = 0; i < _ids.length; i++) {\n            _safeMint(_owes[i], _ids[i]);\n\t\t\t_numberOfWallets[_owes[i]] = _numberOfWallets[_owes[i]] + 1;\n        }\n\t}","after":"function airdropTokens(uint256[] calldata _ids, address[] calldata _owes) public onlyOwner {\n\t\trequire(_ids.length == _owes.length && _ids.length <= 200 && _owes.length <= 200, \"Should not airdrop more than 200 items\");\n\n        for(uint i = 0; i < _ids.length; i++) {\n            _safeMint(_owes[i], _ids[i]);\n\t\t\t_numberOfWallets[_owes[i]] = _numberOfWallets[_owes[i]] + 1;\n        }\n\t}","contract":"WLD","time":0},{"type":"external-function ","before":"function addWhiteListWallet (address[] memory _wallets) public {\n\t\trequire(_msgSender() == owner() || _msgSender() == devAddress, \"Owner could call reserveTokens function!\");\n\t\tfor(uint i = 0; i < _wallets.length; i++) {\n\t\t\t_isWhiteListed[_wallets[i]] = true;\n\t\t}\n\n        emit AddWhiteListWallet(_wallets);\n    }","after":"function addWhiteListWallet (address[] calldata _wallets) public {\n\t\trequire(_msgSender() == owner() || _msgSender() == devAddress, \"Owner could call reserveTokens function!\");\n\t\tfor(uint i = 0; i < _wallets.length; i++) {\n\t\t\t_isWhiteListed[_wallets[i]] = true;\n\t\t}\n\n        emit AddWhiteListWallet(_wallets);\n    }","contract":"WLD","time":0},{"type":"external-function ","before":"function removeWhiteListWallet (address[] memory _wallets) public {\n\t\trequire(_msgSender() == owner() || _msgSender() == devAddress, \"Owner could call reserveTokens function!\");\n        for(uint i = 0; i < _wallets.length; i++) {\n\t\t\t_isWhiteListed[_wallets[i]] = false;\n\t\t}\n        emit RemoveWhiteListWallet(_wallets);\n    }","after":"function removeWhiteListWallet (address[] calldata _wallets) public {\n\t\trequire(_msgSender() == owner() || _msgSender() == devAddress, \"Owner could call reserveTokens function!\");\n        for(uint i = 0; i < _wallets.length; i++) {\n\t\t\t_isWhiteListed[_wallets[i]] = false;\n\t\t}\n        emit RemoveWhiteListWallet(_wallets);\n    }","contract":"WLD","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_TOKENS = 10000;","after":"uint256 public constant MAX_TOKENS = 10000;","contract":"WLD","time":0},{"type":"constant-restrict-modification  ","before":"string public baseExtension = \".json\";","after":"string public constant baseExtension = \".json\";","contract":"WLD","time":0},{"type":"constant-restrict-modification  ","before":"address public devAddress = 0xb80f48D100c33AD54182eF32224D4C33Ba94e5B3;","after":"address public constant devAddress = 0xb80f48D100c33AD54182eF32224D4C33Ba94e5B3;","contract":"WLD","time":0}]}