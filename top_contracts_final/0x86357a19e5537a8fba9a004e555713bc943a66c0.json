{"time":168,"results":[{"type":"external-function ","before":"function whitelistClaim(uint256 tokenId, uint256 spotInWhitelist, bytes32[] memory proof) public nonReentrant {\n        require(whitelistActive, \"The whitelist is not active yet\");\n        require(tokenId > 0 && tokenId < 2001, \"Token ID invalid\");\n        require(whitelistValidated(_msgSender(), spotInWhitelist, proof), \"You're not on the whitelist\");\n        require(_previousMinters[_msgSender()] < 1, \"You've already minted\");\n\n        //Set the previousMinter value to 1 for this address as it will now mint\n        _previousMinters[_msgSender()] = 1;\n\n        _safeMint(_msgSender(), tokenId);\n    }","after":"function whitelistClaim(uint256 tokenId, uint256 spotInWhitelist, bytes32[] calldata proof) public nonReentrant {\n        require(whitelistActive, \"The whitelist is not active yet\");\n        require(tokenId > 0 && tokenId < 2001, \"Token ID invalid\");\n        require(whitelistValidated(_msgSender(), spotInWhitelist, proof), \"You're not on the whitelist\");\n        require(_previousMinters[_msgSender()] < 1, \"You've already minted\");\n\n        //Set the previousMinter value to 1 for this address as it will now mint\n        _previousMinters[_msgSender()] = 1;\n\n        _safeMint(_msgSender(), tokenId);\n    }","contract":"beckLoot","time":0},{"type":"constant-restrict-modification  ","before":"uint BASE_CREDIT_VALUE = 250;","after":"uint constant BASE_CREDIT_VALUE = 250;","contract":"beckLoot","time":0}]}