{"time":251,"results":[{"type":"external-function ","before":"function setBaseURI(string memory _baseURI) public onlyAdmin {\n    baseURI = _baseURI;\n  }","after":"function setBaseURI(string calldata _baseURI) public onlyAdmin {\n    baseURI = _baseURI;\n  }","contract":"OriginalsGlassApes","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"OriginalsGlassApes","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"OriginalsGlassApes","time":0},{"type":"external-function ","before":"function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","after":"function burnBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","contract":"OriginalsGlassApes","time":0},{"type":"constant-restrict-modification  ","before":"uint16 internal GOLD_WINDOW_MAX_SUPPLY = 100;","after":"uint16 internal constant GOLD_WINDOW_MAX_SUPPLY = 100;","contract":"OriginalsGlassApes","time":1},{"type":"constant-restrict-modification  ","before":"uint16 internal ANY_WINDOW_MAX_SUPPLY = 250;","after":"uint16 internal constant ANY_WINDOW_MAX_SUPPLY = 250;","contract":"OriginalsGlassApes","time":1},{"type":"constant-restrict-modification  ","before":"uint16 internal REMIX_WINDOW_MAX_SUPPLY = 149;","after":"uint16 internal constant REMIX_WINDOW_MAX_SUPPLY = 149;","contract":"OriginalsGlassApes","time":1},{"type":"constant-restrict-modification  ","before":"uint256 internal MAX_TOKEN_COUNT = 85;","after":"uint256 internal constant MAX_TOKEN_COUNT = 85;","contract":"OriginalsGlassApes","time":1},{"type":"constant-restrict-modification  ","before":"uint256 internal SUPPLY_PER_ADDITIONAL_TOKEN = 10;","after":"uint256 internal constant SUPPLY_PER_ADDITIONAL_TOKEN = 10;","contract":"OriginalsGlassApes","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public totalTokenSupply;","after":"uint256 public immutable totalTokenSupply;","contract":"OriginalsGlassApes","time":1}]}