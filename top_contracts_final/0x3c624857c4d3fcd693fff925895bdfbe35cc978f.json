{"time":123,"results":[{"type":"external-function ","before":"function ownerMultiClaim(address recipient, uint256[] memory tokenIds)\n        public\n        nonReentrant\n        onlyOwnerOrCreators\n    {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            require(\n                tokenIds[i] > 8488 && tokenIds[i] < 8889,\n                'Token ID invalid'\n            );\n            _safeMint(recipient, tokenIds[i]);\n        }\n    }","after":"function ownerMultiClaim(address recipient, uint256[] calldata tokenIds)\n        public\n        nonReentrant\n        onlyOwnerOrCreators\n    {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            require(\n                tokenIds[i] > 8488 && tokenIds[i] < 8889,\n                'Token ID invalid'\n            );\n            _safeMint(recipient, tokenIds[i]);\n        }\n    }","contract":"TrashPandas","time":0},{"type":"external-function ","before":"function setProvenance(string memory _newProvenance) public onlyOwner {\n        require(!metadataFrozen, 'Metadata frozen');\n        provenance = _newProvenance;\n    }","after":"function setProvenance(string calldata _newProvenance) public onlyOwner {\n        require(!metadataFrozen, 'Metadata frozen');\n        provenance = _newProvenance;\n    }","contract":"TrashPandas","time":0}]}