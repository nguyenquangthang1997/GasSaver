{"time":517,"results":[{"type":"external-function ","before":"function setAllocation (address[] memory _addresses, uint[] memory _totalAllocated, uint[] memory _initialPercentage) onlyOwner external {\n        //make sure that the length of address and total minted is the same\n        require(_addresses.length == _totalAllocated.length, \"Input array length not match\");\n        require(_addresses.length == _initialPercentage.length, \"Input array length not match\");\n        uint amountToTransfer;\n        for (uint i = 0; i < _addresses.length; i++ ) {\n            uint initialAllocation =  _totalAllocated[i] * _initialPercentage[i] / 100;\n            allocations[_addresses[i]] = Allocation(initialAllocation, _totalAllocated[i], 0);\n            amountToTransfer += _totalAllocated[i];\n            totalAllocated += _totalAllocated[i];\n        }\n        require(token.transferFrom(msg.sender, address(this), amountToTransfer), \"Token Transfer Failed\");\n    }","after":"function setAllocation (address[] calldata _addresses, uint[] calldata _totalAllocated, uint[] calldata _initialPercentage) onlyOwner external {\n        //make sure that the length of address and total minted is the same\n        require(_addresses.length == _totalAllocated.length, \"Input array length not match\");\n        require(_addresses.length == _initialPercentage.length, \"Input array length not match\");\n        uint amountToTransfer;\n        for (uint i = 0; i < _addresses.length; i++ ) {\n            uint initialAllocation =  _totalAllocated[i] * _initialPercentage[i] / 100;\n            allocations[_addresses[i]] = Allocation(initialAllocation, _totalAllocated[i], 0);\n            amountToTransfer += _totalAllocated[i];\n            totalAllocated += _totalAllocated[i];\n        }\n        require(token.transferFrom(msg.sender, address(this), amountToTransfer), \"Token Transfer Failed\");\n    }","contract":"PathPrivateCClaim","time":0}]}