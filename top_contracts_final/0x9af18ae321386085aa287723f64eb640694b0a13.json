{"time":147,"results":[{"type":"state-data-arrangement ","before":"\nuint256 private _price = 0.05 ether;\nstring public _baseTokenURI = '';\nstring public SHARK_PROVENANCE = '';\nuint256 public MAX_TOKENS_PER_TRANSACTION = 20;\nuint256 public MAX_SUPPLY = 10000;\nuint256 public RESERVED_SUPPLY = 200;\nbool public _paused = true;\nstring public LICENSE_TEXT = \"\";\nbool licenseLocked = false;\nmapping(uint => string) private _owners;\naddress t1 = 0x5a6F0489f0bfcD21889D26189C218a455612148F;\naddress t2 = 0xda73C4DFa2F04B189A7f8EafB586501b4D0B73dC;\naddress[] addressList = [t1, t2];\nuint256[] shareList = [60, 40];","after":"uint256 private _price = 0.05 ether;\nstring public _baseTokenURI = '';\nstring public SHARK_PROVENANCE = '';\nuint256 public MAX_TOKENS_PER_TRANSACTION = 20;\nuint256 public MAX_SUPPLY = 10000;\nuint256 public RESERVED_SUPPLY = 200;\nstring public LICENSE_TEXT = \"\";\nmapping(uint => string) private _owners;\naddress[] addressList = [t1, t2];\nuint256[] shareList = [60, 40];\naddress t1 = 0x5a6F0489f0bfcD21889D26189C218a455612148F;\naddress t2 = 0xda73C4DFa2F04B189A7f8EafB586501b4D0B73dC;\nbool public _paused = true;\nbool licenseLocked = false;\n","contract":"SharkCove","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","contract":"SharkCove","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        SHARK_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        SHARK_PROVENANCE = provenanceHash;\n    }","contract":"SharkCove","time":0},{"type":"external-function ","before":"function changeLicense(string memory _license) public onlyOwner {\n        require(licenseLocked == false, \"License already locked\");\n        LICENSE_TEXT = _license;\n    }","after":"function changeLicense(string calldata _license) public onlyOwner {\n        require(licenseLocked == false, \"License already locked\");\n        LICENSE_TEXT = _license;\n    }","contract":"SharkCove","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_TOKENS_PER_TRANSACTION = 20;","after":"uint256 public constant MAX_TOKENS_PER_TRANSACTION = 20;","contract":"SharkCove","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_SUPPLY = 10000;","after":"uint256 public constant MAX_SUPPLY = 10000;","contract":"SharkCove","time":0},{"type":"constant-restrict-modification  ","before":"address t1 = 0x5a6F0489f0bfcD21889D26189C218a455612148F;","after":"address constant t1 = 0x5a6F0489f0bfcD21889D26189C218a455612148F;","contract":"SharkCove","time":0},{"type":"constant-restrict-modification  ","before":"address t2 = 0xda73C4DFa2F04B189A7f8EafB586501b4D0B73dC;","after":"address constant t2 = 0xda73C4DFa2F04B189A7f8EafB586501b4D0B73dC;","contract":"SharkCove","time":0}]}