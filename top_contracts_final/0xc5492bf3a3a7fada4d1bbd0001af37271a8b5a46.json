{"time":21,"results":[{"type":"external-function ","before":"function claim(address account, uint256 _index, uint256 _amount, bytes32[] memory _proof) external {\n    require(!isClaimed(_index), \"Claimed already\");\n\n    bytes32 node = keccak256(abi.encodePacked(_index, account, _amount));\n    require(_proof.verify(merkleRoot, node), \"Wrong proof\");\n\n    _setClaimed(_index);\n    uint256 upfront = _amount / upfrontDivisor;\n    uint256 adjustedAmount = _amount - upfront;\n\n    toAirdrop.mintAirdrops(account, adjustedAmount, upfront, start, end);\n    emit Claimed(_index, account, _amount);\n  }","after":"function claim(address account, uint256 _index, uint256 _amount, bytes32[] calldata _proof) external {\n    require(!isClaimed(_index), \"Claimed already\");\n\n    bytes32 node = keccak256(abi.encodePacked(_index, account, _amount));\n    require(_proof.verify(merkleRoot, node), \"Wrong proof\");\n\n    _setClaimed(_index);\n    uint256 upfront = _amount / upfrontDivisor;\n    uint256 adjustedAmount = _amount - upfront;\n\n    toAirdrop.mintAirdrops(account, adjustedAmount, upfront, start, end);\n    emit Claimed(_index, account, _amount);\n  }","contract":"MerkleMinter","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 public merkleRoot;","after":"bytes32 public immutable merkleRoot;","contract":"MerkleMinter","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public start;","after":"uint256 public immutable start;","contract":"MerkleMinter","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public end;","after":"uint256 public immutable end;","contract":"MerkleMinter","time":0},{"type":"immutable-restrict-modification ","before":"uint256 upfrontDivisor;","after":"uint256 immutable upfrontDivisor;","contract":"MerkleMinter","time":0}]}