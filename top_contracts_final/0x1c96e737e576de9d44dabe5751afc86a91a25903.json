{"time":133,"results":[{"type":"external-function ","before":"function ownerMintMany(address[] memory tos_, uint256[] memory amounts_) external onlyOwner {\n        require(tos_.length == amounts_.length, \"ownerMintMany: array length mismatch!\");\n        for (uint256 i = 0; i < tos_.length; i++) { \n            _mintMany(tos_[i], amounts_[i]); \n        }\n    }","after":"function ownerMintMany(address[] calldata tos_, uint256[] calldata amounts_) external onlyOwner {\n        require(tos_.length == amounts_.length, \"ownerMintMany: array length mismatch!\");\n        for (uint256 i = 0; i < tos_.length; i++) { \n            _mintMany(tos_[i], amounts_[i]); \n        }\n    }","contract":"SpaceYetis","time":0},{"type":"external-function ","before":"function whitelistMint(uint256 amount_, bytes32[] memory proof_) external payable onlySender whitelistMintEnabled {\n        require(isWhitelisted(msg.sender, proof_), \"You are not whitelisted!\");\n        require(maxMintsPerWL >= amount_, \"Maximum 3 mints per tx for whitelist!\");\n        require(maxMintsPerWL >= addressToWLMinted[msg.sender] + amount_, \"Amount exceeds available for whitelist!\");\n        require(msg.value == mintPrice * amount_, \"Invalid value sent!\");\n\n        addressToWLMinted[msg.sender] += amount_;\n\n        _mintMany(msg.sender, amount_);\n    }","after":"function whitelistMint(uint256 amount_, bytes32[] calldata proof_) external payable onlySender whitelistMintEnabled {\n        require(isWhitelisted(msg.sender, proof_), \"You are not whitelisted!\");\n        require(maxMintsPerWL >= amount_, \"Maximum 3 mints per tx for whitelist!\");\n        require(maxMintsPerWL >= addressToWLMinted[msg.sender] + amount_, \"Amount exceeds available for whitelist!\");\n        require(msg.value == mintPrice * amount_, \"Invalid value sent!\");\n\n        addressToWLMinted[msg.sender] += amount_;\n\n        _mintMany(msg.sender, amount_);\n    }","contract":"SpaceYetis","time":0},{"type":"external-function ","before":"function setBaseTokenURI(string memory uri_) external onlyOwner {\n        _setBaseTokenURI(uri_);\n    }","after":"function setBaseTokenURI(string calldata uri_) external onlyOwner {\n        _setBaseTokenURI(uri_);\n    }","contract":"SpaceYetis","time":0},{"type":"external-function ","before":"function setBaseTokenURI_EXT(string memory ext_) external onlyOwner {\n        _setBaseTokenURI_EXT(ext_);\n    }","after":"function setBaseTokenURI_EXT(string calldata ext_) external onlyOwner {\n        _setBaseTokenURI_EXT(ext_);\n    }","contract":"SpaceYetis","time":0},{"type":"external-function ","before":"function multiTransferFrom(address from_, address to_, uint256[] memory tokenIds_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            transferFrom(from_, to_, tokenIds_[i]);\n        }\n    }","after":"function multiTransferFrom(address from_, address to_, uint256[] calldata tokenIds_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            transferFrom(from_, to_, tokenIds_[i]);\n        }\n    }","contract":"SpaceYetis","time":0},{"type":"external-function ","before":"function multiSafeTransferFrom(address from_, address to_, uint256[] memory tokenIds_, bytes memory data_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            safeTransferFrom(from_, to_, tokenIds_[i], data_);\n        }\n    }","after":"function multiSafeTransferFrom(address from_, address to_, uint256[] calldata tokenIds_, bytes calldata data_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            safeTransferFrom(from_, to_, tokenIds_[i], data_);\n        }\n    }","contract":"SpaceYetis","time":0},{"type":"external-function ","before":"function setPayableGovernanceShareholders(address payable[] memory addresses_, uint256[] memory shares_) public onlyPayableGovernanceSetter {\n        require(_payableGovernanceAddresses.length == 0 && _payableGovernanceShares.length == 0, \"Payable Governance already set! To set again, reset first!\");\n        require(addresses_.length == shares_.length, \"Address and Shares length mismatch!\");\n        uint256 _totalShares;\n        for (uint256 i = 0; i < addresses_.length; i++) {\n            _totalShares += shares_[i];\n            _payableGovernanceAddresses.push(addresses_[i]);\n            _payableGovernanceShares.push(shares_[i]);\n        }\n        require(_totalShares == 1000, \"Total Shares is not 1000!\");\n    }","after":"function setPayableGovernanceShareholders(address payable[] calldata addresses_, uint256[] calldata shares_) public onlyPayableGovernanceSetter {\n        require(_payableGovernanceAddresses.length == 0 && _payableGovernanceShares.length == 0, \"Payable Governance already set! To set again, reset first!\");\n        require(addresses_.length == shares_.length, \"Address and Shares length mismatch!\");\n        uint256 _totalShares;\n        for (uint256 i = 0; i < addresses_.length; i++) {\n            _totalShares += shares_[i];\n            _payableGovernanceAddresses.push(addresses_[i]);\n            _payableGovernanceShares.push(shares_[i]);\n        }\n        require(_totalShares == 1000, \"Total Shares is not 1000!\");\n    }","contract":"SpaceYetis","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 4444;","after":"uint256 public constant maxSupply = 4444;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public publicMaxMintsPerTx = 5;","after":"uint256 public constant publicMaxMintsPerTx = 5;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public maxMintsPerWL = 3;","after":"uint256 public constant maxMintsPerWL = 3;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"address public satelliteStationAddress = 0x69F7f7053024cd5923A11718F3A28cC62F2AF3a7;","after":"address public constant satelliteStationAddress = 0x69F7f7053024cd5923A11718F3A28cC62F2AF3a7;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"address public SSTokenReceiver = 0x05b19Db67f83850fd79FDd308eaEDAA8fd9d8381;","after":"address public constant SSTokenReceiver = 0x05b19Db67f83850fd79FDd308eaEDAA8fd9d8381;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"address public SSTokenAddress = 0x984b6968132DA160122ddfddcc4461C995741513;","after":"address public constant SSTokenAddress = 0x984b6968132DA160122ddfddcc4461C995741513;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public SSTokensPerMint = 20 ether;","after":"uint256 public constant SSTokensPerMint = 20 ether;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public SSTokensAvailable = 25;","after":"uint256 public constant SSTokensAvailable = 25;","contract":"SpaceYetis","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public SSMintsPerAddress = 1;","after":"uint256 public constant SSMintsPerAddress = 1;","contract":"SpaceYetis","time":1}]}