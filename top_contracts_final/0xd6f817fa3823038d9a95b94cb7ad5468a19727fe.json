{"time":627,"results":[{"type":"external-function ","before":"function mintFreePresaleWithEtherCards(uint256[] memory tokenIds) external {\n        require(checkPresaleIsActive(),\"presale not open\");\n        uint256 numberOfCards = eligibleTokens(tokenIds);\n        require(totalSupply()+numberOfCards <= _maxSupply,\"Not menough cards remaining\");\n        uint tfec = _totalFreeEC + numberOfCards;\n        require(tfec <= _maxFreeEC, \"EC allocation exceeded\");\n        _freeClaimedPerWallet[msg.sender] += numberOfCards;\n        require(_freeClaimedPerWallet[msg.sender] <= _freePerAddress, \"Max free per address exceeded\");\n        _totalFreeEC = tfec;\n        _mintCards(numberOfCards,msg.sender);\n    }","after":"function mintFreePresaleWithEtherCards(uint256[] calldata tokenIds) external {\n        require(checkPresaleIsActive(),\"presale not open\");\n        uint256 numberOfCards = eligibleTokens(tokenIds);\n        require(totalSupply()+numberOfCards <= _maxSupply,\"Not menough cards remaining\");\n        uint tfec = _totalFreeEC + numberOfCards;\n        require(tfec <= _maxFreeEC, \"EC allocation exceeded\");\n        _freeClaimedPerWallet[msg.sender] += numberOfCards;\n        require(_freeClaimedPerWallet[msg.sender] <= _freePerAddress, \"Max free per address exceeded\");\n        _totalFreeEC = tfec;\n        _mintCards(numberOfCards,msg.sender);\n    }","contract":"SkeletonCrew","time":0},{"type":"external-function ","before":"function communityPurchase(uint256 tokenCount, bytes memory signature, uint256 role) external payable {\n        require(_communityAddress != address(0),\"Community sale not active\");\n\n        (bool success, ) = _communityAddress.call{value: msg.value}(\n            abi.encodeWithSignature(\n                \"communityPurchase(address,uint256,bytes,uint256)\",\n                msg.sender,\n                tokenCount,\n                signature,\n                role)\n        );\n        if (success) return;\n        \n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            revert(ptr, size)\n        }\n    \n    }","after":"function communityPurchase(uint256 tokenCount, bytes calldata signature, uint256 role) external payable {\n        require(_communityAddress != address(0),\"Community sale not active\");\n\n        (bool success, ) = _communityAddress.call{value: msg.value}(\n            abi.encodeWithSignature(\n                \"communityPurchase(address,uint256,bytes,uint256)\",\n                msg.sender,\n                tokenCount,\n                signature,\n                role)\n        );\n        if (success) return;\n        \n        assembly {\n            let ptr := mload(0x40)\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n            revert(ptr, size)\n        }\n    \n    }","contract":"SkeletonCrew","time":0},{"type":"external-function ","before":"function setPreRevealURI(string memory _pre) external onlyOwner {\n        _tokenPreRevealURI = _pre;\n    }","after":"function setPreRevealURI(string calldata _pre) external onlyOwner {\n        _tokenPreRevealURI = _pre;\n    }","contract":"SkeletonCrew","time":0},{"type":"constant-restrict-modification  ","before":"uint256             _clientMintPointer = 1;","after":"uint256             constant _clientMintPointer = 1;","contract":"SkeletonCrew","time":0},{"type":"constant-restrict-modification  ","before":"uint256             _ecMintPointer = 1;","after":"uint256             constant _ecMintPointer = 1;","contract":"SkeletonCrew","time":0},{"type":"state-data-arrangement ","before":"\nstring                   constant _name   = \"Toddlerpillars\";\nstring                   constant _symbol = \"TDPL\";\nuint256                  constant _maxSupply = 9999;\naddress payable[]           _wallets = [ \n                                  payable(0x7F17cD2B6627166F2c69884AD8DA14fAb3fff522) \n                                 , payable(0xb108Cd8C67d0ad0690A119BBcc0708289A4Ee9c3) \n                                 , payable(0x422D9914eE2A933a040815F9A619D27252373EbD) \n                                 ];\nuint256 []                  _shares = [ \n                                  150 \n                                 , 250 \n                                 , 600 \n                                \n                                ];\nuint256                  constant _fullPrice = 40000000000000000;\nuint256                  constant _discountPrice = 40000000000000000;\nuint256                  constant _communityPrice = 40000000000000000;\nbool                              _timedPresale  = true;\nuint256                           _presaleStart = 1637254800;\nuint256                           _presaleEnd = 1637341200;\nbool                              _timedSale = true;\nuint256                           _saleStart = 1637341200;\nuint256                           _saleEnd = 1638550800;\nbool                     constant _dustMintAvailable = false;\nuint256                  constant _dustPerAddress = 0;\nuint256                  constant _dustPrice = 1;\nuint256                  constant _maxFreeEC = 0;\nuint256                           _totalFreeEC;\nuint256                  constant _maxDiscount = 9999;\nuint256                           _totalDiscount;\nuint256                  constant _freePerAddress = 0;\nuint256                  constant _discountedPerAddress = 6;\nstring                            _tokenPreRevealURI = \"https://ether-cards.mypinata.cloud/ipfs/QmeKvyYvMThpuDUQ7po4AWxr5SUpfyNKecDmsgS4VqZmNu\";\naddress                  constant public _signer = 0xA55c7770161b6325B64a622821e2db3551Df6C9e;\naddress             constant _clientVault = 0x422D9914eE2A933a040815F9A619D27252373EbD;\nuint256             _clientMintPointer = 1;\nuint256             _clientMintPosition = 0;\nuint256             constant _clientMintLimit = 550;\naddress             constant _ecVault = 0x9dFF1113CF4186deC4feb774632356D22f07eB9e;\nuint256             _ecMintPointer = 1;\nuint256             _ecMintPosition = 0;\nuint256             constant _ecMintLimit = 100;\nuint256             constant _maxPerSaleMint = 50;","after":"string                   constant _name   = \"Toddlerpillars\";\nstring                   constant _symbol = \"TDPL\";\nuint256                  constant _maxSupply = 9999;\naddress payable[]           _wallets = [ \n                                  payable(0x7F17cD2B6627166F2c69884AD8DA14fAb3fff522) \n                                 , payable(0xb108Cd8C67d0ad0690A119BBcc0708289A4Ee9c3) \n                                 , payable(0x422D9914eE2A933a040815F9A619D27252373EbD) \n                                 ];\nuint256 []                  _shares = [ \n                                  150 \n                                 , 250 \n                                 , 600 \n                                \n                                ];\nuint256                  constant _fullPrice = 40000000000000000;\nuint256                  constant _discountPrice = 40000000000000000;\nuint256                  constant _communityPrice = 40000000000000000;\nuint256                           _presaleStart = 1637254800;\nuint256                           _presaleEnd = 1637341200;\nuint256                           _saleStart = 1637341200;\nuint256                           _saleEnd = 1638550800;\nuint256                  constant _dustPerAddress = 0;\nuint256                  constant _dustPrice = 1;\nuint256                  constant _maxFreeEC = 0;\nuint256                           _totalFreeEC;\nuint256                  constant _maxDiscount = 9999;\nuint256                           _totalDiscount;\nuint256                  constant _freePerAddress = 0;\nuint256                  constant _discountedPerAddress = 6;\nstring                            _tokenPreRevealURI = \"https://ether-cards.mypinata.cloud/ipfs/QmeKvyYvMThpuDUQ7po4AWxr5SUpfyNKecDmsgS4VqZmNu\";\nuint256             _clientMintPointer = 1;\nuint256             _clientMintPosition = 0;\nuint256             constant _clientMintLimit = 550;\nuint256             _ecMintPointer = 1;\nuint256             _ecMintPosition = 0;\nuint256             constant _ecMintLimit = 100;\nuint256             constant _maxPerSaleMint = 50;\naddress                  constant public _signer = 0xA55c7770161b6325B64a622821e2db3551Df6C9e;\naddress             constant _clientVault = 0x422D9914eE2A933a040815F9A619D27252373EbD;\naddress             constant _ecVault = 0x9dFF1113CF4186deC4feb774632356D22f07eB9e;\nbool                              _timedPresale  = true;\nbool                              _timedSale = true;\nbool                     constant _dustMintAvailable = false;\n","contract":"pixiedust","time":0},{"type":"struct-data-arrangement ","before":"\nuint256             _maxSupply\nuint256             _mintPointer\naddress payable[]   _wallets\nuint256 []          _shares\nuint256             _fullPrice\nuint256             _discountPrice\nuint256             _communityPrice\nbool                 _timedPresale\nuint256              _presaleStart\nuint256              _presaleEnd\nbool                 _timedSale\nuint256              _saleStart\nuint256              _saleEnd\nbool                 _dustMintAvailable\nuint256              _dustPrice\nuint256              _maxFreeEC\nuint256              _totalFreeEC\nuint256              _maxDiscount\nuint256              _totalDiscount\nuint256              _freePerAddress\nuint256              _discountedPerAddress\nstring               _tokenPreRevealURI\naddress              _signer\nbool                 _presaleActive\nbool                 _saleActive\nbool                 _dustMintActive\nuint256              _freeClaimed\nuint256              _discountedClaimed\naddress             EC\naddress             DUST\nuint256             _maxPerSaleMint\nuint256             _maxUserMintable\nuint256             _userMinted\nuint256             _communityMinted\nbool                _randomReceived\nbool                _secondReceived\nuint256             _randomCL\nuint256             _randomCL2\nuint256             _ts1\nuint256             _ts2","after":"uint256             _maxSupply\nuint256             _mintPointer\naddress payable[]   _wallets\nuint256 []          _shares\nuint256             _fullPrice\nuint256             _discountPrice\nuint256             _communityPrice\nuint256              _presaleStart\nuint256              _presaleEnd\nuint256              _saleStart\nuint256              _saleEnd\nuint256              _dustPrice\nuint256              _maxFreeEC\nuint256              _totalFreeEC\nuint256              _maxDiscount\nuint256              _totalDiscount\nuint256              _freePerAddress\nuint256              _discountedPerAddress\nstring               _tokenPreRevealURI\nuint256              _freeClaimed\nuint256              _discountedClaimed\nuint256             _maxPerSaleMint\nuint256             _maxUserMintable\nuint256             _userMinted\nuint256             _communityMinted\nuint256             _randomCL\nuint256             _randomCL2\nuint256             _ts1\nuint256             _ts2\naddress              _signer\naddress             EC\naddress             DUST\nbool                 _timedPresale\nbool                 _timedSale\nbool                 _dustMintAvailable\nbool                 _presaleActive\nbool                 _saleActive\nbool                 _dustMintActive\nbool                _randomReceived\nbool                _secondReceived\n","contract":"pixiedust","time":3}]}