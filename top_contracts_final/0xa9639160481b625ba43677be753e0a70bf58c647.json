{"time":226,"results":[{"type":"de-morgan-condition ","before":"!_blacklisted[sender] && !_blacklisted[recipient]","after":"!(_blacklisted[sender] && _blacklisted[recipient])","loc":{"start":{"line":1568,"column":16},"end":{"line":1568,"column":64}},"contract":"RBXS","time":0},{"type":"external-function ","before":"function exemptAddressBatch(address[] memory account, bool value) external {\r\n        require(\r\n          hasRole(DEFAULT_ADMIN_ROLE, msg.sender)\r\n          , \"Insufficient privileges\"\r\n        );\r\n        for (uint256 i = 0; i < account.length; i++) {\r\n            _exempted[account[i]] = value;\r\n        }     \r\n    }","after":"function exemptAddressBatch(address[] calldata account, bool value) external {\r\n        require(\r\n          hasRole(DEFAULT_ADMIN_ROLE, msg.sender)\r\n          , \"Insufficient privileges\"\r\n        );\r\n        for (uint256 i = 0; i < account.length; i++) {\r\n            _exempted[account[i]] = value;\r\n        }     \r\n    }","contract":"RBXS","time":0},{"type":"constant-restrict-modification  ","before":"uint public DIVISOR = 1_000;","after":"uint public constant DIVISOR = 1_000;","contract":"RBXS","time":0},{"type":"constant-restrict-modification  ","before":"uint public initLimit = 50_000 * 10 ** decimals();","after":"uint public constant initLimit = 50_000 * 10 ** decimals();","contract":"RBXS","time":0},{"type":"constant-restrict-modification  ","before":"uint public fundingFee = 25;","after":"uint public constant fundingFee = 25;","contract":"RBXS","time":0},{"type":"immutable-restrict-modification ","before":"address public previousToken;","after":"address public immutable previousToken;","contract":"RBXS","time":0}]}