{"time":89,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public mintPrice = 0.08 ether;\nuint256 public maxTokens = 10000;\nuint256 public whitelistAmount = 1200;\nuint256 public mintsPerWhitelist = 4;\nmapping(address => uint256) public addressToWhitelistMinted;\nmapping(address => bool) public isWhitelisted;\nbool public whitelistMintEnabled = false;\nuint256 public whitelistMintStartTime = 1641726000;\nuint256 public maxMintsPerTx = 10;\nbool public publicMintEnabled = false;\nuint256 public publicMintStartTime;\nmapping(address => bool) public shareSigned;","after":"uint256 public mintPrice = 0.08 ether;\nuint256 public maxTokens = 10000;\nuint256 public whitelistAmount = 1200;\nuint256 public mintsPerWhitelist = 4;\nmapping(address => uint256) public addressToWhitelistMinted;\nmapping(address => bool) public isWhitelisted;\nuint256 public whitelistMintStartTime = 1641726000;\nuint256 public maxMintsPerTx = 10;\nuint256 public publicMintStartTime;\nmapping(address => bool) public shareSigned;\nbool public whitelistMintEnabled = false;\nbool public publicMintEnabled = false;\n","contract":"VoxxtPrimal","time":0},{"type":"external-function ","before":"function setBaseTokenURI(string memory uri_) external onlyOwner {\n        _setBaseTokenURI(uri_);\n    }","after":"function setBaseTokenURI(string calldata uri_) external onlyOwner {\n        _setBaseTokenURI(uri_);\n    }","contract":"VoxxtPrimal","time":0},{"type":"external-function ","before":"function setBaseTokenURI_EXT(string memory ext_) external onlyOwner {\n        _setBaseTokenURI_EXT(ext_);\n    }","after":"function setBaseTokenURI_EXT(string calldata ext_) external onlyOwner {\n        _setBaseTokenURI_EXT(ext_);\n    }","contract":"VoxxtPrimal","time":0},{"type":"external-function ","before":"function multiTransferFrom(address from_, address to_, uint256[] memory tokenIds_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            transferFrom(from_, to_, tokenIds_[i]);\n        }\n    }","after":"function multiTransferFrom(address from_, address to_, uint256[] calldata tokenIds_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            transferFrom(from_, to_, tokenIds_[i]);\n        }\n    }","contract":"VoxxtPrimal","time":0},{"type":"external-function ","before":"function multiSafeTransferFrom(address from_, address to_, uint256[] memory tokenIds_, bytes memory data_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            safeTransferFrom(from_, to_, tokenIds_[i], data_);\n        }\n    }","after":"function multiSafeTransferFrom(address from_, address to_, uint256[] calldata tokenIds_, bytes calldata data_) public virtual {\n        for (uint256 i = 0; i < tokenIds_.length; i++) {\n            safeTransferFrom(from_, to_, tokenIds_[i], data_);\n        }\n    }","contract":"VoxxtPrimal","time":0}]}