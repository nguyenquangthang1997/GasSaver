{"time":183,"results":[{"type":"state-data-arrangement ","before":"\nstring baseURI;\nstring public contractURI;\nuint public constant MAX_ANGRYAPES = 3333;\nuint public constant MAX_SALE = 25;\nuint public constant MAX_PRESALE = 2;\naddress saleAddress;\naddress devAddress;\nuint public price;\nmapping(address => uint256) private preSaleAllowance;\nbool public hasPreSaleStarted = false;\nbool public preSaleOver = false;\nbool public hasSaleStarted = false;","after":"string baseURI;\nstring public contractURI;\nuint public constant MAX_ANGRYAPES = 3333;\nuint public constant MAX_SALE = 25;\nuint public constant MAX_PRESALE = 2;\nuint public price;\nmapping(address => uint256) private preSaleAllowance;\naddress saleAddress;\naddress devAddress;\nbool public hasPreSaleStarted = false;\nbool public preSaleOver = false;\nbool public hasSaleStarted = false;\n","contract":"AngryApesArmyNFT","time":0},{"type":"external-function ","before":"function batchMintByOwner(address[] memory _mintAddressList, uint256[] memory _quantityList) external onlyOwner {\n        require (_mintAddressList.length == _quantityList.length, \"The length should be same\");\n\n        for (uint256 i = 0; i < _mintAddressList.length; i += 1) {\n            mintByOwner(_mintAddressList[i], _quantityList[i]);\n        }\n    }","after":"function batchMintByOwner(address[] calldata _mintAddressList, uint256[] calldata _quantityList) external onlyOwner {\n        require (_mintAddressList.length == _quantityList.length, \"The length should be same\");\n\n        for (uint256 i = 0; i < _mintAddressList.length; i += 1) {\n            mintByOwner(_mintAddressList[i], _quantityList[i]);\n        }\n    }","contract":"AngryApesArmyNFT","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _URI) external onlyOwner {\n        baseURI = _URI;\n    }","after":"function setBaseURI(string calldata _URI) external onlyOwner {\n        baseURI = _URI;\n    }","contract":"AngryApesArmyNFT","time":0},{"type":"external-function ","before":"function setContractURI(string memory _URI) external onlyOwner {\n        contractURI = _URI;\n    }","after":"function setContractURI(string calldata _URI) external onlyOwner {\n        contractURI = _URI;\n    }","contract":"AngryApesArmyNFT","time":0},{"type":"external-function ","before":"function addEarlyBirds(address[] memory earlyBirdAddresses) external onlyOwner {\n        require(!preSaleOver, \"presale is over, no more allowances\");\n        \n        for (uint i = 0; i < earlyBirdAddresses.length; i++) {\n            preSaleAllowance[earlyBirdAddresses[i]] = MAX_PRESALE;\n        }\n    }","after":"function addEarlyBirds(address[] calldata earlyBirdAddresses) external onlyOwner {\n        require(!preSaleOver, \"presale is over, no more allowances\");\n        \n        for (uint i = 0; i < earlyBirdAddresses.length; i++) {\n            preSaleAllowance[earlyBirdAddresses[i]] = MAX_PRESALE;\n        }\n    }","contract":"AngryApesArmyNFT","time":0},{"type":"immutable-restrict-modification ","before":"address devAddress;","after":"address immutable devAddress;","contract":"AngryApesArmyNFT","time":1}]}