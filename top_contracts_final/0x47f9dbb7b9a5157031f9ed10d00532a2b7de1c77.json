{"time":156,"results":[{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not admin\");\n        _currentBaseURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not admin\");\n        _currentBaseURI = baseURI;\n    }","contract":"TilesBlocksCore","time":0},{"type":"external-function ","before":"function setScriptIPFS(string memory _scriptIPFS) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not admin\");\n        scriptIPFS = _scriptIPFS;\n    }","after":"function setScriptIPFS(string calldata _scriptIPFS) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not admin\");\n        scriptIPFS = _scriptIPFS;\n    }","contract":"TilesBlocksCore","time":0},{"type":"external-function ","before":"function setScriptArweave(string memory _scriptArweave) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not admin\");\n        scriptArweave = _scriptArweave;\n    }","after":"function setScriptArweave(string calldata _scriptArweave) public {\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Caller is not admin\");\n        scriptArweave = _scriptArweave;\n    }","contract":"TilesBlocksCore","time":0},{"type":"external-function ","before":"function burnToMint(uint256[] memory tokenIds, address _owner) public  {\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\n        //require(totalMints >= genesisMintLimit, \"Burns can only start after all Blocks are minted\");\n        require(tokenIds.length < 10, \"Total burn limit is 9\");\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            require(_owner == ownerOf(tokenIds[i]), \"Only the owner can burn pieces\");\n            _burn(tokenIds[i]);\n        }\n        for (uint8 i = 0; i < tokenIds.length - 1; i++) {\n            _mint(_owner);\n        }\n        \n    }","after":"function burnToMint(uint256[] calldata tokenIds, address _owner) public  {\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\n        //require(totalMints >= genesisMintLimit, \"Burns can only start after all Blocks are minted\");\n        require(tokenIds.length < 10, \"Total burn limit is 9\");\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            require(_owner == ownerOf(tokenIds[i]), \"Only the owner can burn pieces\");\n            _burn(tokenIds[i]);\n        }\n        for (uint8 i = 0; i < tokenIds.length - 1; i++) {\n            _mint(_owner);\n        }\n        \n    }","contract":"TilesBlocksCore","time":0}]}