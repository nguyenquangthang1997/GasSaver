{"time":80,"results":[{"type":"external-function ","before":"function updateProjectArtistName(uint256 _projectId, string memory _projectArtistName) onlyArtist(_projectId) public {\n        braindrops.updateProjectArtistName(_projectId, _projectArtistName);\n    }","after":"function updateProjectArtistName(uint256 _projectId, string calldata _projectArtistName) onlyArtist(_projectId) public {\n        braindrops.updateProjectArtistName(_projectId, _projectArtistName);\n    }","contract":"ArtistProxy","time":0},{"type":"external-function ","before":"function updateProjectDescription(uint256 _projectId, string memory _projectDescription) onlyArtist(_projectId) public {\n        braindrops.updateProjectDescription(_projectId, _projectDescription);\n    }","after":"function updateProjectDescription(uint256 _projectId, string calldata _projectDescription) onlyArtist(_projectId) public {\n        braindrops.updateProjectDescription(_projectId, _projectDescription);\n    }","contract":"ArtistProxy","time":0},{"type":"external-function ","before":"function updateProjectWebsite(uint256 _projectId, string memory _projectWebsite) onlyArtist(_projectId) public {\n        braindrops.updateProjectWebsite(_projectId, _projectWebsite);\n    }","after":"function updateProjectWebsite(uint256 _projectId, string calldata _projectWebsite) onlyArtist(_projectId) public {\n        braindrops.updateProjectWebsite(_projectId, _projectWebsite);\n    }","contract":"ArtistProxy","time":0},{"type":"external-function ","before":"function updateProjectLicense(uint256 _projectId, string memory _projectLicense) onlyArtist(_projectId) public {\n        braindrops.updateProjectLicense(_projectId, _projectLicense);\n    }","after":"function updateProjectLicense(uint256 _projectId, string calldata _projectLicense) onlyArtist(_projectId) public {\n        braindrops.updateProjectLicense(_projectId, _projectLicense);\n    }","contract":"ArtistProxy","time":0},{"type":"external-function ","before":"function updateProjectBaseURI(uint256 _projectId, string memory _projectBaseURI) onlyArtist(_projectId) public {\n        braindrops.updateProjectBaseURI(_projectId, _projectBaseURI);\n    }","after":"function updateProjectBaseURI(uint256 _projectId, string calldata _projectBaseURI) onlyArtist(_projectId) public {\n        braindrops.updateProjectBaseURI(_projectId, _projectBaseURI);\n    }","contract":"ArtistProxy","time":0},{"type":"external-function ","before":"function setProvenanceHash(uint256 _projectId, string memory provenanceHash) public onlyArtist(_projectId) {\n        braindrops.setProvenanceHash(_projectId, provenanceHash);\n    }","after":"function setProvenanceHash(uint256 _projectId, string calldata provenanceHash) public onlyArtist(_projectId) {\n        braindrops.setProvenanceHash(_projectId, provenanceHash);\n    }","contract":"ArtistProxy","time":0}]}