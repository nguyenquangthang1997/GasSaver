{"time":137,"results":[{"type":"state-data-arrangement ","before":"\naddress public verifiedSigner = 0xfA9500C2F2d397e95de8E67a0D78EeaC98340921;\naddress private memberOne = 0xDcfe06271A89d454fF3302bAB78d564ad6952607;\naddress private memberTwo = 0x983C5BC4C3Cfb1e615fc2C686BF996c0cc0532D3;\naddress private memberThree = 0x59AC63f2ce680CaDF37193CFed3D41C47F3d8c5E;\naddress private memberFour = 0x713eeD92d42dF88AB85934E7156aCDC47b9968C4;\nuint256 public NFT_MAX = 2222;\nuint256 public NFT_PRICE = 0.07 ether;\nuint256 public constant NFTS_PER_MINT = 8;\nstring private _contractURI;\nstring private _tokenBaseURI;\nstring public _mysteryURI;\nmapping(uint256 => bool) private usedNonce;\nbool public revealed;\nbool public saleLive = true;\nbool public giftLive = true;\nbool public burnLive;\nuint256 public totalSupply;\nuint256 public totalBurnedSupply;","after":"uint256 public NFT_MAX = 2222;\nuint256 public NFT_PRICE = 0.07 ether;\nuint256 public constant NFTS_PER_MINT = 8;\nstring private _contractURI;\nstring private _tokenBaseURI;\nstring public _mysteryURI;\nmapping(uint256 => bool) private usedNonce;\nuint256 public totalSupply;\nuint256 public totalBurnedSupply;\naddress public verifiedSigner = 0xfA9500C2F2d397e95de8E67a0D78EeaC98340921;\naddress private memberOne = 0xDcfe06271A89d454fF3302bAB78d564ad6952607;\naddress private memberTwo = 0x983C5BC4C3Cfb1e615fc2C686BF996c0cc0532D3;\naddress private memberThree = 0x59AC63f2ce680CaDF37193CFed3D41C47F3d8c5E;\naddress private memberFour = 0x713eeD92d42dF88AB85934E7156aCDC47b9968C4;\nbool public revealed;\nbool public saleLive = true;\nbool public giftLive = true;\nbool public burnLive;\n","contract":"CYBERUNNERS","time":2},{"type":"external-function ","before":"function mintGift(\n        uint256 tokenQuantity,\n        uint256 nonce,\n        address wallet,\n        bytes memory signature\n    ) external {\n        require(giftLive, \"GIFTING_CLOSED\");\n        require(totalSupply < NFT_MAX, \"OUT_OF_STOCK\");\n        require(totalSupply + tokenQuantity <= NFT_MAX, \"EXCEED_PUBLIC\");\n        require(usedNonce[nonce] == false, \"NONCE_ALREADY_USED\");\n        require(\n            matchSigner(\n                hashTransaction(nonce, wallet, tokenQuantity),\n                signature\n            ),\n            \"NOT_ALLOWED_TO_MINT\"\n        );\n        usedNonce[nonce] = true;\n\n        // gifts wallet input\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _safeMint(wallet, totalSupply + i + 1);\n        }\n\n        totalSupply += tokenQuantity;\n    }","after":"function mintGift(\n        uint256 tokenQuantity,\n        uint256 nonce,\n        address wallet,\n        bytes calldata signature\n    ) external {\n        require(giftLive, \"GIFTING_CLOSED\");\n        require(totalSupply < NFT_MAX, \"OUT_OF_STOCK\");\n        require(totalSupply + tokenQuantity <= NFT_MAX, \"EXCEED_PUBLIC\");\n        require(usedNonce[nonce] == false, \"NONCE_ALREADY_USED\");\n        require(\n            matchSigner(\n                hashTransaction(nonce, wallet, tokenQuantity),\n                signature\n            ),\n            \"NOT_ALLOWED_TO_MINT\"\n        );\n        usedNonce[nonce] = true;\n\n        // gifts wallet input\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _safeMint(wallet, totalSupply + i + 1);\n        }\n\n        totalSupply += tokenQuantity;\n    }","contract":"CYBERUNNERS","time":0},{"type":"external-function ","before":"function mint(\n        uint256 tokenQuantity,\n        uint256 nonce,\n        address wallet,\n        bytes memory signature\n    ) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n        require(totalSupply < NFT_MAX, \"OUT_OF_STOCK\");\n        require(totalSupply + tokenQuantity <= NFT_MAX, \"EXCEED_STOCK\");\n        require(NFT_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n        require(!usedNonce[nonce], \"NONCE_ALREADY_USED\");\n        require(tokenQuantity <= NFTS_PER_MINT, \"EXCEED_NFTS_PER_MINT\");\n        require(\n            matchSigner(\n                hashTransaction(nonce, wallet, tokenQuantity),\n                signature\n            ),\n            \"NOT_ALLOWED_TO_MINT\"\n        );\n        usedNonce[nonce] = true;\n\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _safeMint(msg.sender, totalSupply + i + 1);\n        }\n\n        totalSupply += tokenQuantity;\n    }","after":"function mint(\n        uint256 tokenQuantity,\n        uint256 nonce,\n        address wallet,\n        bytes calldata signature\n    ) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n        require(totalSupply < NFT_MAX, \"OUT_OF_STOCK\");\n        require(totalSupply + tokenQuantity <= NFT_MAX, \"EXCEED_STOCK\");\n        require(NFT_PRICE * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n        require(!usedNonce[nonce], \"NONCE_ALREADY_USED\");\n        require(tokenQuantity <= NFTS_PER_MINT, \"EXCEED_NFTS_PER_MINT\");\n        require(\n            matchSigner(\n                hashTransaction(nonce, wallet, tokenQuantity),\n                signature\n            ),\n            \"NOT_ALLOWED_TO_MINT\"\n        );\n        usedNonce[nonce] = true;\n\n        for (uint256 i = 0; i < tokenQuantity; i++) {\n            _safeMint(msg.sender, totalSupply + i + 1);\n        }\n\n        totalSupply += tokenQuantity;\n    }","contract":"CYBERUNNERS","time":0},{"type":"constant-restrict-modification  ","before":"address private memberOne = 0xDcfe06271A89d454fF3302bAB78d564ad6952607;","after":"address private constant memberOne = 0xDcfe06271A89d454fF3302bAB78d564ad6952607;","contract":"CYBERUNNERS","time":0},{"type":"constant-restrict-modification  ","before":"address private memberTwo = 0x983C5BC4C3Cfb1e615fc2C686BF996c0cc0532D3;","after":"address private constant memberTwo = 0x983C5BC4C3Cfb1e615fc2C686BF996c0cc0532D3;","contract":"CYBERUNNERS","time":0},{"type":"constant-restrict-modification  ","before":"address private memberThree = 0x59AC63f2ce680CaDF37193CFed3D41C47F3d8c5E;","after":"address private constant memberThree = 0x59AC63f2ce680CaDF37193CFed3D41C47F3d8c5E;","contract":"CYBERUNNERS","time":0},{"type":"constant-restrict-modification  ","before":"address private memberFour = 0x713eeD92d42dF88AB85934E7156aCDC47b9968C4;","after":"address private constant memberFour = 0x713eeD92d42dF88AB85934E7156aCDC47b9968C4;","contract":"CYBERUNNERS","time":0}]}