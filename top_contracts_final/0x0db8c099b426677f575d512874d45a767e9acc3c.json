{"time":140,"results":[{"type":"external-function ","before":"function changeBaseURI(string memory _newBaseURI) public onlyOwner {\n        baseURI = _newBaseURI;\n    }","after":"function changeBaseURI(string calldata _newBaseURI) public onlyOwner {\n        baseURI = _newBaseURI;\n    }","contract":"NFT","time":0},{"type":"external-function ","before":"function batchMint(address _to, uint256[] memory _ids, uint256[] memory _amounts) public onlyOwner {\n        _batchMint(_to, _ids, _amounts, \"\");\n    }","after":"function batchMint(address _to, uint256[] calldata _ids, uint256[] calldata _amounts) public onlyOwner {\n        _batchMint(_to, _ids, _amounts, \"\");\n    }","contract":"NFT","time":0},{"type":"external-function ","before":"function batchBurn(address _from, uint256[] memory _ids, uint256[] memory _amounts) public onlyOwner {\n        _batchBurn(_from, _ids, _amounts);\n    }","after":"function batchBurn(address _from, uint256[] calldata _ids, uint256[] calldata _amounts) public onlyOwner {\n        _batchBurn(_from, _ids, _amounts);\n    }","contract":"NFT","time":0},{"type":"external-function ","before":"function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data)\n    public override\n  {\n    // Requirements\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155PackedBalance#safeTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0),\"ERC1155PackedBalance#safeTransferFrom: INVALID_RECIPIENT\");\n    // require(_amount <= balances);  Not necessary since checked with _viewUpdateBinValue() checks\n\n    _safeTransferFrom(_from, _to, _id, _amount);\n    _callonERC1155Received(_from, _to, _id, _amount, gasleft(), _data);\n  }","after":"function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes calldata _data)\n    public override\n  {\n    // Requirements\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155PackedBalance#safeTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0),\"ERC1155PackedBalance#safeTransferFrom: INVALID_RECIPIENT\");\n    // require(_amount <= balances);  Not necessary since checked with _viewUpdateBinValue() checks\n\n    _safeTransferFrom(_from, _to, _id, _amount);\n    _callonERC1155Received(_from, _to, _id, _amount, gasleft(), _data);\n  }","contract":"NFT","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data)\n    public override\n  {\n    // Requirements\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155PackedBalance#safeBatchTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0),\"ERC1155PackedBalance#safeBatchTransferFrom: INVALID_RECIPIENT\");\n\n    _safeBatchTransferFrom(_from, _to, _ids, _amounts);\n    _callonERC1155BatchReceived(_from, _to, _ids, _amounts, gasleft(), _data);\n  }","after":"function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _amounts, bytes calldata _data)\n    public override\n  {\n    // Requirements\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155PackedBalance#safeBatchTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0),\"ERC1155PackedBalance#safeBatchTransferFrom: INVALID_RECIPIENT\");\n\n    _safeBatchTransferFrom(_from, _to, _ids, _amounts);\n    _callonERC1155BatchReceived(_from, _to, _ids, _amounts, gasleft(), _data);\n  }","contract":"NFT","time":0}]}