{"time":235,"results":[{"type":"external-function ","before":"function setContractURI(string memory uri) external adminRequired {        \n        _contractURI = uri;\n    }","after":"function setContractURI(string calldata uri) external adminRequired {        \n        _contractURI = uri;\n    }","contract":"LGNDv3","time":0},{"type":"external-function ","before":"function setLinkedAccount(string memory account) external {\n        _linkedAccounts[msg.sender] = account;\n    }","after":"function setLinkedAccount(string calldata account) external {\n        _linkedAccounts[msg.sender] = account;\n    }","contract":"LGNDv3","time":0},{"type":"external-function ","before":"function setTokenURI(uint256[] memory tokenIds, string[] calldata uris) external override adminRequired {\n        require(tokenIds.length == uris.length, \"LGND: Invalid input\");\n        for (uint i = 0; i < tokenIds.length; i++) {\n            _setTokenURI(tokenIds[i], uris[i]);            \n        }\n    }","after":"function setTokenURI(uint256[] calldata tokenIds, string[] calldata uris) external override adminRequired {\n        require(tokenIds.length == uris.length, \"LGND: Invalid input\");\n        for (uint i = 0; i < tokenIds.length; i++) {\n            _setTokenURI(tokenIds[i], uris[i]);            \n        }\n    }","contract":"LGNDv3","time":0},{"type":"external-function ","before":"function mintBridgeBatch(address to, uint256 creatorId, uint256[] memory tokenIds, string calldata linkedAccount) external override adminRequired returns (uint256[] memory) {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            _mintBridge(to,creatorId,tokenIds[i],linkedAccount,\"\");\n        }\n        return tokenIds;\n\n    }","after":"function mintBridgeBatch(address to, uint256 creatorId, uint256[] calldata tokenIds, string calldata linkedAccount) external override adminRequired returns (uint256[] memory) {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            _mintBridge(to,creatorId,tokenIds[i],linkedAccount,\"\");\n        }\n        return tokenIds;\n\n    }","contract":"LGNDv3","time":0},{"type":"external-function ","before":"function mintBridgeBatchURI(address to, uint256 creatorId, uint256[] memory tokenIds, string calldata linkedAccount, string[] calldata uris) external override adminRequired returns (uint256[] memory) {\n        require(tokenIds.length == uris.length, \"LGND: Invalid Input\");\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            _mintBridge(to,creatorId,tokenIds[i],linkedAccount,uris[i]);\n        }\n        return tokenIds;\n    }","after":"function mintBridgeBatchURI(address to, uint256 creatorId, uint256[] calldata tokenIds, string calldata linkedAccount, string[] calldata uris) external override adminRequired returns (uint256[] memory) {\n        require(tokenIds.length == uris.length, \"LGND: Invalid Input\");\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            _mintBridge(to,creatorId,tokenIds[i],linkedAccount,uris[i]);\n        }\n        return tokenIds;\n    }","contract":"LGNDv3","time":0}]}