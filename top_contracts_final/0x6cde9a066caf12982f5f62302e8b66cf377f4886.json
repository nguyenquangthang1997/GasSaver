{"time":119,"results":[{"type":"external-function ","before":"function mintOgSupp(uint256 _mintAmount, string memory _merkleProof)\r\n        public\r\n        payable\r\n        mintRequirements(_mintAmount)\r\n        presaleCheck(_merkleProof)\r\n    {\r\n        require(_mintAmount < psMaxMintPlusOne);\r\n        require(preSaleActive, \"Presale is not active\");\r\n        require(\r\n            balanceOf(msg.sender) < psMaxMintPlusOne,\r\n            \"You already minted max amount for presale\"\r\n        );\r\n\r\n        require(msg.value >= 0.02 ether * _mintAmount);\r\n\r\n        for (uint256 i = 1; i <= _mintAmount; i++) {\r\n            _mint(msg.sender, totalSupply + i);\r\n        }\r\n        unchecked {\r\n            totalSupply += _mintAmount;\r\n        }\r\n    }","after":"function mintOgSupp(uint256 _mintAmount, string calldata _merkleProof)\r\n        public\r\n        payable\r\n        mintRequirements(_mintAmount)\r\n        presaleCheck(_merkleProof)\r\n    {\r\n        require(_mintAmount < psMaxMintPlusOne);\r\n        require(preSaleActive, \"Presale is not active\");\r\n        require(\r\n            balanceOf(msg.sender) < psMaxMintPlusOne,\r\n            \"You already minted max amount for presale\"\r\n        );\r\n\r\n        require(msg.value >= 0.02 ether * _mintAmount);\r\n\r\n        for (uint256 i = 1; i <= _mintAmount; i++) {\r\n            _mint(msg.sender, totalSupply + i);\r\n        }\r\n        unchecked {\r\n            totalSupply += _mintAmount;\r\n        }\r\n    }","contract":"SuPPhunks","time":0},{"type":"external-function ","before":"function mintOgPhunk(uint256 _mintAmount, string memory _merkleProof)\r\n        public\r\n        payable\r\n        mintRequirements(_mintAmount)\r\n        presaleCheck(_merkleProof)\r\n    {\r\n        require(_mintAmount < psMaxMintPlusOne);\r\n        require(preSaleActive, \"Presale is not active\");\r\n        require(msg.value >= 0.01 ether * _mintAmount, \"Wrong price\");\r\n        require(\r\n            balanceOf(msg.sender) < psMaxMintPlusOne,\r\n            \"You already minted max amount for presale\"\r\n        );\r\n        for (uint256 i = 1; i <= _mintAmount; i++) {\r\n            _mint(msg.sender, totalSupply + i);\r\n        }\r\n        unchecked {\r\n            totalSupply += _mintAmount;\r\n        }\r\n    }","after":"function mintOgPhunk(uint256 _mintAmount, string calldata _merkleProof)\r\n        public\r\n        payable\r\n        mintRequirements(_mintAmount)\r\n        presaleCheck(_merkleProof)\r\n    {\r\n        require(_mintAmount < psMaxMintPlusOne);\r\n        require(preSaleActive, \"Presale is not active\");\r\n        require(msg.value >= 0.01 ether * _mintAmount, \"Wrong price\");\r\n        require(\r\n            balanceOf(msg.sender) < psMaxMintPlusOne,\r\n            \"You already minted max amount for presale\"\r\n        );\r\n        for (uint256 i = 1; i <= _mintAmount; i++) {\r\n            _mint(msg.sender, totalSupply + i);\r\n        }\r\n        unchecked {\r\n            totalSupply += _mintAmount;\r\n        }\r\n    }","contract":"SuPPhunks","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _newBaseURI) public onlyOwner {\r\n        baseURI = _newBaseURI;\r\n    }","after":"function setBaseURI(string calldata _newBaseURI) public onlyOwner {\r\n        baseURI = _newBaseURI;\r\n    }","contract":"SuPPhunks","time":0},{"type":"external-function ","before":"function setMerkleRoot(string memory _merkleRoot) public onlyOwner {\r\n        merkleRoot = _merkleRoot;\r\n    }","after":"function setMerkleRoot(string calldata _merkleRoot) public onlyOwner {\r\n        merkleRoot = _merkleRoot;\r\n    }","contract":"SuPPhunks","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupplyPlusOne = 2501;","after":"uint256 public constant maxSupplyPlusOne = 2501;","contract":"SuPPhunks","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public psMaxMintPlusOne = 6;","after":"uint256 public constant psMaxMintPlusOne = 6;","contract":"SuPPhunks","time":0}]}