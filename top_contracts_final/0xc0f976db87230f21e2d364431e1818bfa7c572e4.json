{"time":166,"results":[{"type":"external-function ","before":"function execute(address _target, bytes memory _data)\n        public\n        payable\n        returns (bytes memory response)\n    {\n        require(msg.sender == timelock, \"!timelock\");\n        require(_target != address(0), \"!target\");\n\n        // call contract in current context\n        assembly {\n            let succeeded := delegatecall(\n                sub(gas(), 5000),\n                _target,\n                add(_data, 0x20),\n                mload(_data),\n                0,\n                0\n            )\n            let size := returndatasize()\n\n            response := mload(0x40)\n            mstore(\n                0x40,\n                add(response, and(add(add(size, 0x20), 0x1f), not(0x1f)))\n            )\n            mstore(response, size)\n            returndatacopy(add(response, 0x20), 0, size)\n\n            switch iszero(succeeded)\n            case 1 {\n                // throw if delegatecall failed\n                revert(add(response, 0x20), size)\n            }\n        }\n    }","after":"function execute(address _target, bytes calldata _data)\n        public\n        payable\n        returns (bytes memory response)\n    {\n        require(msg.sender == timelock, \"!timelock\");\n        require(_target != address(0), \"!target\");\n\n        // call contract in current context\n        assembly {\n            let succeeded := delegatecall(\n                sub(gas(), 5000),\n                _target,\n                add(_data, 0x20),\n                mload(_data),\n                0,\n                0\n            )\n            let size := returndatasize()\n\n            response := mload(0x40)\n            mstore(\n                0x40,\n                add(response, and(add(add(size, 0x20), 0x1f), not(0x1f)))\n            )\n            mstore(response, size)\n            returndatacopy(add(response, 0x20), 0, size)\n\n            switch iszero(succeeded)\n            case 1 {\n                // throw if delegatecall failed\n                revert(add(response, 0x20), size)\n            }\n        }\n    }","contract":"StrategyLooksStaking","time":0},{"type":"immutable-restrict-modification ","before":"address public want;","after":"address public immutable want;","contract":"StrategyLooksStaking","time":0},{"type":"constant-restrict-modification  ","before":"address public univ2Router2 = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;","after":"address public constant univ2Router2 = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;","contract":"StrategyLooksStaking","time":0},{"type":"constant-restrict-modification  ","before":"address public sushiRouter = 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F;","after":"address public constant sushiRouter = 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F;","contract":"StrategyLooksStaking","time":0}]}