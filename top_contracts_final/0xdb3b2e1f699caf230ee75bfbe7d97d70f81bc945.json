{"time":229,"results":[{"type":"external-function ","before":"function setUri(string memory _uri) external onlyOwner {\n        baseUri = _uri;\n    }","after":"function setUri(string calldata _uri) external onlyOwner {\n        baseUri = _uri;\n    }","contract":"DormantDragon","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public price;","after":"uint256 public immutable price;","contract":"DormantDragon","time":0},{"type":"immutable-restrict-modification ","before":"address teamWallet;","after":"address immutable teamWallet;","contract":"DormantDragon","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"ERC1155","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"ERC1155","time":0},{"type":"state-data-arrangement ","before":"\nstring public baseUri;\nuint256 immutable public supply;\nuint256 immutable public max;\nuint256 private startingIndex;\nuint256 public price;\nuint256 internal nextToken;\nbool public isSaleActive;\nmapping(address => uint) internal publicCount;\nmapping(address => uint) internal whitelistCount;\naddress teamWallet;","after":"string public baseUri;\nuint256 immutable public supply;\nuint256 immutable public max;\nuint256 private startingIndex;\nuint256 public price;\nuint256 internal nextToken;\nmapping(address => uint) internal publicCount;\nmapping(address => uint) internal whitelistCount;\naddress teamWallet;\nbool public isSaleActive;\n","contract":"BaseERC721","time":0}]}