{"time":289,"results":[{"type":"de-morgan-condition ","before":"!(char >= 0x30 && char <= 0x39) && //9-0\n                !(char >= 0x41 && char <= 0x5A)","after":"!((char >= 0x30 && char <= 0x39) && //9-0\n                (char >= 0x41 && char <= 0x5A))","loc":{"start":{"line":73,"column":16},"end":{"line":74,"column":46}},"contract":"Nouns3D","time":0},{"type":"external-function ","before":"function changeName(uint256 _tokenId, string memory _newName) public {\n        require(ownerOf(_tokenId) == msg.sender);\n        require(validateName(_newName) == true, \"Invalid name\");\n        yieldToken.burn(msg.sender, nameChangeTokenPrice);\n        nameN3D[_tokenId] = _newName;\n\n        emit NameChanged(_newName);\n    }","after":"function changeName(uint256 _tokenId, string calldata _newName) public {\n        require(ownerOf(_tokenId) == msg.sender);\n        require(validateName(_newName) == true, \"Invalid name\");\n        yieldToken.burn(msg.sender, nameChangeTokenPrice);\n        nameN3D[_tokenId] = _newName;\n\n        emit NameChanged(_newName);\n    }","contract":"Nouns3D","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        NOUNS3D_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        NOUNS3D_PROVENANCE = provenanceHash;\n    }","contract":"Nouns3D","time":0},{"type":"constant-restrict-modification  ","before":"uint256 MintCycleTierA = 2099;","after":"uint256 constant MintCycleTierA = 2099;","contract":"Nouns3D","time":0},{"type":"constant-restrict-modification  ","before":"uint256 MintCycleTierB = 7099;","after":"uint256 constant MintCycleTierB = 7099;","contract":"Nouns3D","time":0}]}