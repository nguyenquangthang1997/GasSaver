{"time":55,"results":[{"type":"state-data-arrangement ","before":"\n  address public gateKeepe\n  address public gateOversee\n  address public distributionToke\n  uint256 public totalRequire\n  uint256 immutable MIN_TIME_FRAM\n  mapping(address => KeeperInfo) public keeperLis\n  bytes4 private constant TRANSFER = bytes4(\n        keccak256(\n            bytes(\n                'transfer(address,uint256)'\n            )\n        )\n    \n  bytes4 private constant BALANCEOF = bytes4(\n        keccak256(\n            bytes(\n                'balanceOf(address)'\n            )\n        )\n    ","after":"  uint256 public totalRequire\n  uint256 immutable MIN_TIME_FRAM\n  mapping(address => KeeperInfo) public keeperLis\n  address public gateKeepe\n  address public gateOversee\n  address public distributionToke\n  bytes4 private constant TRANSFER = bytes4(\n        keccak256(\n            bytes(\n                'transfer(address,uint256)'\n            )\n        )\n    \n  bytes4 private constant BALANCEOF = bytes4(\n        keccak256(\n            bytes(\n                'balanceOf(address)'\n            )\n        )\n    \n","contract":"dgKeeper","time":0},{"type":"external-function ","before":"  function allocateTokensBulk(\n        address[] memory _recipients,\n        uint256[] memory _tokensOpened,\n        uint256[] memory _tokensLocked,\n        uint256[] memory _timeFrame,\n        bool[] memory _immutable\n    )\n        external\n        onlyGateKeeper\n    {\n        for(uint i = 0; i < _recipients.length; i++) {\n            allocateTokens(\n                _recipients[i],\n                _tokensOpened[i],\n                _tokensLocked[i],\n                _timeFrame[i],\n                _immutable[i]\n            );\n        }\n   ","after":"  function allocateTokensBulk(\n        address[] calldata _recipients,\n        uint256[] calldata _tokensOpened,\n        uint256[] calldata _tokensLocked,\n        uint256[] calldata _timeFrame,\n        bool[] calldata _immutable\n    )\n        external\n        onlyGateKeeper\n    {\n        for(uint i = 0; i < _recipients.length; i++) {\n            allocateTokens(\n                _recipients[i],\n                _tokensOpened[i],\n                _tokensLocked[i],\n                _timeFrame[i],\n                _immutable[i]\n            );\n        }\n   ","contract":"dgKeeper","time":0}]}