{"time":163,"results":[{"type":"external-function ","before":" ) external stopInEmergency returns (uint256 amountA, uint256 amountB) {\n        _permit(fromPoolAddress, permitAllowance, permitSig);\n\n        (amountA, amountB) = ZapOut2PairToken(\n            fromPoolAddress,\n            incomingLP,\n            affiliate\n        );\n    }\n\n    /**\n    @notice Zap out in a single token with permit\n    @param toTokenAddress Address of desired token\n    @param fromPoolAddress Pool from which to remove liquidity\n    @param incomingLP Quantity of LP to remove from pool\n    @param minTokensRec Minimum quantity of tokens to receive\n    @param permitSig Signature for permit\n    @param swapTargets Execution targets for swaps\n    @param swapData DEX swap data\n    @param ","after":" ) external stopInEmergency returns (uint256 amountA, uint256 amountB) {\n        _permit(fromPoolAddress, permitAllowance, permitSig);\n\n        (amountA, amountB) = ZapOut2PairToken(\n            fromPoolAddress,\n            incomingLP,\n            affiliate\n        );\n    }\n\n    /**\n    @notice Zap out in a single token with permit\n    @param toTokenAddress Address of desired token\n    @param fromPoolAddress Pool from which to remove liquidity\n    @param incomingLP Quantity of LP to remove from pool\n    @param minTokensRec Minimum quantity of tokens to receive\n    @param permitSig Signature for permit\n    @param swapTargets Execution targets for swaps\n    @param swapData DEX swap data\n    @param ","contract":"UniswapV2_ZapOut_General_V5","time":0},{"type":"state-data-arrangement ","before":"\n       address token0,\n     \nUniswapV2Pair pair = IUniswapV2Pair(fromPoolA\n);\n        token0 = pair\n\n\n        uint256 balan\nromPoolAddress);\n        uint256 balance1 =\n);\n\n        uint256 _totalSupply = pair.totalSupply();\n\n        amountA \ntotalSupply;\n        amountB = (liquidity * balance1) / _\ntifier: GPL-2.0\npragma solidity ^0.8.0;\n\nimport \n/0.8.0/access/Ownable.sol\";\nimport \"../oz/0.8.0/token/ERC20/utils/SafeERC20.sol\";\n\nabstrac","after":"UniswapV2Pair pair = IUniswapV2Pair(fromPoolA\n);\n        token0 = pair\n\n\n        uint256 balan\nromPoolAddress);\n        uint256 balance1 =\n);\n\n        uint256 _totalSupply = pair.totalSupply();\n\n        amountA \ntotalSupply;\n        amountB = (liquidity * balance1) / _\ntifier: GPL-2.0\npragma solidity ^0.8.0;\n\nimport \n/0.8.0/access/Ownable.sol\";\nimport \"../oz/0.8.0/token/ERC20/utils/SafeERC20.sol\";\n\nabstrac\n       address token0,\n     \n","contract":"ZapBaseV2","time":0}]}