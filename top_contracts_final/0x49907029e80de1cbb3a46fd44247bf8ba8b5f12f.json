{"time":152,"results":[{"type":"state-data-arrangement ","before":"\n\n  string public baseU\n\n  string public defaultU\n\n  string public mycontractU\n\n  bool public finalizeBaseUri = fal\n\n  uint8 public stage =\n\n  address private _sign\n\n  uint256 public presalePrice = 0.2 eth\n\n  uint256 public presaleSupp\n\n  uint256 public presaleMintMax =\n\n  mapping(address => uint8) public presaleMintCou\n\n  uint256 public clearanceMintMax =\n\n  uint256 public salePrice = 0.2 eth\n\n  uint256 public saleMintMax =\n\n  uint256 public totalSaleSupp\n\n  mapping(address => uint8) public saleMintCou\n\n  bool public paused = fal\n\n  uint256 public currentSupp\n\n  address[6] public fundRecipients = [\n    0xA1ae8f9ed498c7EF353DD275b6F581fC76E72b8B,\n    0x491252D2D7FbF62fE8360F80eAFccdF6edfa9090,\n    0x20c606439a3ee9988453C192f825893FF5CB40A1,\n    0xafBD28f83c21674796Cb6eDE9aBed53de4aFbcC4,\n    0xEf0ec25bF8931EcA46D2fF785d1A7f3d7Db6F7ab,\n    0x98Eb7D8e1bfFd0B9368726fdf4555C45fDBB2Bd6\n \n\n  uint256[] public receivePercentagePt = [2375, 750, 3250, 750, 2375, 50\n\n  address public royaltyAd\n\n  uint256 public royaltyBas","after":"\n  string public baseU\n\n  string public defaultU\n\n  string public mycontractU\n\n  uint256 public presalePrice = 0.2 eth\n\n  uint256 public presaleSupp\n\n  uint256 public presaleMintMax =\n\n  mapping(address => uint8) public presaleMintCou\n\n  uint256 public clearanceMintMax =\n\n  uint256 public salePrice = 0.2 eth\n\n  uint256 public saleMintMax =\n\n  uint256 public totalSaleSupp\n\n  mapping(address => uint8) public saleMintCou\n\n  uint256 public currentSupp\n\n  address[6] public fundRecipients = [\n    0xA1ae8f9ed498c7EF353DD275b6F581fC76E72b8B,\n    0x491252D2D7FbF62fE8360F80eAFccdF6edfa9090,\n    0x20c606439a3ee9988453C192f825893FF5CB40A1,\n    0xafBD28f83c21674796Cb6eDE9aBed53de4aFbcC4,\n    0xEf0ec25bF8931EcA46D2fF785d1A7f3d7Db6F7ab,\n    0x98Eb7D8e1bfFd0B9368726fdf4555C45fDBB2Bd6\n \n\n  uint256[] public receivePercentagePt = [2375, 750, 3250, 750, 2375, 50\n\n  uint256 public royaltyBas\n\n  address private _sign\n\n  address public royaltyAd\n\n  bool public finalizeBaseUri = fal\n\n  uint8 public stage =\n\n  bool public paused = fal\n","contract":"NFTMTG","time":0},{"type":"external-function ","before":"\n  function mint_whitelist(uint8 _mintAmount, bytes memory signature) public payable {\n    uint256 supply = totalSupply();\n    require(!paused);\n    require(stage > 0, \"Sale not started\");\n    require(isWhitelisted(msg.sender, signature), \"Must be whitelisted\");\n    require(stage == 1 || stage == 2, \"invalid stage\");\n    require(_mintAmount > 0, \"Must mint at least 1\");\n    require(supply + _mintAmount <= presaleSupply, \"Mint exceed presale supply\");\n    require(msg.value >= presalePrice * _mintAmount, \"Insufficient amount sent\");\n    require(_mintAmount + presaleMintCount[msg.sender] <= (stage == 1 ? presaleMintMax : clearanceMintMax), \"Cannot mint more than 2\");\n    presaleMintCount[msg.sender] += _mintAmount;\n    currentSupply += _mintAmount;\n    for (uint256 i = 1; i <= _mintAmount; i++) {\n      _safeMint(msg.sender, supply + i);\n    }\n","after":"\n  function mint_whitelist(uint8 _mintAmount, bytes calldata signature) public payable {\n    uint256 supply = totalSupply();\n    require(!paused);\n    require(stage > 0, \"Sale not started\");\n    require(isWhitelisted(msg.sender, signature), \"Must be whitelisted\");\n    require(stage == 1 || stage == 2, \"invalid stage\");\n    require(_mintAmount > 0, \"Must mint at least 1\");\n    require(supply + _mintAmount <= presaleSupply, \"Mint exceed presale supply\");\n    require(msg.value >= presalePrice * _mintAmount, \"Insufficient amount sent\");\n    require(_mintAmount + presaleMintCount[msg.sender] <= (stage == 1 ? presaleMintMax : clearanceMintMax), \"Cannot mint more than 2\");\n    presaleMintCount[msg.sender] += _mintAmount;\n    currentSupply += _mintAmount;\n    for (uint256 i = 1; i <= _mintAmount; i++) {\n      _safeMint(msg.sender, supply + i);\n    }\n","contract":"NFTMTG","time":0},{"type":"external-function ","before":"\n  function setContractURI(string memory _contractURI) public onlyOwner {\n    mycontractURI = _contractURI;\n","after":"\n  function setContractURI(string calldata _contractURI) public onlyOwner {\n    mycontractURI = _contractURI;\n","contract":"NFTMTG","time":0},{"type":"constant-restrict-modification  ","before":"\n  uint256 public presalePrice = 0.2 eth","after":"\n  uint256 public constant presalePrice = 0.2 eth","contract":"NFTMTG","time":1},{"type":"immutable-restrict-modification ","before":"\n  uint256 public presaleSupp","after":"\n  uint256 public presaleSupp","contract":"NFTMTG","time":1},{"type":"constant-restrict-modification  ","before":"\n  uint256 public presaleMintMax =","after":"\n  uint256 public constant presaleMintMax =","contract":"NFTMTG","time":1},{"type":"constant-restrict-modification  ","before":"\n  uint256 public clearanceMintMax =","after":"\n  uint256 public constant clearanceMintMax =","contract":"NFTMTG","time":1},{"type":"constant-restrict-modification  ","before":"\n  uint256 public salePrice = 0.2 eth","after":"\n  uint256 public constant salePrice = 0.2 eth","contract":"NFTMTG","time":1},{"type":"constant-restrict-modification  ","before":"\n  uint256 public saleMintMax =","after":"\n  uint256 public constant saleMintMax =","contract":"NFTMTG","time":1},{"type":"immutable-restrict-modification ","before":"\n  uint256 public totalSaleSupp","after":"\n  uint256 public totalSaleSupp","contract":"NFTMTG","time":1}]}