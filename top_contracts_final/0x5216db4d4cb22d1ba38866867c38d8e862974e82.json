{"time":412,"results":[{"type":"loop-duplication","before":"\nstart line 2278 column 8, end line 2290 column 8\nfor (uint256 i = 0; i < _sigs.length; i++) {\n            addrs[i] = hash.recover(_sigs[i]);\n            if (checkedValidators[addrs[i]]) {\n                hasDuplicatedSig = true;\n                break;\n            }\n            if (candidateProfiles[addrs[i]].status != DPoSCommon.CandidateStatus.Bonded) {\n                continue;\n            }\n\n            quorumStakingPool = quorumStakingPool.add(candidateProfiles[addrs[i]].stakingPool);\n            checkedValidators[addrs[i]] = true;\n        }\nstart line 2292 column 8, end line 2294 column 8\nfor (uint256 i = 0; i < _sigs.length; i++) {\n            checkedValidators[addrs[i]] = false;\n        }","after":"// merge loop\n\nstart line 2278 column 8, end line 2290 column 8\nfor (uint256 i = 0; i < _sigs.length; i++) {\n            addrs[i] = hash.recover(_sigs[i]);\n            if (checkedValidators[addrs[i]]) {\n                hasDuplicatedSig = true;\n                break;\n            }\n            if (candidateProfiles[addrs[i]].status != DPoSCommon.CandidateStatus.Bonded) {\n                continue;\n            }\n\n            quorumStakingPool = quorumStakingPool.add(candidateProfiles[addrs[i]].stakingPool);\n            checkedValidators[addrs[i]] = true;\n        }\nstart line 2292 column 8, end line 2294 column 8\nfor (uint256 i = 0; i < _sigs.length; i++) {\n            checkedValidators[addrs[i]] = false;\n        }","contract":"DPoS","time":0}]}