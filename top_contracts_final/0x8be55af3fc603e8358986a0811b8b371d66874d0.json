{"time":267,"results":[{"type":"struct-data-arrangement ","before":"\nbool        exists\nstring      cid\nbool        snippet\nuint256     rotation\nstring      film\nstring      color","after":"string      cid\nuint256     rotation\nstring      film\nstring      color\nbool        exists\nbool        snippet\n","contract":"TheArchive","time":0},{"type":"external-function ","before":"function createToken(string memory cid, uint256 rotation, string memory film, bool exists, string memory color) public onlyTeam {\n        _tokens.increment();\n        Tokens[_tokens.current()] = Token(exists, cid, true, rotation, film, color);\n    }","after":"function createToken(string calldata cid, uint256 rotation, string calldata film, bool exists, string calldata color) public onlyTeam {\n        _tokens.increment();\n        Tokens[_tokens.current()] = Token(exists, cid, true, rotation, film, color);\n    }","contract":"TheArchive","time":0},{"type":"external-function ","before":"function editToken(uint256 tokenId, string memory cid, uint256 rotation, string memory film, bool exists, string memory color) public onlyTeam {\n        Tokens[tokenId].exists = exists;\n        Tokens[tokenId].cid = cid;\n        Tokens[tokenId].rotation = rotation;\n        Tokens[tokenId].film = film;\n        Tokens[tokenId].color = color;\n    }","after":"function editToken(uint256 tokenId, string calldata cid, uint256 rotation, string calldata film, bool exists, string calldata color) public onlyTeam {\n        Tokens[tokenId].exists = exists;\n        Tokens[tokenId].cid = cid;\n        Tokens[tokenId].rotation = rotation;\n        Tokens[tokenId].film = film;\n        Tokens[tokenId].color = color;\n    }","contract":"TheArchive","time":0},{"type":"external-function ","before":"function contractSettings(bool _saleStart, bool _requireIncludeList, uint256 _price, string memory _baseUri, string memory _imageUri, bool _onchain, string memory _description, uint256 _rollMintLimit, uint256 _mintLimitSize) public onlyTeam {\n        saleStart = _saleStart;\n        requireIncludeList = _requireIncludeList;\n        price = _price;\n        baseUri = _baseUri;\n        imageUri = _imageUri;\n        onchain = _onchain;\n        description = _description;\n        rollMintLimit = _rollMintLimit;\n        mintLimitSize = _mintLimitSize;\n    }","after":"function contractSettings(bool _saleStart, bool _requireIncludeList, uint256 _price, string calldata _baseUri, string calldata _imageUri, bool _onchain, string calldata _description, uint256 _rollMintLimit, uint256 _mintLimitSize) public onlyTeam {\n        saleStart = _saleStart;\n        requireIncludeList = _requireIncludeList;\n        price = _price;\n        baseUri = _baseUri;\n        imageUri = _imageUri;\n        onchain = _onchain;\n        description = _description;\n        rollMintLimit = _rollMintLimit;\n        mintLimitSize = _mintLimitSize;\n    }","contract":"TheArchive","time":0},{"type":"external-function ","before":"function addIncludeListBulk(address[] memory include, uint256 total) public onlyTeam {\n        for(uint256 i=0; i<total; i++) {\n            IncludeList[include[i]] = true;\n        }\n    }","after":"function addIncludeListBulk(address[] calldata include, uint256 total) public onlyTeam {\n        for(uint256 i=0; i<total; i++) {\n            IncludeList[include[i]] = true;\n        }\n    }","contract":"TheArchive","time":0},{"type":"external-function ","before":"function removeIncludeListBulk(address[] memory include, uint256 total) public onlyTeam {\n        for(uint256 i=0; i<total; i++) {\n            IncludeList[include[i]] = false;\n        }\n    }","after":"function removeIncludeListBulk(address[] calldata include, uint256 total) public onlyTeam {\n        for(uint256 i=0; i<total; i++) {\n            IncludeList[include[i]] = false;\n        }\n    }","contract":"TheArchive","time":0},{"type":"immutable-restrict-modification ","before":"address withdrawalAddress;","after":"address immutable withdrawalAddress;","contract":"TheArchive","time":0}]}