{"time":226,"results":[{"type":"external-function ","before":"function add(uint256 _allocPoint, IERC20 _underlyingToken, uint256[3] memory boost, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n\n        for (uint256 i=0; i<3; i++) {\n            require((boost[i]>=100 && boost[i]<=200), \"invalid boost\");\n        }\n\n        uint256 lastRewardTime = now > startTime ? now : startTime;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n\n        boostInfo[poolLength()] = boost;\n\n        poolInfo.push(PoolInfo({\n            underlyingToken: _underlyingToken,\n            allocPoint: _allocPoint,\n            lastRewardTime: lastRewardTime,\n            accBellaPerShare: 0,\n            totalEffectiveAmount: 0\n        }));\n\n    }","after":"function add(uint256 _allocPoint, IERC20 _underlyingToken, uint256[3] calldata boost, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n\n        for (uint256 i=0; i<3; i++) {\n            require((boost[i]>=100 && boost[i]<=200), \"invalid boost\");\n        }\n\n        uint256 lastRewardTime = now > startTime ? now : startTime;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n\n        boostInfo[poolLength()] = boost;\n\n        poolInfo.push(PoolInfo({\n            underlyingToken: _underlyingToken,\n            allocPoint: _allocPoint,\n            lastRewardTime: lastRewardTime,\n            accBellaPerShare: 0,\n            totalEffectiveAmount: 0\n        }));\n\n    }","contract":"BellaStaking","time":0}]}