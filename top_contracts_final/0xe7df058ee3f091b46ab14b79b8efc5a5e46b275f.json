{"time":145,"results":[{"type":"state-data-arrangement ","before":"\naddress[] public _whitelistedERC20s;\naddress[] public _whitelistedERC721s;\nmapping (address => uint256) public _erc20MinBals;\nmapping (address => uint256) public _erc721MinBals;\nuint256 public constant priceToMint = 0.069 ether;\naddress public immutable _feeWallet;\nuint256 public immutable maxSupply;\nuint256 public immutable preMintSupply;\nuint256 public immutable maxMintPerTransaction;\nuint256 private immutable _obfuscationOffset;\nuint256 public preMintStartTime;\nmapping (address => bool) public _whitelistedAddresses;\nmapping (address => bool) public _preMintedAddresses;\nmapping (uint256 => bool) public _preMintedTokenIds;\nuint256 public totalPreMinted = 0;\nbool public mintAllowed = false;\nbool public devMintLocked = false;\nbool public baseURILocked = false;\nstring public baseURI = \"ipfs://Qmf3yLqLE2DwpvN4MmPyy7bkCGXZFzf8EJPRoYiebJN96X/\";","after":"address[] public _whitelistedERC20s;\naddress[] public _whitelistedERC721s;\nmapping (address => uint256) public _erc20MinBals;\nmapping (address => uint256) public _erc721MinBals;\nuint256 public constant priceToMint = 0.069 ether;\nuint256 public immutable maxSupply;\nuint256 public immutable preMintSupply;\nuint256 public immutable maxMintPerTransaction;\nuint256 private immutable _obfuscationOffset;\nuint256 public preMintStartTime;\nmapping (address => bool) public _whitelistedAddresses;\nmapping (address => bool) public _preMintedAddresses;\nmapping (uint256 => bool) public _preMintedTokenIds;\nuint256 public totalPreMinted = 0;\nstring public baseURI = \"ipfs://Qmf3yLqLE2DwpvN4MmPyy7bkCGXZFzf8EJPRoYiebJN96X/\";\naddress public immutable _feeWallet;\nbool public mintAllowed = false;\nbool public devMintLocked = false;\nbool public baseURILocked = false;\n","contract":"Jims","time":0},{"type":"external-function ","before":"function _setBaseURI(string memory baseURI_) external onlyOwner {\n    require(baseURILocked == false, \"Can only set Base URI once\");\n    baseURI = baseURI_;\n    baseURILocked = true;\n  }","after":"function _setBaseURI(string calldata baseURI_) external onlyOwner {\n    require(baseURILocked == false, \"Can only set Base URI once\");\n    baseURI = baseURI_;\n    baseURILocked = true;\n  }","contract":"Jims","time":0}]}