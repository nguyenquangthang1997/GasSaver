{"time":96,"results":[{"type":"external-function ","before":"function setBaseURI(string memory newURI) external onlyOwner {\n        _metadataURI = newURI;\n    }","after":"function setBaseURI(string calldata newURI) external onlyOwner {\n        _metadataURI = newURI;\n    }","contract":"ArtAI","time":0},{"type":"external-function ","before":"function mint(\n        string memory _imageHash,\n        string memory _imageName,\n        string memory _imageId\n    ) external payable returns (uint256) {\n        require(_tokenSupply < maxSupply, \"Maximum supply has been reached\");\n        require(\n            bytes(_imageName).length <= _maxImageNameLength,\n            \"Name of the image is too long\"\n        );\n        require(msg.value >= _purchasePrice, \"Insufficient message value\");\n        require(\n            !_namePurchases[_imageName],\n            \"That named piece has already been purchased\"\n        );\n        uint256 _newTokenId = _mint(\n            msg.sender,\n            _imageName,\n            _imageHash,\n            _imageId\n        );\n\n        return _newTokenId;\n    }","after":"function mint(\n        string calldata _imageHash,\n        string calldata _imageName,\n        string calldata _imageId\n    ) external payable returns (uint256) {\n        require(_tokenSupply < maxSupply, \"Maximum supply has been reached\");\n        require(\n            bytes(_imageName).length <= _maxImageNameLength,\n            \"Name of the image is too long\"\n        );\n        require(msg.value >= _purchasePrice, \"Insufficient message value\");\n        require(\n            !_namePurchases[_imageName],\n            \"That named piece has already been purchased\"\n        );\n        uint256 _newTokenId = _mint(\n            msg.sender,\n            _imageName,\n            _imageHash,\n            _imageId\n        );\n\n        return _newTokenId;\n    }","contract":"ArtAI","time":0},{"type":"external-function ","before":"function ownerMint(\n        address _owner,\n        string memory _imageHash,\n        string memory _imageName,\n        string memory _imageId\n    ) external onlyOwner returns (uint256) {\n        require(_tokenSupply < maxSupply, \"Maximum supply has been reached\");\n        require(\n            bytes(_imageName).length <= _maxImageNameLength,\n            \"Name of the image is too long\"\n        );\n        require(\n            !_namePurchases[_imageName],\n            \"That named piece has already been purchased\"\n        );\n        uint256 _newTokenId = _mint(_owner, _imageName, _imageHash, _imageId);\n\n        return _newTokenId;\n    }","after":"function ownerMint(\n        address _owner,\n        string calldata _imageHash,\n        string calldata _imageName,\n        string calldata _imageId\n    ) external onlyOwner returns (uint256) {\n        require(_tokenSupply < maxSupply, \"Maximum supply has been reached\");\n        require(\n            bytes(_imageName).length <= _maxImageNameLength,\n            \"Name of the image is too long\"\n        );\n        require(\n            !_namePurchases[_imageName],\n            \"That named piece has already been purchased\"\n        );\n        uint256 _newTokenId = _mint(_owner, _imageName, _imageHash, _imageId);\n\n        return _newTokenId;\n    }","contract":"ArtAI","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 10000;","after":"uint256 public constant maxSupply = 10000;","contract":"ArtAI","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _maxImageNameLength = 100;","after":"uint256 private constant _maxImageNameLength = 100;","contract":"ArtAI","time":0}]}