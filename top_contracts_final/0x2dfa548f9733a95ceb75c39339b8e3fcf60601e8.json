{"time":80,"results":[{"type":"external-function ","before":"function claimAllRewards(uint256[] memory tokensOfOwner) external {\n        require(!rewardPaused, \"Claiming reward has been paused\");\n        uint256 pendingRewards = getPendingRewards(tokensOfOwner);\n        for (uint256 i = 0; i < tokensOfOwner.length; i++) {\n            require(\n                KumoXWorld.ownerOf(tokensOfOwner[i]) == msg.sender,\n                \"Only the owner can claim rewards\"\n            );\n            lastUpdate[tokensOfOwner[i]] = block.timestamp;\n        }\n        _mint(msg.sender, pendingRewards);\n    }","after":"function claimAllRewards(uint256[] calldata tokensOfOwner) external {\n        require(!rewardPaused, \"Claiming reward has been paused\");\n        uint256 pendingRewards = getPendingRewards(tokensOfOwner);\n        for (uint256 i = 0; i < tokensOfOwner.length; i++) {\n            require(\n                KumoXWorld.ownerOf(tokensOfOwner[i]) == msg.sender,\n                \"Only the owner can claim rewards\"\n            );\n            lastUpdate[tokensOfOwner[i]] = block.timestamp;\n        }\n        _mint(msg.sender, pendingRewards);\n    }","contract":"KXWCOIN","time":0},{"type":"external-function ","before":"function partnerMint(\n        uint256 amount,\n        address partner,\n        bytes32 message,\n        bytes memory sig\n    ) external {\n        require(\n            partner == recoverSigner(message, sig),\n            \"Only partners can mint\"\n        );\n        require(!rewardPausedPartner, \"Claiming reward has been paused\");\n        require(partners[partner] > 0, \"Partner has no tokens\");\n        require(usedSignatures[sig] == false, \"Can't reuse signatures\");\n        partners[partner] -= amount;\n        usedSignatures[sig] = true;\n        _mint(msg.sender, amount);\n    }","after":"function partnerMint(\n        uint256 amount,\n        address partner,\n        bytes32 message,\n        bytes calldata sig\n    ) external {\n        require(\n            partner == recoverSigner(message, sig),\n            \"Only partners can mint\"\n        );\n        require(!rewardPausedPartner, \"Claiming reward has been paused\");\n        require(partners[partner] > 0, \"Partner has no tokens\");\n        require(usedSignatures[sig] == false, \"Can't reuse signatures\");\n        partners[partner] -= amount;\n        usedSignatures[sig] = true;\n        _mint(msg.sender, amount);\n    }","contract":"KXWCOIN","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public START;","after":"uint256 public immutable START;","contract":"KXWCOIN","time":0},{"type":"constant-restrict-modification  ","before":"uint256 TIME_RATE = 86400;","after":"uint256 constant TIME_RATE = 86400;","contract":"KXWCOIN","time":0}]}