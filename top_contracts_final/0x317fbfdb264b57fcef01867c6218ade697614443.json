{"time":111,"results":[{"type":"state-data-arrangement ","before":"\nstring public constant name = \"CHARGE\";\nstring public constant symbol = \"CHG\";\nuint8 public constant decimals = 18;\nuint256 public constant initialSupply = 70000000 * (10 ** uint256(decimals));\naddress public owner;\nbool public paused = false;\nmapping(address => bool) internal freezes;\nmapping(address => LockInfo[]) internal lockInfo;\nmapping (address => uint256) public airDropHistory;","after":"string public constant name = \"CHARGE\";\nstring public constant symbol = \"CHG\";\nuint256 public constant initialSupply = 70000000 * (10 ** uint256(decimals));\nmapping(address => bool) internal freezes;\nmapping(address => LockInfo[]) internal lockInfo;\nmapping (address => uint256) public airDropHistory;\naddress public owner;\nuint8 public constant decimals = 18;\nbool public paused = false;\n","contract":"CHARGE","time":0},{"type":"external-function ","before":"function airdropToken(address[] memory receivers, uint256[] memory values) onlyOwner public {\n    require(receivers.length != 0);\n    require(receivers.length == values.length);\n\n    for (uint256 i = 0; i < receivers.length; i++) {\n      address receiver = receivers[i];\n      uint256 amount = values[i];\n\n      transfer(receiver, amount);\n      airDropHistory[receiver] += amount;\n\n      emit AirDrop(receiver, amount);\n    }\n  }","after":"function airdropToken(address[] calldata receivers, uint256[] calldata values) onlyOwner public {\n    require(receivers.length != 0);\n    require(receivers.length == values.length);\n\n    for (uint256 i = 0; i < receivers.length; i++) {\n      address receiver = receivers[i];\n      uint256 amount = values[i];\n\n      transfer(receiver, amount);\n      airDropHistory[receiver] += amount;\n\n      emit AirDrop(receiver, amount);\n    }\n  }","contract":"CHARGE","time":0}]}