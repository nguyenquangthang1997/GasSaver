{"time":122,"results":[{"type":"external-function ","before":"function mint(uint256[] memory cyphers) public {\n        require(saleStarted == true, \"This sale has not started.\");\n        require(totalSupply() < MAX_NFT_SUPPLY, \"All NFTs have been minted.\");\n        require(cyphers.length > 0, \"You must mint at least one Cypher.\");\n        require(totalSupply() + cyphers.length <= MAX_NFT_SUPPLY, \"The amount of Cyphers you are trying to mint exceeds the MAX_NFT_SUPPLY.\");\n\n        for (uint256 i = 0; i < cyphers.length; i++) {\n            uint256 cypher = cyphers[i];\n            require(cypherCityContract.ownerOf(cypher) == msg.sender, \"You are not the owner of this Cypher.\");\n            require(cyphersRedeemed[cypher] == false, \"Cypher has already been redeemed.\");\n            uint256 mintIndex = totalSupply();\n            _safeMint(msg.sender, mintIndex);\n            cyphersRedeemed[cypher] = true;\n        }\n   }","after":"function mint(uint256[] calldata cyphers) public {\n        require(saleStarted == true, \"This sale has not started.\");\n        require(totalSupply() < MAX_NFT_SUPPLY, \"All NFTs have been minted.\");\n        require(cyphers.length > 0, \"You must mint at least one Cypher.\");\n        require(totalSupply() + cyphers.length <= MAX_NFT_SUPPLY, \"The amount of Cyphers you are trying to mint exceeds the MAX_NFT_SUPPLY.\");\n\n        for (uint256 i = 0; i < cyphers.length; i++) {\n            uint256 cypher = cyphers[i];\n            require(cypherCityContract.ownerOf(cypher) == msg.sender, \"You are not the owner of this Cypher.\");\n            require(cyphersRedeemed[cypher] == false, \"Cypher has already been redeemed.\");\n            uint256 mintIndex = totalSupply();\n            _safeMint(msg.sender, mintIndex);\n            cyphersRedeemed[cypher] = true;\n        }\n   }","contract":"CypherCityPets","time":0}]}