{"time":126,"results":[{"type":"external-function ","before":"function whitelistedMint(uint number, bytes memory signature) external payable canBuy(number) {\n        require(whitelistedSaleEnabled, \"Whitelisted sale disabled\");\n\n        address recovered = keccak256(abi.encodePacked(msg.sender))\n            .toEthSignedMessageHash()\n            .recover(signature);\n        require(recovered == whitelistSigner, \"Invalid whitelist signature\");\n\n        require(\n            whitelistedSales[msg.sender] + number <= MAX_WHITELISTED_SALE_TOKENS,\n            \"Whitelisted sale limit exceeded\"\n        );\n        whitelistedSales[msg.sender] += number;\n\n        _batchMint(number);\n    }","after":"function whitelistedMint(uint number, bytes calldata signature) external payable canBuy(number) {\n        require(whitelistedSaleEnabled, \"Whitelisted sale disabled\");\n\n        address recovered = keccak256(abi.encodePacked(msg.sender))\n            .toEthSignedMessageHash()\n            .recover(signature);\n        require(recovered == whitelistSigner, \"Invalid whitelist signature\");\n\n        require(\n            whitelistedSales[msg.sender] + number <= MAX_WHITELISTED_SALE_TOKENS,\n            \"Whitelisted sale limit exceeded\"\n        );\n        whitelistedSales[msg.sender] += number;\n\n        _batchMint(number);\n    }","contract":"Rebels","time":0},{"type":"external-function ","before":"function setBaseUri(string memory baseUri_) external onlyOwner {\n        baseUri = baseUri_;\n    }","after":"function setBaseUri(string calldata baseUri_) external onlyOwner {\n        baseUri = baseUri_;\n    }","contract":"Rebels","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory hash) external onlyOwner {\n        require(mintedTotal == 0, \"Hash can only be set before first mint\");\n        provenanceHash = hash;\n    }","after":"function setProvenanceHash(string calldata hash) external onlyOwner {\n        require(mintedTotal == 0, \"Hash can only be set before first mint\");\n        provenanceHash = hash;\n    }","contract":"Rebels","time":0}]}