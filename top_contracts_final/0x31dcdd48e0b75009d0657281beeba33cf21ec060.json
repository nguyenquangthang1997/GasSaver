{"time":143,"results":[{"type":"state-data-arrangement ","before":"\nstring private baseURI;\nuint256 public constant TOTAL_SUPPLY = 8888;\nuint256 public constant FIRST_SALES_TOKEN_ID = 1;\nuint256 public constant FIRST_RESERVED_TOKEN_ID = 8439;\nbool private _isOnSale;\nuint256 private _price = 0.03 ether;\nuint256 private _remainingSalesAmount = FIRST_RESERVED_TOKEN_ID - FIRST_SALES_TOKEN_ID;\nuint256[] private _mintedTokenIdList;\nuint256 public nextReservedTokenId = FIRST_RESERVED_TOKEN_ID;\naddress payable private primarySalesRecipient;","after":"string private baseURI;\nuint256 public constant TOTAL_SUPPLY = 8888;\nuint256 public constant FIRST_SALES_TOKEN_ID = 1;\nuint256 public constant FIRST_RESERVED_TOKEN_ID = 8439;\nuint256 private _price = 0.03 ether;\nuint256 private _remainingSalesAmount = FIRST_RESERVED_TOKEN_ID - FIRST_SALES_TOKEN_ID;\nuint256[] private _mintedTokenIdList;\nuint256 public nextReservedTokenId = FIRST_RESERVED_TOKEN_ID;\naddress payable private primarySalesRecipient;\nbool private _isOnSale;\n","contract":"NaughtyPIPPI","time":0},{"type":"external-function ","before":"function updateCommonSecondaryRoyalty(\n        address payable[] memory _secondaryRecipients,\n        uint256[] memory _secondaryRoyaltiesWithTwoDecimals\n    ) external onlyOwner {\n        _updateCommonSecondaryRoyalty(_secondaryRecipients, _secondaryRoyaltiesWithTwoDecimals);\n    }","after":"function updateCommonSecondaryRoyalty(\n        address payable[] calldata _secondaryRecipients,\n        uint256[] calldata _secondaryRoyaltiesWithTwoDecimals\n    ) external onlyOwner {\n        _updateCommonSecondaryRoyalty(_secondaryRecipients, _secondaryRoyaltiesWithTwoDecimals);\n    }","contract":"NaughtyPIPPI","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _price = 0.03 ether;","after":"uint256 private constant _price = 0.03 ether;","contract":"NaughtyPIPPI","time":1},{"type":"immutable-restrict-modification ","before":"address payable private primarySalesRecipient;","after":"address payable private immutable primarySalesRecipient;","contract":"NaughtyPIPPI","time":1}]}