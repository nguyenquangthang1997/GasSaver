{"time":170,"results":[{"type":"state-data-arrangement ","before":"\nstring public PROVENANCE;\nbool provenanceSet;\nuint256 public mintPrice;\nuint256 public maxPossibleSupply;\nbool public saleIsActive;\naddress public immutable currency;\naddress immutable wrappedNativeCoinAddress;\nuint256 public percentToVote = 60;\nuint256 public votingDuration = 86400;\nbool public isDao;\nbool public percentToVoteFrozen;\nbool public votingDurationFrozen;\nVoting[] public votings;","after":"string public PROVENANCE;\nuint256 public mintPrice;\nuint256 public maxPossibleSupply;\nuint256 public percentToVote = 60;\nuint256 public votingDuration = 86400;\nVoting[] public votings;\naddress public immutable currency;\naddress immutable wrappedNativeCoinAddress;\nbool provenanceSet;\nbool public saleIsActive;\nbool public isDao;\nbool public percentToVoteFrozen;\nbool public votingDurationFrozen;\n","contract":"MasterchefMasatoshi","time":0},{"type":"struct-data-arrangement ","before":"\naddress contractAddress\nbytes data\nuint256 value\nstring comment\nuint256 index\nuint256 timestamp\nbool isActivated\naddress[] signers","after":"bytes data\nuint256 value\nstring comment\nuint256 index\nuint256 timestamp\naddress[] signers\naddress contractAddress\nbool isActivated\n","contract":"MasterchefMasatoshi","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        require(!provenanceSet);\n        PROVENANCE = provenanceHash;\n        provenanceSet = true;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        require(!provenanceSet);\n        PROVENANCE = provenanceHash;\n        provenanceSet = true;\n    }","contract":"MasterchefMasatoshi","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"MasterchefMasatoshi","time":0},{"type":"external-function ","before":"function createVoting(\n        address _contractAddress,\n        bytes calldata _data,\n        uint256 _value,\n        string memory _comment\n    ) external onlyHoldersOrOwner returns (bool success) {\n        address[] memory _signers;\n\n        votings.push(\n            Voting({\n                contractAddress: _contractAddress,\n                data: _data,\n                value: _value,\n                comment: _comment,\n                index: votings.length,\n                timestamp: block.timestamp,\n                isActivated: false,\n                signers: _signers\n            })\n        );\n\n        emit VotingCreated(_contractAddress, _data, _value, _comment, votings.length - 1, block.timestamp);\n\n        return true;\n    }","after":"function createVoting(\n        address _contractAddress,\n        bytes calldata _data,\n        uint256 _value,\n        string calldata _comment\n    ) external onlyHoldersOrOwner returns (bool success) {\n        address[] memory _signers;\n\n        votings.push(\n            Voting({\n                contractAddress: _contractAddress,\n                data: _data,\n                value: _value,\n                comment: _comment,\n                index: votings.length,\n                timestamp: block.timestamp,\n                isActivated: false,\n                signers: _signers\n            })\n        );\n\n        emit VotingCreated(_contractAddress, _data, _value, _comment, votings.length - 1, block.timestamp);\n\n        return true;\n    }","contract":"MasterchefMasatoshi","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public mintPrice;","after":"uint256 public immutable mintPrice;","contract":"MasterchefMasatoshi","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxPossibleSupply;","after":"uint256 public immutable maxPossibleSupply;","contract":"MasterchefMasatoshi","time":0}]}