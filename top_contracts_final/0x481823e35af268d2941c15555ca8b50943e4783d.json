{"time":148,"results":[{"type":"external-function ","before":"function stakeTokensByIds(uint256[] memory tokenIds) public stakingEnabled {\r\n        require(getStakedCount(msg.sender) + tokenIds.length <= MAX_WALLET_STAKED, \"MAX_TOKENS_STAKED_PER_WALLET\");\r\n        require(totalSupply() < cap(), \"CAP_REACHED\");\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            uint256 id = tokenIds[i];\r\n            require(_IERC721Enumerable.ownerOf(id) == msg.sender && TokenIdToStaker[id] == address(0), \"TOKEN_IS_NOT_YOURS\");\r\n            _IERC721Enumerable.transferFrom(msg.sender, address(this), id);\r\n\r\n            StakerToTokenIds[msg.sender].push(id);\r\n            TokenIdTimeStaked[id] = block.timestamp;\r\n            TokenIdToStaker[id] = msg.sender;\r\n        }\r\n    }","after":"function stakeTokensByIds(uint256[] calldata tokenIds) public stakingEnabled {\r\n        require(getStakedCount(msg.sender) + tokenIds.length <= MAX_WALLET_STAKED, \"MAX_TOKENS_STAKED_PER_WALLET\");\r\n        require(totalSupply() < cap(), \"CAP_REACHED\");\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            uint256 id = tokenIds[i];\r\n            require(_IERC721Enumerable.ownerOf(id) == msg.sender && TokenIdToStaker[id] == address(0), \"TOKEN_IS_NOT_YOURS\");\r\n            _IERC721Enumerable.transferFrom(msg.sender, address(this), id);\r\n\r\n            StakerToTokenIds[msg.sender].push(id);\r\n            TokenIdTimeStaked[id] = block.timestamp;\r\n            TokenIdToStaker[id] = msg.sender;\r\n        }\r\n    }","contract":"InvaderStaking","time":0},{"type":"external-function ","before":"function unstakeTokensByIds(uint256[] memory tokenIds) public {\r\n        uint256 totalRewards = 0;\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            uint256 id = tokenIds[i];\r\n            require(TokenIdToStaker[id] == msg.sender, \"NOT_ORIGINAL_STAKER\");\r\n\r\n            _IERC721Enumerable.transferFrom(address(this), msg.sender, id);\r\n            totalRewards += ((block.timestamp - TokenIdTimeStaked[id]) * EMISSIONS_RATE);\r\n\r\n            removeTokenIdFromArray(StakerToTokenIds[msg.sender], id);\r\n            TokenIdToStaker[id] = address(0);\r\n        }\r\n\r\n        _mint(msg.sender, totalRewards);\r\n    }","after":"function unstakeTokensByIds(uint256[] calldata tokenIds) public {\r\n        uint256 totalRewards = 0;\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            uint256 id = tokenIds[i];\r\n            require(TokenIdToStaker[id] == msg.sender, \"NOT_ORIGINAL_STAKER\");\r\n\r\n            _IERC721Enumerable.transferFrom(address(this), msg.sender, id);\r\n            totalRewards += ((block.timestamp - TokenIdTimeStaked[id]) * EMISSIONS_RATE);\r\n\r\n            removeTokenIdFromArray(StakerToTokenIds[msg.sender], id);\r\n            TokenIdToStaker[id] = address(0);\r\n        }\r\n\r\n        _mint(msg.sender, totalRewards);\r\n    }","contract":"InvaderStaking","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_WALLET_STAKED = 30;","after":"uint256 public constant MAX_WALLET_STAKED = 30;","contract":"InvaderStaking","time":1},{"type":"constant-restrict-modification  ","before":"address public ADDRESS = 0x246e29ef6987637e48e7509F91521Ce64EB8c831;","after":"address public constant ADDRESS = 0x246e29ef6987637e48e7509F91521Ce64EB8c831;","contract":"InvaderStaking","time":1}]}