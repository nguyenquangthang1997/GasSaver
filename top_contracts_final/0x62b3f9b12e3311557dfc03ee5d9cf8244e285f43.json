{"time":171,"results":[{"type":"external-function ","before":"function addToWhitelist(address[] memory accounts) public onlyOwner {\n        for(uint i=0; i<accounts.length; i++){\n            require(!_canTransferBeforeMintingIsEnabled[accounts[i]], \"Already added to list\");\n            _canTransferBeforeMintingIsEnabled[accounts[i]] = true;\n        }\n    }","after":"function addToWhitelist(address[] calldata accounts) public onlyOwner {\n        for(uint i=0; i<accounts.length; i++){\n            require(!_canTransferBeforeMintingIsEnabled[accounts[i]], \"Already added to list\");\n            _canTransferBeforeMintingIsEnabled[accounts[i]] = true;\n        }\n    }","contract":"CBS","time":0},{"type":"external-function ","before":"function removeFromWhitelist(address[] memory accounts) public onlyOwner {\n        for(uint i=0; i<accounts.length; i++){\n            require(_canTransferBeforeMintingIsEnabled[accounts[i]], \"Account not whitelisted\");\n            _canTransferBeforeMintingIsEnabled[accounts[i]] = false;\n        }\n    }","after":"function removeFromWhitelist(address[] calldata accounts) public onlyOwner {\n        for(uint i=0; i<accounts.length; i++){\n            require(_canTransferBeforeMintingIsEnabled[accounts[i]], \"Account not whitelisted\");\n            _canTransferBeforeMintingIsEnabled[accounts[i]] = false;\n        }\n    }","contract":"CBS","time":0},{"type":"external-function ","before":"function giveAwayFromReserve(address[] memory accounts) public {\n        require(_reserveAmountMinted < _giveAwayReserve, \"Reserve cap has been reached\");\n        require(msg.sender==_giveawayWalletAddress, \"Function can only be called by giveawayWallet\");\n        \n        uint supply = totalSupply();\n\n        for(uint i = 0; i < accounts.length; i++) {\n            _safeMint(accounts[i], supply+i);\n           _reserveAmountMinted++;\n        }\n    }","after":"function giveAwayFromReserve(address[] calldata accounts) public {\n        require(_reserveAmountMinted < _giveAwayReserve, \"Reserve cap has been reached\");\n        require(msg.sender==_giveawayWalletAddress, \"Function can only be called by giveawayWallet\");\n        \n        uint supply = totalSupply();\n\n        for(uint i = 0; i < accounts.length; i++) {\n            _safeMint(accounts[i], supply+i);\n           _reserveAmountMinted++;\n        }\n    }","contract":"CBS","time":0},{"type":"external-function ","before":"function ownerGiveAway(address[] memory accounts) public onlyOwner {\n        require(_reserveAmountMinted < _giveAwayReserve, \"Reserve cap has been reached\");\n        uint supply = totalSupply();\n\n        for(uint i = 0; i < accounts.length; i++) {\n            _safeMint(accounts[i], supply+i);\n           _reserveAmountMinted++;\n        }\n    }","after":"function ownerGiveAway(address[] calldata accounts) public onlyOwner {\n        require(_reserveAmountMinted < _giveAwayReserve, \"Reserve cap has been reached\");\n        uint supply = totalSupply();\n\n        for(uint i = 0; i < accounts.length; i++) {\n            _safeMint(accounts[i], supply+i);\n           _reserveAmountMinted++;\n        }\n    }","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public _price = 55000000000000000;","after":"uint256 public constant _price = 55000000000000000;","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _tokensAllowedPerPresaleAddress = 9;","after":"uint256 private constant _tokensAllowedPerPresaleAddress = 9;","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _tokensAllowedPerPublicMint = 21;","after":"uint256 private constant _tokensAllowedPerPublicMint = 21;","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public _maxTotalSupply = 8999;","after":"uint256 public constant _maxTotalSupply = 8999;","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _giveAwayReserve = 200;","after":"uint256 private constant _giveAwayReserve = 200;","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public _totalAvailableForSale = _maxTotalSupply.sub(_giveAwayReserve);","after":"uint256 public constant _totalAvailableForSale = _maxTotalSupply.sub(_giveAwayReserve);","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"address private _giveawayWalletAddress = 0x5a1b7bfA7C220cF020e3cF30F4561F7011339E45;","after":"address private constant _giveawayWalletAddress = 0x5a1b7bfA7C220cF020e3cF30F4561F7011339E45;","contract":"CBS","time":0},{"type":"constant-restrict-modification  ","before":"address private _withdrawAddress = 0x966B0d7e79cE40191e914E9a28E019b6846F73ad;","after":"address private constant _withdrawAddress = 0x966B0d7e79cE40191e914E9a28E019b6846F73ad;","contract":"CBS","time":0}]}