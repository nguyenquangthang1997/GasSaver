{"time":204,"results":[{"type":"external-function ","before":"function whitelistMembers (address[] memory users, uint8[] memory balances) public onlyOwner {\n        require(!saleActive, \"Cant whitelist\");\n        for (uint i = 0; i < users.length; i++) {\n            _memberslist[users[i]].exists = true;\n            _memberslist[users[i]].balance = balances[i];\n        }\n    }","after":"function whitelistMembers (address[] calldata users, uint8[] calldata balances) public onlyOwner {\n        require(!saleActive, \"Cant whitelist\");\n        for (uint i = 0; i < users.length; i++) {\n            _memberslist[users[i]].exists = true;\n            _memberslist[users[i]].balance = balances[i];\n        }\n    }","contract":"HOK","time":0},{"type":"external-function ","before":"function whitelistPartners (address[] memory users) public onlyOwner {\n        require(!saleActive, \"Cant whitelist\");\n        for (uint i = 0; i < users.length; i++) {\n            _partnerslist[users[i]] = true;\n        }\n    }","after":"function whitelistPartners (address[] calldata users) public onlyOwner {\n        require(!saleActive, \"Cant whitelist\");\n        for (uint i = 0; i < users.length; i++) {\n            _partnerslist[users[i]] = true;\n        }\n    }","contract":"HOK","time":0},{"type":"external-function ","before":"function removeWhitelistMembers (address[] memory users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            delete _memberslist[users[i]];\n        }\n    }","after":"function removeWhitelistMembers (address[] calldata users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            delete _memberslist[users[i]];\n        }\n    }","contract":"HOK","time":0},{"type":"external-function ","before":"function removeWhitelistPartners (address[] memory users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            delete _partnerslist[users[i]];\n        }\n    }","after":"function removeWhitelistPartners (address[] calldata users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            delete _partnerslist[users[i]];\n        }\n    }","contract":"HOK","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseContractURI) public onlyOwner {\n       baseURI = baseContractURI;\n    }","after":"function setBaseURI(string calldata baseContractURI) public onlyOwner {\n       baseURI = baseContractURI;\n    }","contract":"HOK","time":0},{"type":"constant-restrict-modification  ","before":"string private contractMetadata = 'contract.json';","after":"string private constant contractMetadata = 'contract.json';","contract":"HOK","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public saleStartsAt;","after":"uint256 public immutable saleStartsAt;","contract":"HOK","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public publicsaleStartsAt;","after":"uint256 public immutable publicsaleStartsAt;","contract":"HOK","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public publicsaleEndsAt;","after":"uint256 public immutable publicsaleEndsAt;","contract":"HOK","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public privatesaleStartsAt;","after":"uint256 public immutable privatesaleStartsAt;","contract":"HOK","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public privatesaleEndsAt;","after":"uint256 public immutable privatesaleEndsAt;","contract":"HOK","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public redemptionEndsAt;","after":"uint256 public immutable redemptionEndsAt;","contract":"HOK","time":1}]}