{"time":151,"results":[{"type":"external-function ","before":"function purchase(bytes memory signature, string memory nonce) external payable {\n        require(STATE == 1, \"NOT_LIVE\");\n        require(msg.value >= PURCHASE_PRICE, \"INVALID_AMOUNT\");\n        require(balanceOf(msg.sender) == 0, \"ONE_PER_ADDRESS\");\n        require(_stock > 0, \"OUT_OF_STOCK\");\n        require(matchAddressSigner(hashTransaction(msg.sender, nonce), signature), \"DIRECT_PURCHASE_DISALLOWED\");\n        require(!_usedNonces[nonce], \"HASH_USED\");\n        \n        _stock -= 1;\n        _usedNonces[nonce] = true;\n        uint256 tokenId = totalSupply() + 1;\n        _users[tokenId] = block.timestamp + 30 days;\n        _safeMint(msg.sender, tokenId);\n    }","after":"function purchase(bytes calldata signature, string calldata nonce) external payable {\n        require(STATE == 1, \"NOT_LIVE\");\n        require(msg.value >= PURCHASE_PRICE, \"INVALID_AMOUNT\");\n        require(balanceOf(msg.sender) == 0, \"ONE_PER_ADDRESS\");\n        require(_stock > 0, \"OUT_OF_STOCK\");\n        require(matchAddressSigner(hashTransaction(msg.sender, nonce), signature), \"DIRECT_PURCHASE_DISALLOWED\");\n        require(!_usedNonces[nonce], \"HASH_USED\");\n        \n        _stock -= 1;\n        _usedNonces[nonce] = true;\n        uint256 tokenId = totalSupply() + 1;\n        _users[tokenId] = block.timestamp + 30 days;\n        _safeMint(msg.sender, tokenId);\n    }","contract":"SapphireNFT","time":0}]}