{"time":26,"results":[{"type":"external-function ","before":"function setDescription(string memory _Description) public onlyBy(owner) {\n        Description = _Description;\n    }","after":"function setDescription(string calldata _Description) public onlyBy(owner) {\n        Description = _Description;\n    }","contract":"ProofCertoChainContract","time":0},{"type":"external-function ","before":"function NotarizeProofMetaNoteTimeStamp(\n        bytes32 hashproof,\n        bytes32 hashmeta,\n        string memory note\n    ) public onlyBy(owner) {\n        uint256 tsproof = CertoLedgerTimestamp[hashproof];\n        if (tsproof == 0) {\n            tsproof = block.timestamp;\n            CertoLedgerTimestamp[hashproof] = tsproof;\n        }\n\n        uint256 tsmeta = CertoLedgerTimestamp[hashmeta];\n        if (tsmeta == 0) {\n            tsmeta=block.timestamp;\n            CertoLedgerTimestamp[hashmeta] = tsmeta;\n        }\n\n        emit EventProofMetaWithNote(hashproof, hashmeta, tsproof, tsmeta, note);\n    }","after":"function NotarizeProofMetaNoteTimeStamp(\n        bytes32 hashproof,\n        bytes32 hashmeta,\n        string calldata note\n    ) public onlyBy(owner) {\n        uint256 tsproof = CertoLedgerTimestamp[hashproof];\n        if (tsproof == 0) {\n            tsproof = block.timestamp;\n            CertoLedgerTimestamp[hashproof] = tsproof;\n        }\n\n        uint256 tsmeta = CertoLedgerTimestamp[hashmeta];\n        if (tsmeta == 0) {\n            tsmeta=block.timestamp;\n            CertoLedgerTimestamp[hashmeta] = tsmeta;\n        }\n\n        emit EventProofMetaWithNote(hashproof, hashmeta, tsproof, tsmeta, note);\n    }","contract":"ProofCertoChainContract","time":0},{"type":"external-function ","before":"function NotarizeProofTimeStampWithNote(\n        bytes32 hashproof,\n        string memory note\n    ) public onlyBy(owner) {\n        uint256 ts = CertoLedgerTimestamp[hashproof];\n        if (ts == 0) {\n            ts = block.timestamp;\n            CertoLedgerTimestamp[hashproof] = ts;\n        }\n        emit EventProofWithNote(hashproof, ts, note);\n    }","after":"function NotarizeProofTimeStampWithNote(\n        bytes32 hashproof,\n        string calldata note\n    ) public onlyBy(owner) {\n        uint256 ts = CertoLedgerTimestamp[hashproof];\n        if (ts == 0) {\n            ts = block.timestamp;\n            CertoLedgerTimestamp[hashproof] = ts;\n        }\n        emit EventProofWithNote(hashproof, ts, note);\n    }","contract":"ProofCertoChainContract","time":0}]}