{"time":110,"results":[{"type":"external-function ","before":"function addAllstar(uint _id, uint _common_price, uint _holders_price, uint _max_supply, string memory _uri) public onlyOwner {\n        require(_id < MAX_ALLSTARS, \"Quantity limit reached\");\n        require(getMaxSupply(_id) == 0, \"Token is already exist\");\n        allstars[_id].common_price = _common_price;\n        allstars[_id].holders_price = _holders_price;\n        allstars[_id].max_supply = _max_supply;\n        allstars[_id].uri = _uri;\n    }","after":"function addAllstar(uint _id, uint _common_price, uint _holders_price, uint _max_supply, string calldata _uri) public onlyOwner {\n        require(_id < MAX_ALLSTARS, \"Quantity limit reached\");\n        require(getMaxSupply(_id) == 0, \"Token is already exist\");\n        allstars[_id].common_price = _common_price;\n        allstars[_id].holders_price = _holders_price;\n        allstars[_id].max_supply = _max_supply;\n        allstars[_id].uri = _uri;\n    }","contract":"M101Allstars","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not an owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not an owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"M101Allstars","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not an owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not an owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"M101Allstars","time":0}]}