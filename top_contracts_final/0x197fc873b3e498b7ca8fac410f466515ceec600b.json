{"time":145,"results":[{"type":"state-data-arrangement ","before":"\nuint public constant MAX_SNEAKERHEADZ = 4444;\nuint public constant MAX_SALE = 20;\nuint public constant MAX_PRESALE = 5;\naddress payableAddress;\nuint public price;\nmapping(address => uint256) private preSaleAllowance;\nbool public hasPreSaleStarted = false;\nbool public preSaleOver = false;\nbool public hasSaleStarted = false;","after":"uint public constant MAX_SNEAKERHEADZ = 4444;\nuint public constant MAX_SALE = 20;\nuint public constant MAX_PRESALE = 5;\nuint public price;\nmapping(address => uint256) private preSaleAllowance;\naddress payableAddress;\nbool public hasPreSaleStarted = false;\nbool public preSaleOver = false;\nbool public hasSaleStarted = false;\n","contract":"TSSNFT","time":1},{"type":"external-function ","before":"function addEarlyBirds(address[] memory earlyBirdAddresses) external onlyOwner {\n        require(!preSaleOver, \"presale is over, no more allowances\");\n        \n        for (uint i = 0; i < earlyBirdAddresses.length; i++) {\n            preSaleAllowance[earlyBirdAddresses[i]] = MAX_PRESALE;\n        }\n    }","after":"function addEarlyBirds(address[] calldata earlyBirdAddresses) external onlyOwner {\n        require(!preSaleOver, \"presale is over, no more allowances\");\n        \n        for (uint i = 0; i < earlyBirdAddresses.length; i++) {\n            preSaleAllowance[earlyBirdAddresses[i]] = MAX_PRESALE;\n        }\n    }","contract":"TSSNFT","time":0}]}