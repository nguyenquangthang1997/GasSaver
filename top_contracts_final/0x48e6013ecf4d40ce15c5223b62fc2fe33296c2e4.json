{"time":290,"results":[{"type":"external-function ","before":"function setLegacyURI(uint tokenId, string memory legacyURI) public onlyOwner {\n        tokens[tokenId].legacyURI = legacyURI;\n    }","after":"function setLegacyURI(uint tokenId, string calldata legacyURI) public onlyOwner {\n        tokens[tokenId].legacyURI = legacyURI;\n    }","contract":"DD","time":0},{"type":"external-function ","before":"function addAttValue(uint256 _attributeId, string[] memory _valueArray)public onlyOwner{\n        traitTypes[_attributeId].attributeValues = _valueArray;\n    }","after":"function addAttValue(uint256 _attributeId, string[] calldata _valueArray)public onlyOwner{\n        traitTypes[_attributeId].attributeValues = _valueArray;\n    }","contract":"DD","time":0},{"type":"external-function ","before":"function addAttribute(bool active, string memory _traitName, string memory _traitURI, string[] memory _valueArray, bool _swappable) public onlyOwner{\n        setAttribute(traitCount++, active, _traitName, _traitURI, _valueArray, _swappable);\n    }","after":"function addAttribute(bool active, string calldata _traitName, string calldata _traitURI, string[] calldata _valueArray, bool _swappable) public onlyOwner{\n        setAttribute(traitCount++, active, _traitName, _traitURI, _valueArray, _swappable);\n    }","contract":"DD","time":0},{"type":"external-function ","before":"function attrOverrideURI(uint _traitIndex, uint[] memory _indexArray, string[] memory _stringArray) public onlyOwner {\n        for(uint i = 0; i < _indexArray.length; i++){\n            traitTypes[_traitIndex].breedOverride[_indexArray[i]] = _stringArray[i];\n        }\n    }","after":"function attrOverrideURI(uint _traitIndex, uint[] calldata _indexArray, string[] calldata _stringArray) public onlyOwner {\n        for(uint i = 0; i < _indexArray.length; i++){\n            traitTypes[_traitIndex].breedOverride[_indexArray[i]] = _stringArray[i];\n        }\n    }","contract":"DD","time":0},{"type":"external-function ","before":"function mintAirdrop(address[] memory _to) public onlyOwner{\n        for(uint i = 0; i < _to.length; i++){\n            dd.mint(1, _to[i]);\n        }\n    }","after":"function mintAirdrop(address[] calldata _to) public onlyOwner{\n        for(uint i = 0; i < _to.length; i++){\n            dd.mint(1, _to[i]);\n        }\n    }","contract":"MintContract","time":0},{"type":"external-function ","before":"function addWhitelist(address[] memory _addressArray) public onlyOwner{\n        for(uint256 i = 0; i < _addressArray.length; i++){\n            whitelist[_addressArray[i]] = 3;\n        }\n    }","after":"function addWhitelist(address[] calldata _addressArray) public onlyOwner{\n        for(uint256 i = 0; i < _addressArray.length; i++){\n            whitelist[_addressArray[i]] = 3;\n        }\n    }","contract":"MintContract","time":0},{"type":"external-function ","before":"function contractParams(address _dd, string memory _description, uint _size, string memory _placeholder)public onlyOwner{\n        dd = DD(_dd);\n        description = _description;\n        size = _size;\n        placeholder = _placeholder;\n    }","after":"function contractParams(address _dd, string calldata _description, uint _size, string calldata _placeholder)public onlyOwner{\n        dd = DD(_dd);\n        description = _description;\n        size = _size;\n        placeholder = _placeholder;\n    }","contract":"URIContract","time":0},{"type":"external-function ","before":"function changeEarURI(string memory _earUri) public onlyOwner {\n        earURI = _earUri;\n    }","after":"function changeEarURI(string calldata _earUri) public onlyOwner {\n        earURI = _earUri;\n    }","contract":"URIContract","time":0}]}