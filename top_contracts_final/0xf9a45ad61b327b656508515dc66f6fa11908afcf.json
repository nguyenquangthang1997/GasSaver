{"time":61,"results":[{"type":"external-function ","before":"function claimRewards(uint256[] calldata _tokenIds, address[] memory _nftContracts)\n\t\texternal\n\t\tnonReentrant\n\t{\n\t\trequire(_tokenIds.length == _nftContracts.length, \"invalid array lengths\");\n\n\t\tuint256 totalUnclaimedRewards = 0;\n\n\t\tfor (uint256 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(allowedNFTs[_nftContracts[i]] > 0, \"contract not allowed\");\n\n\t\t\trequire(IERC721(_nftContracts[i]).ownerOf(_tokenIds[i]) == msg.sender, \"not owning the nft\");\n\n\t\t\tuint256 unclaimed = unclaimedRewards(_tokenIds[i], _nftContracts[i]);\n\n\t\t\tbytes32 lastClaimKey = keccak256(abi.encode(_tokenIds[i], _nftContracts[i]));\n\t\t\tlastClaim[lastClaimKey] = block.timestamp;\n\n\t\t\ttotalUnclaimedRewards = totalUnclaimedRewards + unclaimed;\n\t\t}\n\n\t\ttuna.mint(msg.sender, totalUnclaimedRewards);\n\t}","after":"function claimRewards(uint256[] calldata _tokenIds, address[] calldata _nftContracts)\n\t\texternal\n\t\tnonReentrant\n\t{\n\t\trequire(_tokenIds.length == _nftContracts.length, \"invalid array lengths\");\n\n\t\tuint256 totalUnclaimedRewards = 0;\n\n\t\tfor (uint256 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(allowedNFTs[_nftContracts[i]] > 0, \"contract not allowed\");\n\n\t\t\trequire(IERC721(_nftContracts[i]).ownerOf(_tokenIds[i]) == msg.sender, \"not owning the nft\");\n\n\t\t\tuint256 unclaimed = unclaimedRewards(_tokenIds[i], _nftContracts[i]);\n\n\t\t\tbytes32 lastClaimKey = keccak256(abi.encode(_tokenIds[i], _nftContracts[i]));\n\t\t\tlastClaim[lastClaimKey] = block.timestamp;\n\n\t\t\ttotalUnclaimedRewards = totalUnclaimedRewards + unclaimed;\n\t\t}\n\n\t\ttuna.mint(msg.sender, totalUnclaimedRewards);\n\t}","contract":"TunaRewards","time":0}]}