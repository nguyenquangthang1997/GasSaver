{"time":167,"results":[{"type":"external-function ","before":"function airdropBottlesToMany(address[] memory recipients) external onlyOwner {\n        require(\n            totalSupply().add(recipients.length) <= MAX_BOTTLES,\n            \"Airdrop would exceed max supply\"\n        );\n\n        for (uint256 i = 0; i < recipients.length; i++) {\n            airdropBottles(1, recipients[i]);\n        }\n    }","after":"function airdropBottlesToMany(address[] calldata recipients) external onlyOwner {\n        require(\n            totalSupply().add(recipients.length) <= MAX_BOTTLES,\n            \"Airdrop would exceed max supply\"\n        );\n\n        for (uint256 i = 0; i < recipients.length; i++) {\n            airdropBottles(1, recipients[i]);\n        }\n    }","contract":"SpacePirateBottles","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"SpacePirateBottles","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_BOTTLES = 6000;","after":"uint256 public constant MAX_BOTTLES = 6000;","contract":"SpacePirateBottles","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_CROSS_DROP = 2000;","after":"uint256 public constant MAX_CROSS_DROP = 2000;","contract":"SpacePirateBottles","time":0}]}