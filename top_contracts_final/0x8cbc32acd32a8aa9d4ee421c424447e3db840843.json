{"time":135,"results":[{"type":"external-function ","before":"function printMyBeardos(uint[] memory ids) public {\n        for(uint i = 0; i < ids.length; i++){\n            printMyBeardo(ids[i]);\n        }\n    }","after":"function printMyBeardos(uint[] calldata ids) public {\n        for(uint i = 0; i < ids.length; i++){\n            printMyBeardo(ids[i]);\n        }\n    }","contract":"HBC90","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        BEARDO_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        BEARDO_PROVENANCE = provenanceHash;\n    }","contract":"HBC90","time":0},{"type":"external-function ","before":"function removeReservations(address[] memory addresses) public onlyOwner {\n        for(uint i = 0; i < addresses.length; i++){\n            totalReservations -= mintPasses[addresses[i]];\n            delete mintPasses[addresses[i]];\n        }\n    }","after":"function removeReservations(address[] calldata addresses) public onlyOwner {\n        for(uint i = 0; i < addresses.length; i++){\n            totalReservations -= mintPasses[addresses[i]];\n            delete mintPasses[addresses[i]];\n        }\n    }","contract":"HBC90","time":0},{"type":"external-function ","before":"function distributeDrop(address[] memory addresses) public {\n        require(resMintIsActive, \"Minting is not active yet\");\n        uint reservations = mintPasses[msg.sender];\n        require(addresses.length <= reservations, \"More addresses than reservations\");\n        uint ts = totalSupply()+unredeemedFE;\n        for(uint i = 0; i < addresses.length; i++) {\n            _safeMint(addresses[i], ts+i);\n        }\n        mintPasses[msg.sender] = reservations-addresses.length;\n        totalReservations -= addresses.length;\n    }","after":"function distributeDrop(address[] calldata addresses) public {\n        require(resMintIsActive, \"Minting is not active yet\");\n        uint reservations = mintPasses[msg.sender];\n        require(addresses.length <= reservations, \"More addresses than reservations\");\n        uint ts = totalSupply()+unredeemedFE;\n        for(uint i = 0; i < addresses.length; i++) {\n            _safeMint(addresses[i], ts+i);\n        }\n        mintPasses[msg.sender] = reservations-addresses.length;\n        totalReservations -= addresses.length;\n    }","contract":"HBC90","time":0},{"type":"external-function ","before":"function setBaseURI(string memory uri) public onlyOwner {\n      baseURI = uri;\n    }","after":"function setBaseURI(string calldata uri) public onlyOwner {\n      baseURI = uri;\n    }","contract":"HBC90","time":0}]}