{"time":669,"results":[{"type":"external-function ","before":"function setBaseURI(string memory _baseTokenURI) external override onlyOwner {\n        baseTokenURI = _baseTokenURI;    \n    }","after":"function setBaseURI(string calldata _baseTokenURI) external override onlyOwner {\n        baseTokenURI = _baseTokenURI;    \n    }","contract":"Woodie","time":0},{"type":"external-function ","before":"function setIpfsURI(string memory _ipfsURI) external override onlyOwner {\n        ipfsURI = _ipfsURI;    \n    }","after":"function setIpfsURI(string calldata _ipfsURI) external override onlyOwner {\n        ipfsURI = _ipfsURI;    \n    }","contract":"Woodie","time":0},{"type":"external-function ","before":"function setIndividualTokenURI(uint256 id, string memory uri) external override {\n        require(hasRole(WOODIE_URI_UPDATER_ROLE, msg.sender), \"Access: sender does not have access\");\n        require(_exists(id), \"ERC721Metadata: Token does not exist\");\n        tokenData[id].tokenURI = uri;\n        tokenData[id].exists = true;\n    }","after":"function setIndividualTokenURI(uint256 id, string calldata uri) external override {\n        require(hasRole(WOODIE_URI_UPDATER_ROLE, msg.sender), \"Access: sender does not have access\");\n        require(_exists(id), \"ERC721Metadata: Token does not exist\");\n        tokenData[id].tokenURI = uri;\n        tokenData[id].exists = true;\n    }","contract":"Woodie","time":0},{"type":"external-function ","before":"function setContractURI(string memory uri) external {\n        require(hasRole(WOODIE_URI_UPDATER_ROLE, msg.sender) );\n        _contractURI = uri;\n    }","after":"function setContractURI(string calldata uri) external {\n        require(hasRole(WOODIE_URI_UPDATER_ROLE, msg.sender) );\n        _contractURI = uri;\n    }","contract":"Woodie","time":0}]}