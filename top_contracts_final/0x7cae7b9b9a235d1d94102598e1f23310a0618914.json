{"time":214,"results":[{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner {\n        _baseURIextended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner {\n        _baseURIextended = baseURI_;\n    }","contract":"Croakz","time":0},{"type":"external-function ","before":"function wlMint(uint256 quantity, ECRecoverLib.ECDSAVariables memory wlECDSA) external payable {\n        // Prove to contract that seller is WL\n        bytes32 senderHash = keccak256(abi.encodePacked(msg.sender));\n        wlECDSA.verifySig(signingAuth, senderHash);\n        mint(quantity);\n    }","after":"function wlMint(uint256 quantity, ECRecoverLib.ECDSAVariables calldata wlECDSA) external payable {\n        // Prove to contract that seller is WL\n        bytes32 senderHash = keccak256(abi.encodePacked(msg.sender));\n        wlECDSA.verifySig(signingAuth, senderHash);\n        mint(quantity);\n    }","contract":"Croakz","time":0},{"type":"external-function ","before":"function mintSpecial(address [] memory recipients) external onlyOwner {        \n        require(!devMintLocked, \"Dev Mint Permanently Locked\");\n        for (uint256 i = 0; i < recipients.length; i++) {\n            _specialTokenIds.increment();\n            _safeMint(recipients[i], _specialTokenIds.current() * 1000000);\n        }\n    }","after":"function mintSpecial(address [] calldata recipients) external onlyOwner {        \n        require(!devMintLocked, \"Dev Mint Permanently Locked\");\n        for (uint256 i = 0; i < recipients.length; i++) {\n            _specialTokenIds.increment();\n            _safeMint(recipients[i], _specialTokenIds.current() * 1000000);\n        }\n    }","contract":"Croakz","time":0}]}