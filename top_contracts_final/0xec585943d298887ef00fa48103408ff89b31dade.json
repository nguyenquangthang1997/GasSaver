{"time":128,"results":[{"type":"external-function ","before":"function multipleAddressesToWhiteList(address[] memory addresses) public onlyOwner {\n        require(totalWhitelist + addresses.length <= maxWhitelistLength,   'This transaction would exceed max length of whitelist');\n\n        for(uint256 i = 0; i < addresses.length; i++) {\n            singleAddressToWhiteList(addresses[i]);\n        }\n    }","after":"function multipleAddressesToWhiteList(address[] calldata addresses) public onlyOwner {\n        require(totalWhitelist + addresses.length <= maxWhitelistLength,   'This transaction would exceed max length of whitelist');\n\n        for(uint256 i = 0; i < addresses.length; i++) {\n            singleAddressToWhiteList(addresses[i]);\n        }\n    }","contract":"InventorClub","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        baseTokenURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        baseTokenURI = baseURI;\n    }","contract":"InventorClub","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }","after":"function setBaseExtension(string calldata _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }","contract":"InventorClub","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 9000;","after":"uint256 public constant maxSupply = 9000;","contract":"InventorClub","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxMintCount = 20;","after":"uint256 public constant maxMintCount = 20;","contract":"InventorClub","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxWhitelistLength = 750;","after":"uint256 public constant maxWhitelistLength = 750;","contract":"InventorClub","time":0}]}