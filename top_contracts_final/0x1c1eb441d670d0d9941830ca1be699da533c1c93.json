{"time":158,"results":[{"type":"external-function ","before":"ationHash The associated hash of the animation in sha-256 bytes32 format. If animation is omitted the hash can be zero.\n      @param _editionSize Number of editions that can be minted in total. If 0, unlimited editions can be minted.\n      @param _royaltyBPS BPS of the royalty set on the contract. Can be 0 for no royalty.\n      @param _curator User that recieves a percentage of sales payout can be 0 for no fee.\n      @dev Function to create a new edition. Can only be called by the allowed creator\n           Sets the only allowed minter to the address that creates/owns the edition.\n           This can be re-assigned or updated later\n     */\n    function initialize(\n        address _owner,\n        string memory _name,\n        string memory _symbol,\n        string memory _description,\n        string memory _animationUrl,\n        bytes32 _animationHash,\n        string memory _imageUrl,\n        bytes32","after":"ationHash The associated hash of the animation in sha-256 bytes32 format. If animation is omitted the hash can be zero.\n      @param _editionSize Number of editions that can be minted in total. If 0, unlimited editions can be minted.\n      @param _royaltyBPS BPS of the royalty set on the contract. Can be 0 for no royalty.\n      @param _curator User that recieves a percentage of sales payout can be 0 for no fee.\n      @dev Function to create a new edition. Can only be called by the allowed creator\n           Sets the only allowed minter to the address that creates/owns the edition.\n           This can be re-assigned or updated later\n     */\n    function initialize(\n        address _owner,\n        string memory _name,\n        string memory _symbol,\n        string memory _description,\n        string memory _animationUrl,\n        bytes32 _animationHash,\n        string memory _imageUrl,\n        bytes32","contract":"SingleEditionMintable","time":0},{"type":"external-function ","before":"rn allowedMinters[msg.sender];\n    }\n\n    /**\n      @param to address to send the newly minted edition to\n      @dev This mints one edition to the given address by an allowed minter on the edition instance.\n     */\n    function mintEd","after":"rn allowedMinters[msg.sender];\n    }\n\n    /**\n      @param to address to send the newly minted edition to\n      @dev This mints one edition to the given address by an allowed minter on the edition instance.\n     */\n    function mintEd","contract":"SingleEditionMintable","time":0},{"type":"external-function ","before":"t\n      @dev Sets the approved minting status of the given address.\n           This requires that msg.sender is the owner of the given edition id.\n           If the ZeroAddress (address(0x0)) is ","after":"t\n      @dev Sets the approved minting status of the given address.\n           This requires that msg.sender is the owner of the given edition id.\n           If the ZeroAddress (address(0x0)) is ","contract":"SingleEditionMintable","time":0}]}