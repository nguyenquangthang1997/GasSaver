{"time":138,"results":[{"type":"external-function ","before":"function setMerkleRoots(bytes32[] memory _merkleRoots) external onlyOwner {\n        require(_merkleRoots.length > 0, \"Incorrect data\");\n        if (merkleRoots.length > 0) {\n            delete merkleRoots;\n        }\n        merkleRoots = new bytes32[](_merkleRoots.length);\n        merkleRoots = _merkleRoots;\n    }","after":"function setMerkleRoots(bytes32[] calldata _merkleRoots) external onlyOwner {\n        require(_merkleRoots.length > 0, \"Incorrect data\");\n        if (merkleRoots.length > 0) {\n            delete merkleRoots;\n        }\n        merkleRoots = new bytes32[](_merkleRoots.length);\n        merkleRoots = _merkleRoots;\n    }","contract":"Rewards","time":0},{"type":"external-function ","before":"function claim(\n        uint256 _merkleRootIndex,\n        uint256 _amountAllowedToClaim,\n        bytes32[] memory _merkleProofs\n    )\n        external nonReentrant whenNotPaused enough(_amountAllowedToClaim)\n    {\n        require(verifyMerkleProofs(_msgSender(), _merkleRootIndex, _amountAllowedToClaim, _merkleProofs), \"Merkle proofs not verified\");\n        uint256 availableAmount = _amountAllowedToClaim.sub(claimed[_msgSender()]);\n        require(availableAmount != 0 && availableAmount >= minAmountToClaim, \"Not enough tokens\");\n        claimed[_msgSender()] = claimed[_msgSender()].add(availableAmount);\n        token.safeTransfer(_msgSender(), availableAmount);\n        emit Claimed(_msgSender(), availableAmount);\n    }","after":"function claim(\n        uint256 _merkleRootIndex,\n        uint256 _amountAllowedToClaim,\n        bytes32[] calldata _merkleProofs\n    )\n        external nonReentrant whenNotPaused enough(_amountAllowedToClaim)\n    {\n        require(verifyMerkleProofs(_msgSender(), _merkleRootIndex, _amountAllowedToClaim, _merkleProofs), \"Merkle proofs not verified\");\n        uint256 availableAmount = _amountAllowedToClaim.sub(claimed[_msgSender()]);\n        require(availableAmount != 0 && availableAmount >= minAmountToClaim, \"Not enough tokens\");\n        claimed[_msgSender()] = claimed[_msgSender()].add(availableAmount);\n        token.safeTransfer(_msgSender(), availableAmount);\n        emit Claimed(_msgSender(), availableAmount);\n    }","contract":"Rewards","time":0}]}