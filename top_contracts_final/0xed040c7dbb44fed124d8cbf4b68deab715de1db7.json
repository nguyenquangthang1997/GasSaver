{"time":33,"results":[{"type":"external-function ","before":"function claim(uint256 phaseId, uint256 index, uint256 amount, uint256 releaseTime, bytes memory signature)\n        external\n    {\n        address msgSender = _msgSender();\n\n        require(!_claimed[phaseId][msgSender], \"TokenClaim: account already claimed\");\n\n        require(block.timestamp >= releaseTime, \"TokenClaim: token still is in locking time\");\n\n        bytes32 message = keccak256(abi.encodePacked(phaseId, index, msgSender, amount, releaseTime, address(this))).prefixed();\n\n        require(message.recoverSigner(signature) == _signatureVerifier, \"TokenClaim: signature is invalid\");\n\n        amount = amount * 1e18;\n\n        _claimed[phaseId][msgSender] = true;\n\n        _token.transfer(msgSender, amount);\n\n        emit TokenClaimed(phaseId, msgSender, amount);\n    }","after":"function claim(uint256 phaseId, uint256 index, uint256 amount, uint256 releaseTime, bytes calldata signature)\n        external\n    {\n        address msgSender = _msgSender();\n\n        require(!_claimed[phaseId][msgSender], \"TokenClaim: account already claimed\");\n\n        require(block.timestamp >= releaseTime, \"TokenClaim: token still is in locking time\");\n\n        bytes32 message = keccak256(abi.encodePacked(phaseId, index, msgSender, amount, releaseTime, address(this))).prefixed();\n\n        require(message.recoverSigner(signature) == _signatureVerifier, \"TokenClaim: signature is invalid\");\n\n        amount = amount * 1e18;\n\n        _claimed[phaseId][msgSender] = true;\n\n        _token.transfer(msgSender, amount);\n\n        emit TokenClaimed(phaseId, msgSender, amount);\n    }","contract":"TokenClaim","time":0}]}