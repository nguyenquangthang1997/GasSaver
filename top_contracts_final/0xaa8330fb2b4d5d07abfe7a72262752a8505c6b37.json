{"time":96,"results":[{"type":"state-data-arrangement ","before":"\nstring public name = \"Polka City\";\nuint8 public decimals = 18;\nstring public symbol = \"POLC\";\nmapping (address => TimeLock) public timeLocks;\nbool public limitTransactions;\nmapping (address => bool) public contractsWhiteList;\nmapping (address => uint) public lastTXBlock;\naddress payable public salesWallet;\nuint256 public soldOnCSale;\nuint256 public constant CROWDSALE_START = 1613926800;\nuint256 public constant CROWDSALE_END = 1614556740;\nuint256 public constant CSALE_WEI_FACTOR = 15000;\nuint256 public constant CSALE_HARDCAP = 7500000 ether;","after":"string public name = \"Polka City\";\nstring public symbol = \"POLC\";\nmapping (address => TimeLock) public timeLocks;\nmapping (address => bool) public contractsWhiteList;\nmapping (address => uint) public lastTXBlock;\nuint256 public soldOnCSale;\nuint256 public constant CROWDSALE_START = 1613926800;\nuint256 public constant CROWDSALE_END = 1614556740;\nuint256 public constant CSALE_WEI_FACTOR = 15000;\nuint256 public constant CSALE_HARDCAP = 7500000 ether;\naddress payable public salesWallet;\nuint8 public decimals = 18;\nbool public limitTransactions;\n","contract":"POLCToken","time":0},{"type":"external-function ","before":"function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        ItokenRecipient recipient = ItokenRecipient(_spender);\n        require(recipient.receiveApproval(msg.sender, _value, address(this), _extraData));\n        return true;\n    }","after":"function approveAndCall(address _spender, uint256 _value, bytes calldata _extraData) public returns (bool success) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        ItokenRecipient recipient = ItokenRecipient(_spender);\n        require(recipient.receiveApproval(msg.sender, _value, address(this), _extraData));\n        return true;\n    }","contract":"POLCToken","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"Polka City\";","after":"string public constant name = \"Polka City\";","contract":"POLCToken","time":0},{"type":"constant-restrict-modification  ","before":"uint8 public decimals = 18;","after":"uint8 public constant decimals = 18;","contract":"POLCToken","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol = \"POLC\";","after":"string public constant symbol = \"POLC\";","contract":"POLCToken","time":0},{"type":"immutable-restrict-modification ","before":"address payable public salesWallet;","after":"address payable public immutable salesWallet;","contract":"POLCToken","time":0}]}