{"time":179,"results":[{"type":"external-function ","before":"function depositToEVM(\n        string memory ethRecipientOnNear, \n        uint256 fee\n    )\n        external\n        payable\n        pausable(PAUSED_DEPOSIT_TO_EVM)\n    {\n        require(\n            fee < msg.value,\n            'The fee cannot be bigger than the transferred amount.'\n        );\n\n        string memory separator = ':';\n        string memory protocolMessage = string(\n            abi.encodePacked(\n                string(nearProofProducerAccount_),\n                separator, ethRecipientOnNear\n            )\n        );\n\n        emit Deposited(\n            msg.sender, \n            protocolMessage, \n            msg.value, \n            fee\n        );\n    }","after":"function depositToEVM(\n        string calldata ethRecipientOnNear, \n        uint256 fee\n    )\n        external\n        payable\n        pausable(PAUSED_DEPOSIT_TO_EVM)\n    {\n        require(\n            fee < msg.value,\n            'The fee cannot be bigger than the transferred amount.'\n        );\n\n        string memory separator = ':';\n        string memory protocolMessage = string(\n            abi.encodePacked(\n                string(nearProofProducerAccount_),\n                separator, ethRecipientOnNear\n            )\n        );\n\n        emit Deposited(\n            msg.sender, \n            protocolMessage, \n            msg.value, \n            fee\n        );\n    }","contract":"EthCustodian","time":0},{"type":"external-function ","before":"function depositToNear(\n        string memory nearRecipientAccountId, \n        uint256 fee\n    )\n        external\n        payable\n        pausable(PAUSED_DEPOSIT_TO_NEAR)\n    {\n        require(\n            fee < msg.value,\n            'The fee cannot be bigger than the transferred amount.'\n        );\n\n        emit Deposited(\n            msg.sender, \n            nearRecipientAccountId, \n            msg.value, \n            fee\n        );\n    }","after":"function depositToNear(\n        string calldata nearRecipientAccountId, \n        uint256 fee\n    )\n        external\n        payable\n        pausable(PAUSED_DEPOSIT_TO_NEAR)\n    {\n        require(\n            fee < msg.value,\n            'The fee cannot be bigger than the transferred amount.'\n        );\n\n        emit Deposited(\n            msg.sender, \n            nearRecipientAccountId, \n            msg.value, \n            fee\n        );\n    }","contract":"EthCustodian","time":0},{"type":"external-function ","before":"function adminDelegatecall(address target, bytes memory data) public payable onlyAdmin returns (bytes memory) {\n        (bool success, bytes memory rdata) = target.delegatecall(data);\n        require(success);\n        return rdata;\n    }","after":"function adminDelegatecall(address target, bytes calldata data) public payable onlyAdmin returns (bytes memory) {\n        (bool success, bytes memory rdata) = target.delegatecall(data);\n        require(success);\n        return rdata;\n    }","contract":"EthCustodian","time":0},{"type":"immutable-restrict-modification ","before":"bytes public nearProofProducerAccount_;","after":"bytes public immutable nearProofProducerAccount_;","contract":"EthCustodian","time":0},{"type":"immutable-restrict-modification ","before":"uint64 public minBlockAcceptanceHeight_;","after":"uint64 public immutable minBlockAcceptanceHeight_;","contract":"EthCustodian","time":0},{"type":"immutable-restrict-modification ","before":"address public admin;","after":"address public immutable admin;","contract":"EthCustodian","time":0},{"type":"struct-data-arrangement ","before":"\nuint64 height\nbytes32 epoch_id\nbytes32 next_epoch_id\nbytes32 prev_state_root\nbytes32 outcome_root\nuint64 timestamp\nbytes32 next_bp_hash\nbytes32 block_merkle_root\nbytes32 hash","after":"bytes32 epoch_id\nbytes32 next_epoch_id\nbytes32 prev_state_root\nbytes32 outcome_root\nbytes32 next_bp_hash\nbytes32 block_merkle_root\nbytes32 hash\nuint64 height\nuint64 timestamp\n","contract":"NearDecoder","time":0}]}