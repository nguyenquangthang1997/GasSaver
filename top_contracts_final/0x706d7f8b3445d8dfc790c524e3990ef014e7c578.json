{"time":232,"results":[{"type":"state-data-arrangement ","before":"\nstring internal constant AMP_TOKENS_SENDER = \"AmpTokensSender\";\nstring internal constant AMP_TOKENS_RECIPIENT = \"AmpTokensRecipient\";\nbytes32\n        internal constant CHANGE_PARTITION_FLAG = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\nbytes4 internal constant PARTITION_PREFIX = 0xCCCCCCCC;\nbytes32\n        internal constant WITHDRAWAL_FLAG = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\nbytes32\n        internal constant FALLBACK_WITHDRAWAL_FLAG = 0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\nbytes32\n        internal constant REFUND_FLAG = 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc;\nbytes32\n        internal constant DIRECT_TRANSFER_FLAG = 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd;\naddress public amp;\nmapping(bytes32 => bool) public partitions;\naddress public withdrawalPublisher;\naddress public fallbackPublisher;\naddress public withdrawalLimitPublisher;\naddress public directTransferer;\naddress public partitionManager;\nuint256 public supplyNonce = 0;\nmapping(uint256 => Supply) public nonceToSupply;\nuint256 public withdrawalLimit = 100 * 1000 * (10**18);\nuint256 public maxWithdrawalRootNonce = 0;\nmapping(bytes32 => uint256) public withdrawalRootToNonce;\nmapping(bytes32 => mapping(address => uint256)) public addressToWithdrawalNonce;\nmapping(bytes32 => mapping(address => uint256)) public addressToCumulativeAmountWithdrawn;\nuint256 public fallbackWithdrawalDelaySeconds = 1 weeks;\nbytes32 public fallbackRoot;\nuint256 public fallbackSetDate = 2**200;\nuint256 public fallbackMaxIncludedSupplyNonce = 0;","after":"string internal constant AMP_TOKENS_SENDER = \"AmpTokensSender\";\nstring internal constant AMP_TOKENS_RECIPIENT = \"AmpTokensRecipient\";\nbytes32\n        internal constant CHANGE_PARTITION_FLAG = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\nbytes32\n        internal constant WITHDRAWAL_FLAG = 0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\nbytes32\n        internal constant FALLBACK_WITHDRAWAL_FLAG = 0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\nbytes32\n        internal constant REFUND_FLAG = 0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc;\nbytes32\n        internal constant DIRECT_TRANSFER_FLAG = 0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd;\nmapping(bytes32 => bool) public partitions;\nuint256 public supplyNonce = 0;\nmapping(uint256 => Supply) public nonceToSupply;\nuint256 public withdrawalLimit = 100 * 1000 * (10**18);\nuint256 public maxWithdrawalRootNonce = 0;\nmapping(bytes32 => uint256) public withdrawalRootToNonce;\nmapping(bytes32 => mapping(address => uint256)) public addressToWithdrawalNonce;\nmapping(bytes32 => mapping(address => uint256)) public addressToCumulativeAmountWithdrawn;\nuint256 public fallbackWithdrawalDelaySeconds = 1 weeks;\nbytes32 public fallbackRoot;\nuint256 public fallbackSetDate = 2**200;\nuint256 public fallbackMaxIncludedSupplyNonce = 0;\naddress public amp;\naddress public withdrawalPublisher;\naddress public fallbackPublisher;\naddress public withdrawalLimitPublisher;\naddress public directTransferer;\naddress public partitionManager;\nbytes4 internal constant PARTITION_PREFIX = 0xCCCCCCCC;\n","contract":"FlexaCollateralManager","time":1},{"type":"external-function ","before":"function requestRelease(\n        bytes32 _partition,\n        uint256 _amount,\n        bytes memory _data\n    ) external {\n        emit ReleaseRequest(msg.sender, _partition, _amount, _data);\n    }","after":"function requestRelease(\n        bytes32 _partition,\n        uint256 _amount,\n        bytes calldata _data\n    ) external {\n        emit ReleaseRequest(msg.sender, _partition, _amount, _data);\n    }","contract":"FlexaCollateralManager","time":0},{"type":"immutable-restrict-modification ","before":"address public amp;","after":"address public immutable amp;","contract":"FlexaCollateralManager","time":0}]}