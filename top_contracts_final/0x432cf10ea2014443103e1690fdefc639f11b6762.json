{"time":146,"results":[{"type":"external-function ","before":"s\", \"H8C\") {}\n    \n    function matchAddresSigner(bytes memory signature) private view returns(bool) {\n         bytes32 hash = keccak256(abi.encodePacked(\n            \"\\x19Ethereum Signed Message:\\n32\",\n            keccak256(abi.encodePacked(msg.sender, _sigWord)))\n          );\n        return _signerAddress == hash.recover(signature);\n    }      \n        \n    function gift(address[] calldata receivers) external onlyOwner {\n        require(_tokensMinted.current() + receivers.length <= H8C_MAX, \"EXCEED_MAX\");\n        for (uint256 i = 0; i < receivers.length; i++) {\n             _tokensMinted.increment();\n            _safeMint(receivers[i], _tokensM","after":"s\", \"H8C\") {}\n    \n    function matchAddresSigner(bytes calldata signature) private view returns(bool) {\n         bytes32 hash = keccak256(abi.encodePacked(\n            \"\\x19Ethereum Signed Message:\\n32\",\n            keccak256(abi.encodePacked(msg.sender, _sigWord)))\n          );\n        return _signerAddress == hash.recover(signature);\n    }      \n        \n    function gift(address[] calldata receivers) external onlyOwner {\n        require(_tokensMinted.current() + receivers.length <= H8C_MAX, \"EXCEED_MAX\");\n        for (uint256 i = 0; i < receivers.length; i++) {\n             _tokensMinted.increment();\n            _safeMint(receivers[i], _tokensM","contract":"Holiday_8SIAN_Cards","time":0},{"type":"constant-restrict-modification  ","before":"█░▌ ▀▀▀▀▀▀▀�","after":"█░▌ ▀▀▀▀▀▀▀�","contract":"Holiday_8SIAN_Cards","time":1},{"type":"constant-restrict-modification  ","before":"█░▌     ▐░▌     ▐░","after":"█░▌     ▐░▌     ▐░","contract":"Holiday_8SIAN_Cards","time":1},{"type":"constant-restrict-modification  ","before":"��▄▄▄▄▄▄▄▄█░▌ ▄▄▄▄█░█▄▄▄▄ ▐░","after":"��▄▄▄▄▄▄▄▄█░▌ ▄▄▄▄█░█▄▄▄▄ ▐░","contract":"Holiday_8SIAN_Cards","time":1}]}