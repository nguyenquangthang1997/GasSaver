{"time":159,"results":[{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\r\n        IWWON_PROVENANCE = provenanceHash;\r\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\r\n        IWWON_PROVENANCE = provenanceHash;\r\n    }","contract":"CryptoMories","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\r\n        _setBaseURI(baseURI);\r\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\r\n        _setBaseURI(baseURI);\r\n    }","contract":"CryptoMories","time":0},{"type":"external-function ","before":"function addAddressesToWhitelist(address[] memory addrs) onlyOwner public returns(bool success) {\r\n       \r\n        for(uint i = 0; i < addrs.length; i++) {\r\n            addAddressToWhitelist(addrs[i]);\r\n        }\r\n    }","after":"function addAddressesToWhitelist(address[] calldata addrs) onlyOwner public returns(bool success) {\r\n       \r\n        for(uint i = 0; i < addrs.length; i++) {\r\n            addAddressToWhitelist(addrs[i]);\r\n        }\r\n    }","contract":"CryptoMories","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_TOKEN=10000;","after":"uint256 public constant MAX_TOKEN=10000;","contract":"CryptoMories","time":0}]}