{"time":114,"results":[{"type":"state-data-arrangement ","before":"\nstring public constant name = \"Gelato Network Token\";\nstring public constant symbol = \"GEL\";\nuint8 public constant decimals = 18;\nuint public totalSupply = 420_690_000e18;\naddress public minter;\nuint public mintingAllowedAfter;\nuint32 public constant minimumTimeBetweenMints = 1 days * 365;\nuint8 public mintCap = 100;\nbool public isMintCapImmutable = false;\nmapping (address => mapping (address => uint96)) internal allowances;\nmapping (address => uint96) internal balances;\nmapping (address => address) public delegates;\nmapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\nmapping (address => uint32) public numCheckpoints;\nbytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\nmapping (address => uint) public nonces;","after":"string public constant name = \"Gelato Network Token\";\nstring public constant symbol = \"GEL\";\nuint public totalSupply = 420_690_000e18;\nuint public mintingAllowedAfter;\nmapping (address => mapping (address => uint96)) internal allowances;\nmapping (address => uint96) internal balances;\nmapping (address => address) public delegates;\nmapping (address => mapping (uint32 => Checkpoint)) public checkpoints;\nmapping (address => uint32) public numCheckpoints;\nbytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\nbytes32 public constant DELEGATION_TYPEHASH = keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\nmapping (address => uint) public nonces;\naddress public minter;\nuint32 public constant minimumTimeBetweenMints = 1 days * 365;\nuint8 public constant decimals = 18;\nuint8 public mintCap = 100;\nbool public isMintCapImmutable = false;\n","contract":"Gel","time":1}]}