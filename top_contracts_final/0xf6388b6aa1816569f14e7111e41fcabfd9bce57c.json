{"time":61,"results":[{"type":"external-function ","before":"function batchStake(uint256 _cid, uint256[] memory _ids) external payable {\r\n        require(\r\n                msg.value >= collectionInfo[_cid].stakingFee * _ids.length,\r\n                \"Masterdemon.stake: Fee\"\r\n            );\r\n        for (uint256 i = 0; i < _ids.length; ++i) {\r\n            _stake(msg.sender, _cid, _ids[i]);\r\n        }\r\n    }","after":"function batchStake(uint256 _cid, uint256[] calldata _ids) external payable {\r\n        require(\r\n                msg.value >= collectionInfo[_cid].stakingFee * _ids.length,\r\n                \"Masterdemon.stake: Fee\"\r\n            );\r\n        for (uint256 i = 0; i < _ids.length; ++i) {\r\n            _stake(msg.sender, _cid, _ids[i]);\r\n        }\r\n    }","contract":"Masterdemon","time":0},{"type":"external-function ","before":"function batchUnstake(uint256 _cid, uint256[] memory _ids) external {\r\n        for (uint256 i = 0; i < _ids.length; ++i) {\r\n            _unstake(msg.sender, _cid, _ids[i]);\r\n        }\r\n    }","after":"function batchUnstake(uint256 _cid, uint256[] calldata _ids) external {\r\n        for (uint256 i = 0; i < _ids.length; ++i) {\r\n            _unstake(msg.sender, _cid, _ids[i]);\r\n        }\r\n    }","contract":"Masterdemon","time":0}]}