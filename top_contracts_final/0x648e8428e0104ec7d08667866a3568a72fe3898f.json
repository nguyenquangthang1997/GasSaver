{"time":153,"results":[{"type":"external-function ","before":"   function mintWhitelist(\n        uint256 _count,\n        uint256 _maxCount,\n        bytes memory _sig)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(_count > 0 && _count <= _maxCount, \"COUNT_INVALID\");\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= LEGENDARY_SUPPLY, \"LEGENDARY_NOT_MINTED\");\n        require(msg.value == (_count * MINT_PRICE), \"INVALID_ETH_SENT\");\n\n        bytes32 hash = keccak256(abi.encode(_msgSender(), _maxCount));\n        require(!_usedHashes[hash], \"HASH_ALREADY_USED\");\n        require(_matchSigner(hash, _sig), \"INVALID_SIGNER\");\n\n        _usedHashes[hash] = true;\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n  ","after":"   function mintWhitelist(\n        uint256 _count,\n        uint256 _maxCount,\n        bytes calldata _sig)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(_count > 0 && _count <= _maxCount, \"COUNT_INVALID\");\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= LEGENDARY_SUPPLY, \"LEGENDARY_NOT_MINTED\");\n        require(msg.value == (_count * MINT_PRICE), \"INVALID_ETH_SENT\");\n\n        bytes32 hash = keccak256(abi.encode(_msgSender(), _maxCount));\n        require(!_usedHashes[hash], \"HASH_ALREADY_USED\");\n        require(_matchSigner(hash, _sig), \"INVALID_SIGNER\");\n\n        _usedHashes[hash] = true;\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n  ","contract":"DystoApez","time":0}]}