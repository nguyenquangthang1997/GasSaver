{"time":161,"results":[{"type":"external-function ","before":"function privateSaleMint(uint _amount, bool _stake, bytes memory signature) public payable {\n        require(privateSale, \"private sale is not currently running\");\n        address recover = utils.recoverSignerAddress(msg.sender, signature);\n        require(recover == signer, \"Address not whitelisted for the presale\");\n        require((balanceOf(msg.sender) + _amount) <= 10, \" would exceedMaximum mint per wallet for presale\");\n        mintX(_amount, _stake);\n    }","after":"function privateSaleMint(uint _amount, bool _stake, bytes calldata signature) public payable {\n        require(privateSale, \"private sale is not currently running\");\n        address recover = utils.recoverSignerAddress(msg.sender, signature);\n        require(recover == signer, \"Address not whitelisted for the presale\");\n        require((balanceOf(msg.sender) + _amount) <= 10, \" would exceedMaximum mint per wallet for presale\");\n        mintX(_amount, _stake);\n    }","contract":"PirateHunters","time":0},{"type":"external-function ","before":"function setBaseURI(string memory uri, string memory uri_A, string memory uri_B ) external onlyOwner {\n        _apiURI = uri;\n        _apiURI_B = uri_B;\n        _apiURI_A = uri_A;\n    }","after":"function setBaseURI(string calldata uri, string calldata uri_A, string calldata uri_B ) external onlyOwner {\n        _apiURI = uri;\n        _apiURI_B = uri_B;\n        _apiURI_A = uri_A;\n    }","contract":"PirateHunters","time":0},{"type":"constant-restrict-modification  ","before":"uint public MAX_TOKENS = 10000;","after":"uint public constant MAX_TOKENS = 10000;","contract":"PirateHunters","time":0},{"type":"immutable-restrict-modification ","before":"address public dev1;","after":"address public immutable dev1;","contract":"PirateHunters","time":0},{"type":"immutable-restrict-modification ","before":"address public dev2;","after":"address public immutable dev2;","contract":"PirateHunters","time":0},{"type":"constant-restrict-modification  ","before":"uint16 private _randomIndex = 0;","after":"uint16 private constant _randomIndex = 0;","contract":"PirateHunters","time":0},{"type":"constant-restrict-modification  ","before":"uint private _randomCalls = 0;","after":"uint private constant _randomCalls = 0;","contract":"PirateHunters","time":0}]}