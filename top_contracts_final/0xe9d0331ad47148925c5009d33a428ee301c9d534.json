{"time":116,"results":[{"type":"external-function ","before":"function multiTransfer(address[] memory _recipients, uint256[] memory _values)\n                public\n                whenNotPaused\n                isNotFrozen(msg.sender)\n                returns (bool[] memory)\n        {\n                uint256 _totalTransfered = 0;\n                bool[] memory result = new bool[](_recipients.length);\n\n                for (uint256 i = 0; i < _recipients.length; i++) {\n                    result[i] = super.transfer(_recipients[i], _values[i]);\n                    _totalTransfered += _values[i];\n                }\n                emit MultiTransfer(_recipients, _values, _totalTransfered, result);\n                return result;\n        }","after":"function multiTransfer(address[] calldata _recipients, uint256[] calldata _values)\n                public\n                whenNotPaused\n                isNotFrozen(msg.sender)\n                returns (bool[] memory)\n        {\n                uint256 _totalTransfered = 0;\n                bool[] memory result = new bool[](_recipients.length);\n\n                for (uint256 i = 0; i < _recipients.length; i++) {\n                    result[i] = super.transfer(_recipients[i], _values[i]);\n                    _totalTransfered += _values[i];\n                }\n                emit MultiTransfer(_recipients, _values, _totalTransfered, result);\n                return result;\n        }","contract":"HRDGCOIN","time":0},{"type":"external-function ","before":"function multiFreeze(address[] memory _targets) public onlyOwner returns (bool) {\n                for (uint256 i = 0; i < _targets.length; i++) {\n                    _freeze(_targets[i]);\n                }\n                emit MultiFreeze(_targets);\n                return true;\n        }","after":"function multiFreeze(address[] calldata _targets) public onlyOwner returns (bool) {\n                for (uint256 i = 0; i < _targets.length; i++) {\n                    _freeze(_targets[i]);\n                }\n                emit MultiFreeze(_targets);\n                return true;\n        }","contract":"HRDGCOIN","time":0},{"type":"external-function ","before":"function multiUnfreeze(address[] memory _targets) public onlyOwner returns (bool) {\n                for (uint256 i = 0; i < _targets.length; i++) {\n                    _unfreeze(_targets[i]);\n                }\n                emit MultiUnfreeze(_targets);\n                return true;\n        }","after":"function multiUnfreeze(address[] calldata _targets) public onlyOwner returns (bool) {\n                for (uint256 i = 0; i < _targets.length; i++) {\n                    _unfreeze(_targets[i]);\n                }\n                emit MultiUnfreeze(_targets);\n                return true;\n        }","contract":"HRDGCOIN","time":0},{"type":"constant-restrict-modification  ","before":"string  public  name = \"HRDGCOIN\";","after":"string  public  constant name = \"HRDGCOIN\";","contract":"HRDGCOIN","time":0},{"type":"constant-restrict-modification  ","before":"string  public  symbol = \"HRDG\";","after":"string  public  constant symbol = \"HRDG\";","contract":"HRDGCOIN","time":1}]}