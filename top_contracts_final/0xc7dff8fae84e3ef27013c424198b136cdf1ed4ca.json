{"time":105,"results":[{"type":"external-function ","before":"function setURI(string memory _newURI) public onlyOwner {\n        _setURI(_newURI);\n    }","after":"function setURI(string calldata _newURI) public onlyOwner {\n        _setURI(_newURI);\n    }","contract":"DinoDoodles","time":0},{"type":"external-function ","before":"function freeMintUserBatch(\n        address[] memory _user,\n        uint256[] memory _amount\n    ) public onlyOwner {\n        require(_user.length == _amount.length);\n        for (uint256 i = 0; i < _user.length; i++)\n            freeMint[_user[i]] = _amount[i];\n    }","after":"function freeMintUserBatch(\n        address[] calldata _user,\n        uint256[] calldata _amount\n    ) public onlyOwner {\n        require(_user.length == _amount.length);\n        for (uint256 i = 0; i < _user.length; i++)\n            freeMint[_user[i]] = _amount[i];\n    }","contract":"DinoDoodles","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"DinoDoodles","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"DinoDoodles","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _currentTokenID = 0;","after":"uint256 private constant _currentTokenID = 0;","contract":"DinoDoodles","time":1}]}