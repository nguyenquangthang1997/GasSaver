{"time":122,"results":[{"type":"state-data-arrangement ","before":"\nstring _baseTokenURI;\nuint256 private _reserved = 14;\nuint256 private _price = 0.069 ether;\nbool public _paused = true;\nbool public _wlPaused = true;\nstring private _uri;\naddress t1;","after":"string _baseTokenURI;\nuint256 private _reserved = 14;\nuint256 private _price = 0.069 ether;\nstring private _uri;\naddress t1;\nbool public _paused = true;\nbool public _wlPaused = true;\n","contract":"WastedWhales","time":0},{"type":"external-function ","before":"function mintWhaleWL(uint256 num, string memory id) public payable {\n\t\tuint256 supply = totalSupply();\n\t\trequire( !_wlPaused, \"Whitelist sold out\" );\n\t\trequire( supply + num < 801 - _reserved, \"Exceeds maximum supply\" );\n\t\trequire( msg.value >= _price * num, \"Incorrect ether amount\" );\n\t\trequire( keccak256(bytes(id)) == keccak256(bytes(_uri)), \"Not whitelisted\" );\n\n\t\tfor(uint256 i; i < num; i++){\n\t\t\t_safeMint(msg.sender, supply + i);\n\t\t}\n\t}","after":"function mintWhaleWL(uint256 num, string calldata id) public payable {\n\t\tuint256 supply = totalSupply();\n\t\trequire( !_wlPaused, \"Whitelist sold out\" );\n\t\trequire( supply + num < 801 - _reserved, \"Exceeds maximum supply\" );\n\t\trequire( msg.value >= _price * num, \"Incorrect ether amount\" );\n\t\trequire( keccak256(bytes(id)) == keccak256(bytes(_uri)), \"Not whitelisted\" );\n\n\t\tfor(uint256 i; i < num; i++){\n\t\t\t_safeMint(msg.sender, supply + i);\n\t\t}\n\t}","contract":"WastedWhales","time":0},{"type":"external-function ","before":"function whitelist(string memory addr) public onlyOwner {\n\t\t_uri = addr;\n\t}","after":"function whitelist(string calldata addr) public onlyOwner {\n\t\t_uri = addr;\n\t}","contract":"WastedWhales","time":0},{"type":"immutable-restrict-modification ","before":"address t1;","after":"address immutable t1;","contract":"WastedWhales","time":0}]}