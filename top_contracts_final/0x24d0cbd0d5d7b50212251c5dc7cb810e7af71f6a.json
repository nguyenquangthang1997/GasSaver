{"time":266,"results":[{"type":"external-function ","before":"function setRevealedCollectionBaseURL(string memory _ipfsHash) onlyOwner public {\n        require(!frozen, 'Metadata has been frozen');\n        revealedCollectionBaseURL = string(abi.encodePacked('ipfs://', _ipfsHash, '/'));\n    }","after":"function setRevealedCollectionBaseURL(string calldata _ipfsHash) onlyOwner public {\n        require(!frozen, 'Metadata has been frozen');\n        revealedCollectionBaseURL = string(abi.encodePacked('ipfs://', _ipfsHash, '/'));\n    }","contract":"ApeHarbourDinghies","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 internal keyHash;","after":"bytes32 internal immutable keyHash;","contract":"ApeHarbourDinghies","time":1},{"type":"immutable-restrict-modification ","before":"uint256 internal chainLinkFee;","after":"uint256 internal immutable chainLinkFee;","contract":"ApeHarbourDinghies","time":1},{"type":"external-function ","before":"function setName(uint256 _tokenId, string memory _name)\n        public\n        returns (string memory)\n    {\n        require(ownerOf(_tokenId) == msg.sender, \"Only boat owner can name it\");\n\n        names[_tokenId] = _name;\n\n        emit NameChange(_tokenId, _name);\n\n        return _name;\n    }","after":"function setName(uint256 _tokenId, string calldata _name)\n        public\n        returns (string memory)\n    {\n        require(ownerOf(_tokenId) == msg.sender, \"Only boat owner can name it\");\n\n        names[_tokenId] = _name;\n\n        emit NameChange(_tokenId, _name);\n\n        return _name;\n    }","contract":"ApeHarbourYachts","time":0},{"type":"external-function ","before":"function setRevealedCollectionBaseURL(string memory _ipfsHash) onlyOwner public {\n        require(!frozen, 'Metadata has been frozen');\n        revealedCollectionBaseURL = string(abi.encodePacked('ipfs://', _ipfsHash, '/'));\n        emit SetCollectionHash(_ipfsHash);\n    }","after":"function setRevealedCollectionBaseURL(string calldata _ipfsHash) onlyOwner public {\n        require(!frozen, 'Metadata has been frozen');\n        revealedCollectionBaseURL = string(abi.encodePacked('ipfs://', _ipfsHash, '/'));\n        emit SetCollectionHash(_ipfsHash);\n    }","contract":"ApeHarbourYachts","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 internal keyHash;","after":"bytes32 internal immutable keyHash;","contract":"ApeHarbourYachts","time":1},{"type":"immutable-restrict-modification ","before":"uint256 internal chainLinkFee;","after":"uint256 internal immutable chainLinkFee;","contract":"ApeHarbourYachts","time":1}]}