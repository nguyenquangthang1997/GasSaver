{"time":139,"results":[{"type":"state-data-arrangement ","before":"\n�███████\n�───────────�\n��██████████▓\n─╟██████████████\n  *  �\n████████████▀\n��─────────\n───▓███████████\n██████▌───────██\n███████████�\n *  ███████████�\n��────────────────────�\n└────────┌─└╚└└�\n�█████\n  *  ███████████████▌──────\n��─────┌┐�\n��───██─╔─╒─�\n�────▄████�","after":"�███████\n��██████████▓\n─╟██████████████\n  *  �\n████████████▀\n��─────────\n───▓███████████\n██████▌───────██\n��────────────────────�\n└────────┌─└╚└└�\n��─────┌┐�\n��───██─╔─╒─�\n�────▄████�\n�───────────�\n�█████\n  *  ███████████████▌──────\n███████████�\n *  ███████████�\n","contract":"SurrealSociety","time":0},{"type":"external-function ","before":"��──┌▓███████▒░┌╗█████───┌▀────�","after":"��──┌▓███████▒░���╗█████───┌▀────�","contract":"SurrealSociety","time":0},{"type":"external-function ","before":"�╠███████████▌░▒─────────────▀███████████\n  *  ▓█▓██████████████████▌────────────────────╙██████████╙────────────────██████████\n  *  ▓▓▓▓███████████████████────────────────────────────────────────────────█████████\n  *  ▓▓","after":"�╠███████████▌░▒─────���───────▀███████████\n  *  ▓█▓██████████████████▌────────────────────╙██████████╙────────────────██████████\n  *  ▓▓▓▓███████████████████────────────────────────────────────────────────█████████\n  *  ▓▓","contract":"SurrealSociety","time":0},{"type":"external-function ","before":"{\n    uint256 tokenCount = balanceOf(_owner);\n    if (tokenCount == 0) {\n      // Return an empty array\n      return ","after":"{\n    uint256 tokenCount = balanceOf(_owner);\n    if (tokenCount == 0) {\n      // Return an empty array\n      return ","contract":"SurrealSociety","time":0},{"type":"external-function ","before":"x = totalSupply() + 1;\n      _safeMint(_to, mintIndex);\n    }\n    NFT_CLAIMED += amount;\n  }\n\n  function mintWhitelist(uint256 numNFTs, bytes32[] memory proof) public payable {\n    require(msg.value >= ","after":"x = totalSupply() + 1;\n      _safeMint(_to, mintIndex);\n    }\n    NFT_CLAIMED += amount;\n  }\n\n  function mintWhitelist(uint256 numNFTs, bytes32[] memory proof) public payable {\n    require(msg.value >= ","contract":"SurrealSociety","time":0},{"type":"external-function ","before":"PRICE_PRESALE * numNFTs, \"Incorrect ether value\");\n    require(hasPreSaleStarted, \"Presale has not started\");\n    require(totalSupply() < MAX_PRESALE_SUPPLY, \"Presale has ended\");\n    require(numNFTs + balanceOf(msg.sender) < 4, \"Max of ","after":"PRICE_PRESALE * numNFTs, \"Incorrect ether value\");\n    require(hasPreSaleStarted, \"Presale has not started\");\n    require(totalSupply() < MAX_PRESALE_SUPPLY, \"Presale has ended\");\n    require(numNFTs + balanceOf(msg.sender) < 4, \"Max of ","contract":"SurrealSociety","time":0},{"type":"constant-restrict-modification  ","before":"��───██─╔─╒─�","after":"��───██─╔─╒─�","contract":"SurrealSociety","time":1}]}