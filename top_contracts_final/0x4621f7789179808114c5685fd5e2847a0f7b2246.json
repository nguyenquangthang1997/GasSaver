{"time":179,"results":[{"type":"state-data-arrangement ","before":"\nstring public PENGUIN_PROVENANCE = \"\";\nstring public LICENSE_TEXT = \"\";\nbool licenseLocked = false;\nuint256 public constant penguinPrice = 40000000000000000;\nuint public constant maxPenguinPurchase = 10;\nuint256 public constant MAX_PENGUINS = 10000;\nbool public saleIsActive = false;\nmapping(uint => string) public penguinNames;\nuint public penguinReserve = 30;","after":"string public PENGUIN_PROVENANCE = \"\";\nstring public LICENSE_TEXT = \"\";\nuint256 public constant penguinPrice = 40000000000000000;\nuint public constant maxPenguinPurchase = 10;\nuint256 public constant MAX_PENGUINS = 10000;\nmapping(uint => string) public penguinNames;\nuint public penguinReserve = 30;\nbool licenseLocked = false;\nbool public saleIsActive = false;\n","contract":"PenguinFightClub","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\r\n        PENGUIN_PROVENANCE = provenanceHash;\r\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\r\n        PENGUIN_PROVENANCE = provenanceHash;\r\n    }","contract":"PenguinFightClub","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\r\n        _setBaseURI(baseURI);\r\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\r\n        _setBaseURI(baseURI);\r\n    }","contract":"PenguinFightClub","time":0},{"type":"external-function ","before":"function changeLicense(string memory _license) public onlyOwner {\r\n        require(licenseLocked == false, \"License already locked\");\r\n        LICENSE_TEXT = _license;\r\n    }","after":"function changeLicense(string calldata _license) public onlyOwner {\r\n        require(licenseLocked == false, \"License already locked\");\r\n        LICENSE_TEXT = _license;\r\n    }","contract":"PenguinFightClub","time":0},{"type":"external-function ","before":"function changePenguinName(uint _tokenId, string memory _name) public {\r\n        require(ownerOf(_tokenId) == msg.sender, \"Hey, your wallet doesn't own this penguin!\");\r\n        require(sha256(bytes(_name)) != sha256(bytes(penguinNames[_tokenId])), \"New name is same as the current one\");\r\n        penguinNames[_tokenId] = _name;\r\n        \r\n        emit penguinNameChange(msg.sender, _tokenId, _name);\r\n        \r\n    }","after":"function changePenguinName(uint _tokenId, string calldata _name) public {\r\n        require(ownerOf(_tokenId) == msg.sender, \"Hey, your wallet doesn't own this penguin!\");\r\n        require(sha256(bytes(_name)) != sha256(bytes(penguinNames[_tokenId])), \"New name is same as the current one\");\r\n        penguinNames[_tokenId] = _name;\r\n        \r\n        emit penguinNameChange(msg.sender, _tokenId, _name);\r\n        \r\n    }","contract":"PenguinFightClub","time":0}]}