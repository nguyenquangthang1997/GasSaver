{"time":101,"results":[{"type":"external-function ","before":"function claim(Balance[] memory _balances, uint8 v, bytes32 r, bytes32 s) public {\n        require(prepareMessage(_balances).recover(v, r, s) == owner(), \"owner should sign balances\");\n\n        for (uint i = 0; i < _balances.length; i++) {\n            address recipient = _balances[i].recipient;\n            if (msg.sender == recipient) {\n                uint toClaim = _balances[i].value.sub(claimed[recipient]);\n                require(toClaim > 0, \"nothing to claim\");\n                claimed[recipient] = _balances[i].value;\n                require(token.transferFrom(tokenOwner, msg.sender, toClaim), \"transfer is not successful\");\n                emit Claim(recipient, toClaim);\n                emit Value(recipient, _balances[i].value);\n                return;\n            }\n        }\n        revert(\"msg.sender not found in receipients\");\n    }","after":"function claim(Balance[] calldata _balances, uint8 v, bytes32 r, bytes32 s) public {\n        require(prepareMessage(_balances).recover(v, r, s) == owner(), \"owner should sign balances\");\n\n        for (uint i = 0; i < _balances.length; i++) {\n            address recipient = _balances[i].recipient;\n            if (msg.sender == recipient) {\n                uint toClaim = _balances[i].value.sub(claimed[recipient]);\n                require(toClaim > 0, \"nothing to claim\");\n                claimed[recipient] = _balances[i].value;\n                require(token.transferFrom(tokenOwner, msg.sender, toClaim), \"transfer is not successful\");\n                emit Claim(recipient, toClaim);\n                emit Value(recipient, _balances[i].value);\n                return;\n            }\n        }\n        revert(\"msg.sender not found in receipients\");\n    }","contract":"RariMineV2","time":0},{"type":"external-function ","before":"function doOverride(Balance[] memory _balances) public onlyOwner {\n        for (uint i = 0; i < _balances.length; i++) {\n            claimed[_balances[i].recipient] = _balances[i].value;\n            emit Value(_balances[i].recipient, _balances[i].value);\n        }\n    }","after":"function doOverride(Balance[] calldata _balances) public onlyOwner {\n        for (uint i = 0; i < _balances.length; i++) {\n            claimed[_balances[i].recipient] = _balances[i].value;\n            emit Value(_balances[i].recipient, _balances[i].value);\n        }\n    }","contract":"RariMineV2","time":0}]}