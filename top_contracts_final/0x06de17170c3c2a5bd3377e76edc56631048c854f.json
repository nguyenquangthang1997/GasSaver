{"time":122,"results":[{"type":"state-data-arrangement ","before":"\nstring public constant name = \"FDEX\";\nstring public constant symbol = \"QUROSIA\";\nuint8 public constant decimals = 18;\nuint256 public constant initialSupply = 1200000000 * (10**uint256(decimals));\naddress public owner;\nbool public paused = false;\nmapping(address => bool) internal freezes;\nmapping(address => LockInfo[]) internal lockInfo;","after":"string public constant name = \"FDEX\";\nstring public constant symbol = \"QUROSIA\";\nuint256 public constant initialSupply = 1200000000 * (10**uint256(decimals));\nmapping(address => bool) internal freezes;\nmapping(address => LockInfo[]) internal lockInfo;\naddress public owner;\nuint8 public constant decimals = 18;\nbool public paused = false;\n","contract":"FDEX","time":0},{"type":"external-function ","before":"function dropToken(address[] memory _receivers, uint256[] memory _values)  public onlyOwner {\n        require(_receivers.length != 0);\n        require(_receivers.length == _values.length);\n        \n        for (uint256 i = 0; i < _receivers.length; i++) {\n            transfer(_receivers[i], _values[i]);\n            emit Transfer(msg.sender, _receivers[i], _values[i]);\n        }\n    }","after":"function dropToken(address[] calldata _receivers, uint256[] calldata _values)  public onlyOwner {\n        require(_receivers.length != 0);\n        require(_receivers.length == _values.length);\n        \n        for (uint256 i = 0; i < _receivers.length; i++) {\n            transfer(_receivers[i], _values[i]);\n            emit Transfer(msg.sender, _receivers[i], _values[i]);\n        }\n    }","contract":"FDEX","time":0}]}