{"time":1061,"results":[{"type":"immutable-restrict-modification ","before":"address public admin;","after":"address public immutable admin;","contract":"YearnVaultAdapter","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public decimals;","after":"uint256 public immutable decimals;","contract":"YearnVaultAdapter","time":0},{"type":"immutable-restrict-modification ","before":"address public AlToken;","after":"address public immutable AlToken;","contract":"Transmuter","time":1},{"type":"immutable-restrict-modification ","before":"address public Token;","after":"address public immutable Token;","contract":"Transmuter","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public pointMultiplier = 10e18;","after":"uint256 public constant pointMultiplier = 10e18;","contract":"Transmuter","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public min = 9500;","after":"uint256 public constant min = 9500;","contract":"YearnVaultMock","time":0},{"type":"external-function ","before":"function submitTransaction(address destination, uint value, bytes memory data)\n        public\n        returns (uint transactionId)\n    {\n        transactionId = addTransaction(destination, value, data);\n        confirmTransaction(transactionId);\n    }","after":"function submitTransaction(address destination, uint value, bytes calldata data)\n        public\n        returns (uint transactionId)\n    {\n        transactionId = addTransaction(destination, value, data);\n        confirmTransaction(transactionId);\n    }","contract":"MultiSigWalletWithTimeLock","time":0},{"type":"struct-data-arrangement ","before":"\naddress destination\nuint value\nbytes data\nbool executed","after":"uint value\nbytes data\naddress destination\nbool executed\n","contract":"MultiSigWallet","time":0}]}