{"time":67,"results":[{"type":"external-function ","before":"function updateURI(string memory newURI) external {\n        // Revert if caller is not owner\n        if (msg.sender != owner) revert NotOwner();\n        // Update new URI\n        _updateURI(newURI);\n    }","after":"function updateURI(string calldata newURI) external {\n        // Revert if caller is not owner\n        if (msg.sender != owner) revert NotOwner();\n        // Update new URI\n        _updateURI(newURI);\n    }","contract":"SantaSwapNFT","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from, \n        address to, \n        uint256 id, \n        uint256 amount, \n        bytes memory data\n    ) external {\n        if (msg.sender != from || !isApprovedForAll(from, msg.sender)) revert InvalidOperator();\n\n        if (to == address(0)) revert NullAddress();\n\n        balanceOf[from][id] -= amount;\n\n        balanceOf[to][id] += amount;\n\n        _callonERC1155Received(from, to, id, amount, gasleft(), data);\n\n        emit TransferSingle(msg.sender, from, to, id, amount);\n    }","after":"function safeTransferFrom(\n        address from, \n        address to, \n        uint256 id, \n        uint256 amount, \n        bytes calldata data\n    ) external {\n        if (msg.sender != from || !isApprovedForAll(from, msg.sender)) revert InvalidOperator();\n\n        if (to == address(0)) revert NullAddress();\n\n        balanceOf[from][id] -= amount;\n\n        balanceOf[to][id] += amount;\n\n        _callonERC1155Received(from, to, id, amount, gasleft(), data);\n\n        emit TransferSingle(msg.sender, from, to, id, amount);\n    }","contract":"SantaSwapNFT","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from, \n        address to, \n        uint256[] memory ids,\n        uint256[] memory amounts, \n        bytes memory data\n    ) external {\n        if (msg.sender != from || !isApprovedForAll(from, msg.sender)) revert InvalidOperator();\n\n        if (to == address(0)) revert NullAddress();\n\n        if (ids.length != amounts.length) revert ArrayParity();\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            balanceOf[from][ids[i]] -= amounts[i];\n\n            balanceOf[to][ids[i]] += amounts[i];\n        }\n\n        _callonERC1155BatchReceived(from, to, ids, amounts, gasleft(), data);\n\n        emit TransferBatch(msg.sender, from, to, ids, amounts);\n    }","after":"function safeBatchTransferFrom(\n        address from, \n        address to, \n        uint256[] calldata ids,\n        uint256[] calldata amounts, \n        bytes calldata data\n    ) external {\n        if (msg.sender != from || !isApprovedForAll(from, msg.sender)) revert InvalidOperator();\n\n        if (to == address(0)) revert NullAddress();\n\n        if (ids.length != amounts.length) revert ArrayParity();\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            balanceOf[from][ids[i]] -= amounts[i];\n\n            balanceOf[to][ids[i]] += amounts[i];\n        }\n\n        _callonERC1155BatchReceived(from, to, ids, amounts, gasleft(), data);\n\n        emit TransferBatch(msg.sender, from, to, ids, amounts);\n    }","contract":"SantaSwapNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint256 immutable MAX_NFTS = 10_000;","after":"uint256 immutable constant MAX_NFTS = 10_000;","contract":"SantaSwapNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint256 immutable MAX_NFTS_PER_ADDRESS = 10;","after":"uint256 immutable constant MAX_NFTS_PER_ADDRESS = 10;","contract":"SantaSwapNFT","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"Santa Swap Participation Token\";","after":"string public constant name = \"Santa Swap Participation Token\";","contract":"SantaSwapNFT","time":0}]}