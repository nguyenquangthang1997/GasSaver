{"time":225,"results":[{"type":"external-function ","before":"function preMint(bytes32[] memory proof,uint256 numberOfTokens) public payable {\n        require(merkleRoot != 0, \"Merkle root is not set\");\n        uint256 remain = maxUserCanMint.sub(tokenIdNumber[msg.sender].length);\n        require(remain >= numberOfTokens, \"Your limit has been Exeeded\");\n        require(numberOfTokens <= maxUserCanMint, \"You can't mint more then 10 in a single transaction\");\n        require(block.timestamp >= PresaleStartTime && block.timestamp <= PresaleEndTime, \"Time is out of Presale Time\");\n        require(proof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"You are not in the list\");\n        _mint(numberOfTokens);\n    }","after":"function preMint(bytes32[] calldata proof,uint256 numberOfTokens) public payable {\n        require(merkleRoot != 0, \"Merkle root is not set\");\n        uint256 remain = maxUserCanMint.sub(tokenIdNumber[msg.sender].length);\n        require(remain >= numberOfTokens, \"Your limit has been Exeeded\");\n        require(numberOfTokens <= maxUserCanMint, \"You can't mint more then 10 in a single transaction\");\n        require(block.timestamp >= PresaleStartTime && block.timestamp <= PresaleEndTime, \"Time is out of Presale Time\");\n        require(proof.verify(merkleRoot, keccak256(abi.encodePacked(msg.sender))), \"You are not in the list\");\n        _mint(numberOfTokens);\n    }","contract":"TeenApeSquad","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxUserCanMint = 10;","after":"uint256 public constant maxUserCanMint = 10;","contract":"TeenApeSquad","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public maxSupply;","after":"uint256 public immutable maxSupply;","contract":"TeenApeSquad","time":1}]}