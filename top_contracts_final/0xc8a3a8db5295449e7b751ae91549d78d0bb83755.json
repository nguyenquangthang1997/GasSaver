{"time":51,"results":[{"type":"external-function ","before":"function batchStakeChadApe(uint256[] memory tokenIds) external {\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            stakeChadApe(tokenIds[i]);\n        }\n    }","after":"function batchStakeChadApe(uint256[] calldata tokenIds) external {\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            stakeChadApe(tokenIds[i]);\n        }\n    }","contract":"GYM","time":0},{"type":"external-function ","before":"function batchClaimRewards(uint256[] memory tokenIds, bool unstake) external {\n        require(!paused, \"Contract paused\");\n\n        uint256 netRewards = 0;\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            netRewards += _claim(tokenIds[i]);\n        }\n\n        if (netRewards > 0) {\n            require(CHAD.transfer(msg.sender, netRewards));\n        }\n\n        if (unstake) {\n            for (uint8 i = 0; i < tokenIds.length; i++) {\n                unstakeChadApe(tokenIds[i]);\n            }\n        }\n    }","after":"function batchClaimRewards(uint256[] calldata tokenIds, bool unstake) external {\n        require(!paused, \"Contract paused\");\n\n        uint256 netRewards = 0;\n        for (uint8 i = 0; i < tokenIds.length; i++) {\n            netRewards += _claim(tokenIds[i]);\n        }\n\n        if (netRewards > 0) {\n            require(CHAD.transfer(msg.sender, netRewards));\n        }\n\n        if (unstake) {\n            for (uint8 i = 0; i < tokenIds.length; i++) {\n                unstakeChadApe(tokenIds[i]);\n            }\n        }\n    }","contract":"GYM","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public rate = 10 ether;","after":"uint256 public constant rate = 10 ether;","contract":"GYM","time":0}]}