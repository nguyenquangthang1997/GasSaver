{"time":36,"results":[{"type":"external-function ","before":"function stake(uint[] memory tokenIds) external {\n        for (uint i = 0; i < tokenIds.length; i++) {\n            IERC721(AXOLITTLES).transferFrom(msg.sender, address(this), tokenIds[i]);\n            stakeBlock[tokenIds[i]] = block.number;\n            stakeOwner[tokenIds[i]] = msg.sender;\n            emit Stake(msg.sender, tokenIds[i]);\n        }\n    }","after":"function stake(uint[] calldata tokenIds) external {\n        for (uint i = 0; i < tokenIds.length; i++) {\n            IERC721(AXOLITTLES).transferFrom(msg.sender, address(this), tokenIds[i]);\n            stakeBlock[tokenIds[i]] = block.number;\n            stakeOwner[tokenIds[i]] = msg.sender;\n            emit Stake(msg.sender, tokenIds[i]);\n        }\n    }","contract":"AxolittlesStaking","time":0},{"type":"external-function ","before":"function claim(uint[] memory tokenIds) external {\n        uint totalReward = 0;\n        for (uint i = 0; i < tokenIds.length; i++) {\n            uint token = tokenIds[i];\n            require(msg.sender == stakeOwner[token], \"Only unstake your own axolittles\");\n            totalReward += (block.number - stakeBlock[token]) * emissionPerBlock;\n            stakeBlock[token] = block.number;\n        }\n        IBubbles(TOKEN).mint(msg.sender, totalReward);    \n    }","after":"function claim(uint[] calldata tokenIds) external {\n        uint totalReward = 0;\n        for (uint i = 0; i < tokenIds.length; i++) {\n            uint token = tokenIds[i];\n            require(msg.sender == stakeOwner[token], \"Only unstake your own axolittles\");\n            totalReward += (block.number - stakeBlock[token]) * emissionPerBlock;\n            stakeBlock[token] = block.number;\n        }\n        IBubbles(TOKEN).mint(msg.sender, totalReward);    \n    }","contract":"AxolittlesStaking","time":0},{"type":"external-function ","before":"function unstake(uint[] memory tokenIds) external {\n        uint totalReward = 0;\n        for (uint i = 0; i < tokenIds.length; i++) {\n            uint token = tokenIds[i];\n            address owner = stakeOwner[token];\n            require(msg.sender == owner, \"Only unstake your own axolittles\");\n            totalReward += (block.number - stakeBlock[token]) * emissionPerBlock;\n            delete stakeOwner[token];\n            delete stakeBlock[token];\n            IERC721(AXOLITTLES).transferFrom(address(this), owner, token);\n            emit Unstake(msg.sender, tokenIds[i]);\n        }\n        IBubbles(TOKEN).mint(msg.sender, totalReward);\n    }","after":"function unstake(uint[] calldata tokenIds) external {\n        uint totalReward = 0;\n        for (uint i = 0; i < tokenIds.length; i++) {\n            uint token = tokenIds[i];\n            address owner = stakeOwner[token];\n            require(msg.sender == owner, \"Only unstake your own axolittles\");\n            totalReward += (block.number - stakeBlock[token]) * emissionPerBlock;\n            delete stakeOwner[token];\n            delete stakeBlock[token];\n            IERC721(AXOLITTLES).transferFrom(address(this), owner, token);\n            emit Unstake(msg.sender, tokenIds[i]);\n        }\n        IBubbles(TOKEN).mint(msg.sender, totalReward);\n    }","contract":"AxolittlesStaking","time":0}]}