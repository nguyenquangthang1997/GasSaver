{"time":129,"results":[{"type":"state-data-arrangement ","before":"\n██║██╔████╔\n�║██████╔╝�\n��███╗░  ██║�\n��█║██╔██╗█\n�██║░░░░░░�\n███╔╝░\n//██║░░██╗█�\n��═██║██╔══██║██║╚�\n�║██╔═══╝░░╚�\n��██╗  ██║░░█�\n�█║╚████║██║\n██║░╚═╝░██║██║░░░░░██████╔╝  �","after":"�║██████╔╝�\n��███╗░  ██║�\n��█║██╔██╗█\n�██║░░░░░░�\n███╔╝░\n//██║░░██╗█�\n��═██║██╔══██║██║╚�\n�║██╔═══╝░░╚�\n��██╗  ██║░░█�\n�█║╚████║██║\n██║░╚═╝░██║██║░░░░░██████╔╝  �\n██║██╔████╔\n","contract":"ChampsOnly","time":0},{"type":"external-function ","before":"�░╚═╝╚═╝░░╚═╝╚═╝░░░░░╚═╝╚═╝░░░░░╚═══�","after":"�░╚═╝╚═╝░░╚═╝╚═���░░░░░╚═╝╚═╝░░░░░╚═══�","contract":"ChampsOnly","time":0},{"type":"external-function ","before":"�░  ░╚════╝░╚═╝░░╚══╝╚══════╝░░�","after":"�░  ░╚════╝░��═╝░░╚══╝╚══════╝░░�","contract":"ChampsOnly","time":0},{"type":"external-function ","before":"�╝░░░\n\ncontract ChampsOnly is ERC1155Supply, Ownable\n{\n    bool public saleIsActi","after":"�╝░░░\n\ncontract ChampsOnly is ERC1155Supply, Ownable\n{\n    bool public saleIsActi","contract":"ChampsOnly","time":0},{"type":"external-function ","before":"h.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i <","after":"h.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i <","contract":"ChampsOnly","time":0},{"type":"external-function ","before":"ts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual","after":"ts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual","contract":"ChampsOnly","time":0},{"type":"constant-restrict-modification  ","before":"██║░╚═╝░██║██║░░░░░██████╔╝  �","after":"██║░╚═╝░██║██║░░░░░██████╔╝  �","contract":"ChampsOnly","time":0}]}