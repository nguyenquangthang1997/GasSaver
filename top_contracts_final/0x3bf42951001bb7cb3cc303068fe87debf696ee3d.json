{"time":138,"results":[{"type":"external-function ","before":"function preSaleMint(uint256 quantity, bytes32[] memory proof) external payable {\n    uint256 price = uint256(saleConfig.price);\n    require(price != 0, \"presale has not begun yet\");\n    uint256 preSaleStartTime = uint256(saleConfig.preSaleStartTime);\n    require(\n      preSaleStartTime != 0 && block.timestamp >= preSaleStartTime,\n      \"presale has not started yet\"\n    );\n    if (MerkleProof.verify(proof, merkleRoot, keccak256(abi.encodePacked(msg.sender)))) {\n        require(_tokensClaimedInPresale[msg.sender] + quantity <= maxTokensInPresale,\n                \"You cannot mint any more CTJR NFTs during the presale\");\n        require(price * quantity <= msg.value, \"Ether value sent is not correct\");\n        _safeMint(msg.sender, quantity);\n    } else {\n        revert(\"Not on the presale list\");\n    }\n    _tokensClaimedInPresale[msg.sender] += quantity;\n  }","after":"function preSaleMint(uint256 quantity, bytes32[] calldata proof) external payable {\n    uint256 price = uint256(saleConfig.price);\n    require(price != 0, \"presale has not begun yet\");\n    uint256 preSaleStartTime = uint256(saleConfig.preSaleStartTime);\n    require(\n      preSaleStartTime != 0 && block.timestamp >= preSaleStartTime,\n      \"presale has not started yet\"\n    );\n    if (MerkleProof.verify(proof, merkleRoot, keccak256(abi.encodePacked(msg.sender)))) {\n        require(_tokensClaimedInPresale[msg.sender] + quantity <= maxTokensInPresale,\n                \"You cannot mint any more CTJR NFTs during the presale\");\n        require(price * quantity <= msg.value, \"Ether value sent is not correct\");\n        _safeMint(msg.sender, quantity);\n    } else {\n        revert(\"Not on the presale list\");\n    }\n    _tokensClaimedInPresale[msg.sender] += quantity;\n  }","contract":"CrashTestJoyride","time":1}]}