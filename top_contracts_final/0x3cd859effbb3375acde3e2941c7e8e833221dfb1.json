{"time":123,"results":[{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) external onlyOwner {\r\n        ImpsPROVENANCE = provenanceHash;\r\n     }","after":"function setProvenanceHash(string calldata provenanceHash) external onlyOwner {\r\n        ImpsPROVENANCE = provenanceHash;\r\n     }","contract":"IMPS","time":0},{"type":"external-function ","before":"function setBaseURI(string memory uri) external onlyOwner {\r\n        baseURI = uri;\r\n     }","after":"function setBaseURI(string calldata uri) external onlyOwner {\r\n        baseURI = uri;\r\n     }","contract":"IMPS","time":0},{"type":"external-function ","before":"function PreSuperballMintImps(uint256[] memory SBs) external payable nonReentrant {\r\n        require(PreSaleIsActive, \"PreSale isn't active yet!\");\r\n        require(SBs.length + totalSupply() <= maxImps, \"Purchase would exceed max supply of Imps.\");\r\n        for (uint256 j=0; j<SBs.length;j++){\r\n         require(SBalls.ownerOf(SBs[j]) == msg.sender, \"You don't own one of the SuperBalls\");\r\n         require(!SuperballPresaleMinted[SBs[j]], \"The IMP for a SuperBall has been claimed\");\r\n        }       \r\n        uint costToMint = ImpsPreSalePRICE * SBs.length;\r\n        require(costToMint == msg.value, \"Eth value incorrect.\");\r\n\r\n        for(uint256 i=0; i < SBs.length; i++ ) {\r\n            require(!SuperballPresaleMinted[SBs[i]], \"The IMP for a SuperBall has been claimed\");\r\n            uint256 mintIndex = totalSupply();\r\n            _safeMint(msg.sender, mintIndex);\r\n            SuperballPresaleMinted[SBs[i]] = true;\r\n        }\r\n     }","after":"function PreSuperballMintImps(uint256[] calldata SBs) external payable nonReentrant {\r\n        require(PreSaleIsActive, \"PreSale isn't active yet!\");\r\n        require(SBs.length + totalSupply() <= maxImps, \"Purchase would exceed max supply of Imps.\");\r\n        for (uint256 j=0; j<SBs.length;j++){\r\n         require(SBalls.ownerOf(SBs[j]) == msg.sender, \"You don't own one of the SuperBalls\");\r\n         require(!SuperballPresaleMinted[SBs[j]], \"The IMP for a SuperBall has been claimed\");\r\n        }       \r\n        uint costToMint = ImpsPreSalePRICE * SBs.length;\r\n        require(costToMint == msg.value, \"Eth value incorrect.\");\r\n\r\n        for(uint256 i=0; i < SBs.length; i++ ) {\r\n            require(!SuperballPresaleMinted[SBs[i]], \"The IMP for a SuperBall has been claimed\");\r\n            uint256 mintIndex = totalSupply();\r\n            _safeMint(msg.sender, mintIndex);\r\n            SuperballPresaleMinted[SBs[i]] = true;\r\n        }\r\n     }","contract":"IMPS","time":0},{"type":"external-function ","before":"function PreFloatingHeadMintImps(uint256[] memory FHs) external nonReentrant {\r\n        require(PreSaleIsActive, \"PreSale isn't active yet!\");\r\n        require(FHs.length + totalSupply() <= maxImps, \"Purchase would exceed max supply of Imps.\");\r\n        for (uint256 j=0; j<FHs.length;j++){\r\n         require(SBalls.checkBalance(FHs[j],msg.sender) == 1, \"You are not the owner of this head.\");\r\n         require(!FloatingHeadClaimed[FHs[j]], \"The IMP for a FH has been claimed\");\r\n        }       \r\n\r\n        for(uint256 i=0; i < FHs.length; i++ ) {\r\n            require(!FloatingHeadClaimed[FHs[i]], \"The IMP for a FH has been claimed\");\r\n            uint256 mintIndex = totalSupply();\r\n            _safeMint(msg.sender, mintIndex);\r\n            FloatingHeadClaimed[FHs[i]] = true;\r\n        }\r\n     }","after":"function PreFloatingHeadMintImps(uint256[] calldata FHs) external nonReentrant {\r\n        require(PreSaleIsActive, \"PreSale isn't active yet!\");\r\n        require(FHs.length + totalSupply() <= maxImps, \"Purchase would exceed max supply of Imps.\");\r\n        for (uint256 j=0; j<FHs.length;j++){\r\n         require(SBalls.checkBalance(FHs[j],msg.sender) == 1, \"You are not the owner of this head.\");\r\n         require(!FloatingHeadClaimed[FHs[j]], \"The IMP for a FH has been claimed\");\r\n        }       \r\n\r\n        for(uint256 i=0; i < FHs.length; i++ ) {\r\n            require(!FloatingHeadClaimed[FHs[i]], \"The IMP for a FH has been claimed\");\r\n            uint256 mintIndex = totalSupply();\r\n            _safeMint(msg.sender, mintIndex);\r\n            FloatingHeadClaimed[FHs[i]] = true;\r\n        }\r\n     }","contract":"IMPS","time":0}]}