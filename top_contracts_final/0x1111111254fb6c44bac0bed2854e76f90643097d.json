{"time":304,"results":[{"type":"external-function ","before":";\n\n/// @title Interface for WETH tokens\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n    function withdraw(uint256 amount) external;\n}\n\n\n// File contracts/LimitOrderProtocolRFQ.sol\n\n\npragma solidity ^0.7.6;\npragma abicoder v2;\n\n\n\n\n\n\n\ncontract LimitOrderProtocolRFQ is EthReceiver, EIP712(\"1inch RFQ\", \"2\"), Permitable {\n    usi","after":";\n\n/// @title Interface for WETH tokens\ninterface IWETH is IERC20 {\n    function deposit() external payable;\n    function withdraw(uint256 amount) external;\n}\n\n\n// File contracts/LimitOrderProtocolRFQ.sol\n\n\npragma solidity ^0.7.6;\npragma abicoder v2;\n\n\n\n\n\n\n\ncontract LimitOrderProtocolRFQ is EthReceiver, EIP712(\"1inch RFQ\", \"2\"), Permitable {\n    usi","contract":"AggregationRouterV4","time":0},{"type":"external-function ","before":"  uint256 makingAmount;\n        uint256 takingAmount;\n    }\n\n    bytes32 constant public LIMIT_ORDER_RFQ_TYPEHASH = keccak256(\n        \"OrderRFQ(uint256 info,address makerAsset,address takerAsset,address maker,address allowedSender,uint256 makingAmount,uint256 takingAmount)\"\n    );\n    uint256 private constant _UNWRAP_WETH_MASK = 1 << 255;\n\n    IWETH private immutable _WETH;  // solhint-disable-line var-name-mixedcase\n    mapping(address => mapping(uint","after":"  uint256 makingAmount;\n        uint256 takingAmount;\n    }\n\n    bytes32 constant public LIMIT_ORDER_RFQ_TYPEHASH = keccak256(\n        \"OrderRFQ(uint256 info,address makerAsset,address takerAsset,address maker,address allowedSender,uint256 makingAmount,uint256 takingAmount)\"\n    );\n    uint256 private constant _UNWRAP_WETH_MASK = 1 << 255;\n\n    IWETH private immutable _WETH;  // solhint-disable-line var-name-mixedcase\n    mapping(address => mapping(uint","contract":"AggregationRouterV4","time":0}]}