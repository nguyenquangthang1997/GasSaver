{"time":206,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public startingIndexBlock;\nuint256 public startingIndex;\nuint256 public privateMintPrice = 0.075 ether;\nuint256 public publicMintPrice = 0.08 ether;\nuint256 public maxToMint = 5;\nuint256 public MAX_MINT_WHITELIST = 5;\nuint256 public MAX_ELEMENTS = 1000;\nuint256 public REVEAL_TIMESTAMP;\nbool public revealed = false;\nstring public notRevealedUri = \"\";\nstring public PROVENANCE_HASH = \"\";\nbool public saleIsActive = false;\nbool public privateSaleIsActive = true;\nmapping(address => Whitelist) public whitelist;\nmapping(address => Whitelist) public winnerlist;\naddress[] whitelistAddr;\naddress[] winnerlistAddr;","after":"uint256 public startingIndexBlock;\nuint256 public startingIndex;\nuint256 public privateMintPrice = 0.075 ether;\nuint256 public publicMintPrice = 0.08 ether;\nuint256 public maxToMint = 5;\nuint256 public MAX_MINT_WHITELIST = 5;\nuint256 public MAX_ELEMENTS = 1000;\nuint256 public REVEAL_TIMESTAMP;\nstring public notRevealedUri = \"\";\nstring public PROVENANCE_HASH = \"\";\nmapping(address => Whitelist) public whitelist;\nmapping(address => Whitelist) public winnerlist;\naddress[] whitelistAddr;\naddress[] winnerlistAddr;\nbool public revealed = false;\nbool public saleIsActive = false;\nbool public privateSaleIsActive = true;\n","contract":"Lacedameon","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory _provenanceHash)\n        external\n        onlyOwner\n    {\n        PROVENANCE_HASH = _provenanceHash;\n    }","after":"function setProvenanceHash(string calldata _provenanceHash)\n        external\n        onlyOwner\n    {\n        PROVENANCE_HASH = _provenanceHash;\n    }","contract":"Lacedameon","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) external onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) external onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"Lacedameon","time":0},{"type":"external-function ","before":"function setWhitelistAddr(address[] memory addrs) public onlyOwner {\n        whitelistAddr = addrs;\n        for (uint256 i = 0; i < whitelistAddr.length; i++) {\n            addAddressToWhitelist(whitelistAddr[i]);\n        }\n    }","after":"function setWhitelistAddr(address[] calldata addrs) public onlyOwner {\n        whitelistAddr = addrs;\n        for (uint256 i = 0; i < whitelistAddr.length; i++) {\n            addAddressToWhitelist(whitelistAddr[i]);\n        }\n    }","contract":"Lacedameon","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_MINT_WHITELIST = 5;","after":"uint256 public constant MAX_MINT_WHITELIST = 5;","contract":"Lacedameon","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_ELEMENTS = 1000;","after":"uint256 public constant MAX_ELEMENTS = 1000;","contract":"Lacedameon","time":0}]}