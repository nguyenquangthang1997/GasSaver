{"time":142,"results":[{"type":"state-data-arrangement ","before":"\nbool public saleIsActive;\nuint256 public tokenPrice = 1 ether;\nuint256 private mintedTokens;\nuint constant TOKEN_ID = 2476;\nuint constant MAX_TOKENS = 10000;\naddress private constant FRANK = 0xF40Fd88ac59A206D009A07F8c09828a01e2ACC0d;\naddress private constant WALLET2476 = 0x0b8F4C4E7626A91460dac057eB43e0de59d5b44F;\naddress public attention2476Contract;","after":"uint256 public tokenPrice = 1 ether;\nuint256 private mintedTokens;\nuint constant TOKEN_ID = 2476;\nuint constant MAX_TOKENS = 10000;\naddress private constant FRANK = 0xF40Fd88ac59A206D009A07F8c09828a01e2ACC0d;\naddress private constant WALLET2476 = 0x0b8F4C4E7626A91460dac057eB43e0de59d5b44F;\naddress public attention2476Contract;\nbool public saleIsActive;\n","contract":"Token2476","time":0},{"type":"external-function ","before":"function setURI(string memory newuri) external onlyOwner {\n        _setURI(newuri);\n    }","after":"function setURI(string calldata newuri) external onlyOwner {\n        _setURI(newuri);\n    }","contract":"Token2476","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"Token2476","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"Token2476","time":0},{"type":"external-function ","before":"function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","after":"function burnBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }","contract":"Token2476","time":0}]}