{"time":73,"results":[{"type":"external-function ","before":"function claimWeek(\n        address _liquidityProvider,\n        uint256 _tranche,\n        uint256 _balance,\n        bytes32[] memory _merkleProof\n    )\n        public\n    {\n        _claimWeek(_liquidityProvider, _tranche, _balance, _merkleProof);\n        _disburse(_liquidityProvider, _balance);\n    }","after":"function claimWeek(\n        address _liquidityProvider,\n        uint256 _tranche,\n        uint256 _balance,\n        bytes32[] calldata _merkleProof\n    )\n        public\n    {\n        _claimWeek(_liquidityProvider, _tranche, _balance, _merkleProof);\n        _disburse(_liquidityProvider, _balance);\n    }","contract":"MerkleDrop","time":0},{"type":"external-function ","before":"function claimWeeks(\n        address _liquidityProvider,\n        uint256[] memory _tranches,\n        uint256[] memory _balances,\n        bytes32[][] memory _merkleProofs\n    )\n        public\n    {\n        uint256 len = _tranches.length;\n        require(len == _balances.length && len == _merkleProofs.length, \"Mismatching inputs\");\n\n        uint256 totalBalance = 0;\n        for(uint256 i = 0; i < len; i++) {\n            _claimWeek(_liquidityProvider, _tranches[i], _balances[i], _merkleProofs[i]);\n            totalBalance = totalBalance.add(_balances[i]);\n        }\n        _disburse(_liquidityProvider, totalBalance);\n    }","after":"function claimWeeks(\n        address _liquidityProvider,\n        uint256[] calldata _tranches,\n        uint256[] calldata _balances,\n        bytes32[][] calldata _merkleProofs\n    )\n        public\n    {\n        uint256 len = _tranches.length;\n        require(len == _balances.length && len == _merkleProofs.length, \"Mismatching inputs\");\n\n        uint256 totalBalance = 0;\n        for(uint256 i = 0; i < len; i++) {\n            _claimWeek(_liquidityProvider, _tranches[i], _balances[i], _merkleProofs[i]);\n            totalBalance = totalBalance.add(_balances[i]);\n        }\n        _disburse(_liquidityProvider, totalBalance);\n    }","contract":"MerkleDrop","time":0}]}