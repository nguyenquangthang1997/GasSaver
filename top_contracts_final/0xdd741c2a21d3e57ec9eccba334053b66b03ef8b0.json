{"time":190,"results":[{"type":"immutable-restrict-modification ","before":"uint256 public rewardEndTime;","after":"uint256 public immutable rewardEndTime;","contract":"SteamedBuns","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) external onlyOwner {\n\t\tbaseURI = newBaseURI;\n\t}","after":"function setBaseURI(string calldata newBaseURI) external onlyOwner {\n\t\tbaseURI = newBaseURI;\n\t}","contract":"RetroPandas","time":0},{"type":"external-function ","before":"function updateBlacklist(address[] memory users, bool[] memory blackListed) external onlyOwner {\n    uint256 length = users.length;\n    require(length == blackListed.length);\n    for (uint256 i = 0; i < length; i++) {\n      blacklist[users[i]] = blackListed[i];\n    }\n  }","after":"function updateBlacklist(address[] calldata users, bool[] calldata blackListed) external onlyOwner {\n    uint256 length = users.length;\n    require(length == blackListed.length);\n    for (uint256 i = 0; i < length; i++) {\n      blacklist[users[i]] = blackListed[i];\n    }\n  }","contract":"RetroPandas","time":0},{"type":"external-function ","before":"function updateWhitelist(address[] memory users, uint16[] memory allowedPandas) external onlyOwner {\n    uint256 length = users.length;\n    require(length == allowedPandas.length);\n    for (uint256 i = 0; i < length; i++) {\n      whitelist[users[i]] = allowedPandas[i];\n    }\n  }","after":"function updateWhitelist(address[] calldata users, uint16[] calldata allowedPandas) external onlyOwner {\n    uint256 length = users.length;\n    require(length == allowedPandas.length);\n    for (uint256 i = 0; i < length; i++) {\n      whitelist[users[i]] = allowedPandas[i];\n    }\n  }","contract":"RetroPandas","time":0},{"type":"constant-restrict-modification  ","before":"uint public batchLimit = 5;","after":"uint public constant batchLimit = 5;","contract":"RetroPandas","time":1}]}