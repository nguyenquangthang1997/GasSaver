{"time":137,"results":[{"type":"state-data-arrangement ","before":"\nstring public GOOSE_PROVENANCE = \"\";\nstring baseURI;\nstring public baseExtension = \".json\";\nuint256 public whitelistSalePrice = 0.04 ether;\nuint256 public publicSalePrice = 0.07 ether;\nuint256 public maxSupply = 6666;\nuint256 public maxMintAmount = 10;\nbool private _privateSale = false;\nbool private _publicSale = false;\nmapping(address => uint8) private _whiteList;\nmapping(uint256 => string) public gooseNames;\nbool internal revealed = false;","after":"string public GOOSE_PROVENANCE = \"\";\nstring baseURI;\nstring public baseExtension = \".json\";\nuint256 public whitelistSalePrice = 0.04 ether;\nuint256 public publicSalePrice = 0.07 ether;\nuint256 public maxSupply = 6666;\nuint256 public maxMintAmount = 10;\nmapping(address => uint8) private _whiteList;\nmapping(uint256 => string) public gooseNames;\nbool private _privateSale = false;\nbool private _publicSale = false;\nbool internal revealed = false;\n","contract":"GangsterGoose","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\n    GOOSE_PROVENANCE = _provenanceHash;\n  }","after":"function setProvenanceHash(string calldata _provenanceHash) public onlyOwner {\n    GOOSE_PROVENANCE = _provenanceHash;\n  }","contract":"GangsterGoose","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","after":"function setBaseExtension(string calldata _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","contract":"GangsterGoose","time":0},{"type":"external-function ","before":"function changeGooseName(uint256 _tokenId, string memory _name) public {\n    require(ownerOf(_tokenId) == msg.sender, \"Hey, your wallet doesn't own this goose!\");\n    require(sha256(bytes(_name)) != sha256(bytes(gooseNames[_tokenId])), \"New name is same as the current one\");\n    gooseNames[_tokenId] = _name;\n        \n    emit gooseNameChange(msg.sender, _tokenId, _name);\n        \n  }","after":"function changeGooseName(uint256 _tokenId, string calldata _name) public {\n    require(ownerOf(_tokenId) == msg.sender, \"Hey, your wallet doesn't own this goose!\");\n    require(sha256(bytes(_name)) != sha256(bytes(gooseNames[_tokenId])), \"New name is same as the current one\");\n    gooseNames[_tokenId] = _name;\n        \n    emit gooseNameChange(msg.sender, _tokenId, _name);\n        \n  }","contract":"GangsterGoose","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 6666;","after":"uint256 public constant maxSupply = 6666;","contract":"GangsterGoose","time":0}]}