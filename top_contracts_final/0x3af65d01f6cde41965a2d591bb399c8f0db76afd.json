{"time":123,"results":[{"type":"state-data-arrangement ","before":"\nuint public constant MAX_SUPPLY = 6666;\nuint public constant TOKEN_PRICE = 0.06 ether;\nstring private baseURI;\nbool public isSaleActive;\nbool public isPresaleActive;\nuint public presaleSupply;\nuint public reservedSupply;\nuint public maxMintsPerWallet;\nbool public currentEdition;\nuint public salesStage;\nmapping(address => mapping(uint => uint)) public mintedAmount;","after":"uint public constant MAX_SUPPLY = 6666;\nuint public constant TOKEN_PRICE = 0.06 ether;\nstring private baseURI;\nuint public presaleSupply;\nuint public reservedSupply;\nuint public maxMintsPerWallet;\nuint public salesStage;\nmapping(address => mapping(uint => uint)) public mintedAmount;\nbool public isSaleActive;\nbool public isPresaleActive;\nbool public currentEdition;\n","contract":"RebelKids","time":0},{"type":"external-function ","before":"function setBaseUri(string memory _baseURIArg) external onlyOwner {\n        baseURI = _baseURIArg;\n    }","after":"function setBaseUri(string calldata _baseURIArg) external onlyOwner {\n        baseURI = _baseURIArg;\n    }","contract":"RebelKids","time":0},{"type":"external-function ","before":"function giftTokens(address[] memory addresses) external onlyOwner maxSupplyCheck(addresses.length) {\n        for (uint i = 0; i < addresses.length; i++) {\n            _safeMint(addresses[i], totalSupply() + 1);\n        }\n    }","after":"function giftTokens(address[] calldata addresses) external onlyOwner maxSupplyCheck(addresses.length) {\n        for (uint i = 0; i < addresses.length; i++) {\n            _safeMint(addresses[i], totalSupply() + 1);\n        }\n    }","contract":"RebelKids","time":0}]}