{"time":172,"results":[{"type":"loop-duplication","before":"\nstart line 172 column 2, end line 174 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(tokens[_tokenIds[i]].config.MAX_SUPPLY > 0, \"Non exists config\");\n\t\t}\nstart line 175 column 2, end line 177 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\ttokens[_tokenIds[i]].salesActive = _status;\n\t\t}","after":"// merge loop\n\nstart line 172 column 2, end line 174 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(tokens[_tokenIds[i]].config.MAX_SUPPLY > 0, \"Non exists config\");\n\t\t}\nstart line 175 column 2, end line 177 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\ttokens[_tokenIds[i]].salesActive = _status;\n\t\t}","contract":"DRPMember","time":0},{"type":"loop-duplication","before":"\nstart line 181 column 2, end line 183 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(tokens[_tokenIds[i]].config.MAX_SUPPLY > 0, \"Non exists config\");\n\t\t}\nstart line 184 column 2, end line 186 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\ttokens[_tokenIds[i]].whitelistSalesActive = _status;\n\t\t}","after":"// merge loop\n\nstart line 181 column 2, end line 183 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(tokens[_tokenIds[i]].config.MAX_SUPPLY > 0, \"Non exists config\");\n\t\t}\nstart line 184 column 2, end line 186 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\ttokens[_tokenIds[i]].whitelistSalesActive = _status;\n\t\t}","contract":"DRPMember","time":0},{"type":"loop-duplication","before":"\nstart line 224 column 2, end line 226 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(tokens[_tokenIds[i]].config.MAX_SUPPLY > 0, \"Non exists config\");\n\t\t}\nstart line 227 column 2, end line 229 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\ttokens[_tokenIds[i]].uri = _uri[i];\n\t\t}","after":"// merge loop\n\nstart line 224 column 2, end line 226 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\trequire(tokens[_tokenIds[i]].config.MAX_SUPPLY > 0, \"Non exists config\");\n\t\t}\nstart line 227 column 2, end line 229 column 2\nfor (uint16 i = 0; i < _tokenIds.length; i++) {\n\t\t\ttokens[_tokenIds[i]].uri = _uri[i];\n\t\t}","contract":"DRPMember","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"DRPMember","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"DRPMember","time":0}]}