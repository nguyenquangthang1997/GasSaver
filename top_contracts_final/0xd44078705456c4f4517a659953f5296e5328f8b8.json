{"time":211,"results":[{"type":"de-morgan-condition ","before":"!uriLocked && !metadataFrozen[_id]","after":"!(uriLocked && metadataFrozen[_id])","loc":{"start":{"line":878,"column":12},"end":{"line":878,"column":45}},"contract":"Super1155","time":0},{"type":"state-data-arrangement ","before":"\nuint256 MAX_INT = type(uint256).max;\nbytes32 public constant SET_URI = keccak256(\"SET_URI\");\nbytes32 public constant SET_PROXY_REGISTRY = keccak256(\"SET_PROXY_REGISTRY\");\nbytes32 public constant CONFIGURE_GROUP = keccak256(\"CONFIGURE_GROUP\");\nbytes32 public constant MINT  = keccak256(\"MINT\");\nbytes32 public constant BURN = keccak256(\"BURN\");\nbytes32 public constant SET_METADATA = keccak256(\"SET_METADATA\");\nbytes32 public constant LOCK_URI = keccak256(\"LOCK_URI\");\nbytes32 public constant LOCK_ITEM_URI = keccak256(\"LOCK_ITEM_URI\");\nbytes32 public constant LOCK_CREATION = keccak256(\"LOCK_CREATION\");\nbytes4 private constant INTERFACE_ERC1155 = 0xd9b67a26;\nbytes4 private constant INTERFACE_ERC1155_METADATA_URI = 0x0e89341c;\nuint256 private constant GROUP_MASK = uint256(type(uint128).max) << 128;\nstring public name;\nstring public metadataUri;\nstring public contractURI;\naddress public proxyRegistryAddress;\nmapping (uint256 => mapping(address => uint256)) private balances;\nmapping (uint256 => mapping(address => uint256)) public groupBalances;\nmapping(address => uint256) public totalBalances;\nmapping (address => mapping(address => bool)) private operatorApprovals;\nmapping (uint256 => ItemGroup) public itemGroups;\nmapping (uint256 => uint256) public circulatingSupply;\nmapping (uint256 => uint256) public mintCount;\nmapping (uint256 => uint256) public burnCount;\nmapping (uint256 => bool) public metadataFrozen;\nmapping (uint256 => string) public metadata;\nbool public uriLocked;\nbool public contractUriLocked;\nbool public locked;","after":"uint256 MAX_INT = type(uint256).max;\nbytes32 public constant SET_URI = keccak256(\"SET_URI\");\nbytes32 public constant SET_PROXY_REGISTRY = keccak256(\"SET_PROXY_REGISTRY\");\nbytes32 public constant CONFIGURE_GROUP = keccak256(\"CONFIGURE_GROUP\");\nbytes32 public constant MINT  = keccak256(\"MINT\");\nbytes32 public constant BURN = keccak256(\"BURN\");\nbytes32 public constant SET_METADATA = keccak256(\"SET_METADATA\");\nbytes32 public constant LOCK_URI = keccak256(\"LOCK_URI\");\nbytes32 public constant LOCK_ITEM_URI = keccak256(\"LOCK_ITEM_URI\");\nbytes32 public constant LOCK_CREATION = keccak256(\"LOCK_CREATION\");\nuint256 private constant GROUP_MASK = uint256(type(uint128).max) << 128;\nstring public name;\nstring public metadataUri;\nstring public contractURI;\nmapping (uint256 => mapping(address => uint256)) private balances;\nmapping (uint256 => mapping(address => uint256)) public groupBalances;\nmapping(address => uint256) public totalBalances;\nmapping (address => mapping(address => bool)) private operatorApprovals;\nmapping (uint256 => ItemGroup) public itemGroups;\nmapping (uint256 => uint256) public circulatingSupply;\nmapping (uint256 => uint256) public mintCount;\nmapping (uint256 => uint256) public burnCount;\nmapping (uint256 => bool) public metadataFrozen;\nmapping (uint256 => string) public metadata;\naddress public proxyRegistryAddress;\nbytes4 private constant INTERFACE_ERC1155 = 0xd9b67a26;\nbytes4 private constant INTERFACE_ERC1155_METADATA_URI = 0x0e89341c;\nbool public uriLocked;\nbool public contractUriLocked;\nbool public locked;\n","contract":"Super1155","time":1},{"type":"external-function ","before":"function setMetadata(uint256 _id, string memory _metadata) external {\n    require(_hasItemRight(_id, SET_METADATA), \"Super1155: you don't have rights to setMetadata\");\n    uint groupId = _id >> 128;\n    require(!uriLocked && !metadataFrozen[_id] &&  !metadataFrozen[groupId],\n      \"Super1155: you cannot edit this metadata because it is frozen\");\n    string memory oldMetadata = metadata[_id];\n    metadata[_id] = _metadata;\n    emit MetadataChanged(_msgSender(), _id, oldMetadata, _metadata);\n  }","after":"function setMetadata(uint256 _id, string calldata _metadata) external {\n    require(_hasItemRight(_id, SET_METADATA), \"Super1155: you don't have rights to setMetadata\");\n    uint groupId = _id >> 128;\n    require(!uriLocked && !metadataFrozen[_id] &&  !metadataFrozen[groupId],\n      \"Super1155: you cannot edit this metadata because it is frozen\");\n    string memory oldMetadata = metadata[_id];\n    metadata[_id] = _metadata;\n    emit MetadataChanged(_msgSender(), _id, oldMetadata, _metadata);\n  }","contract":"Super1155","time":0},{"type":"constant-restrict-modification  ","before":"uint256 MAX_INT = type(uint256).max;","after":"uint256 constant MAX_INT = type(uint256).max;","contract":"Super1155","time":0}]}