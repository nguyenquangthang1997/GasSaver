{"time":102,"results":[{"type":"external-function ","before":"function claimJeffies(uint256[] memory tokenIds) public returns (uint256[] memory){\n        require(enabled, \"Contract not enabled\");\n        require(tx.origin == msg.sender, \"CANNOT MINT THROUGH A CUSTOM CONTRACT\");\n        uint256[] memory newTokenIds = new uint[](tokenIds.length);\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            require(claimed[tokenIds[i]] == false, \"Token already claimed\");\n            require(Washies.ownerOf(tokenIds[i]) == msg.sender, \"You dont own that Washie\");\n            claimed[tokenIds[i]] = true;\n            uint256 newTokenId = lcg(maxSupply, tokenIds[i]);\n            _safeMint(_msgSender(), newTokenId);\n            newTokenIds[i] = newTokenId;\n        }\n        totalSupply += tokenIds.length;\n        return newTokenIds;\n    }","after":"function claimJeffies(uint256[] calldata tokenIds) public returns (uint256[] memory){\n        require(enabled, \"Contract not enabled\");\n        require(tx.origin == msg.sender, \"CANNOT MINT THROUGH A CUSTOM CONTRACT\");\n        uint256[] memory newTokenIds = new uint[](tokenIds.length);\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            require(claimed[tokenIds[i]] == false, \"Token already claimed\");\n            require(Washies.ownerOf(tokenIds[i]) == msg.sender, \"You dont own that Washie\");\n            claimed[tokenIds[i]] = true;\n            uint256 newTokenId = lcg(maxSupply, tokenIds[i]);\n            _safeMint(_msgSender(), newTokenId);\n            newTokenIds[i] = newTokenId;\n        }\n        totalSupply += tokenIds.length;\n        return newTokenIds;\n    }","contract":"TheMetaReserveEdition2","time":0},{"type":"external-function ","before":"  function setBaseUri(string memory _uri) external onlyOwner {\n        baseURI = _uri;\n   ","after":"  function setBaseUri(string calldata _uri) external onlyOwner {\n        baseURI = _uri;\n   ","contract":"TheMetaReserveEdition2","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxSupply;","after":"uint256 public immutable maxSupply;","contract":"TheMetaReserveEdition2","time":0}]}