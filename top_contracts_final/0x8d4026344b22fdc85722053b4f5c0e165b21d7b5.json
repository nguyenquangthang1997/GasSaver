{"time":164,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public constant MH_MAX = 5_000;\nuint256 private _mhGiftTotalSupply = 133;\nuint256 private _mhPresaleTotalSupply = 423;\nuint256 private _mhPublicSaleTotalSupply = 4_444;\nuint256 public price = 0.1 ether;\nuint256 public presaleMaxMint = 1;\nuint256 public publicSaleMaxMint = 100;\nbool public isActive = false;\nbool public isPresaleActive = false;\nbool public isPublicSaleActive = false;\nstring public proof;\nuint256 public totalGifted;\nuint256 public totalPresaleSold;\nuint256 public totalPublicSaleSold;\nuint256 public totalSold;\nmapping(address => bool) private _presaleAllowList;\nmapping(address => uint256) private _presaleAllowListClaimed;\nmapping(string => bool) private _usedNonces;\nbool public isRevealed = false;\nstring private _contractURI = '';\nstring private _tokenBaseURI = '';\nstring private _tokenPlaceholderBaseURI = '';\naddress private _signerAddress = 0x6d17DE01CD9110b085B0540A80162E7DE2Ac9892;","after":"uint256 public constant MH_MAX = 5_000;\nuint256 private _mhGiftTotalSupply = 133;\nuint256 private _mhPresaleTotalSupply = 423;\nuint256 private _mhPublicSaleTotalSupply = 4_444;\nuint256 public price = 0.1 ether;\nuint256 public presaleMaxMint = 1;\nuint256 public publicSaleMaxMint = 100;\nstring public proof;\nuint256 public totalGifted;\nuint256 public totalPresaleSold;\nuint256 public totalPublicSaleSold;\nuint256 public totalSold;\nmapping(address => bool) private _presaleAllowList;\nmapping(address => uint256) private _presaleAllowListClaimed;\nmapping(string => bool) private _usedNonces;\nstring private _contractURI = '';\nstring private _tokenBaseURI = '';\nstring private _tokenPlaceholderBaseURI = '';\naddress private _signerAddress = 0x6d17DE01CD9110b085B0540A80162E7DE2Ac9892;\nbool public isActive = false;\nbool public isPresaleActive = false;\nbool public isPublicSaleActive = false;\nbool public isRevealed = false;\n","contract":"MetalHeads","time":0},{"type":"external-function ","before":"function publicSalePurchase(bytes32 hash, bytes memory signature, string memory nonce, uint256 numberOfTokens) external payable {\r\n    require(isActive, 'Contract inactive');\r\n    require(isPublicSaleActive, 'Public Sale inactive');\r\n    require(matchAddresSigner(hash, signature), \"Signer address not match\");\r\n    require(!_usedNonces[nonce], \"Hash used\");\r\n    require(hashTransaction(msg.sender, numberOfTokens, nonce) == hash, \"Hash failed\");\r\n    require(totalSupply() < MH_MAX, 'All tokens have been minted');\r\n    require(numberOfTokens <= publicSaleMaxMint, 'Cannot purchase this many tokens');\r\n    require(totalPublicSaleSold + numberOfTokens <= mhPublicSaleTotalSupply(), 'Exceed public sale total supply');\r\n    require(price * numberOfTokens <= msg.value, 'ETH insufficient');\r\n\r\n    for (uint256 i = 0; i < numberOfTokens; i++) {\r\n      uint256 tokenId = mhGiftTotalSupply() + totalSold + 1;\r\n\r\n      totalPublicSaleSold += 1;\r\n      totalSold += 1;\r\n      _safeMint(msg.sender, tokenId);\r\n    }\r\n\r\n    _usedNonces[nonce] = true;\r\n  }","after":"function publicSalePurchase(bytes32 hash, bytes calldata signature, string calldata nonce, uint256 numberOfTokens) external payable {\r\n    require(isActive, 'Contract inactive');\r\n    require(isPublicSaleActive, 'Public Sale inactive');\r\n    require(matchAddresSigner(hash, signature), \"Signer address not match\");\r\n    require(!_usedNonces[nonce], \"Hash used\");\r\n    require(hashTransaction(msg.sender, numberOfTokens, nonce) == hash, \"Hash failed\");\r\n    require(totalSupply() < MH_MAX, 'All tokens have been minted');\r\n    require(numberOfTokens <= publicSaleMaxMint, 'Cannot purchase this many tokens');\r\n    require(totalPublicSaleSold + numberOfTokens <= mhPublicSaleTotalSupply(), 'Exceed public sale total supply');\r\n    require(price * numberOfTokens <= msg.value, 'ETH insufficient');\r\n\r\n    for (uint256 i = 0; i < numberOfTokens; i++) {\r\n      uint256 tokenId = mhGiftTotalSupply() + totalSold + 1;\r\n\r\n      totalPublicSaleSold += 1;\r\n      totalSold += 1;\r\n      _safeMint(msg.sender, tokenId);\r\n    }\r\n\r\n    _usedNonces[nonce] = true;\r\n  }","contract":"MetalHeads","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _mhGiftTotalSupply = 133;","after":"uint256 private constant _mhGiftTotalSupply = 133;","contract":"MetalHeads","time":0}]}