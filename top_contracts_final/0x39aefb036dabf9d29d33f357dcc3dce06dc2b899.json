{"time":152,"results":[{"type":"external-function ","before":"function mintKeys(uint256[] memory ids, uint256[] memory amounts) external onlyOwner {\n        _mintBatch(owner(), ids, amounts, \"\");\n    }","after":"function mintKeys(uint256[] calldata ids, uint256[] calldata amounts) external onlyOwner {\n        _mintBatch(owner(), ids, amounts, \"\");\n    }","contract":"SpooKeys","time":0},{"type":"external-function ","before":"function claimKeys(uint256 _keyId, bytes memory _signature) external {\n        // ckeck key id is in allowed keys?\n        require(claimed[msg.sender] == false, \"These keys have already been claimed.\");\n        require(_verify(msg.sender, _keyId, _signature), \"This is not a valid signatire.\");\n\n        claimed[msg.sender] = true;\n        _mint(msg.sender, _keyId, 1, \"\");\n    }","after":"function claimKeys(uint256 _keyId, bytes calldata _signature) external {\n        // ckeck key id is in allowed keys?\n        require(claimed[msg.sender] == false, \"These keys have already been claimed.\");\n        require(_verify(msg.sender, _keyId, _signature), \"This is not a valid signatire.\");\n\n        claimed[msg.sender] = true;\n        _mint(msg.sender, _keyId, 1, \"\");\n    }","contract":"SpooKeys","time":0},{"type":"external-function ","before":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","after":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","contract":"SpooKeys","time":0},{"type":"external-function ","before":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","after":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","contract":"SpooKeys","time":0}]}