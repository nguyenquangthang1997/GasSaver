{"time":212,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public constant MAX_CATS = 8888;\nuint256 public RESERVED_CATS_AVAILABLE = 88;\nuint256 public constant PRESALE_CATS_PER_WALLET = 3;\nuint256 public constant MAX_PER_MINT = 7;\nuint256 public constant mintPrice = 0.04 ether;\nstring private _tokenBaseURI;\nbool public presaleIsOpen = false;\nbool public saleIsOpen = false;\nbool public revealed = false;\nmapping (address => uint256) private _userPresaleMints;\nmapping(address => bool) private _isFreeMinted;\naddress private _signer;","after":"uint256 public constant MAX_CATS = 8888;\nuint256 public RESERVED_CATS_AVAILABLE = 88;\nuint256 public constant PRESALE_CATS_PER_WALLET = 3;\nuint256 public constant MAX_PER_MINT = 7;\nuint256 public constant mintPrice = 0.04 ether;\nstring private _tokenBaseURI;\nmapping (address => uint256) private _userPresaleMints;\nmapping(address => bool) private _isFreeMinted;\naddress private _signer;\nbool public presaleIsOpen = false;\nbool public saleIsOpen = false;\nbool public revealed = false;\n","contract":"CabuCats","time":1},{"type":"external-function ","before":"function preSale(uint256 numberOfTokens, bytes32 hash, bytes memory signature) external payable {\n        require(presaleIsOpen && !saleIsOpen, \"Presale is not active\");\n        require(numberOfTokens > 0, \"Minimum minting amount is 1\");\n        require(_userPresaleMints[msg.sender] + numberOfTokens <= PRESALE_CATS_PER_WALLET, \"Max cats per wallet limit exceeded\");\n\n        require(isValidSign(hash, signature), \"Invalid signer\");\n        require(hashTransaction(msg.sender, numberOfTokens) == hash, \"Invalid hash\");\n\n        if (_isFreeMinted[msg.sender]) {\n            require(mintPrice * numberOfTokens <= msg.value, \"Ether value sent is not correct\");\n        } else {\n            require(mintPrice * (numberOfTokens - 1) <= msg.value, \"Ether value sent is not correct\");\n        }\n\n        for(uint256 i = 0;  i < numberOfTokens; i++) {\n            uint256 mintIndex = totalSupply() + 1;\n            _safeMint(msg.sender, mintIndex);\n            _userPresaleMints[msg.sender]++;\n        }\n\n        if (!_isFreeMinted[msg.sender]) {\n            _isFreeMinted[msg.sender] = true;\n        }\n    }","after":"function preSale(uint256 numberOfTokens, bytes32 hash, bytes calldata signature) external payable {\n        require(presaleIsOpen && !saleIsOpen, \"Presale is not active\");\n        require(numberOfTokens > 0, \"Minimum minting amount is 1\");\n        require(_userPresaleMints[msg.sender] + numberOfTokens <= PRESALE_CATS_PER_WALLET, \"Max cats per wallet limit exceeded\");\n\n        require(isValidSign(hash, signature), \"Invalid signer\");\n        require(hashTransaction(msg.sender, numberOfTokens) == hash, \"Invalid hash\");\n\n        if (_isFreeMinted[msg.sender]) {\n            require(mintPrice * numberOfTokens <= msg.value, \"Ether value sent is not correct\");\n        } else {\n            require(mintPrice * (numberOfTokens - 1) <= msg.value, \"Ether value sent is not correct\");\n        }\n\n        for(uint256 i = 0;  i < numberOfTokens; i++) {\n            uint256 mintIndex = totalSupply() + 1;\n            _safeMint(msg.sender, mintIndex);\n            _userPresaleMints[msg.sender]++;\n        }\n\n        if (!_isFreeMinted[msg.sender]) {\n            _isFreeMinted[msg.sender] = true;\n        }\n    }","contract":"CabuCats","time":0}]}