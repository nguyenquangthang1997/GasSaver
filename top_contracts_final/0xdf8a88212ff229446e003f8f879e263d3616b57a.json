{"time":74,"results":[{"type":"state-data-arrangement ","before":"\naddress public ERC20_CONTRACT;\naddress public ERC721_CONTRACT;\nuint256 public EXPIRATION;\nmapping(address => EnumerableSet.UintSet) private _deposits;\nmapping(address => mapping(uint256 => uint256)) public depositBlocks;\nmapping (uint256 => uint256) public tokenRarity;\nuint256[7] public rewardRate;\nbool started;","after":"uint256 public EXPIRATION;\nmapping(address => EnumerableSet.UintSet) private _deposits;\nmapping(address => mapping(uint256 => uint256)) public depositBlocks;\nmapping (uint256 => uint256) public tokenRarity;\nuint256[7] public rewardRate;\naddress public ERC20_CONTRACT;\naddress public ERC721_CONTRACT;\nbool started;\n","contract":"StakeSeals","time":1},{"type":"external-function ","before":"function setBatchRarity(uint256[] memory _tokenIds, uint256 _rarity) public onlyOwner() {\n        for (uint256 i; i < _tokenIds.length; i++) {\n            uint256 tokenId = _tokenIds[i];\n            tokenRarity[tokenId] = _rarity;\n        }\n    }","after":"function setBatchRarity(uint256[] calldata _tokenIds, uint256 _rarity) public onlyOwner() {\n        for (uint256 i; i < _tokenIds.length; i++) {\n            uint256 tokenId = _tokenIds[i];\n            tokenRarity[tokenId] = _rarity;\n        }\n    }","contract":"StakeSeals","time":0},{"type":"immutable-restrict-modification ","before":"address public ERC721_CONTRACT;","after":"address public immutable ERC721_CONTRACT;","contract":"StakeSeals","time":0}]}