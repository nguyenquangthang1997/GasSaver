{"time":135,"results":[{"type":"external-function ","before":"function mint(address beneficiary, uint8 numberOfTokens, uint8 holder, uint8 wl, bytes memory signature ) external payable {\n        require(checkSigner(beneficiary, holder, wl, signature),\"Incorrect signature\");\n        require((wl > 0 && isPreSaleOpen()) || isSaleOpen(), \"Closed sale\");\n        require(numberOfTokens > 0, \"Number of items below 1\");\n        require((isPreSaleOpen() && balanceOf(beneficiary) + numberOfTokens <= _presaleParams.max) || (isSaleOpen() && balanceOf(beneficiary) + numberOfTokens <= _saleParams.max), \"Over max limit per address\");\n        require(totalSupply() + numberOfTokens <= MAX_ELEMENTS, \"Mint would exceed max supply\");\n        uint256 _price = (wl > 0 && isPreSaleOpen()) ? (PRICE - 0.2 ether) : PRICE;\n        _price = holder > 0 ? (_price * 7 / 10) : _price;\n        require(msg.value >= _price * numberOfTokens, \"Ether value below price\");\n\n        for(uint8 i = 0; i < numberOfTokens; i++){\n            uint mintId = totalSupply();\n            _safeMint(beneficiary, mintId);\n        }\n    }","after":"function mint(address beneficiary, uint8 numberOfTokens, uint8 holder, uint8 wl, bytes calldata signature ) external payable {\n        require(checkSigner(beneficiary, holder, wl, signature),\"Incorrect signature\");\n        require((wl > 0 && isPreSaleOpen()) || isSaleOpen(), \"Closed sale\");\n        require(numberOfTokens > 0, \"Number of items below 1\");\n        require((isPreSaleOpen() && balanceOf(beneficiary) + numberOfTokens <= _presaleParams.max) || (isSaleOpen() && balanceOf(beneficiary) + numberOfTokens <= _saleParams.max), \"Over max limit per address\");\n        require(totalSupply() + numberOfTokens <= MAX_ELEMENTS, \"Mint would exceed max supply\");\n        uint256 _price = (wl > 0 && isPreSaleOpen()) ? (PRICE - 0.2 ether) : PRICE;\n        _price = holder > 0 ? (_price * 7 / 10) : _price;\n        require(msg.value >= _price * numberOfTokens, \"Ether value below price\");\n\n        for(uint8 i = 0; i < numberOfTokens; i++){\n            uint mintId = totalSupply();\n            _safeMint(beneficiary, mintId);\n        }\n    }","contract":"SatoshisVision","time":0},{"type":"immutable-restrict-modification ","before":"address private _signer;","after":"address private immutable _signer;","contract":"SatoshisVision","time":0}]}