{"time":178,"results":[{"type":"external-function ","before":"function changeName(uint256 kaijuId, string memory newName) external kaijuOwner(kaijuId) {\r\n        bytes memory n = bytes(newName);\r\n        require(n.length > 0 && n.length < 25,                          \"Invalid name length\");\r\n        require(sha256(n) != sha256(bytes(kaijuData[kaijuId].name)),    \"New name is same as current name\");\r\n        \r\n        RWaste.burn(msg.sender, NAME_CHANGE_PRICE);\r\n        kaijuData[kaijuId].name = newName;\r\n        emit NameChanged(kaijuId, newName);\r\n    }","after":"function changeName(uint256 kaijuId, string calldata newName) external kaijuOwner(kaijuId) {\r\n        bytes memory n = bytes(newName);\r\n        require(n.length > 0 && n.length < 25,                          \"Invalid name length\");\r\n        require(sha256(n) != sha256(bytes(kaijuData[kaijuId].name)),    \"New name is same as current name\");\r\n        \r\n        RWaste.burn(msg.sender, NAME_CHANGE_PRICE);\r\n        kaijuData[kaijuId].name = newName;\r\n        emit NameChanged(kaijuId, newName);\r\n    }","contract":"KaijuKingz","time":0},{"type":"external-function ","before":"function changeBio(uint256 kaijuId, string memory newBio) external kaijuOwner(kaijuId) {\r\n        RWaste.burn(msg.sender, BIO_CHANGE_PRICE);\r\n        kaijuData[kaijuId].bio = newBio;\r\n        emit BioChanged(kaijuId, newBio);\r\n    }","after":"function changeBio(uint256 kaijuId, string calldata newBio) external kaijuOwner(kaijuId) {\r\n        RWaste.burn(msg.sender, BIO_CHANGE_PRICE);\r\n        kaijuData[kaijuId].bio = newBio;\r\n        emit BioChanged(kaijuId, newBio);\r\n    }","contract":"KaijuKingz","time":0},{"type":"external-function ","before":"function setBaseURI(string memory uri) public onlyOwner {\r\n        baseURI = uri;\r\n    }","after":"function setBaseURI(string calldata uri) public onlyOwner {\r\n        baseURI = uri;\r\n    }","contract":"KaijuKingz","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxSupply;","after":"uint256 public immutable maxSupply;","contract":"KaijuKingz","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public maxGenCount;","after":"uint256 public immutable maxGenCount;","contract":"KaijuKingz","time":1}]}