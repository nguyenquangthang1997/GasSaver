{"time":168,"results":[{"type":"external-function ","before":"function mintGrillz(uint _count, bytes32 hash, bytes memory signature, string memory nonce) external payable {\n        require(SALE_IS_ACTIVE, \"Sale not active\");\n        require(ENABLE_DIRECT_MINT || matchAddresSigner(hash, signature), \"Direct mint not allowed\");\n        require(ENABLE_DIRECT_MINT || !_usedNonces[nonce], \"Hash used\");\n        require(ENABLE_DIRECT_MINT || hashTransaction(_msgSender(), _count, nonce) == hash, \"Hash failed\");\n        require(_publicSaleMintCounts[_msgSender()].add(_count) <= LIMIT_PER_ACCOUNT, \"Exceeds available mints\");\n\n        _mintGrillz(_msgSender(), _count);\n\n        _publicSaleMintCounts[_msgSender()] += _count;\n        _usedNonces[nonce] = true;\n    }","after":"function mintGrillz(uint _count, bytes32 hash, bytes calldata signature, string calldata nonce) external payable {\n        require(SALE_IS_ACTIVE, \"Sale not active\");\n        require(ENABLE_DIRECT_MINT || matchAddresSigner(hash, signature), \"Direct mint not allowed\");\n        require(ENABLE_DIRECT_MINT || !_usedNonces[nonce], \"Hash used\");\n        require(ENABLE_DIRECT_MINT || hashTransaction(_msgSender(), _count, nonce) == hash, \"Hash failed\");\n        require(_publicSaleMintCounts[_msgSender()].add(_count) <= LIMIT_PER_ACCOUNT, \"Exceeds available mints\");\n\n        _mintGrillz(_msgSender(), _count);\n\n        _publicSaleMintCounts[_msgSender()] += _count;\n        _usedNonces[nonce] = true;\n    }","contract":"GrillzGang","time":0},{"type":"constant-restrict-modification  ","before":"uint public mintPrice = 60000000000000000;","after":"uint public constant mintPrice = 60000000000000000;","contract":"GrillzGang","time":0}]}