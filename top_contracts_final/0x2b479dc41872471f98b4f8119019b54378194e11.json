{"time":56,"results":[{"type":"external-function ","before":"function addNewRecipients(address[] memory _newRecipients, uint256[] memory _totalAmounts, bool isPresaleBuyer) external onlyMultiSigAdmin {\n        require(!isStartTimeSet || block.timestamp < startTime.add(INITIAL_LOCK_PERIOD), \"addNewRecipients: Cannot update the receipient after started\");\n\n        for (uint256 i = 0; i < _newRecipients.length; i++) {\n            addRecipient(_newRecipients[i], _totalAmounts[i], isPresaleBuyer);\n        }\n        \n        emit VestingSchedulesRegistered(_newRecipients, _totalAmounts);\n    }","after":"function addNewRecipients(address[] calldata _newRecipients, uint256[] calldata _totalAmounts, bool isPresaleBuyer) external onlyMultiSigAdmin {\n        require(!isStartTimeSet || block.timestamp < startTime.add(INITIAL_LOCK_PERIOD), \"addNewRecipients: Cannot update the receipient after started\");\n\n        for (uint256 i = 0; i < _newRecipients.length; i++) {\n            addRecipient(_newRecipients[i], _totalAmounts[i], isPresaleBuyer);\n        }\n        \n        emit VestingSchedulesRegistered(_newRecipients, _totalAmounts);\n    }","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"address private owner;","after":"address private immutable owner;","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"address private presaleContract;","after":"address private immutable presaleContract;","contract":"Vesting","time":0},{"type":"immutable-restrict-modification ","before":"address payable public multiSigAdmin;","after":"address payable public immutable multiSigAdmin;","contract":"Vesting","time":0}]}