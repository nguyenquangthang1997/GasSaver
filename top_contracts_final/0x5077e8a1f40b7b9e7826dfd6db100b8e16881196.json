{"time":17,"results":[{"type":"external-function ","before":"function claim(uint256 id, uint256 amount, address userAddress, bytes32[] memory merkleProof) public {\r\n        require(!isClaimed(id, userAddress), \"You've already claimed!\");\r\n\r\n        // Verify the merkle proof.\r\n        bytes32 node = keccak256(abi.encodePacked(id, amount, userAddress));\r\n        require(verify(merkleProof, _root, node), 'Invalid proof.');\r\n\r\n        _isClaimed[id][userAddress] = true;\r\n        \r\n        IinterleaveNFT(interleaveNFT).mint(userAddress, id, amount);\r\n\r\n    }","after":"function claim(uint256 id, uint256 amount, address userAddress, bytes32[] calldata merkleProof) public {\r\n        require(!isClaimed(id, userAddress), \"You've already claimed!\");\r\n\r\n        // Verify the merkle proof.\r\n        bytes32 node = keccak256(abi.encodePacked(id, amount, userAddress));\r\n        require(verify(merkleProof, _root, node), 'Invalid proof.');\r\n\r\n        _isClaimed[id][userAddress] = true;\r\n        \r\n        IinterleaveNFT(interleaveNFT).mint(userAddress, id, amount);\r\n\r\n    }","contract":"InterleaveClaims","time":0},{"type":"immutable-restrict-modification ","before":"address public owner;","after":"address public immutable owner;","contract":"InterleaveClaims","time":0}]}