{"time":109,"results":[{"type":"external-function ","before":"function mintWithWolf(uint256[] memory _ids) external {\n        require(!isPaused, \"mint: contract paused currently.\");\n        require(_tokenIds.current() + _ids.length <= maxToMint, \"mint: too much token to mint\");\n        require(address(cryptoWolvesClub) != address(0), \"mint: please set cryptoWolvesClub address\");\n        for(uint256 i = 0; i < _ids.length; i++){\n            require(!isCryptoWolvesClubUsed[_ids[i]], \"mint: cryptoWolvesClub id already minted\");\n            require(cryptoWolvesClub.ownerOf(_ids[i]) == _msgSender(), \"mint: you must be the owner of the nft currently\");\n            internalMint(_msgSender());\n            isCryptoWolvesClubUsed[_ids[i]] = true;\n        }\n    }","after":"function mintWithWolf(uint256[] calldata _ids) external {\n        require(!isPaused, \"mint: contract paused currently.\");\n        require(_tokenIds.current() + _ids.length <= maxToMint, \"mint: too much token to mint\");\n        require(address(cryptoWolvesClub) != address(0), \"mint: please set cryptoWolvesClub address\");\n        for(uint256 i = 0; i < _ids.length; i++){\n            require(!isCryptoWolvesClubUsed[_ids[i]], \"mint: cryptoWolvesClub id already minted\");\n            require(cryptoWolvesClub.ownerOf(_ids[i]) == _msgSender(), \"mint: you must be the owner of the nft currently\");\n            internalMint(_msgSender());\n            isCryptoWolvesClubUsed[_ids[i]] = true;\n        }\n    }","contract":"CompanionWolfClub","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner {\n        baseURI = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner {\n        baseURI = baseURI_;\n    }","contract":"CompanionWolfClub","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxToMint = 10000;","after":"uint256 public constant maxToMint = 10000;","contract":"CompanionWolfClub","time":0}]}