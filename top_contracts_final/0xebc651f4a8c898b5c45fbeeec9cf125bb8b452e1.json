{"time":161,"results":[{"type":"external-function ","before":"function setContractURI(string memory newURI) public onlyOwner {\n        _contractURI = newURI;\n    }","after":"function setContractURI(string calldata newURI) public onlyOwner {\n        _contractURI = newURI;\n    }","contract":"Vaccine","time":0},{"type":"external-function ","before":"function setURI(string memory newURI) public onlyOwner {\n        _setURI(newURI);\n    }","after":"function setURI(string calldata newURI) public onlyOwner {\n        _setURI(newURI);\n    }","contract":"Vaccine","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"Vaccine","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"Vaccine","time":0},{"type":"immutable-restrict-modification ","before":"address pork1984Address;","after":"address immutable pork1984Address;","contract":"Vaccine","time":0},{"type":"state-data-arrangement ","before":"\nuint8[] _vaccinesStrength = [0, 25, 50, 100];\nuint8[] _vaccinesProbability = [0, 25, 50, 100];\naddress pork1984Address;\nmapping(uint256 => uint8) _vaccinationProgress;\nuint8 constant maxVaccinationProgress = 100;","after":"uint8[] _vaccinesStrength = [0, 25, 50, 100];\nuint8[] _vaccinesProbability = [0, 25, 50, 100];\nmapping(uint256 => uint8) _vaccinationProgress;\naddress pork1984Address;\nuint8 constant maxVaccinationProgress = 100;\n","contract":"VaccineApply","time":0}]}