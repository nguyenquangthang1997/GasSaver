{"time":152,"results":[{"type":"external-function ","before":"function setImmutableIPFSBucket(string memory immutableIPFSBucket_) public onlyOwner {\n        require(bytes(_immutableIPFSBucket).length == 0, \"This IPFS bucket is immuable and can only be set once.\");\n        _immutableIPFSBucket = immutableIPFSBucket_;\n    }","after":"function setImmutableIPFSBucket(string calldata immutableIPFSBucket_) public onlyOwner {\n        require(bytes(_immutableIPFSBucket).length == 0, \"This IPFS bucket is immuable and can only be set once.\");\n        _immutableIPFSBucket = immutableIPFSBucket_;\n    }","contract":"FLUF","time":0},{"type":"external-function ","before":"function setMutableIPFSBucket(string memory mutableIPFSBucket_) public onlyOwner {\n        _mutableIPFSBucket = mutableIPFSBucket_;\n    }","after":"function setMutableIPFSBucket(string calldata mutableIPFSBucket_) public onlyOwner {\n        _mutableIPFSBucket = mutableIPFSBucket_;\n    }","contract":"FLUF","time":0},{"type":"external-function ","before":"function setTokenURI(string memory tokenUriBase_) public onlyOwner {\n        _tokenUriBase = tokenUriBase_;\n    }","after":"function setTokenURI(string calldata tokenUriBase_) public onlyOwner {\n        _tokenUriBase = tokenUriBase_;\n    }","contract":"FLUF","time":0},{"type":"external-function ","before":"function changeNameAndDescription(uint256 tokenId, string memory newName, string memory newDescription) public payable {\n        address owner = ERC721.ownerOf(tokenId);\n\n        require(\n            _msgSender() == owner,\n            \"This isn't your FLUF.\"\n        );\n\n        uint256 amountPaid = msg.value;\n\n        if(_nameChanged[tokenId]) {\n            require(amountPaid == RENAME_PRICE, \"It costs to create a new identity.\");\n        } else {\n            require(amountPaid == 0, \"First time's free my fluffy little friend.\");\n            _nameChanged[tokenId] = true;\n        }\n\n        emit NameAndDescriptionChanged(tokenId, newName, newDescription);\n    }","after":"function changeNameAndDescription(uint256 tokenId, string calldata newName, string calldata newDescription) public payable {\n        address owner = ERC721.ownerOf(tokenId);\n\n        require(\n            _msgSender() == owner,\n            \"This isn't your FLUF.\"\n        );\n\n        uint256 amountPaid = msg.value;\n\n        if(_nameChanged[tokenId]) {\n            require(amountPaid == RENAME_PRICE, \"It costs to create a new identity.\");\n        } else {\n            require(amountPaid == 0, \"First time's free my fluffy little friend.\");\n            _nameChanged[tokenId] = true;\n        }\n\n        emit NameAndDescriptionChanged(tokenId, newName, newDescription);\n    }","contract":"FLUF","time":0},{"type":"external-function ","before":"function authoriseFlufBatch(address[] memory humans, uint256 amountOfFlufs)\n        public\n        onlyOwner\n    {\n        for (uint8 i = 0; i < humans.length; i++) {\n            authoriseFluf(humans[i], amountOfFlufs);\n        }\n    }","after":"function authoriseFlufBatch(address[] calldata humans, uint256 amountOfFlufs)\n        public\n        onlyOwner\n    {\n        for (uint8 i = 0; i < humans.length; i++) {\n            authoriseFluf(humans[i], amountOfFlufs);\n        }\n    }","contract":"FLUF","time":0}]}