{"time":200,"results":[{"type":"state-data-arrangement ","before":"\nstring public _baseTokenURI;\nbytes32 internal keyHash;\nuint256 internal fee;\nbool public claimRunning = false;\nbool public mintStartIndexDrawn = false;\nuint256 public mintStartIndex;\nuint256 public BGANPUNKSV1CLAIMSTART = 0;\nuint256 public BGANPUNKSV2CLAIMSTART = 74;\nuint256 public GLICPIXV1CLAIMSTART = 11379;\nuint256 public DEVMINTSTART = 11416;\nuint256 public totalGLICPIX = 11500;\nstring public GLICPIXXXIMAGEPROVENANCEIPFSHASH = \"QmbmnyfNjuDoStWVpozx2GLpEbn4VJg7RWJwkMAJMQu1jv\";\nmapping (uint256 => uint256) public V1BASTARDIDs;\naddress public BGANPUNKSV1ADDRESS = 0x9126B817CCca682BeaA9f4EaE734948EE1166Af1;\naddress public BGANPUNKSV2ADDRESS = 0x31385d3520bCED94f77AaE104b406994D8F2168C;\naddress public GLICPIXV1ADDRESS = 0xba15Eb922FEb96D017e1B2ac0d6fF04044A611BB;","after":"string public _baseTokenURI;\nbytes32 internal keyHash;\nuint256 internal fee;\nuint256 public mintStartIndex;\nuint256 public BGANPUNKSV1CLAIMSTART = 0;\nuint256 public BGANPUNKSV2CLAIMSTART = 74;\nuint256 public GLICPIXV1CLAIMSTART = 11379;\nuint256 public DEVMINTSTART = 11416;\nuint256 public totalGLICPIX = 11500;\nstring public GLICPIXXXIMAGEPROVENANCEIPFSHASH = \"QmbmnyfNjuDoStWVpozx2GLpEbn4VJg7RWJwkMAJMQu1jv\";\nmapping (uint256 => uint256) public V1BASTARDIDs;\naddress public BGANPUNKSV1ADDRESS = 0x9126B817CCca682BeaA9f4EaE734948EE1166Af1;\naddress public BGANPUNKSV2ADDRESS = 0x31385d3520bCED94f77AaE104b406994D8F2168C;\naddress public GLICPIXV1ADDRESS = 0xba15Eb922FEb96D017e1B2ac0d6fF04044A611BB;\nbool public claimRunning = false;\nbool public mintStartIndexDrawn = false;\n","contract":"GLICPIXXXVER002","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","contract":"GLICPIXXXVER002","time":0},{"type":"external-function ","before":"function devMint_BATCH(uint256[] memory tokenIds , address _mintTo) public onlyOwner {\n        require(claimRunning && mintStartIndexDrawn);\n        for(uint i = 0; i<tokenIds.length;i++) {\n            uint tokenId = tokenIds[i];\n            require(tokenId < 84);\n            uint glicpixv2idBeingMinted = (tokenId + DEVMINTSTART + mintStartIndex) % totalGLICPIX;\n            _safeMint(_mintTo, glicpixv2idBeingMinted);\n            emit glicpixv2Claimed(CollectionToClaim.DEVMINT, tokenId, glicpixv2idBeingMinted, _mintTo);\n        }\n    }","after":"function devMint_BATCH(uint256[] calldata tokenIds , address _mintTo) public onlyOwner {\n        require(claimRunning && mintStartIndexDrawn);\n        for(uint i = 0; i<tokenIds.length;i++) {\n            uint tokenId = tokenIds[i];\n            require(tokenId < 84);\n            uint glicpixv2idBeingMinted = (tokenId + DEVMINTSTART + mintStartIndex) % totalGLICPIX;\n            _safeMint(_mintTo, glicpixv2idBeingMinted);\n            emit glicpixv2Claimed(CollectionToClaim.DEVMINT, tokenId, glicpixv2idBeingMinted, _mintTo);\n        }\n    }","contract":"GLICPIXXXVER002","time":0},{"type":"external-function ","before":"function mintGLICPIXV2_BATCH(CollectionToClaim _collection, uint256[] memory tokenIds) public {\n        \n        require(claimRunning && mintStartIndexDrawn);\n        require(tokenIds.length > 0 && tokenIds.length <= 30);\n\n        if(_collection == CollectionToClaim.BGANPUNKSV1) {\n            for(uint i = 0; i<tokenIds.length;i++) {\n                uint tokenId = tokenIds[i];\n                require(tokenId == 5389 || V1BASTARDIDs[tokenId] != 0);\n                require(ClaimFromERC721(BGANPUNKSV1ADDRESS).ownerOf(tokenId) == msg.sender);\n                uint glicpixv2idBeingMinted = (V1BASTARDIDs[tokenId] + BGANPUNKSV1CLAIMSTART + mintStartIndex) % totalGLICPIX;\n                _safeMint(msg.sender, glicpixv2idBeingMinted);\n                emit glicpixv2Claimed(_collection, tokenId, glicpixv2idBeingMinted, msg.sender);\n            }\n        }\n        else if (_collection == CollectionToClaim.BGANPUNKSV2) {\n            for(uint i = 0; i<tokenIds.length;i++) {\n                uint tokenId = tokenIds[i];\n                require(tokenId < 11305);\n                require(ClaimFromERC721(BGANPUNKSV2ADDRESS).ownerOf(tokenId) == msg.sender);\n                uint glicpixv2idBeingMinted = (tokenId + BGANPUNKSV2CLAIMSTART + mintStartIndex) % totalGLICPIX;\n                _safeMint(msg.sender, glicpixv2idBeingMinted);\n                emit glicpixv2Claimed(_collection, tokenId, glicpixv2idBeingMinted, msg.sender);\n            }\n        }\n        \n        else if (_collection == CollectionToClaim.GLICPIXV1) {\n            for(uint i = 0; i<tokenIds.length;i++) {\n                uint tokenId = tokenIds[i];\n                require(tokenId < 37);\n                require(ClaimFromERC721(GLICPIXV1ADDRESS).ownerOf(tokenId) == msg.sender);\n                uint glicpixv2idBeingMinted = (tokenId + GLICPIXV1CLAIMSTART + mintStartIndex) % totalGLICPIX;\n                _safeMint(msg.sender, glicpixv2idBeingMinted);\n                emit glicpixv2Claimed(_collection, tokenId, glicpixv2idBeingMinted, msg.sender);\n            }\n        }\n        \n        else {\n            revert();\n        }\n    \n    }","after":"function mintGLICPIXV2_BATCH(CollectionToClaim _collection, uint256[] calldata tokenIds) public {\n        \n        require(claimRunning && mintStartIndexDrawn);\n        require(tokenIds.length > 0 && tokenIds.length <= 30);\n\n        if(_collection == CollectionToClaim.BGANPUNKSV1) {\n            for(uint i = 0; i<tokenIds.length;i++) {\n                uint tokenId = tokenIds[i];\n                require(tokenId == 5389 || V1BASTARDIDs[tokenId] != 0);\n                require(ClaimFromERC721(BGANPUNKSV1ADDRESS).ownerOf(tokenId) == msg.sender);\n                uint glicpixv2idBeingMinted = (V1BASTARDIDs[tokenId] + BGANPUNKSV1CLAIMSTART + mintStartIndex) % totalGLICPIX;\n                _safeMint(msg.sender, glicpixv2idBeingMinted);\n                emit glicpixv2Claimed(_collection, tokenId, glicpixv2idBeingMinted, msg.sender);\n            }\n        }\n        else if (_collection == CollectionToClaim.BGANPUNKSV2) {\n            for(uint i = 0; i<tokenIds.length;i++) {\n                uint tokenId = tokenIds[i];\n                require(tokenId < 11305);\n                require(ClaimFromERC721(BGANPUNKSV2ADDRESS).ownerOf(tokenId) == msg.sender);\n                uint glicpixv2idBeingMinted = (tokenId + BGANPUNKSV2CLAIMSTART + mintStartIndex) % totalGLICPIX;\n                _safeMint(msg.sender, glicpixv2idBeingMinted);\n                emit glicpixv2Claimed(_collection, tokenId, glicpixv2idBeingMinted, msg.sender);\n            }\n        }\n        \n        else if (_collection == CollectionToClaim.GLICPIXV1) {\n            for(uint i = 0; i<tokenIds.length;i++) {\n                uint tokenId = tokenIds[i];\n                require(tokenId < 37);\n                require(ClaimFromERC721(GLICPIXV1ADDRESS).ownerOf(tokenId) == msg.sender);\n                uint glicpixv2idBeingMinted = (tokenId + GLICPIXV1CLAIMSTART + mintStartIndex) % totalGLICPIX;\n                _safeMint(msg.sender, glicpixv2idBeingMinted);\n                emit glicpixv2Claimed(_collection, tokenId, glicpixv2idBeingMinted, msg.sender);\n            }\n        }\n        \n        else {\n            revert();\n        }\n    \n    }","contract":"GLICPIXXXVER002","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 internal keyHash;","after":"bytes32 internal immutable keyHash;","contract":"GLICPIXXXVER002","time":1},{"type":"immutable-restrict-modification ","before":"uint256 internal fee;","after":"uint256 internal immutable fee;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public BGANPUNKSV1CLAIMSTART = 0;","after":"uint256 public constant BGANPUNKSV1CLAIMSTART = 0;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public BGANPUNKSV2CLAIMSTART = 74;","after":"uint256 public constant BGANPUNKSV2CLAIMSTART = 74;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public GLICPIXV1CLAIMSTART = 11379;","after":"uint256 public constant GLICPIXV1CLAIMSTART = 11379;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public DEVMINTSTART = 11416;","after":"uint256 public constant DEVMINTSTART = 11416;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public totalGLICPIX = 11500;","after":"uint256 public constant totalGLICPIX = 11500;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"string public GLICPIXXXIMAGEPROVENANCEIPFSHASH = \"QmbmnyfNjuDoStWVpozx2GLpEbn4VJg7RWJwkMAJMQu1jv\";","after":"string public constant GLICPIXXXIMAGEPROVENANCEIPFSHASH = \"QmbmnyfNjuDoStWVpozx2GLpEbn4VJg7RWJwkMAJMQu1jv\";","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"address public BGANPUNKSV1ADDRESS = 0x9126B817CCca682BeaA9f4EaE734948EE1166Af1;","after":"address public constant BGANPUNKSV1ADDRESS = 0x9126B817CCca682BeaA9f4EaE734948EE1166Af1;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"address public BGANPUNKSV2ADDRESS = 0x31385d3520bCED94f77AaE104b406994D8F2168C;","after":"address public constant BGANPUNKSV2ADDRESS = 0x31385d3520bCED94f77AaE104b406994D8F2168C;","contract":"GLICPIXXXVER002","time":1},{"type":"constant-restrict-modification  ","before":"address public GLICPIXV1ADDRESS = 0xba15Eb922FEb96D017e1B2ac0d6fF04044A611BB;","after":"address public constant GLICPIXV1ADDRESS = 0xba15Eb922FEb96D017e1B2ac0d6fF04044A611BB;","contract":"GLICPIXXXVER002","time":1}]}