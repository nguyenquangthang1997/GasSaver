{"time":74,"results":[{"type":"external-function ","before":"function depositRewards(Reward[] memory rewards, uint256 totalAmount) external onlyOwner returns (bool) {\n        require(totalAmount > 0, \"totalAmount is zero\");\n        require(rewards.length > 0, \"rewards can not be empty\");\n        require(token.transferFrom(_msgSender(), address(this), totalAmount), \"Transfer failed\");\n\n        uint256 accByRewards = 0;\n        for (uint256 i = 0; i < rewards.length; i++) {\n            Reward memory reward = rewards[i];\n            accByRewards += reward.amount;\n            beneficiaries[reward.beneficiary] += reward.amount;\n        }\n\n        require(accByRewards == totalAmount, \"total amount mismatch\");\n\n        return true;\n    }","after":"function depositRewards(Reward[] calldata rewards, uint256 totalAmount) external onlyOwner returns (bool) {\n        require(totalAmount > 0, \"totalAmount is zero\");\n        require(rewards.length > 0, \"rewards can not be empty\");\n        require(token.transferFrom(_msgSender(), address(this), totalAmount), \"Transfer failed\");\n\n        uint256 accByRewards = 0;\n        for (uint256 i = 0; i < rewards.length; i++) {\n            Reward memory reward = rewards[i];\n            accByRewards += reward.amount;\n            beneficiaries[reward.beneficiary] += reward.amount;\n        }\n\n        require(accByRewards == totalAmount, \"total amount mismatch\");\n\n        return true;\n    }","contract":"SmtDistributor","time":0}]}