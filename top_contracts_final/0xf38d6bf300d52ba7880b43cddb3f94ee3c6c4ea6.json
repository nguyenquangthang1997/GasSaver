{"time":155,"results":[{"type":"external-function ","before":"\n  function nameGlyph(uint256 tokenId, string memory name) public payable {\n    require(msg.value == PRICE_PER_NAME);\n    require(ownerOf(tokenId) == msg.sender);\n    require(block.number >= namingBlockStart && block.number <= namingBlockEnd);\n    names[tokenId] = name;\n    emit Named(tokenId, name);\n","after":"\n  function nameGlyph(uint256 tokenId, string calldata name) public payable {\n    require(msg.value == PRICE_PER_NAME);\n    require(ownerOf(tokenId) == msg.sender);\n    require(block.number >= namingBlockStart && block.number <= namingBlockEnd);\n    names[tokenId] = name;\n    emit Named(tokenId, name);\n","contract":"PixelGlyphs","time":0},{"type":"external-function ","before":"\n  function mintTo(\n    uint256[] memory seed,\n    uint256[] memory cSeed,\n    bytes32 uuid,\n    uint256 timestamp,\n    bytes memory sig,\n    address to\n  ) public onlyOwner {\n    _mintInternal(seed, cSeed, uuid, timestamp, sig, to);\n","after":"\n  function mintTo(\n    uint256[] calldata seed,\n    uint256[] calldata cSeed,\n    bytes32 uuid,\n    uint256 timestamp,\n    bytes calldata sig,\n    address to\n  ) public onlyOwner {\n    _mintInternal(seed, cSeed, uuid, timestamp, sig, to);\n","contract":"PixelGlyphs","time":0},{"type":"external-function ","before":"\n  function setBaseUri(string memory baseUri) public onlyOwner {\n    BASE_URI = baseUri;\n","after":"\n  function setBaseUri(string calldata baseUri) public onlyOwner {\n    BASE_URI = baseUri;\n","contract":"PixelGlyphs","time":0},{"type":"external-function ","before":"\n  function mint(\n    uint256[][] memory seeds,\n    uint256[][] memory cSeeds,\n    bytes32[] memory uuids,\n    uint256 timestamp,\n    bytes[] memory sigs\n  ) public payable {\n    require(seeds.length == cSeeds.length, \"PxG: Arrays do not match\");\n    require(uuids.length == seeds.length, \"PxG: Arrays do not match\");\n    require(sigs.length == seeds.length, \"PxG: Arrays do not match\");\n    require(msg.value == PRICE_PER_MINT * seeds.length, \"PxG: Incorrect value\");\n    require(block.timestamp <= timestamp + 6 hours);\n    for (uint256 i = 0; i < seeds.length; i++) {\n      _mintInternal(\n        seeds[i],\n        cSeeds[i],\n        uuids[i],\n        timestamp,\n        sigs[i],\n        msg.sender\n      );\n    }\n","after":"\n  function mint(\n    uint256[][] calldata seeds,\n    uint256[][] calldata cSeeds,\n    bytes32[] calldata uuids,\n    uint256 timestamp,\n    bytes[] calldata sigs\n  ) public payable {\n    require(seeds.length == cSeeds.length, \"PxG: Arrays do not match\");\n    require(uuids.length == seeds.length, \"PxG: Arrays do not match\");\n    require(sigs.length == seeds.length, \"PxG: Arrays do not match\");\n    require(msg.value == PRICE_PER_MINT * seeds.length, \"PxG: Incorrect value\");\n    require(block.timestamp <= timestamp + 6 hours);\n    for (uint256 i = 0; i < seeds.length; i++) {\n      _mintInternal(\n        seeds[i],\n        cSeeds[i],\n        uuids[i],\n        timestamp,\n        sigs[i],\n        msg.sender\n      );\n    }\n","contract":"PixelGlyphs","time":0},{"type":"constant-restrict-modification  ","before":"\n  uint256 spriteSize = ","after":"\n  uint256 constant spriteSize = ","contract":"PixelGlyphs","time":1},{"type":"constant-restrict-modification  ","before":"\n  uint256 public PRICE_PER_NAME = 0.0025 eth","after":"\n  uint256 public constant PRICE_PER_NAME = 0.0025 eth","contract":"PixelGlyphs","time":1}]}