{"time":81,"results":[{"type":"external-function ","before":"function claimPeriod(address recipient, uint256 period, uint256 balance, bytes32[] memory proof) external nonReentrant {\n        require(!claimed[period][recipient]);\n        require(verifyClaim(recipient, period, balance, proof), \"incorrect merkle proof\");\n\n        claimed[period][recipient] = true;\n        _disburse(recipient, balance);\n    }","after":"function claimPeriod(address recipient, uint256 period, uint256 balance, bytes32[] calldata proof) external nonReentrant {\n        require(!claimed[period][recipient]);\n        require(verifyClaim(recipient, period, balance, proof), \"incorrect merkle proof\");\n\n        claimed[period][recipient] = true;\n        _disburse(recipient, balance);\n    }","contract":"MerkleRedeem","time":0},{"type":"external-function ","before":"function claimPeriods(address recipient, Claim[] memory claims) external nonReentrant {\n        uint256 totalBalance = 0;\n        Claim memory claim ;\n\n        for(uint256 i = 0; i < claims.length; i++) {\n            claim = claims[i];\n\n            require(!claimed[claim.period][recipient]);\n            require(verifyClaim(recipient, claim.period, claim.balance, claim.proof), \"incorrect merkle proof\");\n\n            totalBalance = totalBalance.add(claim.balance);\n            claimed[claim.period][recipient] = true;\n        }\n\n        _disburse(recipient, totalBalance);\n    }","after":"function claimPeriods(address recipient, Claim[] calldata claims) external nonReentrant {\n        uint256 totalBalance = 0;\n        Claim memory claim ;\n\n        for(uint256 i = 0; i < claims.length; i++) {\n            claim = claims[i];\n\n            require(!claimed[claim.period][recipient]);\n            require(verifyClaim(recipient, claim.period, claim.balance, claim.proof), \"incorrect merkle proof\");\n\n            totalBalance = totalBalance.add(claim.balance);\n            claimed[claim.period][recipient] = true;\n        }\n\n        _disburse(recipient, totalBalance);\n    }","contract":"MerkleRedeem","time":0},{"type":"immutable-restrict-modification ","before":"address public emergencyRecipient;","after":"address public immutable emergencyRecipient;","contract":"MerkleRedeem","time":1}]}