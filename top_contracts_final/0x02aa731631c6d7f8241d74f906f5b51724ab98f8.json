{"time":156,"results":[{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        BearProvenance = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        BearProvenance = provenanceHash;\n    }","contract":"BearsOnTheBlock","time":0},{"type":"external-function ","before":"function setBaseURI(string memory uri) public onlyOwner {\n        baseURI = uri;\n    }","after":"function setBaseURI(string calldata uri) public onlyOwner {\n        baseURI = uri;\n    }","contract":"BearsOnTheBlock","time":0},{"type":"external-function ","before":"function mintNBears(uint256[] memory tokenIds) public {\n        require(saleIsActive, \"Sale must be active to mint a Bear\");\n        uint length = tokenIds.length;\n        require(length < MAX_BEARS_MINT, \"Cannot claim more than fifty bears at once\");\n        uint balance = botb.balanceOf(msg.sender);\n        require(balance >= length, \"Must hold at least as many Bulls as the number of Bears you intend to claim\");\n\n        for(uint i = 0; i < balance && i < length && i < MAX_BEARS_MINT; i++) {\n            require(totalSupply() < maxBears, \"Cannot exceed max supply of Bears.\");\n            uint tokenId = tokenIds[i];\n            require(botb.ownerOf(tokenId) == msg.sender, \"Must own the Bull for requested tokenId to claim a Bear\");\n            if (!_exists(tokenId)) {\n                _safeMint(msg.sender, tokenId);\n            }\n        }\n        trySetStartingIndexBlock();\n    }","after":"function mintNBears(uint256[] calldata tokenIds) public {\n        require(saleIsActive, \"Sale must be active to mint a Bear\");\n        uint length = tokenIds.length;\n        require(length < MAX_BEARS_MINT, \"Cannot claim more than fifty bears at once\");\n        uint balance = botb.balanceOf(msg.sender);\n        require(balance >= length, \"Must hold at least as many Bulls as the number of Bears you intend to claim\");\n\n        for(uint i = 0; i < balance && i < length && i < MAX_BEARS_MINT; i++) {\n            require(totalSupply() < maxBears, \"Cannot exceed max supply of Bears.\");\n            uint tokenId = tokenIds[i];\n            require(botb.ownerOf(tokenId) == msg.sender, \"Must own the Bull for requested tokenId to claim a Bear\");\n            if (!_exists(tokenId)) {\n                _safeMint(msg.sender, tokenId);\n            }\n        }\n        trySetStartingIndexBlock();\n    }","contract":"BearsOnTheBlock","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxBears;","after":"uint256 public immutable maxBears;","contract":"BearsOnTheBlock","time":1}]}