{"time":215,"results":[{"type":"external-function ","before":"function finaliseNearToEthTransfer(bytes memory proofData, uint64 proofBlockHeight)\n    external pausable (PAUSE_FINALISE_FROM_NEAR) {\n        ProofDecoder.ExecutionStatus memory status = _parseAndConsumeProof(proofData, proofBlockHeight);\n        BridgeResult memory result = _decodeBridgeResult(status.successValue);\n\n        _mint(result.recipient, result.amount);\n\n        emit NearToEthTransferFinalised(result.amount, result.recipient);\n    }","after":"function finaliseNearToEthTransfer(bytes calldata proofData, uint64 proofBlockHeight)\n    external pausable (PAUSE_FINALISE_FROM_NEAR) {\n        ProofDecoder.ExecutionStatus memory status = _parseAndConsumeProof(proofData, proofBlockHeight);\n        BridgeResult memory result = _decodeBridgeResult(status.successValue);\n\n        _mint(result.recipient, result.amount);\n\n        emit NearToEthTransferFinalised(result.amount, result.recipient);\n    }","contract":"eNear","time":0},{"type":"external-function ","before":"function transferToNear(uint256 _amount, string memory _nearReceiverAccountId)\n    external pausable (PAUSE_TRANSFER_TO_NEAR) {\n        _burn(msg.sender, _amount);\n        emit TransferToNearInitiated(msg.sender, _amount, _nearReceiverAccountId);\n    }","after":"function transferToNear(uint256 _amount, string calldata _nearReceiverAccountId)\n    external pausable (PAUSE_TRANSFER_TO_NEAR) {\n        _burn(msg.sender, _amount);\n        emit TransferToNearInitiated(msg.sender, _amount, _nearReceiverAccountId);\n    }","contract":"eNear","time":0},{"type":"external-function ","before":"function adminDelegatecall(address target, bytes memory data) public payable onlyAdmin returns (bytes memory) {\n        (bool success, bytes memory rdata) = target.delegatecall(data);\n        require(success);\n        return rdata;\n    }","after":"function adminDelegatecall(address target, bytes calldata data) public payable onlyAdmin returns (bytes memory) {\n        (bool success, bytes memory rdata) = target.delegatecall(data);\n        require(success);\n        return rdata;\n    }","contract":"eNear","time":0},{"type":"immutable-restrict-modification ","before":"bytes public nearConnector;","after":"bytes public immutable nearConnector;","contract":"eNear","time":1},{"type":"immutable-restrict-modification ","before":"uint64 public minBlockAcceptanceHeight;","after":"uint64 public immutable minBlockAcceptanceHeight;","contract":"eNear","time":1},{"type":"immutable-restrict-modification ","before":"address public admin;","after":"address public immutable admin;","contract":"eNear","time":1},{"type":"struct-data-arrangement ","before":"\nuint64 height\nbytes32 epoch_id\nbytes32 next_epoch_id\nbytes32 prev_state_root\nbytes32 outcome_root\nuint64 timestamp\nbytes32 next_bp_hash\nbytes32 block_merkle_root\nbytes32 hash","after":"bytes32 epoch_id\nbytes32 next_epoch_id\nbytes32 prev_state_root\nbytes32 outcome_root\nbytes32 next_bp_hash\nbytes32 block_merkle_root\nbytes32 hash\nuint64 height\nuint64 timestamp\n","contract":"NearDecoder","time":0}]}