{"time":164,"results":[{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"Sockz","time":0},{"type":"external-function ","before":"function multiMintWithToad(uint[] memory toadIds) public nonReentrant {\n        require(mintIsActive, \"Mint must be active to mint\");\n        for (uint i=0; i<toadIds.length; i++) {\n            require(toadContract.ownerOf(toadIds[i]) == msg.sender, \"Not the owner of this toad\");\n            require(!_exists(toadIds[i]), \"One of these toadz already has Sockz.\");\n            _safeMint(msg.sender, toadIds[i]);\n        }\n    }","after":"function multiMintWithToad(uint[] calldata toadIds) public nonReentrant {\n        require(mintIsActive, \"Mint must be active to mint\");\n        for (uint i=0; i<toadIds.length; i++) {\n            require(toadContract.ownerOf(toadIds[i]) == msg.sender, \"Not the owner of this toad\");\n            require(!_exists(toadIds[i]), \"One of these toadz already has Sockz.\");\n            _safeMint(msg.sender, toadIds[i]);\n        }\n    }","contract":"Sockz","time":0},{"type":"external-function ","before":"function multiClaimWithSockz(uint[] memory sockIds) public nonReentrant {\n        require(claimIsActive, \"Claim is not opened, please come back later.\");\n        for (uint i=0; i<sockIds.length; i++) {\n            require(ownerOf(sockIds[i]) == msg.sender, \"Not the owner of this sock\");\n\t\t\t_transfer(msg.sender, address(0), sockIds[i]);\n\t\t\temit Claim(msg.sender, sockIds[i]);\n        }\n    }","after":"function multiClaimWithSockz(uint[] calldata sockIds) public nonReentrant {\n        require(claimIsActive, \"Claim is not opened, please come back later.\");\n        for (uint i=0; i<sockIds.length; i++) {\n            require(ownerOf(sockIds[i]) == msg.sender, \"Not the owner of this sock\");\n\t\t\t_transfer(msg.sender, address(0), sockIds[i]);\n\t\t\temit Claim(msg.sender, sockIds[i]);\n        }\n    }","contract":"Sockz","time":0},{"type":"constant-restrict-modification  ","before":"address public toadAddress = 0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6;","after":"address public constant toadAddress = 0x1CB1A5e65610AEFF2551A50f76a87a7d3fB649C6;","contract":"Sockz","time":0}]}