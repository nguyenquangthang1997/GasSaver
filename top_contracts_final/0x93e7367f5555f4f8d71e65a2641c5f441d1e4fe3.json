{"time":85,"results":[{"type":"state-data-arrangement ","before":"\naddress admin_address;\nuint256 public totalEarned;\nuint256 public numOrders;\nuint256 public startOrderNum;\nuint32 public numProducts;\nbool public purchasesDisabled;\nuint256 public refund_percent;\nProductStruct[32] public products;\nAccessStruct[16] public accessProfiles;\nmapping(uint256 => OrderStruct) orders;","after":"uint256 public totalEarned;\nuint256 public numOrders;\nuint256 public startOrderNum;\nuint256 public refund_percent;\nProductStruct[32] public products;\nAccessStruct[16] public accessProfiles;\nmapping(uint256 => OrderStruct) orders;\naddress admin_address;\nuint32 public numProducts;\nbool public purchasesDisabled;\n","contract":"Vinyl","time":0},{"type":"struct-data-arrangement ","before":"\nuint32 state\nuint32 pid\nuint256 boostAmount\nuint256 paidAmount\naddress owner","after":"uint256 boostAmount\nuint256 paidAmount\naddress owner\nuint32 state\nuint32 pid\n","contract":"Vinyl","time":0},{"type":"external-function ","before":"function setShipped(uint32[] memory oids) public requireAdmin {\n    for (uint i=0;i<oids.length;i++) {\n      uint32 oid = oids[i];\n      if (oid >= numOrders) continue;\n      if(orders[oid].state != 0) continue;\n\n      //add amount paid plus differential boost amount to earned stack\n      totalEarned += orders[oid].paidAmount;\n      totalEarned += orders[oid].boostAmount;\n\n      orders[oid].state = 2; //finalize order\n      emit eShipped(oid);\n    }\n  }","after":"function setShipped(uint32[] calldata oids) public requireAdmin {\n    for (uint i=0;i<oids.length;i++) {\n      uint32 oid = oids[i];\n      if (oid >= numOrders) continue;\n      if(orders[oid].state != 0) continue;\n\n      //add amount paid plus differential boost amount to earned stack\n      totalEarned += orders[oid].paidAmount;\n      totalEarned += orders[oid].boostAmount;\n\n      orders[oid].state = 2; //finalize order\n      emit eShipped(oid);\n    }\n  }","contract":"Vinyl","time":0}]}