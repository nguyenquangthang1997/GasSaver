{"time":183,"results":[{"type":"de-morgan-condition ","before":"!publicSaleActive && !preSaleActive","after":"!(publicSaleActive && preSaleActive)","loc":{"start":{"line":256,"column":12},"end":{"line":256,"column":34}},"contract":"OKLetsApe","time":0},{"type":"de-morgan-condition ","before":"!publicSaleActive && !preSaleActive","after":"!(publicSaleActive && preSaleActive)","loc":{"start":{"line":277,"column":12},"end":{"line":277,"column":34}},"contract":"OKLetsApe","time":0},{"type":"external-function ","before":"function addToPresaleWhitelist(address[] memory _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      presaleWhitelist[_address] = true;\n    }\n  }","after":"function addToPresaleWhitelist(address[] calldata _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      presaleWhitelist[_address] = true;\n    }\n  }","contract":"OKLetsApe","time":0},{"type":"external-function ","before":"function removeFromPresaleWhitelist(address[] memory _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      presaleWhitelist[_address] = false;\n    }\n  }","after":"function removeFromPresaleWhitelist(address[] calldata _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      presaleWhitelist[_address] = false;\n    }\n  }","contract":"OKLetsApe","time":0},{"type":"external-function ","before":"function addToAuthorizedAddresses(address[] memory _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      authorizedAddresses[_address] = true;\n    }\n  }","after":"function addToAuthorizedAddresses(address[] calldata _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      authorizedAddresses[_address] = true;\n    }\n  }","contract":"OKLetsApe","time":0},{"type":"external-function ","before":"function removeFromAuthorizedAddresses(address[] memory _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      authorizedAddresses[_address] = false;\n    }\n  }","after":"function removeFromAuthorizedAddresses(address[] calldata _addresses)\n    external\n    onlyOwner\n  {\n    for (uint256 i = 0; i < _addresses.length; i++) {\n      address _address = _addresses[i];\n      authorizedAddresses[_address] = false;\n    }\n  }","contract":"OKLetsApe","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _uri) external onlyOwner {\n    baseTokenURI = _uri;\n  }","after":"function setBaseURI(string calldata _uri) external onlyOwner {\n    baseTokenURI = _uri;\n  }","contract":"OKLetsApe","time":0}]}