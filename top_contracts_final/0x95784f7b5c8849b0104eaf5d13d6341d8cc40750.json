{"time":173,"results":[{"type":"external-function ","before":"function setBaseTokenURI(string memory URI) public onlyOwner {\n    _baseTokenURI = URI;\n  }","after":"function setBaseTokenURI(string calldata URI) public onlyOwner {\n    _baseTokenURI = URI;\n  }","contract":"Swampverse","time":0},{"type":"external-function ","before":"function setMetadataURI(string memory URI) public onlyOwner {\n    metadataURI = URI;\n  }","after":"function setMetadataURI(string calldata URI) public onlyOwner {\n    metadataURI = URI;\n  }","contract":"Swampverse","time":0},{"type":"external-function ","before":"function presaleMint(bytes memory signature, uint256 amount)\n    public\n    payable\n    nonReentrant\n    isValidWhitelistSignature(signature)\n  {\n    require(presaleActive,                                         \"Presale has not started\");\n    require(msg.value == MINT_PRICE * amount,                      \"Invalid Ether amount sent\");\n    require(presaleMints[msg.sender] + amount <= PRESALE_MAX_MINT, \"Exceeds remaining presale balance\");\n\n    _mintAmount(amount, msg.sender);\n\n    presaleMints[msg.sender] += amount;\n    _presaleMinted += amount;\n  }","after":"function presaleMint(bytes calldata signature, uint256 amount)\n    public\n    payable\n    nonReentrant\n    isValidWhitelistSignature(signature)\n  {\n    require(presaleActive,                                         \"Presale has not started\");\n    require(msg.value == MINT_PRICE * amount,                      \"Invalid Ether amount sent\");\n    require(presaleMints[msg.sender] + amount <= PRESALE_MAX_MINT, \"Exceeds remaining presale balance\");\n\n    _mintAmount(amount, msg.sender);\n\n    presaleMints[msg.sender] += amount;\n    _presaleMinted += amount;\n  }","contract":"Swampverse","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 internal _LINK_KEY_HASH;","after":"bytes32 internal immutable _LINK_KEY_HASH;","contract":"Swampverse","time":0},{"type":"immutable-restrict-modification ","before":"uint256 internal _LINK_FEE;","after":"uint256 internal immutable _LINK_FEE;","contract":"Swampverse","time":0},{"type":"immutable-restrict-modification ","before":"address internal _team;","after":"address internal immutable _team;","contract":"Swampverse","time":0},{"type":"immutable-restrict-modification ","before":"\n\n  address internal _sig","after":"\n\n  address internal _sig","contract":"Swampverse","time":0},{"type":"state-data-arrangement ","before":"\nbytes32 internal _LINK_KEY_HASH;\nuint256 internal _LINK_FEE;\nuint256 internal _tokenIds;\nuint256 internal _reserved;\nuint256 internal _presaleMinted;\nuint256 internal _tokenOffset;\nstring internal _baseTokenURI;\naddress internal _team;\nuint256 constant public MAX_MINT = 10;\nuint256 constant public PRESALE_MAX_MINT = 3;\nuint256 constant public MINT_PRICE = 0.06 ether;\nuint256 constant public MAX_SUPPLY = 9600;\nuint256 constant public MAX_RESERVED = 100;\nstring constant public PROVENANCE_HASH = \"8016b8eee30dcaf2c61321cee08ccd0ae08657e3d150cbd49315e353b161cd6e\";\nbool public revealed;\nbool public presaleActive;\nbool public saleActive;\nstring public metadataURI;\nmapping(address => uint256) public presaleMints;","after":"bytes32 internal _LINK_KEY_HASH;\nuint256 internal _LINK_FEE;\nuint256 internal _tokenIds;\nuint256 internal _reserved;\nuint256 internal _presaleMinted;\nuint256 internal _tokenOffset;\nstring internal _baseTokenURI;\nuint256 constant public MAX_MINT = 10;\nuint256 constant public PRESALE_MAX_MINT = 3;\nuint256 constant public MINT_PRICE = 0.06 ether;\nuint256 constant public MAX_SUPPLY = 9600;\nuint256 constant public MAX_RESERVED = 100;\nstring constant public PROVENANCE_HASH = \"8016b8eee30dcaf2c61321cee08ccd0ae08657e3d150cbd49315e353b161cd6e\";\nstring public metadataURI;\nmapping(address => uint256) public presaleMints;\naddress internal _team;\nbool public revealed;\nbool public presaleActive;\nbool public saleActive;\n","contract":"SwampverseERC721","time":0}]}