{"time":222,"results":[{"type":"external-function ","before":"function blackListAddresses(address[] memory addrs) external onlyOwner returns (bool) {\n        for(uint256 i = 0; i < addrs.length; i++) {\n            _blackListAddr[addrs[i]] = true;\n        }\n        return true;\n    }","after":"function blackListAddresses(address[] calldata addrs) external onlyOwner returns (bool) {\n        for(uint256 i = 0; i < addrs.length; i++) {\n            _blackListAddr[addrs[i]] = true;\n        }\n        return true;\n    }","contract":"CaneInu","time":0},{"type":"external-function ","before":"function unblackListAddresses(address[] memory addrs) external onlyOwner returns (bool) {\n        for(uint256 i = 0; i < addrs.length; i++) {\n            _blackListAddr[addrs[i]] = false;\n        }\n        return true;\n    }","after":"function unblackListAddresses(address[] calldata addrs) external onlyOwner returns (bool) {\n        for(uint256 i = 0; i < addrs.length; i++) {\n            _blackListAddr[addrs[i]] = false;\n        }\n        return true;\n    }","contract":"CaneInu","time":0},{"type":"immutable-restrict-modification ","before":"address public uniswapV2Pair;","after":"address public immutable uniswapV2Pair;","contract":"CaneInu","time":0}]}