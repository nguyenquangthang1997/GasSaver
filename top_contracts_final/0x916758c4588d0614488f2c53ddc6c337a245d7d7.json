{"time":246,"results":[{"type":"state-data-arrangement ","before":"\nbool paused = true;\nbool unpausable;\nuint startTime;\nuint pauseTime;\nuint16 tokenCount;\nuint16 tokensGiven;\nuint16 constant TOKENS_GIVEAWAY = 200;\nuint constant PRICE_MINT = 0.08 ether;\nstring __uriBase;\nstring __uriSuffix;\nuint constant COOLDOWN = 10;\nuint16 constant TRANSACTION_LIMIT = 10;\nmapping(address => Reservation) reservations;\nmapping(address => uint8) whitelistReserveCount;\nuint8 constant WHITELIST_RESERVE_LIMIT = 2;\nuint constant PRESALE_LIMIT = 2000;\nuint presaleCount;\naddress trapContract;\naddress whitelist;\nuint16 constant SALE_MAX = 10000;\nuint16[4] mobTokenIds;\nuint16 constant TOTAL_MOB_COUNT = 500;\nuint constant MOB_OFFSET = 100000;\nbool mobReleased = false;\nbytes32 mobHash;\nmapping(address => uint256) internal balances;\nmapping (uint256 => address) internal allowance;\nmapping (address => mapping (address => bool)) internal authorised;\nmapping(uint256 => address) owners;\nuint[] tokens;\nmapping (bytes4 => bool) internal supportedInterfaces;","after":"uint startTime;\nuint pauseTime;\nuint constant PRICE_MINT = 0.08 ether;\nstring __uriBase;\nstring __uriSuffix;\nuint constant COOLDOWN = 10;\nmapping(address => Reservation) reservations;\nmapping(address => uint8) whitelistReserveCount;\nuint constant PRESALE_LIMIT = 2000;\nuint presaleCount;\nuint16[4] mobTokenIds;\nuint constant MOB_OFFSET = 100000;\nbytes32 mobHash;\nmapping(address => uint256) internal balances;\nmapping (uint256 => address) internal allowance;\nmapping (address => mapping (address => bool)) internal authorised;\nmapping(uint256 => address) owners;\nuint[] tokens;\nmapping (bytes4 => bool) internal supportedInterfaces;\naddress trapContract;\naddress whitelist;\nuint16 tokenCount;\nuint16 tokensGiven;\nuint16 constant TOKENS_GIVEAWAY = 200;\nuint16 constant TRANSACTION_LIMIT = 10;\nuint16 constant SALE_MAX = 10000;\nuint16 constant TOTAL_MOB_COUNT = 500;\nbool paused = true;\nbool unpausable;\nuint8 constant WHITELIST_RESERVE_LIMIT = 2;\nbool mobReleased = false;\n","contract":"MiniStayPuft","time":90},{"type":"external-function ","before":"function preReserve(bytes32[] memory merkleProof, uint8 _count) external payable{\r\n        require(!paused,\"paused\");\r\n        require(phase() == Phase.PreReserve,\"phase\");\r\n        require(msg.value >= PRICE_MINT * _count,\"PRICE_MINT\");\r\n        require(whitelistReserveCount[msg.sender] + _count <= WHITELIST_RESERVE_LIMIT,\"whitelistReserveCount\");\r\n        require(presaleCount + _count < PRESALE_LIMIT,\"PRESALE_LIMIT\");\r\n        require(GBAWhitelist(whitelist).isWhitelisted(merkleProof,msg.sender),\"whitelist\");\r\n\r\n        whitelistReserveCount[msg.sender] += _count;\r\n        presaleCount += _count;\r\n        _reserve(_count,msg.sender,true);\r\n    }","after":"function preReserve(bytes32[] calldata merkleProof, uint8 _count) external payable{\r\n        require(!paused,\"paused\");\r\n        require(phase() == Phase.PreReserve,\"phase\");\r\n        require(msg.value >= PRICE_MINT * _count,\"PRICE_MINT\");\r\n        require(whitelistReserveCount[msg.sender] + _count <= WHITELIST_RESERVE_LIMIT,\"whitelistReserveCount\");\r\n        require(presaleCount + _count < PRESALE_LIMIT,\"PRESALE_LIMIT\");\r\n        require(GBAWhitelist(whitelist).isWhitelisted(merkleProof,msg.sender),\"whitelist\");\r\n\r\n        whitelistReserveCount[msg.sender] += _count;\r\n        presaleCount += _count;\r\n        _reserve(_count,msg.sender,true);\r\n    }","contract":"MiniStayPuft","time":0},{"type":"external-function ","before":"function updateURI(string memory _uriBase, string memory _uriSuffix) public onlyOwner{\r\n        __uriBase   = _uriBase;\r\n        __uriSuffix = _uriSuffix;\r\n    }","after":"function updateURI(string calldata _uriBase, string calldata _uriSuffix) public onlyOwner{\r\n        __uriBase   = _uriBase;\r\n        __uriSuffix = _uriSuffix;\r\n    }","contract":"MiniStayPuft","time":0},{"type":"immutable-restrict-modification ","before":"address trapContract;","after":"address immutable trapContract;","contract":"MiniStayPuft","time":0},{"type":"immutable-restrict-modification ","before":"address whitelist;","after":"address immutable whitelist;","contract":"MiniStayPuft","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 merkleRoot;","after":"bytes32 immutable merkleRoot;","contract":"GBAWhitelist","time":0}]}