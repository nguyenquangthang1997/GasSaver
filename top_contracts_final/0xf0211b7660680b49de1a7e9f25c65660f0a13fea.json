{"time":121,"results":[{"type":"external-function ","before":"function createMotion(address _evmScriptFactory, bytes memory _evmScriptCallData)\n        external\n        whenNotPaused\n        returns (uint256 _newMotionId)\n    {\n        require(motions.length < motionsCountLimit, ERROR_MOTIONS_LIMIT_REACHED);\n\n        Motion storage newMotion = motions.push();\n        _newMotionId = ++lastMotionId;\n\n        newMotion.id = _newMotionId;\n        newMotion.creator = msg.sender;\n        newMotion.startDate = block.timestamp;\n        newMotion.snapshotBlock = block.number;\n        newMotion.duration = motionDuration;\n        newMotion.objectionsThreshold = objectionsThreshold;\n        newMotion.evmScriptFactory = _evmScriptFactory;\n        motionIndicesByMotionId[_newMotionId] = motions.length;\n\n        bytes memory evmScript =\n            _createEVMScript(_evmScriptFactory, msg.sender, _evmScriptCallData);\n        newMotion.evmScriptHash = keccak256(evmScript);\n\n        emit MotionCreated(\n            _newMotionId,\n            msg.sender,\n            _evmScriptFactory,\n            _evmScriptCallData,\n            evmScript\n        );\n    }","after":"function createMotion(address _evmScriptFactory, bytes calldata _evmScriptCallData)\n        external\n        whenNotPaused\n        returns (uint256 _newMotionId)\n    {\n        require(motions.length < motionsCountLimit, ERROR_MOTIONS_LIMIT_REACHED);\n\n        Motion storage newMotion = motions.push();\n        _newMotionId = ++lastMotionId;\n\n        newMotion.id = _newMotionId;\n        newMotion.creator = msg.sender;\n        newMotion.startDate = block.timestamp;\n        newMotion.snapshotBlock = block.number;\n        newMotion.duration = motionDuration;\n        newMotion.objectionsThreshold = objectionsThreshold;\n        newMotion.evmScriptFactory = _evmScriptFactory;\n        motionIndicesByMotionId[_newMotionId] = motions.length;\n\n        bytes memory evmScript =\n            _createEVMScript(_evmScriptFactory, msg.sender, _evmScriptCallData);\n        newMotion.evmScriptHash = keccak256(evmScript);\n\n        emit MotionCreated(\n            _newMotionId,\n            msg.sender,\n            _evmScriptFactory,\n            _evmScriptCallData,\n            evmScript\n        );\n    }","contract":"EasyTrack","time":0},{"type":"external-function ","before":"function enactMotion(uint256 _motionId, bytes memory _evmScriptCallData)\n        external\n        whenNotPaused\n    {\n        Motion storage motion = _getMotion(_motionId);\n        require(motion.startDate + motion.duration <= block.timestamp, ERROR_MOTION_NOT_PASSED);\n\n        address creator = motion.creator;\n        bytes32 evmScriptHash = motion.evmScriptHash;\n        address evmScriptFactory = motion.evmScriptFactory;\n\n        _deleteMotion(_motionId);\n        emit MotionEnacted(_motionId);\n\n        bytes memory evmScript = _createEVMScript(evmScriptFactory, creator, _evmScriptCallData);\n        require(evmScriptHash == keccak256(evmScript), ERROR_UNEXPECTED_EVM_SCRIPT);\n\n        evmScriptExecutor.executeEVMScript(evmScript);\n    }","after":"function enactMotion(uint256 _motionId, bytes calldata _evmScriptCallData)\n        external\n        whenNotPaused\n    {\n        Motion storage motion = _getMotion(_motionId);\n        require(motion.startDate + motion.duration <= block.timestamp, ERROR_MOTION_NOT_PASSED);\n\n        address creator = motion.creator;\n        bytes32 evmScriptHash = motion.evmScriptHash;\n        address evmScriptFactory = motion.evmScriptFactory;\n\n        _deleteMotion(_motionId);\n        emit MotionEnacted(_motionId);\n\n        bytes memory evmScript = _createEVMScript(evmScriptFactory, creator, _evmScriptCallData);\n        require(evmScriptHash == keccak256(evmScript), ERROR_UNEXPECTED_EVM_SCRIPT);\n\n        evmScriptExecutor.executeEVMScript(evmScript);\n    }","contract":"EasyTrack","time":0},{"type":"external-function ","before":"function cancelMotions(uint256[] memory _motionIds) external onlyRole(CANCEL_ROLE) {\n        for (uint256 i = 0; i < _motionIds.length; ++i) {\n            if (motionIndicesByMotionId[_motionIds[i]] > 0) {\n                _deleteMotion(_motionIds[i]);\n                emit MotionCanceled(_motionIds[i]);\n            }\n        }\n    }","after":"function cancelMotions(uint256[] calldata _motionIds) external onlyRole(CANCEL_ROLE) {\n        for (uint256 i = 0; i < _motionIds.length; ++i) {\n            if (motionIndicesByMotionId[_motionIds[i]] > 0) {\n                _deleteMotion(_motionIds[i]);\n                emit MotionCanceled(_motionIds[i]);\n            }\n        }\n    }","contract":"EasyTrack","time":0},{"type":"external-function ","before":"function addEVMScriptFactory(address _evmScriptFactory, bytes memory _permissions)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(_permissions.isValidPermissions(), \"INVALID_PERMISSIONS\");\n        require(!_isEVMScriptFactory(_evmScriptFactory), \"EVM_SCRIPT_FACTORY_ALREADY_ADDED\");\n        evmScriptFactories.push(_evmScriptFactory);\n        evmScriptFactoryIndices[_evmScriptFactory] = evmScriptFactories.length;\n        evmScriptFactoryPermissions[_evmScriptFactory] = _permissions;\n        emit EVMScriptFactoryAdded(_evmScriptFactory, _permissions);\n    }","after":"function addEVMScriptFactory(address _evmScriptFactory, bytes calldata _permissions)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(_permissions.isValidPermissions(), \"INVALID_PERMISSIONS\");\n        require(!_isEVMScriptFactory(_evmScriptFactory), \"EVM_SCRIPT_FACTORY_ALREADY_ADDED\");\n        evmScriptFactories.push(_evmScriptFactory);\n        evmScriptFactoryIndices[_evmScriptFactory] = evmScriptFactories.length;\n        evmScriptFactoryPermissions[_evmScriptFactory] = _permissions;\n        emit EVMScriptFactoryAdded(_evmScriptFactory, _permissions);\n    }","contract":"EasyTrack","time":0}]}