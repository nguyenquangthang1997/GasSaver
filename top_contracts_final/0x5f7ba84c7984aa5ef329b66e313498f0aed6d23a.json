{"time":118,"results":[{"type":"external-function ","before":"function stakeByIds(uint256[] memory tokenIds) public {\r\n        require(\r\n            stakerToTokenIds[msg.sender].length + tokenIds.length <=\r\n                MAX_WALLET_STAKED,\r\n            \"Must have less than 31 mice staked!\"\r\n        );\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(\r\n                IERC721(anonymiceAddress).ownerOf(tokenIds[i]) == msg.sender &&\r\n                    tokenIdToStaker[tokenIds[i]] == nullAddress,\r\n                \"Token must be stakable by you!\"\r\n            );\r\n\r\n            IERC721(anonymiceAddress).transferFrom(\r\n                msg.sender,\r\n                address(this),\r\n                tokenIds[i]\r\n            );\r\n\r\n            stakerToTokenIds[msg.sender].push(tokenIds[i]);\r\n\r\n            tokenIdToTimeStamp[tokenIds[i]] = block.timestamp;\r\n            tokenIdToStaker[tokenIds[i]] = msg.sender;\r\n        }\r\n    }","after":"function stakeByIds(uint256[] calldata tokenIds) public {\r\n        require(\r\n            stakerToTokenIds[msg.sender].length + tokenIds.length <=\r\n                MAX_WALLET_STAKED,\r\n            \"Must have less than 31 mice staked!\"\r\n        );\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(\r\n                IERC721(anonymiceAddress).ownerOf(tokenIds[i]) == msg.sender &&\r\n                    tokenIdToStaker[tokenIds[i]] == nullAddress,\r\n                \"Token must be stakable by you!\"\r\n            );\r\n\r\n            IERC721(anonymiceAddress).transferFrom(\r\n                msg.sender,\r\n                address(this),\r\n                tokenIds[i]\r\n            );\r\n\r\n            stakerToTokenIds[msg.sender].push(tokenIds[i]);\r\n\r\n            tokenIdToTimeStamp[tokenIds[i]] = block.timestamp;\r\n            tokenIdToStaker[tokenIds[i]] = msg.sender;\r\n        }\r\n    }","contract":"Cheeth","time":0},{"type":"external-function ","before":"function unstakeByIds(uint256[] memory tokenIds) public {\r\n        uint256 totalRewards = 0;\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(\r\n                tokenIdToStaker[tokenIds[i]] == msg.sender,\r\n                \"Message Sender was not original staker!\"\r\n            );\r\n\r\n            IERC721(anonymiceAddress).transferFrom(\r\n                address(this),\r\n                msg.sender,\r\n                tokenIds[i]\r\n            );\r\n\r\n            totalRewards =\r\n                totalRewards +\r\n                ((block.timestamp - tokenIdToTimeStamp[tokenIds[i]]) *\r\n                    EMISSIONS_RATE);\r\n\r\n            removeTokenIdFromStaker(msg.sender, tokenIds[i]);\r\n\r\n            tokenIdToStaker[tokenIds[i]] = nullAddress;\r\n        }\r\n\r\n        _mint(msg.sender, totalRewards);\r\n    }","after":"function unstakeByIds(uint256[] calldata tokenIds) public {\r\n        uint256 totalRewards = 0;\r\n\r\n        for (uint256 i = 0; i < tokenIds.length; i++) {\r\n            require(\r\n                tokenIdToStaker[tokenIds[i]] == msg.sender,\r\n                \"Message Sender was not original staker!\"\r\n            );\r\n\r\n            IERC721(anonymiceAddress).transferFrom(\r\n                address(this),\r\n                msg.sender,\r\n                tokenIds[i]\r\n            );\r\n\r\n            totalRewards =\r\n                totalRewards +\r\n                ((block.timestamp - tokenIdToTimeStamp[tokenIds[i]]) *\r\n                    EMISSIONS_RATE);\r\n\r\n            removeTokenIdFromStaker(msg.sender, tokenIds[i]);\r\n\r\n            tokenIdToStaker[tokenIds[i]] = nullAddress;\r\n        }\r\n\r\n        _mint(msg.sender, totalRewards);\r\n    }","contract":"Cheeth","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_WALLET_STAKED = 10;","after":"uint256 public constant MAX_WALLET_STAKED = 10;","contract":"Cheeth","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public EMISSIONS_RATE = 11574070000000;","after":"uint256 public constant EMISSIONS_RATE = 11574070000000;","contract":"Cheeth","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public CLAIM_END_TIME = 1641013200;","after":"uint256 public constant CLAIM_END_TIME = 1641013200;","contract":"Cheeth","time":1},{"type":"constant-restrict-modification  ","before":"address nullAddress = 0x0000000000000000000000000000000000000000;","after":"address constant nullAddress = 0x0000000000000000000000000000000000000000;","contract":"Cheeth","time":1}]}