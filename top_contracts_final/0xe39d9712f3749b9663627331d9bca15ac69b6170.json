{"time":50,"results":[{"type":"external-function ","before":"function claimAll(address[] memory _lp, address[] memory _adapter)\n        public\n    {\n        require(_lp.length <= max, \"Claimable#claimAll: incorrect length\");\n        require(_lp.length == _adapter.length, \"Claimable#claimAll: incorrect len\");\n        for (uint256 i = 0; i < _lp.length; i++) {\n            claim(_lp[i], _adapter[i]);\n        }\n    }","after":"function claimAll(address[] calldata _lp, address[] calldata _adapter)\n        public\n    {\n        require(_lp.length <= max, \"Claimable#claimAll: incorrect length\");\n        require(_lp.length == _adapter.length, \"Claimable#claimAll: incorrect len\");\n        for (uint256 i = 0; i < _lp.length; i++) {\n            claim(_lp[i], _adapter[i]);\n        }\n    }","contract":"Claimable","time":0},{"type":"external-function ","before":"function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }","after":"function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }","contract":"Claimable","time":0},{"type":"external-function ","before":"function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }","after":"function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }","contract":"Claimable","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public max;","after":"uint256 public immutable max;","contract":"Claimable","time":0}]}