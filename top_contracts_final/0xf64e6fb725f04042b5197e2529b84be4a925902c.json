{"time":168,"results":[{"type":"external-function ","before":"function setURI(string memory newTokenURI, uint256 tokenId) public onlyOwner {\n        tokenURI[tokenId] = newTokenURI;\n    }","after":"function setURI(string calldata newTokenURI, uint256 tokenId) public onlyOwner {\n        tokenURI[tokenId] = newTokenURI;\n    }","contract":"ZenAcademy","time":0},{"type":"external-function ","before":"function setGlobalURI(string memory newTokenURI) public onlyOwner {\n        _setURI(newTokenURI);\n    }","after":"function setGlobalURI(string calldata newTokenURI) public onlyOwner {\n        _setURI(newTokenURI);\n    }","contract":"ZenAcademy","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public override {\n        require(amount > 0, \"AMOUNT_CANNOT_BE_ZERO\");\n        return super.safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public override {\n        require(amount > 0, \"AMOUNT_CANNOT_BE_ZERO\");\n        return super.safeTransferFrom(from, to, id, amount, data);\n    }","contract":"ZenAcademy","time":0},{"type":"external-function ","before":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","after":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","contract":"ZenAcademy","time":0},{"type":"external-function ","before":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","after":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","contract":"ZenAcademy","time":0}]}