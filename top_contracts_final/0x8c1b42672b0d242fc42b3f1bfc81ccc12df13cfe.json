{"time":131,"results":[{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) public onlyOwner {\n    baseURI = newBaseURI;\n  }","after":"function setBaseURI(string calldata newBaseURI) public onlyOwner {\n    baseURI = newBaseURI;\n  }","contract":"SeeNoEvilMonkeyArt","time":0},{"type":"external-function ","before":"function addToWhitelistMany(address[] memory addrs) public onlyOwner {\n    for (uint256 i = 0; i < addrs.length; i++) {\n      whitelist[addrs[i]] = true;\n    }\n  }","after":"function addToWhitelistMany(address[] calldata addrs) public onlyOwner {\n    for (uint256 i = 0; i < addrs.length; i++) {\n      whitelist[addrs[i]] = true;\n    }\n  }","contract":"SeeNoEvilMonkeyArt","time":0},{"type":"external-function ","before":"function giveAwayMany(address[] memory addresses, uint256[] memory amounts)\n    external\n    onlyOwner\n  {\n    require(\n      addresses.length == amounts.length,\n      \"Addresses and amounts doesn't match\"\n    );\n\n    for (uint256 i = 0; i < addresses.length; i++) {\n      _giveAway(addresses[i], amounts[i]);\n    }\n  }","after":"function giveAwayMany(address[] calldata addresses, uint256[] calldata amounts)\n    external\n    onlyOwner\n  {\n    require(\n      addresses.length == amounts.length,\n      \"Addresses and amounts doesn't match\"\n    );\n\n    for (uint256 i = 0; i < addresses.length; i++) {\n      _giveAway(addresses[i], amounts[i]);\n    }\n  }","contract":"SeeNoEvilMonkeyArt","time":0}]}