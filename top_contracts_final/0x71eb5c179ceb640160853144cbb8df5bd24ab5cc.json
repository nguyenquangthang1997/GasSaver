{"time":113,"results":[{"type":"state-data-arrangement ","before":"\nstring public constant name = \"ExpansionPhunks\";\nstring public constant symbol = \"PHUNX\";\nuint32 public totalSupply = 0;\nuint256 public constant phunkPrice = 0.02 ether;\nuint256 public constant bulkPrice = 0.015 ether;\nuint32 public saleStart = 1640894400;\nuint32 public constant startSupply = 10000;\nuint32 public maxSupply = 10000;\naddress private wallet1 = 0xD44F85aA20b03cc773309f10d67cC4eaB0BD26a6;\naddress private wallet2 = 0xB9e1cc664a0140953c2512f57BCd36Bb92c2eEf6;","after":"string public constant name = \"ExpansionPhunks\";\nstring public constant symbol = \"PHUNX\";\nuint256 public constant phunkPrice = 0.02 ether;\nuint256 public constant bulkPrice = 0.015 ether;\naddress private wallet1 = 0xD44F85aA20b03cc773309f10d67cC4eaB0BD26a6;\naddress private wallet2 = 0xB9e1cc664a0140953c2512f57BCd36Bb92c2eEf6;\nuint32 public totalSupply = 0;\nuint32 public saleStart = 1640894400;\nuint32 public constant startSupply = 10000;\nuint32 public maxSupply = 10000;\n","contract":"ExpansionPhunks","time":0},{"type":"external-function ","before":"function setURI(string memory uri) public onlyOwner {\n        _setURI(uri);\n    }","after":"function setURI(string calldata uri) public onlyOwner {\n        _setURI(uri);\n    }","contract":"ExpansionPhunks","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"ExpansionPhunks","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"ExpansionPhunks","time":0},{"type":"constant-restrict-modification  ","before":"address private wallet1 = 0xD44F85aA20b03cc773309f10d67cC4eaB0BD26a6;","after":"address private constant wallet1 = 0xD44F85aA20b03cc773309f10d67cC4eaB0BD26a6;","contract":"ExpansionPhunks","time":1},{"type":"constant-restrict-modification  ","before":"address private wallet2 = 0xB9e1cc664a0140953c2512f57BCd36Bb92c2eEf6;","after":"address private constant wallet2 = 0xB9e1cc664a0140953c2512f57BCd36Bb92c2eEf6;","contract":"ExpansionPhunks","time":1}]}