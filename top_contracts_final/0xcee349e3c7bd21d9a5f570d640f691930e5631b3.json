{"time":172,"results":[{"type":"struct-data-arrangement ","before":"\nstring name\nstring description\nuint256 pricePerTokenInWei\nuint256 invocations\nuint256 maxInvocations\nmapping(uint256 => string) scripts\nuint256 scriptCount\nbool isSaleActive\nbool isClaimActive\nstring communityHash\nstring traitScript\nstring provenance\nbytes32 merkleRoot\nbool isAllowListActive\nstring projectBaseURI\nmapping(address => uint) _allowListNumMinted","after":"string name\nstring description\nuint256 pricePerTokenInWei\nuint256 invocations\nuint256 maxInvocations\nmapping(uint256 => string) scripts\nuint256 scriptCount\nstring communityHash\nstring traitScript\nstring provenance\nbytes32 merkleRoot\nstring projectBaseURI\nmapping(address => uint) _allowListNumMinted\nbool isSaleActive\nbool isClaimActive\nbool isAllowListActive\n","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function mintAllowList(uint256 _projectId, uint numberOfTokens, bytes32[] memory merkleProof) external payable nonReentrant callerIsUser{\n        require(projects[_projectId].isAllowListActive, \"Allow list is not active\");\n        require(onProjectAllowList(_projectId, msg.sender, merkleProof), \"Not on allow list\");\n        require(numberOfTokens <= MAX_ALLOWLIST_MINT - projects[_projectId]._allowListNumMinted[msg.sender], \"Exceeded max available to purchase\");\n        require(projects[_projectId].invocations + numberOfTokens <= projects[_projectId].maxInvocations, \"Purchase would exceed max tokens\");\n        require(projects[_projectId].pricePerTokenInWei * numberOfTokens <= msg.value, \"Ether value sent is not correct\");\n\n        projects[_projectId]._allowListNumMinted[msg.sender] += numberOfTokens;\n        for (uint i = 0; i < numberOfTokens; i++) {\n            uint256 tokenId = (_projectId * ONE_MILLION) + projects[_projectId].invocations;\n            projects[_projectId].invocations = projects[_projectId].invocations + 1;\n            _mintToken(msg.sender, tokenId, _projectId);\n            tokenIdToProjectId[tokenId] = _projectId;\n        }\n    }","after":"function mintAllowList(uint256 _projectId, uint numberOfTokens, bytes32[] calldata merkleProof) external payable nonReentrant callerIsUser{\n        require(projects[_projectId].isAllowListActive, \"Allow list is not active\");\n        require(onProjectAllowList(_projectId, msg.sender, merkleProof), \"Not on allow list\");\n        require(numberOfTokens <= MAX_ALLOWLIST_MINT - projects[_projectId]._allowListNumMinted[msg.sender], \"Exceeded max available to purchase\");\n        require(projects[_projectId].invocations + numberOfTokens <= projects[_projectId].maxInvocations, \"Purchase would exceed max tokens\");\n        require(projects[_projectId].pricePerTokenInWei * numberOfTokens <= msg.value, \"Ether value sent is not correct\");\n\n        projects[_projectId]._allowListNumMinted[msg.sender] += numberOfTokens;\n        for (uint i = 0; i < numberOfTokens; i++) {\n            uint256 tokenId = (_projectId * ONE_MILLION) + projects[_projectId].invocations;\n            projects[_projectId].invocations = projects[_projectId].invocations + 1;\n            _mintToken(msg.sender, tokenId, _projectId);\n            tokenIdToProjectId[tokenId] = _projectId;\n        }\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function addProject(\n        uint256 _pricePerTokenInWei,\n        uint256 _mintVolume,\n        string memory _name,\n        string memory _description\n    ) external onlyOwner {\n        uint256 projectId = nextProjectId;\n        projects[projectId].pricePerTokenInWei = _pricePerTokenInWei;\n        projects[projectId].isSaleActive = false;\n        projects[projectId].isClaimActive = false;\n        projects[projectId].isAllowListActive = false;\n        projects[projectId].invocations = PARENT_SUPPLY;\n        projects[projectId].maxInvocations = _mintVolume;\n        projects[projectId].name = _name;\n        projects[projectId].description = _description;\n        nextProjectId = nextProjectId + 1;\n    }","after":"function addProject(\n        uint256 _pricePerTokenInWei,\n        uint256 _mintVolume,\n        string calldata _name,\n        string calldata _description\n    ) external onlyOwner {\n        uint256 projectId = nextProjectId;\n        projects[projectId].pricePerTokenInWei = _pricePerTokenInWei;\n        projects[projectId].isSaleActive = false;\n        projects[projectId].isClaimActive = false;\n        projects[projectId].isAllowListActive = false;\n        projects[projectId].invocations = PARENT_SUPPLY;\n        projects[projectId].maxInvocations = _mintVolume;\n        projects[projectId].name = _name;\n        projects[projectId].description = _description;\n        nextProjectId = nextProjectId + 1;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setProjectName(uint256 _projectId, string memory _projectName) external onlyOwner {\n        projects[_projectId].name = _projectName;\n    }","after":"function setProjectName(uint256 _projectId, string calldata _projectName) external onlyOwner {\n        projects[_projectId].name = _projectName;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function addLibraryScript(string memory _script) external onlyOwner {\n        libraryScripts[libraryScriptCount] = _script;\n        libraryScriptCount = libraryScriptCount + 1;\n    }","after":"function addLibraryScript(string calldata _script) external onlyOwner {\n        libraryScripts[libraryScriptCount] = _script;\n        libraryScriptCount = libraryScriptCount + 1;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setLibraryScript(uint256 _scriptId, string memory _script) external onlyOwner {\n        require(_scriptId < libraryScriptCount, \"scriptId out of range\");\n        libraryScripts[_scriptId] = _script;\n    }","after":"function setLibraryScript(uint256 _scriptId, string calldata _script) external onlyOwner {\n        require(_scriptId < libraryScriptCount, \"scriptId out of range\");\n        libraryScripts[_scriptId] = _script;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function addProjectScript(uint256 _projectId, string memory _script) external onlyOwner {\n        projects[_projectId].scripts[projects[_projectId].scriptCount] = _script;\n        projects[_projectId].scriptCount = projects[_projectId].scriptCount + 1;\n    }","after":"function addProjectScript(uint256 _projectId, string calldata _script) external onlyOwner {\n        projects[_projectId].scripts[projects[_projectId].scriptCount] = _script;\n        projects[_projectId].scriptCount = projects[_projectId].scriptCount + 1;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setProjectScript(\n        uint256 _projectId,\n        uint256 _scriptId,\n        string memory _script\n    ) external onlyOwner {\n        require(_scriptId < projects[_projectId].scriptCount, 'scriptId out of range');\n        projects[_projectId].scripts[_scriptId] = _script;\n    }","after":"function setProjectScript(\n        uint256 _projectId,\n        uint256 _scriptId,\n        string calldata _script\n    ) external onlyOwner {\n        require(_scriptId < projects[_projectId].scriptCount, 'scriptId out of range');\n        projects[_projectId].scripts[_scriptId] = _script;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setProjectCommunityHash(uint256 _projectId, string memory _projectCommunityHash) external onlyOwner {\n        projects[_projectId].communityHash = _projectCommunityHash;\n    }","after":"function setProjectCommunityHash(uint256 _projectId, string calldata _projectCommunityHash) external onlyOwner {\n        projects[_projectId].communityHash = _projectCommunityHash;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setProjectProvenanceHash(uint256 _projectId, string memory _provenance) public onlyOwner {\n        projects[_projectId].provenance = _provenance;\n    }","after":"function setProjectProvenanceHash(uint256 _projectId, string calldata _provenance) public onlyOwner {\n        projects[_projectId].provenance = _provenance;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setProjectTraitScript(uint256 _projectId, string memory _projectTraitScript) external onlyOwner {\n        projects[_projectId].traitScript = _projectTraitScript;\n    }","after":"function setProjectTraitScript(uint256 _projectId, string calldata _projectTraitScript) external onlyOwner {\n        projects[_projectId].traitScript = _projectTraitScript;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setProjectBaseURI(uint256 _projectId, string memory _newBaseURI) external onlyOwner {\n        projects[_projectId].projectBaseURI = _newBaseURI;\n    }","after":"function setProjectBaseURI(uint256 _projectId, string calldata _newBaseURI) external onlyOwner {\n        projects[_projectId].projectBaseURI = _newBaseURI;\n    }","contract":"DegenArtClub","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner {\n        _baseURIextended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner {\n        _baseURIextended = baseURI_;\n    }","contract":"DegenArtClub","time":0}]}