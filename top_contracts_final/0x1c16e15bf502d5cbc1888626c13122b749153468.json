{"time":600,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public constant GRAILZ_SUPPLY = 10000;\nuint256 public constant grailzPrice = 0.04 ether;\nuint256 public constant whitelistPrice = 0.01 ether;\nuint256 public constant mintMax = 11;\nstring public baseTokenURI;\nbool private isMintOpen = false;\nmapping(address => uint256) private minted;\nmapping(address => bool) private whitelistedAccounts;\nstring public GRAILZ_PROVENANCE;\nuint256 public startingIndexBlock;\nuint256 public startingIndex;\naddress private _accounting;\naddress public proxyRegistryAddress;\nmapping(address => bool) public projectProxy;","after":"uint256 public constant GRAILZ_SUPPLY = 10000;\nuint256 public constant grailzPrice = 0.04 ether;\nuint256 public constant whitelistPrice = 0.01 ether;\nuint256 public constant mintMax = 11;\nstring public baseTokenURI;\nmapping(address => uint256) private minted;\nmapping(address => bool) private whitelistedAccounts;\nstring public GRAILZ_PROVENANCE;\nuint256 public startingIndexBlock;\nuint256 public startingIndex;\nmapping(address => bool) public projectProxy;\naddress private _accounting;\naddress public proxyRegistryAddress;\nbool private isMintOpen = false;\n","contract":"GrailzNFT","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        GRAILZ_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        GRAILZ_PROVENANCE = provenanceHash;\n    }","contract":"GrailzNFT","time":0},{"type":"immutable-restrict-modification ","before":"address private _accounting;","after":"address private immutable _accounting;","contract":"GrailzNFT","time":1}]}