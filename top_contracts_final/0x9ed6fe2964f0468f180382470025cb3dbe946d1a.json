{"time":155,"results":[{"type":"external-function ","before":"function setTicketSettings(string memory name) public returns (bool) {\n        require(msg.sender == owner, \"only owner\");\n        settings.ticketSettings.name = name;\n        emit LTicketSettings(settings.ticketSettings, \"setTicketSettings\");\n        return true;\n    }","after":"function setTicketSettings(string calldata name) public returns (bool) {\n        require(msg.sender == owner, \"only owner\");\n        settings.ticketSettings.name = name;\n        emit LTicketSettings(settings.ticketSettings, \"setTicketSettings\");\n        return true;\n    }","contract":"ETHDubaiTicket","time":0},{"type":"external-function ","before":"function mintItem(MintInfo[] memory mintInfos)\n        public\n        payable\n        returns (string memory)\n    {\n        require(\n            _tokenIds.current() + mintInfos.length <= settings.maxMint,\n            \"sold out\"\n        );\n        uint256 total = 0;\n\n        string memory ids = \"\";\n        for (uint256 i = 0; i < mintInfos.length; i++) {\n            require(\n                keccak256(abi.encodePacked(mintInfos[i].specialStatus)) ==\n                    keccak256(abi.encodePacked(\"\")) ||\n                    msg.sender == owner,\n                \"only owner\"\n            );\n            total += getPrice(msg.sender, mintInfos[i].ticketOption);\n            _tokenIds.increment();\n        }\n\n        require(msg.value >= total, \"price too low\");\n        //emit LMint(msg.sender, mintInfos, \"minted\");\n        return ids;\n    }","after":"function mintItem(MintInfo[] calldata mintInfos)\n        public\n        payable\n        returns (string memory)\n    {\n        require(\n            _tokenIds.current() + mintInfos.length <= settings.maxMint,\n            \"sold out\"\n        );\n        uint256 total = 0;\n\n        string memory ids = \"\";\n        for (uint256 i = 0; i < mintInfos.length; i++) {\n            require(\n                keccak256(abi.encodePacked(mintInfos[i].specialStatus)) ==\n                    keccak256(abi.encodePacked(\"\")) ||\n                    msg.sender == owner,\n                \"only owner\"\n            );\n            total += getPrice(msg.sender, mintInfos[i].ticketOption);\n            _tokenIds.increment();\n        }\n\n        require(msg.value >= total, \"price too low\");\n        //emit LMint(msg.sender, mintInfos, \"minted\");\n        return ids;\n    }","contract":"ETHDubaiTicket","time":0},{"type":"external-function ","before":"function mintItemNoDiscount(MintInfo[] memory mintInfos)\n        public\n        payable\n        returns (string memory)\n    {\n        require(\n            _tokenIds.current() + mintInfos.length <= settings.maxMint,\n            \"sold out\"\n        );\n        uint256 total = 0;\n\n        string memory ids = \"\";\n        for (uint256 i = 0; i < mintInfos.length; i++) {\n            require(\n                keccak256(abi.encodePacked(mintInfos[i].specialStatus)) ==\n                    keccak256(abi.encodePacked(\"\")) ||\n                    msg.sender == owner,\n                \"only owner\"\n            );\n            total += ticketOptions[mintInfos[i].ticketOption];\n            _tokenIds.increment();\n        }\n\n        require(msg.value >= total, \"price too low\");\n        //emit LMint(msg.sender, mintInfos, \"minted\");\n        return ids;\n    }","after":"function mintItemNoDiscount(MintInfo[] calldata mintInfos)\n        public\n        payable\n        returns (string memory)\n    {\n        require(\n            _tokenIds.current() + mintInfos.length <= settings.maxMint,\n            \"sold out\"\n        );\n        uint256 total = 0;\n\n        string memory ids = \"\";\n        for (uint256 i = 0; i < mintInfos.length; i++) {\n            require(\n                keccak256(abi.encodePacked(mintInfos[i].specialStatus)) ==\n                    keccak256(abi.encodePacked(\"\")) ||\n                    msg.sender == owner,\n                \"only owner\"\n            );\n            total += ticketOptions[mintInfos[i].ticketOption];\n            _tokenIds.increment();\n        }\n\n        require(msg.value >= total, \"price too low\");\n        //emit LMint(msg.sender, mintInfos, \"minted\");\n        return ids;\n    }","contract":"ETHDubaiTicket","time":0}]}