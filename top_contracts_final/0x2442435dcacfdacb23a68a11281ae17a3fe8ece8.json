{"time":155,"results":[{"type":"external-function ","before":"function whitelistMint(uint256 _amount, bytes32[] memory proof) external payable {\n        require(wlOpen, \"WL mint is not open!\");\n        require(!paused, \"Contract is paused!\");\n        require(_amount <= wlMax, \"Mint amount is invalid!\");\n        require(_whitelistClaimed[msg.sender] + _amount <= wlMax, \"Already claimed the WL limit!\");\n\n        require(verify(msg.sender, proof), \"You are not selected for the WL!\");\n        require(totalMint + _amount <= maxSupply - giftMax, \"Max supply exceeded!\");\n        require(_wlprice * _amount <= msg.value, \"ETH value sent is incorrect!\");\n\n        uint256 _newItemId;\n        for (uint256 ind = 0; ind < _amount; ind++) {\n            _tokenIds.increment();\n            _newItemId = _tokenIds.current();\n            _safeMint(msg.sender, _newItemId);\n            _whitelistClaimed[msg.sender] = _whitelistClaimed[msg.sender] + 1;\n            totalNFT = totalNFT + 1;\n            totalMint = totalMint + 1;\n        }\n    }","after":"function whitelistMint(uint256 _amount, bytes32[] calldata proof) external payable {\n        require(wlOpen, \"WL mint is not open!\");\n        require(!paused, \"Contract is paused!\");\n        require(_amount <= wlMax, \"Mint amount is invalid!\");\n        require(_whitelistClaimed[msg.sender] + _amount <= wlMax, \"Already claimed the WL limit!\");\n\n        require(verify(msg.sender, proof), \"You are not selected for the WL!\");\n        require(totalMint + _amount <= maxSupply - giftMax, \"Max supply exceeded!\");\n        require(_wlprice * _amount <= msg.value, \"ETH value sent is incorrect!\");\n\n        uint256 _newItemId;\n        for (uint256 ind = 0; ind < _amount; ind++) {\n            _tokenIds.increment();\n            _newItemId = _tokenIds.current();\n            _safeMint(msg.sender, _newItemId);\n            _whitelistClaimed[msg.sender] = _whitelistClaimed[msg.sender] + 1;\n            totalNFT = totalNFT + 1;\n            totalMint = totalMint + 1;\n        }\n    }","contract":"PonziPanthers","time":0},{"type":"external-function ","before":"function setNotRevealedURI(string memory _notRevealedURI) public onlyOwner {\n        notRevealedUri = _notRevealedURI;\n    }","after":"function setNotRevealedURI(string calldata _notRevealedURI) public onlyOwner {\n        notRevealedUri = _notRevealedURI;\n    }","contract":"PonziPanthers","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public giftMax = 5;","after":"uint256 public constant giftMax = 5;","contract":"PonziPanthers","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public wlMax = 5;","after":"uint256 public constant wlMax = 5;","contract":"PonziPanthers","time":0},{"type":"constant-restrict-modification  ","before":"string public baseExtension = \".json\";","after":"string public constant baseExtension = \".json\";","contract":"PonziPanthers","time":0},{"type":"constant-restrict-modification  ","before":"uint256 _price = 80000000000000000;","after":"uint256 constant _price = 80000000000000000;","contract":"PonziPanthers","time":0},{"type":"constant-restrict-modification  ","before":"uint256 _wlprice = 55000000000000000;","after":"uint256 constant _wlprice = 55000000000000000;","contract":"PonziPanthers","time":0}]}