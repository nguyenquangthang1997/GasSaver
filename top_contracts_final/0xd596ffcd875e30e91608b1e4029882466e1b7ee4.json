{"time":186,"results":[{"type":"state-data-arrangement ","before":"\nmapping(string => bool) hashToMinted;\nmapping(uint256 => string) internal tokenIdToHash;\nmapping(bytes => Trait[]) public traitTypes;\nuint32 currentMappingVersion;\nuint256 MAX_SUPPLY = 10000;\nuint256 MINTS_PER_TIER = 3000;\nuint256 SEEDS_NONCE = 0;\nuint256 public price = 50000000000000000;\nuint16[][5] TIERS;\naddress seedsAddress;\naddress _owner;","after":"mapping(string => bool) hashToMinted;\nmapping(uint256 => string) internal tokenIdToHash;\nmapping(bytes => Trait[]) public traitTypes;\nuint256 MAX_SUPPLY = 10000;\nuint256 MINTS_PER_TIER = 3000;\nuint256 SEEDS_NONCE = 0;\nuint256 public price = 50000000000000000;\nuint16[][5] TIERS;\naddress seedsAddress;\naddress _owner;\nuint32 currentMappingVersion;\n","contract":"Strawberries","time":0},{"type":"external-function ","before":"function addTraitTypes(uint256 _traitTypeIndex, Trait[] memory traits)\r\n    public\r\n    onlyOwner\r\n    {\r\n        for(uint i = 0; i < traits.length; i++){\r\n            getTraits(_traitTypeIndex).push(\r\n                Trait(\r\n                    traits[i].traitName,\r\n                    traits[i].traitType,\r\n                    traits[i].traitLayout,\r\n                    traits[i].traitColors\r\n                )\r\n            );\r\n        }\r\n        return;\r\n    }","after":"function addTraitTypes(uint256 _traitTypeIndex, Trait[] calldata traits)\r\n    public\r\n    onlyOwner\r\n    {\r\n        for(uint i = 0; i < traits.length; i++){\r\n            getTraits(_traitTypeIndex).push(\r\n                Trait(\r\n                    traits[i].traitName,\r\n                    traits[i].traitType,\r\n                    traits[i].traitLayout,\r\n                    traits[i].traitColors\r\n                )\r\n            );\r\n        }\r\n        return;\r\n    }","contract":"Strawberries","time":0},{"type":"external-function ","before":"function addTraitLayoutChunk(uint256 _traitTypeIndex, uint256 _traitIndex, string memory traitLayout)\r\n    public\r\n    onlyOwner\r\n    {\r\n        Trait storage oldTrait = getTraits(_traitTypeIndex)[_traitIndex];\r\n        getTraits(_traitTypeIndex)[_traitIndex] = Trait(\r\n            oldTrait.traitName,\r\n            oldTrait.traitType,\r\n            string(abi.encodePacked(oldTrait.traitLayout,traitLayout)),\r\n            oldTrait.traitColors\r\n        );\r\n        return;\r\n    }","after":"function addTraitLayoutChunk(uint256 _traitTypeIndex, uint256 _traitIndex, string calldata traitLayout)\r\n    public\r\n    onlyOwner\r\n    {\r\n        Trait storage oldTrait = getTraits(_traitTypeIndex)[_traitIndex];\r\n        getTraits(_traitTypeIndex)[_traitIndex] = Trait(\r\n            oldTrait.traitName,\r\n            oldTrait.traitType,\r\n            string(abi.encodePacked(oldTrait.traitLayout,traitLayout)),\r\n            oldTrait.traitColors\r\n        );\r\n        return;\r\n    }","contract":"Strawberries","time":0},{"type":"constant-restrict-modification  ","before":"uint256 MAX_SUPPLY = 10000;","after":"uint256 constant MAX_SUPPLY = 10000;","contract":"Strawberries","time":0},{"type":"constant-restrict-modification  ","before":"uint256 MINTS_PER_TIER = 3000;","after":"uint256 constant MINTS_PER_TIER = 3000;","contract":"Strawberries","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public price = 50000000000000000;","after":"uint256 public constant price = 50000000000000000;","contract":"Strawberries","time":0},{"type":"immutable-restrict-modification ","before":"address _owner;","after":"address immutable _owner;","contract":"Strawberries","time":1}]}