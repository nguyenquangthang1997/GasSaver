{"time":51,"results":[{"type":"loop-duplication","before":"\nstart line 124 column 8, end line 126 column 8\nfor (uint i = 0; i < _tokenCnt; i ++) {\n            _totalVoteWeight += _weights[i];\n        }\nstart line 128 column 8, end line 140 column 8\nfor (uint i = 0; i < _tokenCnt; i ++) {\n            address _token = _tokenVote[i];\n            address _gauge = gauges[_token];\n            uint _tokenWeight = _weights[i] * _weight / _totalVoteWeight;\n\n            if (_gauge != address(0x0)) {\n                _usedWeight += _tokenWeight;\n                totalWeight += _tokenWeight;\n                weights[_token] += _tokenWeight;\n                tokenVote[_owner].push(_token);\n                votes[_owner][_token] = _tokenWeight;\n            }\n        }","after":"// merge loop\n\nstart line 124 column 8, end line 126 column 8\nfor (uint i = 0; i < _tokenCnt; i ++) {\n            _totalVoteWeight += _weights[i];\n        }\nstart line 128 column 8, end line 140 column 8\nfor (uint i = 0; i < _tokenCnt; i ++) {\n            address _token = _tokenVote[i];\n            address _gauge = gauges[_token];\n            uint _tokenWeight = _weights[i] * _weight / _totalVoteWeight;\n\n            if (_gauge != address(0x0)) {\n                _usedWeight += _tokenWeight;\n                totalWeight += _tokenWeight;\n                weights[_token] += _tokenWeight;\n                tokenVote[_owner].push(_token);\n                votes[_owner][_token] = _tokenWeight;\n            }\n        }","contract":"GaugeProxy","time":0}]}