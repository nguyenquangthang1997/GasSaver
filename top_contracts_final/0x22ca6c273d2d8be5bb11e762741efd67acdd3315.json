{"time":160,"results":[{"type":"state-data-arrangement ","before":"\nstring public MULTIPASS_PROVENANCE = \"\";\nstring private _baseContractURI = \"https://gateway.pinata.cloud/ipfs/QmfR7WdrZcfihrZSFUqXWz6LW2NZXDzu9Vjt1WzZDzk4y5\";\nstring private _baseTokenURI = \"https://entitieswtf.herokuapp.com/api/token/\";\nuint256 public constant MAX_MULTIPASSES = 10000;\nuint256 private multiPassesReserved;\nuint256 public constant maxMultiPassesPurchase = 20;\nuint256 private multiPassPrice = 100000000000000000;\nbool public mintingAllowed = true;\nbool public burningAllowed = false;\nbool public salePaused = true;\nmapping (address => uint) private _MultiPassBurners;\nuint96 public constant royaltyFeeBps = 1000;\naddress payable public payoutAddress;\naddress t1;\naddress t2;\naddress t3;\naddress t4;\naddress t5;","after":"string public MULTIPASS_PROVENANCE = \"\";\nstring private _baseContractURI = \"https://gateway.pinata.cloud/ipfs/QmfR7WdrZcfihrZSFUqXWz6LW2NZXDzu9Vjt1WzZDzk4y5\";\nstring private _baseTokenURI = \"https://entitieswtf.herokuapp.com/api/token/\";\nuint256 public constant MAX_MULTIPASSES = 10000;\nuint256 private multiPassesReserved;\nuint256 public constant maxMultiPassesPurchase = 20;\nuint256 private multiPassPrice = 100000000000000000;\nmapping (address => uint) private _MultiPassBurners;\naddress payable public payoutAddress;\naddress t1;\naddress t2;\naddress t3;\naddress t4;\naddress t5;\nuint96 public constant royaltyFeeBps = 1000;\nbool public mintingAllowed = true;\nbool public burningAllowed = false;\nbool public salePaused = true;\n","contract":"MultiPass","time":9},{"type":"external-function ","before":"function setBaseContractURI(string memory baseContractURI) public onlyOwner {\n        _baseContractURI = baseContractURI;\n    }","after":"function setBaseContractURI(string calldata baseContractURI) public onlyOwner {\n        _baseContractURI = baseContractURI;\n    }","contract":"MultiPass","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        MULTIPASS_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        MULTIPASS_PROVENANCE = provenanceHash;\n    }","contract":"MultiPass","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","contract":"MultiPass","time":0}]}