{"time":157,"results":[{"type":"state-data-arrangement ","before":"\nbool public paused;\nbool public presaleEnabled;\nbool public publicSaleEnabled;\nbool public revealed;\nbool public burnEnabled;\nuint16 public constant totalTokens = 7777;\nuint16 public maxMintAmount = 5;\nuint16 public maxTokensPerWalletPresale = 5;\nuint16 public maxTokensPerWallet = 25;\nuint256 public costPublicSale = 0.15 ether;\nuint256 public costPresale = 0.13 ether;\nuint16 private _totalMintSupply = 0;\nuint16 public totalBurnTokens = 2500;\nuint16 private _totalBurnSupply = 0;\nstring private _contractURI;\nstring private _notRevealedURI;\nstring private _currentBaseURI;\nstring private _baseExtension = \".json\";\nmapping(address => uint256) public presaleListMintCount;\nbytes32 public merkleRoot;\nmapping(address => uint16) public addressMints;\nmapping(address => uint16) public addressBurns;\nmapping(uint16 => uint16) private tokenMatrix;","after":"uint256 public costPublicSale = 0.15 ether;\nuint256 public costPresale = 0.13 ether;\nstring private _contractURI;\nstring private _notRevealedURI;\nstring private _currentBaseURI;\nstring private _baseExtension = \".json\";\nmapping(address => uint256) public presaleListMintCount;\nbytes32 public merkleRoot;\nmapping(address => uint16) public addressMints;\nmapping(address => uint16) public addressBurns;\nmapping(uint16 => uint16) private tokenMatrix;\nuint16 public constant totalTokens = 7777;\nuint16 public maxMintAmount = 5;\nuint16 public maxTokensPerWalletPresale = 5;\nuint16 public maxTokensPerWallet = 25;\nuint16 private _totalMintSupply = 0;\nuint16 public totalBurnTokens = 2500;\nuint16 private _totalBurnSupply = 0;\nbool public paused;\nbool public presaleEnabled;\nbool public publicSaleEnabled;\nbool public revealed;\nbool public burnEnabled;\n","contract":"CouncilOfKingz","time":9},{"type":"external-function ","before":"function burn(uint256[] memory _tokenIds) external {\r\n        require(burnEnabled, \"Burn disabled\");\r\n        require(_tokenIds.length % 5 == 0, \"Multiples of 5\");\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            require(\r\n                _isApprovedOrOwner(_msgSender(), _tokenIds[i]),\r\n                \"ERC721Burnable: caller is not owner nor approved\"\r\n            );\r\n        }\r\n        require(\r\n            totalBurned() + _tokenIds.length <= totalBurnTokens,\r\n            \"Exceeds burn limit\"\r\n        );\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            _burn(_tokenIds[i]);\r\n            _totalBurnSupply++;\r\n            addressBurns[_msgSender()] += 1;\r\n        }\r\n    }","after":"function burn(uint256[] calldata _tokenIds) external {\r\n        require(burnEnabled, \"Burn disabled\");\r\n        require(_tokenIds.length % 5 == 0, \"Multiples of 5\");\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            require(\r\n                _isApprovedOrOwner(_msgSender(), _tokenIds[i]),\r\n                \"ERC721Burnable: caller is not owner nor approved\"\r\n            );\r\n        }\r\n        require(\r\n            totalBurned() + _tokenIds.length <= totalBurnTokens,\r\n            \"Exceeds burn limit\"\r\n        );\r\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\r\n            _burn(_tokenIds[i]);\r\n            _totalBurnSupply++;\r\n            addressBurns[_msgSender()] += 1;\r\n        }\r\n    }","contract":"CouncilOfKingz","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension)\r\n        external\r\n        onlyOwner\r\n    {\r\n        _baseExtension = _newBaseExtension;\r\n    }","after":"function setBaseExtension(string calldata _newBaseExtension)\r\n        external\r\n        onlyOwner\r\n    {\r\n        _baseExtension = _newBaseExtension;\r\n    }","contract":"CouncilOfKingz","time":0},{"type":"constant-restrict-modification  ","before":"uint16 public maxMintAmount = 5;","after":"uint16 public constant maxMintAmount = 5;","contract":"CouncilOfKingz","time":0},{"type":"constant-restrict-modification  ","before":"uint16 public maxTokensPerWalletPresale = 5;","after":"uint16 public constant maxTokensPerWalletPresale = 5;","contract":"CouncilOfKingz","time":0},{"type":"constant-restrict-modification  ","before":"uint16 public maxTokensPerWallet = 25;","after":"uint16 public constant maxTokensPerWallet = 25;","contract":"CouncilOfKingz","time":0}]}