{"time":167,"results":[{"type":"external-function ","before":"function changeName(uint256 ShroomId, string memory newName) external ShroomOwner(ShroomId) {\n        bytes memory n = bytes(newName);\n        require(n.length > 0 && n.length < 25,                          \"Invalid name length\");\n        require(sha256(n) != sha256(bytes(shroomData[ShroomId].name)),    \"New name is same as current name\");\n        \n        GnarToken.burn(msg.sender, NAME_CHANGE_PRICE);\n        shroomData[ShroomId].name = newName;\n        emit NameChanged(ShroomId, newName);\n    }","after":"function changeName(uint256 ShroomId, string calldata newName) external ShroomOwner(ShroomId) {\n        bytes memory n = bytes(newName);\n        require(n.length > 0 && n.length < 25,                          \"Invalid name length\");\n        require(sha256(n) != sha256(bytes(shroomData[ShroomId].name)),    \"New name is same as current name\");\n        \n        GnarToken.burn(msg.sender, NAME_CHANGE_PRICE);\n        shroomData[ShroomId].name = newName;\n        emit NameChanged(ShroomId, newName);\n    }","contract":"ShroomMate","time":0},{"type":"external-function ","before":"function setBaseURI(string memory uri) public onlyOwner {\n        baseURI = uri;\n    }","after":"function setBaseURI(string calldata uri) public onlyOwner {\n        baseURI = uri;\n    }","contract":"ShroomMate","time":0},{"type":"external-function ","before":"function setHash(string memory _hash) public onlyOwner {\n        provinanceHash = _hash;\n    }","after":"function setHash(string calldata _hash) public onlyOwner {\n        provinanceHash = _hash;\n    }","contract":"ShroomMate","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 7777;","after":"uint256 public constant maxSupply = 7777;","contract":"ShroomMate","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public maxBuyable = 7700;","after":"uint256 public constant maxBuyable = 7700;","contract":"ShroomMate","time":1}]}