{"time":110,"results":[{"type":"external-function ","before":"y;\n    }\n\n    function setNames(string memory name_, string memory symbol_) public onlyOwner {\n        _name = name_;\n        _symbol = ","after":"y;\n    }\n\n    function setNames(string calldata name_, string memory symbol_) public onlyOwner {\n        _name = name_;\n        _symbol = ","contract":"PokerNFT","time":0},{"type":"external-function ","before":"e;\n    }\n\n    function setTokenAsset(uint256 _tokenId, string memory _uri, string memory _hash, address _minter) public override onlyOwner {\n        require(_exists(_tokenId), \"Vsnft_setTokenAsset_notoken\");\n        TokenMeta storage meta = tokenOnChainMeta[_tokenId];\n        meta.uri = _uri;\n        meta.hash = _hash;\n        meta.minter = _minter;\n        tokenOnChainMeta[_tokenId]","after":"e;\n    }\n\n    function setTokenAsset(uint256 _tokenId, string calldata _uri, string calldata _hash, address _minter) public override onlyOwner {\n        require(_exists(_tokenId), \"Vsnft_setTokenAsset_notoken\");\n        TokenMeta storage meta = tokenOnChainMeta[_tokenId];\n        meta.uri = _uri;\n        meta.hash = _hash;\n        meta.minter = _minter;\n        tokenOnChainMeta[_tokenId]","contract":"PokerNFT","time":0},{"type":"external-function ","before":"a;\n    }\n\n    function setSale(uint256 _tokenId, address _contractAddr, uint256[] memory _settings, address[] memory _addrs) public {\n        require(_exists(_tokenId), \"Vsnft_setTokenAsset_notoken\");\n        address sender = _msgSender();\n        require(owner() == sender || ownerOf(_tokenId) == sender, \"Invalid_Owner\");\n        \n        ISaleContract _contract = ISaleContract(_contractAddr);\n        _contract.sale(_tokenId, _settings, _addrs);   \n        _transfer(sender, _contractAddr, _t","after":"a;\n    }\n\n    function setSale(uint256 _tokenId, address _contractAddr, uint256[] calldata _settings, address[] memory _addrs) public {\n        require(_exists(_tokenId), \"Vsnft_setTokenAsset_notoken\");\n        address sender = _msgSender();\n        require(owner() == sender || ownerOf(_tokenId) == sender, \"Invalid_Owner\");\n        \n        ISaleContract _contract = ISaleContract(_contractAddr);\n        _contract.sale(_tokenId, _settings, _addrs);   \n        _transfer(sender, _contractAddr, _t","contract":"PokerNFT","time":0}]}