{"time":156,"results":[{"type":"external-function ","before":"function mintWhitelist(uint256 _count, bytes32[] memory _proof)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(\n            verifyWhitelist(_leaf(msg.sender), _proof) == true,\n            \"ADDRESS_INVALID\"\n        );\n\n        uint256 ownerTokenCount = balanceOf(msg.sender);\n        require(\n            _count > 0 && ownerTokenCount + _count <= MAX_MINT_PER_WL,\n            \"COUNT_INVALID\"\n        );\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= GIVEAWAY_SUPPLY, \"GIVEAWAY_NOT_MINTED\");\n\n        if (msg.sender != owner()) {\n            require(msg.value >= MINT_PRICE * _count);\n        }\n\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n    }","after":"function mintWhitelist(uint256 _count, bytes32[] calldata _proof)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(\n            verifyWhitelist(_leaf(msg.sender), _proof) == true,\n            \"ADDRESS_INVALID\"\n        );\n\n        uint256 ownerTokenCount = balanceOf(msg.sender);\n        require(\n            _count > 0 && ownerTokenCount + _count <= MAX_MINT_PER_WL,\n            \"COUNT_INVALID\"\n        );\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= GIVEAWAY_SUPPLY, \"GIVEAWAY_NOT_MINTED\");\n\n        if (msg.sender != owner()) {\n            require(msg.value >= MINT_PRICE * _count);\n        }\n\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n    }","contract":"NudieCommunityNFT","time":0},{"type":"external-function ","before":"function mintWhitelistForVIP(uint256 _count, bytes32[] memory _proof)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(\n            verifyWhitelist(_leaf(msg.sender), _proof) == true,\n            \"ADDRESS_INVALID\"\n        );\n\n        uint256 ownerTokenCount = balanceOf(msg.sender);\n        require(\n            _count > 0 && ownerTokenCount + _count <= MAX_MINT_PER_VIP,\n            \"COUNT_INVALID\"\n        );\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= GIVEAWAY_SUPPLY, \"GIVEAWAY_NOT_MINTED\");\n\n        if (msg.sender != owner()) {\n            require(msg.value >= MINT_PRICE * _count);\n        }\n\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n    }","after":"function mintWhitelistForVIP(uint256 _count, bytes32[] calldata _proof)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(\n            verifyWhitelist(_leaf(msg.sender), _proof) == true,\n            \"ADDRESS_INVALID\"\n        );\n\n        uint256 ownerTokenCount = balanceOf(msg.sender);\n        require(\n            _count > 0 && ownerTokenCount + _count <= MAX_MINT_PER_VIP,\n            \"COUNT_INVALID\"\n        );\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= GIVEAWAY_SUPPLY, \"GIVEAWAY_NOT_MINTED\");\n\n        if (msg.sender != owner()) {\n            require(msg.value >= MINT_PRICE * _count);\n        }\n\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n    }","contract":"NudieCommunityNFT","time":0},{"type":"external-function ","before":"function mintWhitelistForWhale(uint256 _count, bytes32[] memory _proof)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(\n            verifyWhitelist(_leaf(msg.sender), _proof) == true,\n            \"ADDRESS_INVALID\"\n        );\n\n        uint256 ownerTokenCount = balanceOf(msg.sender);\n        require(\n            _count > 0 && ownerTokenCount + _count <= MAX_MINT_PER_WHALE,\n            \"COUNT_INVALID\"\n        );\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= GIVEAWAY_SUPPLY, \"GIVEAWAY_NOT_MINTED\");\n\n        if (msg.sender != owner()) {\n            require(msg.value >= MINT_PRICE * _count);\n        }\n\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n    }","after":"function mintWhitelistForWhale(uint256 _count, bytes32[] calldata _proof)\n        external\n        payable\n    {\n        require(preSaleStarted, \"MINT_NOT_STARTED\");\n        require(\n            verifyWhitelist(_leaf(msg.sender), _proof) == true,\n            \"ADDRESS_INVALID\"\n        );\n\n        uint256 ownerTokenCount = balanceOf(msg.sender);\n        require(\n            _count > 0 && ownerTokenCount + _count <= MAX_MINT_PER_WHALE,\n            \"COUNT_INVALID\"\n        );\n        require(totalSupply + _count <= MAX_SUPPLY, \"MAX_SUPPLY_REACHED\");\n        require(totalSupply >= GIVEAWAY_SUPPLY, \"GIVEAWAY_NOT_MINTED\");\n\n        if (msg.sender != owner()) {\n            require(msg.value >= MINT_PRICE * _count);\n        }\n\n        for (uint256 i = 1; i <= _count; i++) {\n            _safeMint(msg.sender, totalSupply + i);\n        }\n        totalSupply += _count;\n    }","contract":"NudieCommunityNFT","time":0},{"type":"constant-restrict-modification  ","before":"string public baseExtension = \".json\";","after":"string public constant baseExtension = \".json\";","contract":"NudieCommunityNFT","time":0}]}