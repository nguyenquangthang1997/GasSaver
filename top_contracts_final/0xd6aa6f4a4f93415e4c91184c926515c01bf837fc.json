{"time":61,"results":[{"type":"external-function ","before":"function mintBatch(uint256[] memory quantities) public onlyRole(INDEXCOOP_MINTER_ROLE) {\r\n    require(quantities.length == 6, 'Quantities must list all items.');\r\n    for (uint256 i = 0; i < 6; ++i) {\r\n      if (quantities[i] > 0) {\r\n        require(soldAmount[Size(i)] + quantities[i] < maxAmount[Size(i)], 'Not enough quantity left of selected size');\r\n        require(remainingFreeClaims >= quantities[i], 'Not enough remaining free claims to cover mint');\r\n\r\n        remainingFreeClaims -= quantities[i];\r\n        soldAmount[Size(i)] += quantities[i];\r\n\r\n        emit Purchase(msg.sender, Size(i), quantities[i]);\r\n      }\r\n    }\r\n  }","after":"function mintBatch(uint256[] calldata quantities) public onlyRole(INDEXCOOP_MINTER_ROLE) {\r\n    require(quantities.length == 6, 'Quantities must list all items.');\r\n    for (uint256 i = 0; i < 6; ++i) {\r\n      if (quantities[i] > 0) {\r\n        require(soldAmount[Size(i)] + quantities[i] < maxAmount[Size(i)], 'Not enough quantity left of selected size');\r\n        require(remainingFreeClaims >= quantities[i], 'Not enough remaining free claims to cover mint');\r\n\r\n        remainingFreeClaims -= quantities[i];\r\n        soldAmount[Size(i)] += quantities[i];\r\n\r\n        emit Purchase(msg.sender, Size(i), quantities[i]);\r\n      }\r\n    }\r\n  }","contract":"GMIHoodieSale","time":0}]}