{"time":296,"results":[{"type":"immutable-restrict-modification ","before":"uint256 public divisor;","after":"uint256 public immutable divisor;","contract":"ETHVaultHandler","time":1},{"type":"external-function ","before":"function executeTransaction(\n    address target,\n    uint256 value,\n    string memory signature,\n    bytes memory data\n  ) external payable onlyOwner returns (bytes memory) {\n    bytes memory callData;\n    if (bytes(signature).length == 0) {\n      callData = data;\n    } else {\n      callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\n    }\n\n    require(\n      target != address(0),\n      \"Orchestrator::executeTransaction: target can't be zero\"\n    );\n\n    // solium-disable-next-line security/no-call-value\n    (bool success, bytes memory returnData) =\n      target.call{value: value}(callData);\n    require(\n      success,\n      \"Orchestrator::executeTransaction: Transaction execution reverted.\"\n    );\n\n    emit TransactionExecuted(target, value, signature, data);\n    (target, value, signature, data);\n\n    return returnData;\n  }","after":"function executeTransaction(\n    address target,\n    uint256 value,\n    string calldata signature,\n    bytes calldata data\n  ) external payable onlyOwner returns (bytes memory) {\n    bytes memory callData;\n    if (bytes(signature).length == 0) {\n      callData = data;\n    } else {\n      callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\n    }\n\n    require(\n      target != address(0),\n      \"Orchestrator::executeTransaction: target can't be zero\"\n    );\n\n    // solium-disable-next-line security/no-call-value\n    (bool success, bytes memory returnData) =\n      target.call{value: value}(callData);\n    require(\n      success,\n      \"Orchestrator::executeTransaction: Transaction execution reverted.\"\n    );\n\n    emit TransactionExecuted(target, value, signature, data);\n    (target, value, signature, data);\n\n    return returnData;\n  }","contract":"Orchestrator","time":0},{"type":"state-data-arrangement ","before":"\nbool public capEnabled = false;\nuint256 public cap;\nmapping(address => bool) public vaultHandlers;\nbytes4 private constant _INTERFACE_ID_TCAP = 0xbd115939;\nbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;","after":"uint256 public cap;\nmapping(address => bool) public vaultHandlers;\nbytes4 private constant _INTERFACE_ID_TCAP = 0xbd115939;\nbytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\nbool public capEnabled = false;\n","contract":"TCAP","time":1}]}