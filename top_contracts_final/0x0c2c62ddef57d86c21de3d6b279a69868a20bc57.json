{"time":143,"results":[{"type":"external-function ","before":"function addWhiteListBundle(address[] memory whiteAddress,uint [] memory counter)public onlyOwner {\n            for (uint i = 0; i < whiteAddress.length; i++)\n            {\n\n        require(!_addressExist[whiteAddress[i]],\"Address already Exist\");\n        _whiteList[whiteAddress[i]]=SpecificAddresses({\n             userAddress :whiteAddress[i],\n            counter:counter[i]\n           });\n           _addressExist[whiteAddress[i]]=true;\n    }\n        }","after":"function addWhiteListBundle(address[] calldata whiteAddress,uint [] calldata counter)public onlyOwner {\n            for (uint i = 0; i < whiteAddress.length; i++)\n            {\n\n        require(!_addressExist[whiteAddress[i]],\"Address already Exist\");\n        _whiteList[whiteAddress[i]]=SpecificAddresses({\n             userAddress :whiteAddress[i],\n            counter:counter[i]\n           });\n           _addressExist[whiteAddress[i]]=true;\n    }\n        }","contract":"DegenSantas","time":0},{"type":"constant-restrict-modification  ","before":"uint maxSupply=10000;","after":"uint constant maxSupply=10000;","contract":"DegenSantas","time":0}]}