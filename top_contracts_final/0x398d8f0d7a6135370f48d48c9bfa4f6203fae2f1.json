{"time":129,"results":[{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","after":"function setBaseExtension(string calldata _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","contract":"ZombieLabPass","time":0},{"type":"external-function ","before":"function seedAllowlist(address[] memory addresses, uint256[] memory numSlots) external onlyOwner  {\n\n    require( addresses.length == numSlots.length, \" Addresses Does Not Match NumSlots Length \" );\n\n    for (uint256 i = 0; i < addresses.length; i++) {\n      allowlist[addresses[i]] = numSlots[i];\n    }\n  }","after":"function seedAllowlist(address[] calldata addresses, uint256[] calldata numSlots) external onlyOwner  {\n\n    require( addresses.length == numSlots.length, \" Addresses Does Not Match NumSlots Length \" );\n\n    for (uint256 i = 0; i < addresses.length; i++) {\n      allowlist[addresses[i]] = numSlots[i];\n    }\n  }","contract":"ZombieLabPass","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 666;","after":"uint256 public constant maxSupply = 666;","contract":"ZombieLabPass","time":0}]}