{"time":163,"results":[{"type":"external-function ","before":"function setGameURI(bytes32 _gameKey, string memory _uri)\n        external\n        onlyAllowed\n    {\n        gameURIs[_gameKey] = _uri;\n    }","after":"function setGameURI(bytes32 _gameKey, string calldata _uri)\n        external\n        onlyAllowed\n    {\n        gameURIs[_gameKey] = _uri;\n    }","contract":"ArcadeCollection","time":0},{"type":"external-function ","before":"function addGame(string memory _gameId, uint256 _maxIssuance)\n        external\n        onlyOwner\n    {\n        require(!isComplete, \"This game has sold out!\");\n        bytes32 key = getGameKey(_gameId);\n\n        require(maxIssuance[key] == 0, \"Can not modify an existing game\");\n        require(_maxIssuance > 0, \"Max issuance should be greater than 0\");\n\n        maxIssuance[key] = _maxIssuance;\n        games.push(_gameId);\n\n        emit AddGame(key, _gameId, _maxIssuance);\n    }","after":"function addGame(string calldata _gameId, uint256 _maxIssuance)\n        external\n        onlyOwner\n    {\n        require(!isComplete, \"This game has sold out!\");\n        bytes32 key = getGameKey(_gameId);\n\n        require(maxIssuance[key] == 0, \"Can not modify an existing game\");\n        require(_maxIssuance > 0, \"Max issuance should be greater than 0\");\n\n        maxIssuance[key] = _maxIssuance;\n        games.push(_gameId);\n\n        emit AddGame(key, _gameId, _maxIssuance);\n    }","contract":"ArcadeCollection","time":0}]}