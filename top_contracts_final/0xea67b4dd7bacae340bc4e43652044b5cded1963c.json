{"time":171,"results":[{"type":"external-function ","before":"function presale(uint256 num, uint256 _total, bool _presale, bytes memory sig) public payable whenNotPaused {\n        require(!_presale_paused, \"Presale paused\");\n        require(!_usedPresaleAddress[msg.sender], \"Presale Address already used!\");\n\n        string memory wallet = toAsciiString(msg.sender);\n        require(isValidSignature(wallet, _total, _presale, sig) == true, \"Invalid signature!\");\n        require(num <= _total, \"Maximum reached!\");\n\n        uint256 supply = totalSupply();\n        require(supply.add(num) <= MAX_SUPPLY - _reserved, \"Exceeds maximum Moonkys supply\");\n        require(msg.value >= _price * num, \"Ether sent is not correct\");\n\n        for(uint256 i; i < num; i++){\n            _tokenIdentifiers.increment();\n            uint256 newRECIdentifier = _tokenIdentifiers.current();\n            _safeMint(msg.sender, newRECIdentifier);\n        }\n        _usedPresaleAddress[msg.sender] = true;\n    }","after":"function presale(uint256 num, uint256 _total, bool _presale, bytes calldata sig) public payable whenNotPaused {\n        require(!_presale_paused, \"Presale paused\");\n        require(!_usedPresaleAddress[msg.sender], \"Presale Address already used!\");\n\n        string memory wallet = toAsciiString(msg.sender);\n        require(isValidSignature(wallet, _total, _presale, sig) == true, \"Invalid signature!\");\n        require(num <= _total, \"Maximum reached!\");\n\n        uint256 supply = totalSupply();\n        require(supply.add(num) <= MAX_SUPPLY - _reserved, \"Exceeds maximum Moonkys supply\");\n        require(msg.value >= _price * num, \"Ether sent is not correct\");\n\n        for(uint256 i; i < num; i++){\n            _tokenIdentifiers.increment();\n            uint256 newRECIdentifier = _tokenIdentifiers.current();\n            _safeMint(msg.sender, newRECIdentifier);\n        }\n        _usedPresaleAddress[msg.sender] = true;\n    }","contract":"Moonkys","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner() {\n        _baseURIextended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner() {\n        _baseURIextended = baseURI_;\n    }","contract":"Moonkys","time":0},{"type":"constant-restrict-modification  ","before":"address t1 = 0x94f65107EB422c67E61588682Fcf9D85AaC940B8;","after":"address constant t1 = 0x94f65107EB422c67E61588682Fcf9D85AaC940B8;","contract":"Moonkys","time":1},{"type":"constant-restrict-modification  ","before":"address t2 = 0x4C96256FD81F6fcd3110694e416ea203AeCea720;","after":"address constant t2 = 0x4C96256FD81F6fcd3110694e416ea203AeCea720;","contract":"Moonkys","time":1},{"type":"constant-restrict-modification  ","before":"address t3 = 0x40a764a31d30C5FD62294A19861612A036F59943;","after":"address constant t3 = 0x40a764a31d30C5FD62294A19861612A036F59943;","contract":"Moonkys","time":1},{"type":"constant-restrict-modification  ","before":"address t4 = 0x5D2EebAddCD11E72F4672bFBaE23200514F49b11;","after":"address constant t4 = 0x5D2EebAddCD11E72F4672bFBaE23200514F49b11;","contract":"Moonkys","time":1}]}