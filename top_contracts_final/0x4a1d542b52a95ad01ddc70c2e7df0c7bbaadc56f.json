{"time":117,"results":[{"type":"external-function ","before":"function transferWithPermit(\n    address recipient,\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    bytes memory signature\n  ) external {\n    bytes32 r;\n    bytes32 s;\n    uint8 v;\n    assembly {\n      r := mload(add(signature, 0x20))\n      s := mload(add(signature, 0x40))\n      v := byte(0, mload(add(signature, 0x60)))\n    }\n\n    ERC20Permit.permit(owner, spender, value, deadline, v, r, s);\n\n    transferFrom(owner, recipient, value);\n  }","after":"function transferWithPermit(\n    address recipient,\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    bytes calldata signature\n  ) external {\n    bytes32 r;\n    bytes32 s;\n    uint8 v;\n    assembly {\n      r := mload(add(signature, 0x20))\n      s := mload(add(signature, 0x40))\n      v := byte(0, mload(add(signature, 0x60)))\n    }\n\n    ERC20Permit.permit(owner, spender, value, deadline, v, r, s);\n\n    transferFrom(owner, recipient, value);\n  }","contract":"NiftifyERC20","time":0},{"type":"constant-restrict-modification  ","before":"bytes32 private immutable _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");","after":"bytes32 private immutable constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");","contract":"NiftifyERC20","time":1}]}