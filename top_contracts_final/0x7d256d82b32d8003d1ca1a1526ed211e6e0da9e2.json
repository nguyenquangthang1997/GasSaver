{"time":199,"results":[{"type":"constant-restrict-modification  ","before":"string public name = \"Yat NFT\";","after":"string public constant name = \"Yat NFT\";","contract":"Metadata","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol = \"Yats\";","after":"string public constant symbol = \"Yats\";","contract":"Metadata","time":0},{"type":"external-function ","before":"function mint(string calldata _token, address _account, uint256 _expiry, bytes memory _signature) external {\n\t\trequire(block.timestamp < _expiry);\n\t\trequire(_verifyMint(_token, _account, _expiry, _signature));\n\t\t_mint(_token, _account);\n\t}","after":"function mint(string calldata _token, address _account, uint256 _expiry, bytes calldata _signature) external {\n\t\trequire(block.timestamp < _expiry);\n\t\trequire(_verifyMint(_token, _account, _expiry, _signature));\n\t\t_mint(_token, _account);\n\t}","contract":"YAT","time":0},{"type":"external-function ","before":"function deleteRecord(uint256 _tokenId, string memory _key) external {\n\t\tupdateRecord(_tokenId, _key, \"\");\n\t}","after":"function deleteRecord(uint256 _tokenId, string calldata _key) external {\n\t\tupdateRecord(_tokenId, _key, \"\");\n\t}","contract":"YAT","time":0}]}