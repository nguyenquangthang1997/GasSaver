{"time":139,"results":[{"type":"external-function ","before":"ift(address to) external onlyOwner {\n        mint_(to);\n    }*/\n\n  /**\n    @dev Burn","after":"ift(address to) external onlyOwner {\n        mint_(to);\n    }*/\n\n  /**\n    @dev Burn","contract":"BadBabies","time":0},{"type":"external-function ","before":"rice = price_;\n  }\n\n  function changeSpecialPrice(uint256 price_) external onlyOwner {\n    _specialSalePrice = price_;\n  }\n\n  function updateDates(uint256 specialSale","after":"rice = price_;\n  }\n\n  function changeSpecialPrice(uint256 price_) external onlyOwner {\n    _specialSalePrice = price_;\n  }\n\n  function updateDates(uint256 specialSale","contract":"BadBabies","time":0},{"type":"external-function ","before":"list(address wallet) external onlyOwner {\n    _whitelist[wallet] = true;\n  }\n\n  function addToWhitelist(address[] memory wallets) public onlyOwner {\n    for (uint256 i = 0; i","after":"list(address wallet) external onlyOwner {\n    _whitelist[wallet] = true;\n  }\n\n  function addToWhitelist(address[] memory wallets) public onlyOwner {\n    for (uint256 i = 0; i","contract":"BadBabies","time":0},{"type":"external-function ","before":"allets.length; i++) {\n      _whitelist[wallets[i]] = true;\n    }\n  }\n\n  function isWhitelisted(address wallet) public view returns(bool) {\n    return _whitelist[wallet];\n  }\n\n  function removeFromWhitelist(address wallet) external onlyOwner {\n    _whitelist[wallet] = false;\n  ","after":"allets.length; i++) {\n      _whitelist[wallets[i]] = true;\n    }\n  }\n\n  function isWhitelisted(address wallet) public view returns(bool) {\n    return _whitelist[wallet];\n  }\n\n  function removeFromWhitelist(address wallet) external onlyOwner {\n    _whitelist[wallet] = false;\n  ","contract":"BadBabies","time":0}]}