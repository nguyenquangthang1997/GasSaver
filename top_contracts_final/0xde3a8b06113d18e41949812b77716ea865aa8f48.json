{"time":148,"results":[{"type":"state-data-arrangement ","before":"\nbool public saleActive = false;\nbool public presaleActive = false;\nstring internal baseTokenURI;\nuint public price = 0.06 ether;\nuint public totalSupply = 10000;\nuint public nonce = 0;\nuint public maxTx = 20;\naddress public m1;\naddress public m2;\naddress public m3;\naddress public m4;\nmapping (address => uint256) public presaleWallets;","after":"string internal baseTokenURI;\nuint public price = 0.06 ether;\nuint public totalSupply = 10000;\nuint public nonce = 0;\nuint public maxTx = 20;\nmapping (address => uint256) public presaleWallets;\naddress public m1;\naddress public m2;\naddress public m3;\naddress public m4;\nbool public saleActive = false;\nbool public presaleActive = false;\n","contract":"FoxyFam","time":0},{"type":"external-function ","before":"function setPresaleWallets(address[] memory _a, uint256[] memory _amount) public onlyOwner {\n        for(uint256 i; i < _a.length; i++){\n            presaleWallets[_a[i]] = _amount[i];\n        }\n    }","after":"function setPresaleWallets(address[] calldata _a, uint256[] calldata _amount) public onlyOwner {\n        for(uint256 i; i < _a.length; i++){\n            presaleWallets[_a[i]] = _amount[i];\n        }\n    }","contract":"FoxyFam","time":0},{"type":"external-function ","before":"function setMembersAddresses(address[] memory _a) public onlyOwner {\n        m1 = _a[0];\n        m2 = _a[1];\n        m3 = _a[2];\n        m4 = _a[3];\n    }","after":"function setMembersAddresses(address[] calldata _a) public onlyOwner {\n        m1 = _a[0];\n        m2 = _a[1];\n        m3 = _a[2];\n        m4 = _a[3];\n    }","contract":"FoxyFam","time":0},{"type":"external-function ","before":"function setPresaleWallets(address[] memory _a, uint256[] memory _amount) public onlyOwner {\n        for(uint256 i; i < _a.length; i++){\n            presaleWallets[_a[i]] = _amount[i];\n        }\n    }","after":"function setPresaleWallets(address[] calldata _a, uint256[] calldata _amount) public onlyOwner {\n        for(uint256 i; i < _a.length; i++){\n            presaleWallets[_a[i]] = _amount[i];\n        }\n    }","contract":"FoxyHounds","time":0},{"type":"external-function ","before":"function claim(uint[] memory ids) external {\n        require(claimActive, \"TRANSACTION: claim is not active\");\n        require(ids.length + claimed <= claimSupply, \"SUPPLY: Value exceeds totalSupply\");\n        uint qty = 0;\n        for(uint i=0; i < ids.length;i++){\n            uint tokenId = ids[i];\n            require(NFT.ownerOf(tokenId) == _msgSender(), \"SENDER IS NOT OWNER\");\n            require(foxyMints[tokenId] != true, \"FOXY ALREADY CLAIMED\");\n            if(foxyMints[tokenId] != true){\n                qty++;\n                uint id = nonce;\n                _safeMint(_msgSender(), id);\n                nonce++;\n                claimed++;\n                foxyMints[tokenId] = true;\n            }\n        }\n        emit Mint(_msgSender(), qty);\n    }","after":"function claim(uint[] calldata ids) external {\n        require(claimActive, \"TRANSACTION: claim is not active\");\n        require(ids.length + claimed <= claimSupply, \"SUPPLY: Value exceeds totalSupply\");\n        uint qty = 0;\n        for(uint i=0; i < ids.length;i++){\n            uint tokenId = ids[i];\n            require(NFT.ownerOf(tokenId) == _msgSender(), \"SENDER IS NOT OWNER\");\n            require(foxyMints[tokenId] != true, \"FOXY ALREADY CLAIMED\");\n            if(foxyMints[tokenId] != true){\n                qty++;\n                uint id = nonce;\n                _safeMint(_msgSender(), id);\n                nonce++;\n                claimed++;\n                foxyMints[tokenId] = true;\n            }\n        }\n        emit Mint(_msgSender(), qty);\n    }","contract":"FoxyHounds","time":0}]}