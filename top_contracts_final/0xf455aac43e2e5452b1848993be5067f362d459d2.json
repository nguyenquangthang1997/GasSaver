{"time":754,"results":[{"type":"loop-duplication","before":"\nstart line 533 column 4, end line 545 column 4\nfor (uint256 i = 0; i < probabilitiesLength; i++) {\n      string memory rerollCandidate = rerollCandidates[i];\n      // can't give any attribute already off limits, if it makes a pet, or their current attribute\n      if (\n        attributeProbabilities[i] == 0 ||\n        existingPets[rerollCandidate] ||\n        i == attribute\n      ) {\n        invalidProbabilitiesToDistribute += attributeProbabilities[i];\n      } else {\n        validAttribute[i] = true;\n      }\n    }\nstart line 547 column 4, end line 559 column 4\nfor (uint256 i = 0; i < probabilitiesLength; i++) {\n      if (validAttribute[i]) {\n        // the math here is to calculate how much of the invalidProbabilitiesToDistribute to\n        // give to each validProbability. If we are removing 2000 from the pool and giving\n        // 1000 its share, the additional probability for 1000 is 1000/8000 * 2000\n        adjustedProbabilities[i] =\n          ((attributeProbabilities[i] * invalidProbabilitiesToDistribute) /\n            (10000 - invalidProbabilitiesToDistribute)) +\n          attributeProbabilities[i];\n      } else {\n        adjustedProbabilities[i] = 0;\n      }\n    }","after":"// merge loop\n\nstart line 533 column 4, end line 545 column 4\nfor (uint256 i = 0; i < probabilitiesLength; i++) {\n      string memory rerollCandidate = rerollCandidates[i];\n      // can't give any attribute already off limits, if it makes a pet, or their current attribute\n      if (\n        attributeProbabilities[i] == 0 ||\n        existingPets[rerollCandidate] ||\n        i == attribute\n      ) {\n        invalidProbabilitiesToDistribute += attributeProbabilities[i];\n      } else {\n        validAttribute[i] = true;\n      }\n    }\nstart line 547 column 4, end line 559 column 4\nfor (uint256 i = 0; i < probabilitiesLength; i++) {\n      if (validAttribute[i]) {\n        // the math here is to calculate how much of the invalidProbabilitiesToDistribute to\n        // give to each validProbability. If we are removing 2000 from the pool and giving\n        // 1000 its share, the additional probability for 1000 is 1000/8000 * 2000\n        adjustedProbabilities[i] =\n          ((attributeProbabilities[i] * invalidProbabilitiesToDistribute) /\n            (10000 - invalidProbabilitiesToDistribute)) +\n          attributeProbabilities[i];\n      } else {\n        adjustedProbabilities[i] = 0;\n      }\n    }","contract":"ZPets","time":0},{"type":"external-function ","before":"function editProbabilities(\n    uint256 slot,\n    uint256[] memory updatedProbabilities\n  ) public onlyOwner {\n    probabilities[slot] = updatedProbabilities;\n  }","after":"function editProbabilities(\n    uint256 slot,\n    uint256[] calldata updatedProbabilities\n  ) public onlyOwner {\n    probabilities[slot] = updatedProbabilities;\n  }","contract":"ZPets","time":0},{"type":"external-function ","before":"function devSingleMint(uint256[] memory serialIds) public onlyOwner {\n    require(!hasDevSingleMinted, \"Can only dev single mint once\");\n    require(serialIds.length == 1, \"Can only mint one pet\");\n    _mint(serialIds);\n    hasDevSingleMinted = true;\n  }","after":"function devSingleMint(uint256[] calldata serialIds) public onlyOwner {\n    require(!hasDevSingleMinted, \"Can only dev single mint once\");\n    require(serialIds.length == 1, \"Can only mint one pet\");\n    _mint(serialIds);\n    hasDevSingleMinted = true;\n  }","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"string NO_OPTIONS = \"no options\";","after":"string constant NO_OPTIONS = \"no options\";","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"uint256 NO_REROLL_OPTIONS = 99999;","after":"uint256 constant NO_REROLL_OPTIONS = 99999;","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"string UNICORN = \"0206999999999999\";","after":"string constant UNICORN = \"0206999999999999\";","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"string ALIEN_ROCK = \"0005999999999999\";","after":"string constant ALIEN_ROCK = \"0005999999999999\";","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"string NORMAL_ROCK = \"0205999999999999\";","after":"string constant NORMAL_ROCK = \"0205999999999999\";","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"string ZOMBIE_ROCK = \"0605999999999999\";","after":"string constant ZOMBIE_ROCK = \"0605999999999999\";","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"uint256 ONE_DAY = 86400;","after":"uint256 constant ONE_DAY = 86400;","contract":"ZPets","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private MAX_SUPPLY = 10000;","after":"uint256 private constant MAX_SUPPLY = 10000;","contract":"ZPets","time":0}]}