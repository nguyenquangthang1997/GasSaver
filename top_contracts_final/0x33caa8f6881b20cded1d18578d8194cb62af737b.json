{"time":94,"results":[{"type":"external-function ","before":"function stake(uint256[] memory _tokenId)\n    external {\n\n      uint256 addedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        IERC721 tokenContract = IERC721(nftContractAddress);\n\n        addedStakingValue += 1;\n\n        tokenContract.safeTransferFrom(_msgSender(), address(this), _tokenId[i]);\n\n        stakedNFTs[_msgSender()][_tokenId[i]] = true;\n      }\n\n      balanceUpdate(_msgSender(), addedStakingValue, false);\n  }","after":"function stake(uint256[] calldata _tokenId)\n    external {\n\n      uint256 addedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        IERC721 tokenContract = IERC721(nftContractAddress);\n\n        addedStakingValue += 1;\n\n        tokenContract.safeTransferFrom(_msgSender(), address(this), _tokenId[i]);\n\n        stakedNFTs[_msgSender()][_tokenId[i]] = true;\n      }\n\n      balanceUpdate(_msgSender(), addedStakingValue, false);\n  }","contract":"EFStakingPool","time":0},{"type":"external-function ","before":"function unstake(uint256[] memory _tokenId)\n    external {\n\n      uint256 subtractedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        require(stakedNFTs[_msgSender()][_tokenId[i]], 'not the owner');\n\n        IERC721 tokenContract = IERC721(nftContractAddress);\n\n        subtractedStakingValue += 1;\n\n        tokenContract.safeTransferFrom(address(this), _msgSender(), _tokenId[i]);\n\n        stakedNFTs[_msgSender()][_tokenId[i]] = false;\n      }\n\n      balanceUpdate(_msgSender(), subtractedStakingValue, true);\n  }","after":"function unstake(uint256[] calldata _tokenId)\n    external {\n\n      uint256 subtractedStakingValue = 0;\n\n      for (uint256 i = 0; i < _tokenId.length; i++) {\n\n        require(stakedNFTs[_msgSender()][_tokenId[i]], 'not the owner');\n\n        IERC721 tokenContract = IERC721(nftContractAddress);\n\n        subtractedStakingValue += 1;\n\n        tokenContract.safeTransferFrom(address(this), _msgSender(), _tokenId[i]);\n\n        stakedNFTs[_msgSender()][_tokenId[i]] = false;\n      }\n\n      balanceUpdate(_msgSender(), subtractedStakingValue, true);\n  }","contract":"EFStakingPool","time":1},{"type":"external-function ","before":"function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","after":"function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }","contract":"EFStakingPool","time":0},{"type":"immutable-restrict-modification ","before":"address public nftContractAddress;","after":"address public immutable nftContractAddress;","contract":"EFStakingPool","time":0}]}