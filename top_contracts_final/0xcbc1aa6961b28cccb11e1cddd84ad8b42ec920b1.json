{"time":83,"results":[{"type":"external-function ","before":"function airdrop(AirdropData[] memory data) external onlyOwner {\n        uint256 total = _totalSupply;\n        for (uint256 i = 0; i < data.length; ++i) {\n            uint256 count = data[i].count * 1e4;\n            total += count;\n            _balances[data[i].account] = count;\n            emit Transfer(address(0), data[i].account, count);\n        }\n        _totalSupply = total;\n        emit airdtop();\n    }","after":"function airdrop(AirdropData[] calldata data) external onlyOwner {\n        uint256 total = _totalSupply;\n        for (uint256 i = 0; i < data.length; ++i) {\n            uint256 count = data[i].count * 1e4;\n            total += count;\n            _balances[data[i].account] = count;\n            emit Transfer(address(0), data[i].account, count);\n        }\n        _totalSupply = total;\n        emit airdtop();\n    }","contract":"ZEUS10000","time":0},{"type":"external-function ","before":"function setExcludeFromFee(address[] memory accounts, bool value)\n        external\n        onlyOwner\n    {\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            _isExcludedFromFee[accounts[i]] = value;\n        }\n    }","after":"function setExcludeFromFee(address[] calldata accounts, bool value)\n        external\n        onlyOwner\n    {\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            _isExcludedFromFee[accounts[i]] = value;\n        }\n    }","contract":"ZEUS10000","time":0}]}