{"time":100,"results":[{"type":"external-function ","before":"function receiveOverHorizon(uint256 fromChain, uint256 toChain, address sender, uint256 sendId, uint256 amount, bytes memory signature) external override {\r\n\r\n        require(signature.length == 65, \"invalid signature length\");\r\n        require(!received[msg.sender][fromChain][sender][sendId]);\r\n\r\n        require(toChain == block.chainid);\r\n\r\n        bytes32 hash = keccak256(abi.encodePacked(msg.sender, fromChain, toChain, sender, sendId, amount));\r\n        bytes32 message = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\r\n\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n\r\n        assembly {\r\n            r := mload(add(signature, 32))\r\n            s := mload(add(signature, 64))\r\n            v := byte(0, mload(add(signature, 96)))\r\n        }\r\n\r\n        require(\r\n            uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\r\n            \"invalid signature 's' value\"\r\n        );\r\n        require(v == 27 || v == 28, \"invalid signature 'v' value\");\r\n\r\n        require(ecrecover(message, v, r, s) == signer);\r\n        require(signer != address(0));\r\n\r\n        _mint(msg.sender, amount);\r\n\r\n        received[msg.sender][fromChain][sender][sendId] = true;\r\n        emit ReceiveOverHorizon(msg.sender, fromChain, sender, sendId, amount);\r\n    }","after":"function receiveOverHorizon(uint256 fromChain, uint256 toChain, address sender, uint256 sendId, uint256 amount, bytes calldata signature) external override {\r\n\r\n        require(signature.length == 65, \"invalid signature length\");\r\n        require(!received[msg.sender][fromChain][sender][sendId]);\r\n\r\n        require(toChain == block.chainid);\r\n\r\n        bytes32 hash = keccak256(abi.encodePacked(msg.sender, fromChain, toChain, sender, sendId, amount));\r\n        bytes32 message = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\r\n\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n\r\n        assembly {\r\n            r := mload(add(signature, 32))\r\n            s := mload(add(signature, 64))\r\n            v := byte(0, mload(add(signature, 96)))\r\n        }\r\n\r\n        require(\r\n            uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\r\n            \"invalid signature 's' value\"\r\n        );\r\n        require(v == 27 || v == 28, \"invalid signature 'v' value\");\r\n\r\n        require(ecrecover(message, v, r, s) == signer);\r\n        require(signer != address(0));\r\n\r\n        _mint(msg.sender, amount);\r\n\r\n        received[msg.sender][fromChain][sender][sendId] = true;\r\n        emit ReceiveOverHorizon(msg.sender, fromChain, sender, sendId, amount);\r\n    }","contract":"EthereumMix","time":0}]}