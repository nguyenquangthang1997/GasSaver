{"time":254,"results":[{"type":"external-function ","before":"function whitelistMembers(\n        address[] memory users,\n        uint8[] memory balances,\n        uint8[] memory limits\n    ) public onlyOwner {\n        require(!saleActive, 'Cant whitelist');\n        for (uint16 i = 0; i < users.length; i++) {\n            _waList[users[i]].exists = true;\n            _waList[users[i]].balance = balances[i];\n            _waList[users[i]].limit = limits[i];\n        }\n    }","after":"function whitelistMembers(\n        address[] calldata users,\n        uint8[] calldata balances,\n        uint8[] calldata limits\n    ) public onlyOwner {\n        require(!saleActive, 'Cant whitelist');\n        for (uint16 i = 0; i < users.length; i++) {\n            _waList[users[i]].exists = true;\n            _waList[users[i]].balance = balances[i];\n            _waList[users[i]].limit = limits[i];\n        }\n    }","contract":"Catbotica","time":0},{"type":"external-function ","before":"function removeWhitelistMembers(address[] memory users) public onlyOwner {\n        for (uint8 i = 0; i < users.length; i++) {\n            delete _waList[users[i]];\n        }\n    }","after":"function removeWhitelistMembers(address[] calldata users) public onlyOwner {\n        for (uint8 i = 0; i < users.length; i++) {\n            delete _waList[users[i]];\n        }\n    }","contract":"Catbotica","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseContractURI) public onlyOwner {\n        baseURI = baseContractURI;\n    }","after":"function setBaseURI(string calldata baseContractURI) public onlyOwner {\n        baseURI = baseContractURI;\n    }","contract":"Catbotica","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        emit ProvenanceHashSet(msg.sender, PROVENANCE_HASH, provenanceHash);\n        PROVENANCE_HASH = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        emit ProvenanceHashSet(msg.sender, PROVENANCE_HASH, provenanceHash);\n        PROVENANCE_HASH = provenanceHash;\n    }","contract":"Catbotica","time":0},{"type":"constant-restrict-modification  ","before":"string private contractMetadata = 'contract.json';","after":"string private constant contractMetadata = 'contract.json';","contract":"Catbotica","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public saleStartsAt;","after":"uint256 public immutable saleStartsAt;","contract":"Catbotica","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public publicsaleStartsAt;","after":"uint256 public immutable publicsaleStartsAt;","contract":"Catbotica","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public publicsaleEndsAt;","after":"uint256 public immutable publicsaleEndsAt;","contract":"Catbotica","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public privatesaleStartsAt;","after":"uint256 public immutable privatesaleStartsAt;","contract":"Catbotica","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public privatesaleEndsAt;","after":"uint256 public immutable privatesaleEndsAt;","contract":"Catbotica","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public redemptionEndsAt;","after":"uint256 public immutable redemptionEndsAt;","contract":"Catbotica","time":1}]}