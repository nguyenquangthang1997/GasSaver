{"time":185,"results":[{"type":"external-function ","before":"function approveCertificates(uint256[] memory indexes) public onlyOwner {\n        // TODO: validate index\n        for (uint256 i = 0; i < indexes.length; i++) {\n            approveCertificate(indexes[i]);\n        }\n    }","after":"function approveCertificates(uint256[] calldata indexes) public onlyOwner {\n        // TODO: validate index\n        for (uint256 i = 0; i < indexes.length; i++) {\n            approveCertificate(indexes[i]);\n        }\n    }","contract":"NFToken","time":0},{"type":"external-function ","before":"function addCertificate(\n        uint256 _class,\n        string memory _name,\n        address _owner\n    ) public {\n        uint256 index = nextCertificateId;\n\n        certificateClass[index] = _class;\n        certificateNames[index] = _name;\n        certificateOwners[_owner].push(index);\n        certificateMinted[index] = false;\n        certificateApproved[index] = false;\n\n        certificateOwner[index] = _owner;\n\n        nextCertificateId = nextCertificateId + 1;\n    }","after":"function addCertificate(\n        uint256 _class,\n        string calldata _name,\n        address _owner\n    ) public {\n        uint256 index = nextCertificateId;\n\n        certificateClass[index] = _class;\n        certificateNames[index] = _name;\n        certificateOwners[_owner].push(index);\n        certificateMinted[index] = false;\n        certificateApproved[index] = false;\n\n        certificateOwner[index] = _owner;\n\n        nextCertificateId = nextCertificateId + 1;\n    }","contract":"NFToken","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"NFToken","time":0}]}