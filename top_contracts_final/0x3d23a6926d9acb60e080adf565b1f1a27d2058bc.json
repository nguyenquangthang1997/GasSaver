{"time":252,"results":[{"type":"state-data-arrangement ","before":"\nuint256 public price = 0.05 ether;\nmapping(uint256 => Trait[]) public traitTypes;\nmapping(string => bool) hashToMinted;\nmapping(uint256 => string) internal tokenIdToHash;\nmapping(uint256 => uint256) internal tokenIdToTimestamp;\nmapping(uint256 => uint256) internal tokenIdToRarityCount;\nuint256 public MAX_SUPPLY = 6000;\nuint256 public MAX_PER_MINT = 5;\nuint256 public MAX_MINTS_FOR_ETHER = 2000;\nuint256 SEED_NONCE = 0;\nstring[] LETTERS = [\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"i\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"m\",\n        \"n\",\n        \"o\",\n        \"p\",\n        \"q\",\n        \"r\",\n        \"s\",\n        \"t\",\n        \"u\",\n        \"v\",\n        \"w\",\n        \"x\",\n        \"y\",\n        \"z\"\n    ];\nuint16[][8] TIERS;\naddress ballerbarsAddress;\naddress _owner;\nuint256 public privateAmountMinted;\nbool public saleLive;\nmapping(string => bool) private _usedNonces;\naddress private _artistAddress = 0x695652942cD5bE0Fe488645974dF15c3782fd552;\naddress private _signerAddress = 0xCBf2a728bDFDb683573a88E1c359FE892f9De049;","after":"uint256 public price = 0.05 ether;\nmapping(uint256 => Trait[]) public traitTypes;\nmapping(string => bool) hashToMinted;\nmapping(uint256 => string) internal tokenIdToHash;\nmapping(uint256 => uint256) internal tokenIdToTimestamp;\nmapping(uint256 => uint256) internal tokenIdToRarityCount;\nuint256 public MAX_SUPPLY = 6000;\nuint256 public MAX_PER_MINT = 5;\nuint256 public MAX_MINTS_FOR_ETHER = 2000;\nuint256 SEED_NONCE = 0;\nstring[] LETTERS = [\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"i\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"m\",\n        \"n\",\n        \"o\",\n        \"p\",\n        \"q\",\n        \"r\",\n        \"s\",\n        \"t\",\n        \"u\",\n        \"v\",\n        \"w\",\n        \"x\",\n        \"y\",\n        \"z\"\n    ];\nuint16[][8] TIERS;\nuint256 public privateAmountMinted;\nmapping(string => bool) private _usedNonces;\naddress ballerbarsAddress;\naddress _owner;\naddress private _artistAddress = 0x695652942cD5bE0Fe488645974dF15c3782fd552;\naddress private _signerAddress = 0xCBf2a728bDFDb683573a88E1c359FE892f9De049;\nbool public saleLive;\n","contract":"Chains","time":1},{"type":"external-function ","before":"function buy(bytes32 signerHash, bytes memory signature, string memory nonce, uint256 tokenQuantity) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n\n        require(matchAddresSigner(signerHash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(!_usedNonces[nonce], \"HASH_USED\");\n        require(hashTransaction(msg.sender, tokenQuantity, nonce) == signerHash, \"HASH_FAIL\");\n\n        \n        require(totalSupply() <= MAX_MINTS_FOR_ETHER, \"OUT_OF_STOCK_FOR_ETHER\");\n        require(tokenQuantity <= MAX_PER_MINT, \"EXCEED_PER_MINT\");\n\n        require(price * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n        \n        for(uint256 i = 0; i < tokenQuantity; i++) {\n             mintInternal();\n        }\n        \n        _usedNonces[nonce] = true;\n    }","after":"function buy(bytes32 signerHash, bytes calldata signature, string calldata nonce, uint256 tokenQuantity) external payable {\n        require(saleLive, \"SALE_CLOSED\");\n\n        require(matchAddresSigner(signerHash, signature), \"DIRECT_MINT_DISALLOWED\");\n        require(!_usedNonces[nonce], \"HASH_USED\");\n        require(hashTransaction(msg.sender, tokenQuantity, nonce) == signerHash, \"HASH_FAIL\");\n\n        \n        require(totalSupply() <= MAX_MINTS_FOR_ETHER, \"OUT_OF_STOCK_FOR_ETHER\");\n        require(tokenQuantity <= MAX_PER_MINT, \"EXCEED_PER_MINT\");\n\n        require(price * tokenQuantity <= msg.value, \"INSUFFICIENT_ETH\");\n        \n        for(uint256 i = 0; i < tokenQuantity; i++) {\n             mintInternal();\n        }\n        \n        _usedNonces[nonce] = true;\n    }","contract":"Chains","time":0},{"type":"external-function ","before":"function addTraitType(uint256 _traitTypeIndex, Trait[] memory traits)\n        public\n        onlyOwner\n    {\n        for (uint256 i = 0; i < traits.length; i++) {\n            traitTypes[_traitTypeIndex].push(\n                Trait(\n                    traits[i].traitName,\n                    traits[i].traitType,\n                    traits[i].pixels,\n                    traits[i].pixelCount\n                )\n            );\n        }\n\n        return;\n    }","after":"function addTraitType(uint256 _traitTypeIndex, Trait[] calldata traits)\n        public\n        onlyOwner\n    {\n        for (uint256 i = 0; i < traits.length; i++) {\n            traitTypes[_traitTypeIndex].push(\n                Trait(\n                    traits[i].traitName,\n                    traits[i].traitType,\n                    traits[i].pixels,\n                    traits[i].pixelCount\n                )\n            );\n        }\n\n        return;\n    }","contract":"Chains","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_SUPPLY = 6000;","after":"uint256 public constant MAX_SUPPLY = 6000;","contract":"Chains","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_PER_MINT = 5;","after":"uint256 public constant MAX_PER_MINT = 5;","contract":"Chains","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_MINTS_FOR_ETHER = 2000;","after":"uint256 public constant MAX_MINTS_FOR_ETHER = 2000;","contract":"Chains","time":1},{"type":"constant-restrict-modification  ","before":"address private _artistAddress = 0x695652942cD5bE0Fe488645974dF15c3782fd552;","after":"address private constant _artistAddress = 0x695652942cD5bE0Fe488645974dF15c3782fd552;","contract":"Chains","time":1}]}