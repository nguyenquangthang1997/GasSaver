{"time":157,"results":[{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner notLocked {\n        PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner notLocked {\n        PROVENANCE = provenanceHash;\n    }","contract":"LoopyCups","time":0},{"type":"external-function ","before":"function setMetadataBaseURI(string memory newURI) public onlyOwner notLocked {\n        baseMetadataURI = newURI;\n    }","after":"function setMetadataBaseURI(string calldata newURI) public onlyOwner notLocked {\n        baseMetadataURI = newURI;\n    }","contract":"LoopyCups","time":0},{"type":"external-function ","before":"function modifyBackupBaseURI(uint256 backupNumber, string memory newURI) external onlyOwner notLocked {\n        backupURIs[backupNumber] = newURI;\n    }","after":"function modifyBackupBaseURI(uint256 backupNumber, string calldata newURI) external onlyOwner notLocked {\n        backupURIs[backupNumber] = newURI;\n    }","contract":"LoopyCups","time":0},{"type":"external-function ","before":"function addBackupBaseURI(uint256 backupNumber, string memory newURI) external onlyOwner {\n        require(bytes(backupURIs[backupNumber]).length == 0, \"LoopyCups: URI already exists for backupNumber\");\n        backupURIs[backupNumber] = newURI;\n    }","after":"function addBackupBaseURI(uint256 backupNumber, string calldata newURI) external onlyOwner {\n        require(bytes(backupURIs[backupNumber]).length == 0, \"LoopyCups: URI already exists for backupNumber\");\n        backupURIs[backupNumber] = newURI;\n    }","contract":"LoopyCups","time":0}]}