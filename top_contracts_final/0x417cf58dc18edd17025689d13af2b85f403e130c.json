{"time":211,"results":[{"type":"de-morgan-condition ","before":"!(char >= 0x30 && char <= 0x39) && //9-0\n                !(char >= 0x41 && char <= 0x5A)","after":"!((char >= 0x30 && char <= 0x39) && //9-0\n                (char >= 0x41 && char <= 0x5A))","loc":{"start":{"line":2121,"column":16},"end":{"line":2122,"column":46}},"contract":"NFToken","time":0},{"type":"external-function ","before":"function changeArt(\n        uint256 tokenId,\n        string memory newRoomOwnerName,\n        uint256 newTimeStamp\n    ) public {\n        address owner = ownerOf(tokenId);\n\n        require(_msgSender() == owner, \"ERC721: caller is not the owner\");\n        require(\n            validateFutureTimestamp(newTimeStamp) == true,\n            \"Not a valid time\"\n        );\n        require(validateName(newRoomOwnerName) == true, \"Not a valid new name\");\n        require(\n            sha256(bytes(newRoomOwnerName)) !=\n                sha256(bytes(tokenTitles[tokenId])),\n            \"New name is same as the current one\"\n        );\n        require(\n            isNameReserved(newRoomOwnerName) == false,\n            \"Name already taken\"\n        );\n        require(bytes(tokenTitles[tokenId]).length == 0,\n            \"This Crypterior already has a name\"\n        );\n    \n        toggleReserveName(newRoomOwnerName, true);\n        tokenTitles[tokenId] = newRoomOwnerName;\n        tokenTimes[tokenId] = newTimeStamp;\n\n        emit ArtChange(tokenId, newRoomOwnerName, newTimeStamp);\n    }","after":"function changeArt(\n        uint256 tokenId,\n        string calldata newRoomOwnerName,\n        uint256 newTimeStamp\n    ) public {\n        address owner = ownerOf(tokenId);\n\n        require(_msgSender() == owner, \"ERC721: caller is not the owner\");\n        require(\n            validateFutureTimestamp(newTimeStamp) == true,\n            \"Not a valid time\"\n        );\n        require(validateName(newRoomOwnerName) == true, \"Not a valid new name\");\n        require(\n            sha256(bytes(newRoomOwnerName)) !=\n                sha256(bytes(tokenTitles[tokenId])),\n            \"New name is same as the current one\"\n        );\n        require(\n            isNameReserved(newRoomOwnerName) == false,\n            \"Name already taken\"\n        );\n        require(bytes(tokenTitles[tokenId]).length == 0,\n            \"This Crypterior already has a name\"\n        );\n    \n        toggleReserveName(newRoomOwnerName, true);\n        tokenTitles[tokenId] = newRoomOwnerName;\n        tokenTimes[tokenId] = newTimeStamp;\n\n        emit ArtChange(tokenId, newRoomOwnerName, newTimeStamp);\n    }","contract":"NFToken","time":0}]}