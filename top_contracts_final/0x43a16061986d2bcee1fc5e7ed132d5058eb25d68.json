{"time":153,"results":[{"type":"external-function ","before":"function setBaseURI (string memory _uri) public onlyOwner {\n        baseURI = _uri;\n    }","after":"function setBaseURI (string calldata _uri) public onlyOwner {\n        baseURI = _uri;\n    }","contract":"Lostgirl","time":0},{"type":"external-function ","before":"function changeName(uint256 _tokenId, string memory _newName) public override {\n        require(tokenEnabled, \"Token not available yet.\");\n\t\tlostToken.burn(msg.sender, nameChangePrice);\n\t\tsuper.changeName(_tokenId, _newName);\n\t}","after":"function changeName(uint256 _tokenId, string calldata _newName) public override {\n        require(tokenEnabled, \"Token not available yet.\");\n\t\tlostToken.burn(msg.sender, nameChangePrice);\n\t\tsuper.changeName(_tokenId, _newName);\n\t}","contract":"Lostgirl","time":0},{"type":"external-function ","before":"function changeBio(uint256 _tokenId, string memory _newBio) public override {\n        require(tokenEnabled, \"Token not available yet.\");\n\t\tlostToken.burn(msg.sender, bioChangePrice);\n\t\tsuper.changeBio(_tokenId, _newBio);\n\t}","after":"function changeBio(uint256 _tokenId, string calldata _newBio) public override {\n        require(tokenEnabled, \"Token not available yet.\");\n\t\tlostToken.burn(msg.sender, bioChangePrice);\n\t\tsuper.changeBio(_tokenId, _newBio);\n\t}","contract":"Lostgirl","time":0},{"type":"external-function ","before":"function changeName(uint256 tokenId, string memory newName) public virtual {\n\t\taddress owner = ownerOf(tokenId);\n\n\t\trequire(_msgSender() == owner, \"You do not own this token.\");\n\t\trequire(validateName(newName) == true, \"Invalid name.\");\n\t\trequire(sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])), \"New name is same as the current one.\");\n\t\trequire(isNameReserved(newName) == false, \"Name already reserved.\");\n\n\t\t// If already named, dereserve old name\n\t\tif (bytes(_tokenName[tokenId]).length > 0) {\n\t\t\ttoggleReserveName(_tokenName[tokenId], false);\n\t\t}\n\t\ttoggleReserveName(newName, true);\n\t\t_tokenName[tokenId] = newName;\n\t\temit NameChange(tokenId, newName);\n\t}","after":"function changeName(uint256 tokenId, string calldata newName) public virtual {\n\t\taddress owner = ownerOf(tokenId);\n\n\t\trequire(_msgSender() == owner, \"You do not own this token.\");\n\t\trequire(validateName(newName) == true, \"Invalid name.\");\n\t\trequire(sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])), \"New name is same as the current one.\");\n\t\trequire(isNameReserved(newName) == false, \"Name already reserved.\");\n\n\t\t// If already named, dereserve old name\n\t\tif (bytes(_tokenName[tokenId]).length > 0) {\n\t\t\ttoggleReserveName(_tokenName[tokenId], false);\n\t\t}\n\t\ttoggleReserveName(newName, true);\n\t\t_tokenName[tokenId] = newName;\n\t\temit NameChange(tokenId, newName);\n\t}","contract":"Lostgirl","time":0},{"type":"external-function ","before":"function changeBio(uint256 _tokenId, string memory _bio) public virtual {\n\t\taddress owner = ownerOf(_tokenId);\n\t\trequire(_msgSender() == owner, \"You do not own this token.\");\n\n\t\t_tokenBio[_tokenId] = _bio;\n\t\temit BioChange(_tokenId, _bio); \n\t}","after":"function changeBio(uint256 _tokenId, string calldata _bio) public virtual {\n\t\taddress owner = ownerOf(_tokenId);\n\t\trequire(_msgSender() == owner, \"You do not own this token.\");\n\n\t\t_tokenBio[_tokenId] = _bio;\n\t\temit BioChange(_tokenId, _bio); \n\t}","contract":"Lostgirl","time":0},{"type":"de-morgan-condition ","before":"!(char >= 0x30 && char <= 0x39) && \n\t\t\t\t!(char >= 0x41 && char <= 0x5A)","after":"!((char >= 0x30 && char <= 0x39) && \n\t\t\t\t(char >= 0x41 && char <= 0x5A))","loc":{"start":{"line":240,"column":4},"end":{"line":241,"column":34}},"contract":"ERC721EnumerableNameable","time":0}]}