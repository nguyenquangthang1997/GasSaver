{"time":195,"results":[{"type":"external-function ","before":"function claimByOwner(address _to, uint[] memory _tokenIds) public onlyOwner {\n        require(hasDropFinished, \"AngryApeArmyWeapons::claimByOwner: Drop hasn't finished yet.\");\n        require(_tokenIds.length <= MAX_CLAIM, \"AngryApeArmyWeapons::claimByOwner: Cannot claim more than MAX_CLAIM\");\n\n        for (uint i = 0; i < _tokenIds.length; i++) {\n            require(_tokenIds[i] < MAX_WEAPONS, \"AngryApeArmyWeapons::claimByOwner: Token outside valid range.\");\n            _safeMint(_to, _tokenIds[i]);\n            emit WeaponMinted(_tokenIds[i], _to);\n        }\n    }","after":"function claimByOwner(address _to, uint[] calldata _tokenIds) public onlyOwner {\n        require(hasDropFinished, \"AngryApeArmyWeapons::claimByOwner: Drop hasn't finished yet.\");\n        require(_tokenIds.length <= MAX_CLAIM, \"AngryApeArmyWeapons::claimByOwner: Cannot claim more than MAX_CLAIM\");\n\n        for (uint i = 0; i < _tokenIds.length; i++) {\n            require(_tokenIds[i] < MAX_WEAPONS, \"AngryApeArmyWeapons::claimByOwner: Token outside valid range.\");\n            _safeMint(_to, _tokenIds[i]);\n            emit WeaponMinted(_tokenIds[i], _to);\n        }\n    }","contract":"AngryApeArmyWeapons","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _URI) external onlyOwner {\n        baseURI = _URI;\n    }","after":"function setBaseURI(string calldata _URI) external onlyOwner {\n        baseURI = _URI;\n    }","contract":"AngryApeArmyWeapons","time":0},{"type":"external-function ","before":"function setContractURI(string memory _URI) external onlyOwner {\n        contractURI = _URI;\n    }","after":"function setContractURI(string calldata _URI) external onlyOwner {\n        contractURI = _URI;\n    }","contract":"AngryApeArmyWeapons","time":0}]}