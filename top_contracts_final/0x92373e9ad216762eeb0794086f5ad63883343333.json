{"time":142,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _INTERFACE_ID_ERC2981 = 0x2a55205a;\nstring baseUri;\nmapping(string => uint8) hashes;\nuint256 private MAX_SUPPLY = 10000;\naddress private _royaltiesReceiver;\nuint256 private royaltiesPercentage;\nuint256 private mintPrice;\nbool private saleIsActive;\nmapping(address => uint256) private _deposits;","after":"string baseUri;\nmapping(string => uint8) hashes;\nuint256 private MAX_SUPPLY = 10000;\nuint256 private royaltiesPercentage;\nuint256 private mintPrice;\nmapping(address => uint256) private _deposits;\naddress private _royaltiesReceiver;\nbytes4 private constant _INTERFACE_ID_ERC2981 = 0x2a55205a;\nbool private saleIsActive;\n","contract":"Token","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _newUri)\n    external onlyOwner {\n        baseUri = _newUri;\n    }","after":"function setBaseURI(string calldata _newUri)\n    external onlyOwner {\n        baseUri = _newUri;\n    }","contract":"Token","time":0},{"type":"external-function ","before":"function setTokenURI(uint256 tokenId, string memory _tokenURI) public {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _setTokenURI(tokenId, _tokenURI);\n    }","after":"function setTokenURI(uint256 tokenId, string calldata _tokenURI) public {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _setTokenURI(tokenId, _tokenURI);\n    }","contract":"Token","time":0}]}