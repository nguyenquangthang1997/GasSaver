{"time":186,"results":[{"type":"de-morgan-condition ","before":"!(character >= 0x30 && character <= 0x39) &&\r\n                !(character >= 0x41 && character <= 0x5A)","after":"!((character >= 0x30 && character <= 0x39) &&\r\n                (character >= 0x41 && character <= 0x5A))","loc":{"start":{"line":328,"column":16},"end":{"line":329,"column":56}},"contract":"ImmortalPhoenix","time":0},{"type":"external-function ","before":"function changeName(string memory _name, uint _tokenId) external {\r\n\r\n        require(_msgSender() == ownerOf(_tokenId), \"Only the owner of this token can change the name\");\r\n\r\n        require(validateName(_name) == true, \"Invalid name\");\r\n\r\n        require(nameTaken[_name] == false, \"Name is already taken\");\r\n\r\n        string memory currentName = tokenIdToPhoenix[_tokenId].name;\r\n\r\n        blazeToken.burn(_msgSender(), nameCost);\r\n\r\n        if(bytes(currentName).length == 0) {\r\n\r\n            nameTaken[currentName] = false;\r\n\r\n        }\r\n\r\n        nameTaken[_name] = true;\r\n\r\n        tokenIdToPhoenix[_tokenId].name = _name;\r\n\r\n        emit NameChanged(_tokenId, _msgSender());\r\n\r\n    }","after":"function changeName(string calldata _name, uint _tokenId) external {\r\n\r\n        require(_msgSender() == ownerOf(_tokenId), \"Only the owner of this token can change the name\");\r\n\r\n        require(validateName(_name) == true, \"Invalid name\");\r\n\r\n        require(nameTaken[_name] == false, \"Name is already taken\");\r\n\r\n        string memory currentName = tokenIdToPhoenix[_tokenId].name;\r\n\r\n        blazeToken.burn(_msgSender(), nameCost);\r\n\r\n        if(bytes(currentName).length == 0) {\r\n\r\n            nameTaken[currentName] = false;\r\n\r\n        }\r\n\r\n        nameTaken[_name] = true;\r\n\r\n        tokenIdToPhoenix[_tokenId].name = _name;\r\n\r\n        emit NameChanged(_tokenId, _msgSender());\r\n\r\n    }","contract":"ImmortalPhoenix","time":0},{"type":"constant-restrict-modification  ","before":"uint public price = 0.055 ether;","after":"uint public constant price = 0.055 ether;","contract":"ImmortalPhoenix","time":1}]}