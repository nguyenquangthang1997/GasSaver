{"time":121,"results":[{"type":"external-function ","before":"function transferToOtherBlockchain(uint128 blockchain, uint256 amount, string memory newAddress) external whenNotPaused\n    {\n        require( \n            amount >= minTokenAmount,\n            \"swapContract: Less than required minimum of tokens requested\"\n        );\n        require(\n            bytes(newAddress).length > 0,\n            \"swapContract: No destination address provided\"\n        );\n        require(\n            existingOtherBlockchain[blockchain] && blockchain != numOfThisBlockchain,\n            \"swapContract: Wrong choose of blockchain\"\n        );\n        require(\n            amount >= feeAmountOfBlockchain[blockchain],\n            \"swapContract: Not enough amount of tokens\"\n        );\n        address sender = _msgSender();\n        require(\n            tokenAddress.balanceOf(sender) >= amount,\n            \"swapContract: Not enough balance\"\n        );\n        TransferHelper.safeTransferFrom(address(tokenAddress), sender, address(this), amount);\n        emit TransferToOtherBlockchain(blockchain, sender, amount, newAddress);\n    }","after":"function transferToOtherBlockchain(uint128 blockchain, uint256 amount, string calldata newAddress) external whenNotPaused\n    {\n        require( \n            amount >= minTokenAmount,\n            \"swapContract: Less than required minimum of tokens requested\"\n        );\n        require(\n            bytes(newAddress).length > 0,\n            \"swapContract: No destination address provided\"\n        );\n        require(\n            existingOtherBlockchain[blockchain] && blockchain != numOfThisBlockchain,\n            \"swapContract: Wrong choose of blockchain\"\n        );\n        require(\n            amount >= feeAmountOfBlockchain[blockchain],\n            \"swapContract: Not enough amount of tokens\"\n        );\n        address sender = _msgSender();\n        require(\n            tokenAddress.balanceOf(sender) >= amount,\n            \"swapContract: Not enough balance\"\n        );\n        TransferHelper.safeTransferFrom(address(tokenAddress), sender, address(this), amount);\n        emit TransferToOtherBlockchain(blockchain, sender, amount, newAddress);\n    }","contract":"swapContract","time":0},{"type":"immutable-restrict-modification ","before":"uint128 public numOfThisBlockchain;","after":"uint128 public immutable numOfThisBlockchain;","contract":"swapContract","time":0}]}