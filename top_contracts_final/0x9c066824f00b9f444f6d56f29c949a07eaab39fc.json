{"time":135,"results":[{"type":"external-function ","before":"function setContractURI(string memory newuri) public onlyOwner {\n    _contractURI = newuri;\n  }","after":"function setContractURI(string calldata newuri) public onlyOwner {\n    _contractURI = newuri;\n  }","contract":"SlimHoodsSpecials","time":0},{"type":"external-function ","before":"function setURI(string memory newuri) public onlyOwner {\n    _setURI(newuri);\n  }","after":"function setURI(string calldata newuri) public onlyOwner {\n    _setURI(newuri);\n  }","contract":"SlimHoodsSpecials","time":0},{"type":"external-function ","before":"function mintSpecialForSlimHoods(uint256 specialNumber, uint256[] memory hoodIds) public virtual {\n    require(availableSpecialNumbers[specialNumber], \"No special for given number\");\n    require(_saleStates[specialNumber] == SaleState.Open, \"Sale is closed\");\n\n    uint256 hoodId;\n    for (uint256 i = 0; i < hoodIds.length; i++) {\n      hoodId = hoodIds[i];\n\n      require(_slimhoodsContract.ownerOf(hoodId) == msg.sender, \"Wallet doesn't hold given SlimHood\");\n      require(!specialHasBeenMinted(specialNumber, hoodId), \"Special already minted for this SlimHood\");\n\n      _minted[specialNumber].add(hoodId);\n      _mint(msg.sender, specialNumber, 1, \"\");\n    }\n  }","after":"function mintSpecialForSlimHoods(uint256 specialNumber, uint256[] calldata hoodIds) public virtual {\n    require(availableSpecialNumbers[specialNumber], \"No special for given number\");\n    require(_saleStates[specialNumber] == SaleState.Open, \"Sale is closed\");\n\n    uint256 hoodId;\n    for (uint256 i = 0; i < hoodIds.length; i++) {\n      hoodId = hoodIds[i];\n\n      require(_slimhoodsContract.ownerOf(hoodId) == msg.sender, \"Wallet doesn't hold given SlimHood\");\n      require(!specialHasBeenMinted(specialNumber, hoodId), \"Special already minted for this SlimHood\");\n\n      _minted[specialNumber].add(hoodId);\n      _mint(msg.sender, specialNumber, 1, \"\");\n    }\n  }","contract":"SlimHoodsSpecials","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"SlimHoodsSpecials","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"SlimHoodsSpecials","time":0},{"type":"immutable-restrict-modification ","before":"address public slimhoodsAddress;","after":"address public immutable slimhoodsAddress;","contract":"SlimHoodsSpecials","time":0}]}