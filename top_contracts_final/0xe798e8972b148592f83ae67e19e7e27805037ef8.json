{"time":254,"results":[{"type":"external-function ","before":"function setMetaDataUri(string memory metadataUri_) public onlyOwner {\n        require(!lockMeta, \"Metadata is locked\");\n        metadataUri = metadataUri_;\n    }","after":"function setMetaDataUri(string calldata metadataUri_) public onlyOwner {\n        require(!lockMeta, \"Metadata is locked\");\n        metadataUri = metadataUri_;\n    }","contract":"PowerUpCharacter","time":0},{"type":"immutable-restrict-modification ","before":"uint public maxSupply;","after":"uint public immutable maxSupply;","contract":"PowerUpCharacter","time":1},{"type":"external-function ","before":"function setMedataDataUri(string memory metadataUri) public onlyOwner {\n        _setURI(metadataUri);\n    }","after":"function setMedataDataUri(string calldata metadataUri) public onlyOwner {\n        _setURI(metadataUri);\n    }","contract":"PowerUpMembershipPass1155Merkle","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"PowerUpMembershipPass1155Merkle","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"PowerUpMembershipPass1155Merkle","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"PowerUp Membership Passes\";","after":"string public constant name = \"PowerUp Membership Passes\";","contract":"PowerUpMembershipPass1155Merkle","time":1}]}