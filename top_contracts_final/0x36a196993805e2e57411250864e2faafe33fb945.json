{"time":167,"results":[{"type":"external-function ","before":"function changeName(uint256 tokenId, string memory newName)\n        public\n        override\n    {\n        require(nameChangeOpen, \"You can not change the name yet\");\n        nameChangeToken.burnFrom(_msgSender(), nameChangePrice);\n        super.changeName(tokenId, newName);\n    }","after":"function changeName(uint256 tokenId, string calldata newName)\n        public\n        override\n    {\n        require(nameChangeOpen, \"You can not change the name yet\");\n        nameChangeToken.burnFrom(_msgSender(), nameChangePrice);\n        super.changeName(tokenId, newName);\n    }","contract":"FastFoodDoges","time":0},{"type":"external-function ","before":"function changeBio(uint256 tokenId, string memory _bio) public override {\n        require(nameChangeOpen, \"You can not change the bio yet\");\n        nameChangeToken.burnFrom(_msgSender(), bioChangePrice);\n        super.changeBio(tokenId, _bio);\n    }","after":"function changeBio(uint256 tokenId, string calldata _bio) public override {\n        require(nameChangeOpen, \"You can not change the bio yet\");\n        nameChangeToken.burnFrom(_msgSender(), bioChangePrice);\n        super.changeBio(tokenId, _bio);\n    }","contract":"FastFoodDoges","time":0},{"type":"external-function ","before":"function changeBio(uint256 _tokenId, string memory _bio) public virtual {\n\t\taddress owner = ownerOf(_tokenId);\n\t\trequire(_msgSender() == owner, \"ERC721: caller is not the owner\");\n\n\t\tbio[_tokenId] = _bio;\n\t\temit BioChange(_tokenId, _bio); \n\t}","after":"function changeBio(uint256 _tokenId, string calldata _bio) public virtual {\n\t\taddress owner = ownerOf(_tokenId);\n\t\trequire(_msgSender() == owner, \"ERC721: caller is not the owner\");\n\n\t\tbio[_tokenId] = _bio;\n\t\temit BioChange(_tokenId, _bio); \n\t}","contract":"FastFoodDoges","time":0},{"type":"external-function ","before":"function changeName(uint256 tokenId, string memory newName) public virtual {\n\t\taddress owner = ownerOf(tokenId);\n\n\t\trequire(_msgSender() == owner, \"ERC721: caller is not the owner\");\n\t\trequire(validateName(newName) == true, \"Not a valid new name\");\n\t\trequire(sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])), \"New name is same as the current one\");\n\t\trequire(isNameReserved(newName) == false, \"Name already reserved\");\n\n\t\t// If already named, dereserve old name\n\t\tif (bytes(_tokenName[tokenId]).length > 0) {\n\t\t\ttoggleReserveName(_tokenName[tokenId], false);\n\t\t}\n\t\ttoggleReserveName(newName, true);\n\t\t_tokenName[tokenId] = newName;\n\t\temit NameChange(tokenId, newName);\n\t}","after":"function changeName(uint256 tokenId, string calldata newName) public virtual {\n\t\taddress owner = ownerOf(tokenId);\n\n\t\trequire(_msgSender() == owner, \"ERC721: caller is not the owner\");\n\t\trequire(validateName(newName) == true, \"Not a valid new name\");\n\t\trequire(sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])), \"New name is same as the current one\");\n\t\trequire(isNameReserved(newName) == false, \"Name already reserved\");\n\n\t\t// If already named, dereserve old name\n\t\tif (bytes(_tokenName[tokenId]).length > 0) {\n\t\t\ttoggleReserveName(_tokenName[tokenId], false);\n\t\t}\n\t\ttoggleReserveName(newName, true);\n\t\t_tokenName[tokenId] = newName;\n\t\temit NameChange(tokenId, newName);\n\t}","contract":"FastFoodDoges","time":0},{"type":"immutable-restrict-modification ","before":"address public fffWallet;","after":"address public immutable fffWallet;","contract":"FastFoodDoges","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public babyDogeCount = 0;","after":"uint256 public constant babyDogeCount = 0;","contract":"FastFoodDoges","time":1},{"type":"immutable-restrict-modification ","before":"bytes32 public whiteListRoot;","after":"bytes32 public immutable whiteListRoot;","contract":"FastFoodDoges","time":1},{"type":"de-morgan-condition ","before":"!(char >= 0x30 && char <= 0x39) && //9-0\n\t\t\t\t!(char >= 0x41 && char <= 0x5A)","after":"!((char >= 0x30 && char <= 0x39) && //9-0\n\t\t\t\t(char >= 0x41 && char <= 0x5A))","loc":{"start":{"line":273,"column":4},"end":{"line":274,"column":34}},"contract":"ERC721Namable","time":0}]}