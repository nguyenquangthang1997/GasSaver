{"time":145,"results":[{"type":"external-function ","before":"function mint(uint256 _mintAmount, string memory _signature) public payable mintCompliance(_mintAmount) {\n    \n    if (presaleActive == true){\n        require(!paused, \"the contract is paused\");\n        require(presaleActive, \"Presale is not Active!\");\n        require(keccak256(abi.encodePacked((signature))) == keccak256(abi.encodePacked((_signature))), \"Invalid Signature\");\n        require(msg.value >= presaleCost * _mintAmount, \"Balance too low\");\n\n    \n            uint256 ownerMintedCount = addressMintedBalance[msg.sender];\n            require(ownerMintedCount + _mintAmount <= nftPerWLAddressLimit, \"max NFT per presale tx exceeded\");\n            \n        \n            _mintLoop(msg.sender, _mintAmount);\n    }\n\n    if (presaleActive == false){\n    require(!paused, \"the contract is paused\");\n    require(!presaleActive, \"Presale is still active\");\n    require(msg.value >= cost * _mintAmount, \"Balance too low\");\n        \n        _mintLoop(msg.sender, _mintAmount);\n  \n    }\n    }","after":"function mint(uint256 _mintAmount, string calldata _signature) public payable mintCompliance(_mintAmount) {\n    \n    if (presaleActive == true){\n        require(!paused, \"the contract is paused\");\n        require(presaleActive, \"Presale is not Active!\");\n        require(keccak256(abi.encodePacked((signature))) == keccak256(abi.encodePacked((_signature))), \"Invalid Signature\");\n        require(msg.value >= presaleCost * _mintAmount, \"Balance too low\");\n\n    \n            uint256 ownerMintedCount = addressMintedBalance[msg.sender];\n            require(ownerMintedCount + _mintAmount <= nftPerWLAddressLimit, \"max NFT per presale tx exceeded\");\n            \n        \n            _mintLoop(msg.sender, _mintAmount);\n    }\n\n    if (presaleActive == false){\n    require(!paused, \"the contract is paused\");\n    require(!presaleActive, \"Presale is still active\");\n    require(msg.value >= cost * _mintAmount, \"Balance too low\");\n        \n        _mintLoop(msg.sender, _mintAmount);\n  \n    }\n    }","contract":"RBDCC","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","after":"function setBaseExtension(string calldata _newBaseExtension) public onlyOwner {\n    baseExtension = _newBaseExtension;\n  }","contract":"RBDCC","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 10000;","after":"uint256 public constant maxSupply = 10000;","contract":"RBDCC","time":0}]}