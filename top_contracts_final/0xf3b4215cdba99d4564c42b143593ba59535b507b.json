{"time":177,"results":[{"type":"external-function ","before":"function setBaseTokenURI(string memory baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","after":"function setBaseTokenURI(string calldata baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","contract":"HalloweenDorkis","time":0},{"type":"external-function ","before":"function mintFreeHalloweenDorkis(uint256 [] memory tokenIds) external {\n        require(freeMintIsActive, \"Free Mint Sale must be active to mint the Free Dorkis\");\n        preMintChecks(tokenIds.length);\n        for(uint i = 0; i < tokenIds.length; i++) {\n            require(dorkis.ownerOf(tokenIds[i]) == msg.sender);\n            _safeMint(msg.sender, tokenIds[i]);\n            hasMinted[tokenIds[i]]=true;\n        }\n    }","after":"function mintFreeHalloweenDorkis(uint256 [] calldata tokenIds) external {\n        require(freeMintIsActive, \"Free Mint Sale must be active to mint the Free Dorkis\");\n        preMintChecks(tokenIds.length);\n        for(uint i = 0; i < tokenIds.length; i++) {\n            require(dorkis.ownerOf(tokenIds[i]) == msg.sender);\n            _safeMint(msg.sender, tokenIds[i]);\n            hasMinted[tokenIds[i]]=true;\n        }\n    }","contract":"HalloweenDorkis","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public MAX_TOKENS;","after":"uint256 public immutable MAX_TOKENS;","contract":"HalloweenDorkis","time":0},{"type":"constant-restrict-modification  ","before":"address private dorkisContract  = 0x0588a0182eE72F74D0BA3b1fC6f5109599A46A9C;","after":"address private constant dorkisContract  = 0x0588a0182eE72F74D0BA3b1fC6f5109599A46A9C;","contract":"HalloweenDorkis","time":0},{"type":"state-data-arrangement ","before":"\nstring public DORKIS_PROVENANCE = \"\";\nuint256 public dorksPrice = 70000000000000000;\nuint public constant MAX_PURCHASE = 10;\nuint public constant MAX_RESERVE = 30;\nuint public constant MAX_SUPPLY_PER_ADDRESS = 100;\nuint256 public MAX_DORKS;\nbool public saleIsActive;\nbool public paybackIsActive;\naddress payable[] private addr = new address payable[](1);\nuint256[] private royalties = new uint256[](1);\nstring private _baseTokenURI = \"ipfs://Qmb5xMEc738Ra25j4jTiAGNfqtQ17E9kUWGpJWN3utAdGm/\";\naddress private constant TORI = 0x51Be0a47282afbE3a330F7738A0Ab5b277810Fe4;\naddress private constant FRANK = 0xF40Fd88ac59A206D009A07F8c09828a01e2ACC0d;\naddress private constant FCCVIEW = 0xf450a5d6C4205ca8151fb1c6FAF49A02c8A527FC;\naddress private constant DEAD = 0x000000000000000000000000000000000000dEaD;","after":"string public DORKIS_PROVENANCE = \"\";\nuint256 public dorksPrice = 70000000000000000;\nuint public constant MAX_PURCHASE = 10;\nuint public constant MAX_RESERVE = 30;\nuint public constant MAX_SUPPLY_PER_ADDRESS = 100;\nuint256 public MAX_DORKS;\naddress payable[] private addr = new address payable[](1);\nuint256[] private royalties = new uint256[](1);\nstring private _baseTokenURI = \"ipfs://Qmb5xMEc738Ra25j4jTiAGNfqtQ17E9kUWGpJWN3utAdGm/\";\naddress private constant TORI = 0x51Be0a47282afbE3a330F7738A0Ab5b277810Fe4;\naddress private constant FRANK = 0xF40Fd88ac59A206D009A07F8c09828a01e2ACC0d;\naddress private constant FCCVIEW = 0xf450a5d6C4205ca8151fb1c6FAF49A02c8A527FC;\naddress private constant DEAD = 0x000000000000000000000000000000000000dEaD;\nbool public saleIsActive;\nbool public paybackIsActive;\n","contract":"Dorkis","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n        DORKIS_PROVENANCE = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n        DORKIS_PROVENANCE = provenanceHash;\n    }","contract":"Dorkis","time":0},{"type":"external-function ","before":"function setBaseTokenURI(string memory baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","after":"function setBaseTokenURI(string calldata baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }","contract":"Dorkis","time":0},{"type":"external-function ","before":"function multiBurn(uint256[] memory tokenId) public {\n         for (uint i = 0; i < tokenId.length; i++) {\n             if (_isApprovedOrOwner(_msgSender(), tokenId[i])){\n                transferFrom(_msgSender(),DEAD,tokenId[i]);\n             }\n         }\n    }","after":"function multiBurn(uint256[] calldata tokenId) public {\n         for (uint i = 0; i < tokenId.length; i++) {\n             if (_isApprovedOrOwner(_msgSender(), tokenId[i])){\n                transferFrom(_msgSender(),DEAD,tokenId[i]);\n             }\n         }\n    }","contract":"Dorkis","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public dorksPrice = 70000000000000000;","after":"uint256 public constant dorksPrice = 70000000000000000;","contract":"Dorkis","time":1},{"type":"immutable-restrict-modification ","before":"uint256 public MAX_DORKS;","after":"uint256 public immutable MAX_DORKS;","contract":"Dorkis","time":1}]}