{"time":84,"results":[{"type":"external-function ","before":"function transferExclusive(uint256 amount, uint256 max, bytes32[] memory proof) public returns (uint256){\n        require(_tokenContract.allowance(_ownerAddress, address(this)) >= amount, \"Allowance too low\");\n        \n        bytes32 leaf=keccak256(abi.encode(abi.encodePacked(\"0x\",toAsciiString(msg.sender), uint2str(max))));\n        \n        require(verify(_merkleRoot, leaf, proof), \"Verify failed\");\n        \n        require(claims[msg.sender]+amount <= max, \"Amount not allowed\");\n        \n       _internalTransferFrom(_tokenContract, _ownerAddress, msg.sender, amount);\n       \n       return 1;\n    }","after":"function transferExclusive(uint256 amount, uint256 max, bytes32[] calldata proof) public returns (uint256){\n        require(_tokenContract.allowance(_ownerAddress, address(this)) >= amount, \"Allowance too low\");\n        \n        bytes32 leaf=keccak256(abi.encode(abi.encodePacked(\"0x\",toAsciiString(msg.sender), uint2str(max))));\n        \n        require(verify(_merkleRoot, leaf, proof), \"Verify failed\");\n        \n        require(claims[msg.sender]+amount <= max, \"Amount not allowed\");\n        \n       _internalTransferFrom(_tokenContract, _ownerAddress, msg.sender, amount);\n       \n       return 1;\n    }","contract":"TransferExclusive","time":0}]}