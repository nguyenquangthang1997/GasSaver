{"time":187,"results":[{"type":"external-function ","before":"I and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _token","after":"I and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _token","contract":"Metavaders","time":0},{"type":"external-function ","before":"supply + i );\n        }\n        reserved -= _amount;\n    }\n\n    // Withdraw ETH to owner addresss\n    function withdrawAll() public payable onlyOwner returns (uint256) {\n        uint256 balance = address(this).balance;\n        require(payable(owner()).send(","after":"supply + i );\n        }\n        reserved -= _amount;\n    }\n\n    // Withdraw ETH to owner addresss\n    function withdrawAll() public payable onlyOwner returns (uint256) {\n        uint256 balance = address(this).balance;\n        require(payable(owner()).send(","contract":"Metavaders","time":0},{"type":"constant-restrict-modification  ","before":"══╝  ╚═╝  ╚═╝�","after":"══╝  ╚═╝  ╚═╝�","contract":"Metavaders","time":1}]}