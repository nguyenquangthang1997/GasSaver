{"time":204,"results":[{"type":"external-function ","before":"function updatePacks( \n          uint256[] memory _id, \n          uint256[] memory _costInUnicorns, \n          uint256[] memory _costInRainbows, \n          uint256[] memory _costInEth, \n          uint256[] memory _maxMintsPerAddress,  \n          uint32[] memory _mintTimeStart) \n          external onlyOwner {\n        \n      for (uint256 i; i < _costInUnicorns.length; i++) {\n        PackType memory _packType = packTypes[_id[i]];\n        _packType.costInUnicorns = uint64(_costInUnicorns[i]);\n        _packType.costInRainbows = uint64(_costInRainbows[i]);\n        _packType.costInEth = uint64(_costInEth[i]);\n        _packType.maxMintsPerAddress = uint16(_maxMintsPerAddress[i]);\n        _packType.mintTimeStart = _mintTimeStart[i];\n        packTypes[_id[i]] = _packType;\n      }\n  }","after":"function updatePacks( \n          uint256[] calldata _id, \n          uint256[] calldata _costInUnicorns, \n          uint256[] calldata _costInRainbows, \n          uint256[] calldata _costInEth, \n          uint256[] calldata _maxMintsPerAddress,  \n          uint32[] calldata _mintTimeStart) \n          external onlyOwner {\n        \n      for (uint256 i; i < _costInUnicorns.length; i++) {\n        PackType memory _packType = packTypes[_id[i]];\n        _packType.costInUnicorns = uint64(_costInUnicorns[i]);\n        _packType.costInRainbows = uint64(_costInRainbows[i]);\n        _packType.costInEth = uint64(_costInEth[i]);\n        _packType.maxMintsPerAddress = uint16(_maxMintsPerAddress[i]);\n        _packType.mintTimeStart = _mintTimeStart[i];\n        packTypes[_id[i]] = _packType;\n      }\n  }","contract":"RainiCardPacks","time":0},{"type":"external-function ","before":"function updateMintTimeStarts( \n          uint256[] memory _id,\n          uint32[] memory _mintTimeStart) \n          external onlyOwner {\n        \n      for (uint256 i; i < _id.length; i++) {\n        PackType memory _packType = packTypes[_id[i]];\n        _packType.mintTimeStart = _mintTimeStart[i];\n        packTypes[_id[i]] = _packType;\n      }\n  }","after":"function updateMintTimeStarts( \n          uint256[] calldata _id,\n          uint32[] calldata _mintTimeStart) \n          external onlyOwner {\n        \n      for (uint256 i; i < _id.length; i++) {\n        PackType memory _packType = packTypes[_id[i]];\n        _packType.mintTimeStart = _mintTimeStart[i];\n        packTypes[_id[i]] = _packType;\n      }\n  }","contract":"RainiCardPacks","time":0},{"type":"external-function ","before":"function setcontractURI(string memory _contractURIString)\n    external onlyOwner {\n      contractURIString = _contractURIString;\n  }","after":"function setcontractURI(string calldata _contractURIString)\n    external onlyOwner {\n      contractURIString = _contractURIString;\n  }","contract":"RainiCardPacks","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _baseURIString)\n    external onlyOwner {\n      baseUri = _baseURIString;\n  }","after":"function setBaseURI(string calldata _baseURIString)\n    external onlyOwner {\n      baseUri = _baseURIString;\n  }","contract":"RainiCardPacks","time":0},{"type":"external-function ","before":"function initPacks(\n                     uint256[] memory _packClassId,\n                     uint256[] memory _tokenIdStart, \n                     uint256[] memory _supply, \n                     uint256[] memory _costInUnicorns, \n                     uint256[] memory _costInRainbows, \n                     uint256[] memory _costInEth, \n                     uint256[] memory _maxMintsPerAddress,  \n                     uint32[] memory _mintTimeStart) external onlyOwner {\n      \n      uint256 _maxPackTypeId = maxPackTypeId;\n\n      for (uint256 i; i < _costInUnicorns.length; i++) {\n        _maxPackTypeId++;\n        packTypes[_maxPackTypeId] = PackType({\n            packClassId: uint32(_packClassId[i]),\n            costInUnicorns: uint64(_costInUnicorns[i]),\n            costInRainbows: uint64(_costInRainbows[i]),\n            costInEth: uint64(_costInEth[i]),\n            maxMintsPerAddress: uint16(_maxMintsPerAddress[i]),\n            mintTimeStart: uint32(_mintTimeStart[i]),\n            tokenIdStart: uint32(_tokenIdStart[i]),\n            supply: uint32(_supply[i])\n          });\n      }\n\n      maxPackTypeId = _maxPackTypeId;\n  }","after":"function initPacks(\n                     uint256[] calldata _packClassId,\n                     uint256[] calldata _tokenIdStart, \n                     uint256[] calldata _supply, \n                     uint256[] calldata _costInUnicorns, \n                     uint256[] calldata _costInRainbows, \n                     uint256[] calldata _costInEth, \n                     uint256[] calldata _maxMintsPerAddress,  \n                     uint32[] calldata _mintTimeStart) external onlyOwner {\n      \n      uint256 _maxPackTypeId = maxPackTypeId;\n\n      for (uint256 i; i < _costInUnicorns.length; i++) {\n        _maxPackTypeId++;\n        packTypes[_maxPackTypeId] = PackType({\n            packClassId: uint32(_packClassId[i]),\n            costInUnicorns: uint64(_costInUnicorns[i]),\n            costInRainbows: uint64(_costInRainbows[i]),\n            costInEth: uint64(_costInEth[i]),\n            maxMintsPerAddress: uint16(_maxMintsPerAddress[i]),\n            mintTimeStart: uint32(_mintTimeStart[i]),\n            tokenIdStart: uint32(_tokenIdStart[i]),\n            supply: uint32(_supply[i])\n          });\n      }\n\n      maxPackTypeId = _maxPackTypeId;\n  }","contract":"RainiCardPacks","time":0},{"type":"immutable-restrict-modification ","before":"address private contractOwner;","after":"address private immutable contractOwner;","contract":"RainiCardPacks","time":0}]}