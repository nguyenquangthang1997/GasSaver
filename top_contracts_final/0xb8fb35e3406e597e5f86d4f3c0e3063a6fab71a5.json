{"time":228,"results":[{"type":"de-morgan-condition ","before":"!_isExcludedFromFee[from] && !_isExcludedFromFee[to]","after":"!(_isExcludedFromFee[from] && _isExcludedFromFee[to])","loc":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":63}},"contract":"AnySniper","time":0},{"type":"external-function ","before":"function airdropToWallets(address[] memory airdropWallets, uint256[] memory amount) external onlyOwner() {\n        require(airdropWallets.length == amount.length, \"airdropToWallets:: Arrays must be the same length\");\n        removeAllFee();\n        buyOrSellSwitch = TRANSFER;\n        for(uint256 i = 0; i < airdropWallets.length; i++){\n            address wallet = airdropWallets[i];\n            uint256 airdropAmount = amount[i];\n            _tokenTransfer(msg.sender, wallet, airdropAmount);\n        }\n        restoreAllFee();\n    }","after":"function airdropToWallets(address[] calldata airdropWallets, uint256[] calldata amount) external onlyOwner() {\n        require(airdropWallets.length == amount.length, \"airdropToWallets:: Arrays must be the same length\");\n        removeAllFee();\n        buyOrSellSwitch = TRANSFER;\n        for(uint256 i = 0; i < airdropWallets.length; i++){\n            address wallet = airdropWallets[i];\n            uint256 airdropAmount = amount[i];\n            _tokenTransfer(msg.sender, wallet, airdropAmount);\n        }\n        restoreAllFee();\n    }","contract":"AnySniper","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public manualBurnFrequency = 30 minutes;","after":"uint256 public constant manualBurnFrequency = 30 minutes;","contract":"AnySniper","time":0},{"type":"constant-restrict-modification  ","before":"bool public swapEnabled = false;","after":"bool public constant swapEnabled = false;","contract":"AnySniper","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxWallet;","after":"uint256 public immutable maxWallet;","contract":"AnySniper","time":0},{"type":"immutable-restrict-modification ","before":"address public uniswapV2Pair;","after":"address public immutable uniswapV2Pair;","contract":"AnySniper","time":0}]}