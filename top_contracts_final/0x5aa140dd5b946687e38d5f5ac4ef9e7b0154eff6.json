{"time":182,"results":[{"type":"external-function ","before":"function mintMultipleAsOwner(uint256[] memory _ids) public payable nonReentrant whenNotPaused {\n    require(ownersGrant, \"Space Punk Owners grant period has ended\");\n    require(_ids.length > 0, \"Provide an array of token IDs\");\n    require(balanceOfSpacePunkOwner(msg.sender) >= _ids.length, \"You do not own the required number of Space Punk tokens\");\n\n    for(uint256 i = 0; i < _ids.length; i++) {\n      mintOneAsOwner(_ids[i]);\n    }\n  }","after":"function mintMultipleAsOwner(uint256[] calldata _ids) public payable nonReentrant whenNotPaused {\n    require(ownersGrant, \"Space Punk Owners grant period has ended\");\n    require(_ids.length > 0, \"Provide an array of token IDs\");\n    require(balanceOfSpacePunkOwner(msg.sender) >= _ids.length, \"You do not own the required number of Space Punk tokens\");\n\n    for(uint256 i = 0; i < _ids.length; i++) {\n      mintOneAsOwner(_ids[i]);\n    }\n  }","contract":"SpaceDinosToken","time":0},{"type":"external-function ","before":"function devMint(uint256[] memory _ids) public payable nonReentrant onlyOwner {\n    require(!ownersGrant, \"Owners Grant must be over before you can mint\");\n    require(_ids.length > 0, \"Provide an array of token IDs\");\n\n    for(uint256 i = 0; i < _ids.length; i++) {\n      _safeMint(msg.sender, _ids[i]);\n    }\n  }","after":"function devMint(uint256[] calldata _ids) public payable nonReentrant onlyOwner {\n    require(!ownersGrant, \"Owners Grant must be over before you can mint\");\n    require(_ids.length > 0, \"Provide an array of token IDs\");\n\n    for(uint256 i = 0; i < _ids.length; i++) {\n      _safeMint(msg.sender, _ids[i]);\n    }\n  }","contract":"SpaceDinosToken","time":0}]}