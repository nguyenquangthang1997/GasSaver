{"time":322,"results":[{"type":"immutable-restrict-modification ","before":"uint256 public ownerCut;","after":"uint256 public immutable ownerCut;","contract":"MarsGenesisMartiansAuction","time":0},{"type":"immutable-restrict-modification ","before":"address _deployerAddress;","after":"address immutable _deployerAddress;","contract":"MarsGenesisMartiansAuction","time":0},{"type":"struct-data-arrangement ","before":"\nbool isForSale\nuint tokenId\naddress seller\nuint minValue","after":"uint tokenId\nuint minValue\naddress seller\nbool isForSale\n","contract":"MarsGenesisMartiansAuctionBase","time":0},{"type":"struct-data-arrangement ","before":"\nbool hasBid\nuint tokenId\naddress bidder\nuint value","after":"uint tokenId\nuint value\naddress bidder\nbool hasBid\n","contract":"MarsGenesisMartiansAuctionBase","time":0},{"type":"external-function ","before":"function mintMartians(bytes[] memory signatures, uint[] memory martianIds, uint[] memory landTokenIds, address promoOwner) external payable returns (bool) {                \n        uint total = martianIds.length;\n        require(landTokenIds.length <= total, \"F\");\n\n        if (landTokenIds.length > 0) {\n            require(_reservedMartians >= uint16(landTokenIds.length));\n            \n            for(uint i = 0; i < total; i++) {\n                require(_marsGenesisCoreContract.ownerOf(landTokenIds[i]) == msg.sender || (msg.sender == _deployerAddress && _marsGenesisCoreContract.ownerOf(landTokenIds[i]) == promoOwner), \"E\");\n                require(landTokenIdRedeemed[landTokenIds[i]] == false, \"D\");\n                landTokenIdRedeemed[landTokenIds[i]] = true;\n            }\n            _reservedMartians -= uint16(landTokenIds.length);\n        }\n\n        require(_tokenIdTracker.current() + total + _reservedMartians <= MAX_MARTIANS, \"MAX\");\n\n        address martianOwner;\n        if (hasRole(DEFAULT_ADMIN_ROLE, _msgSender())) {\n            martianOwner = promoOwner;\n        } else {\n            require(msg.value >= 0.08 ether * (total - landTokenIds.length), \"$\");\n            martianOwner = _msgSender();\n        }\n\n        for(uint i = 0; i < total; i++) {\n            require(_mintedIds[martianIds[i]] == false, \"C\");\n\n            bytes32 hash = keccak256(abi.encodePacked(address(this), martianIds[i], msg.sender));\n            address signer = _recoverSigner(hash, signatures[i]);\n            require(signer == _deployerAddress, \"SGN\");\n\n            uint newTokenId = _mintMartian(martianOwner, martianIds[i]);\n\n            if (i < landTokenIds.length) {\n                emit Discovery(martianOwner, newTokenId, martianIds[i], landTokenIds[i]);\n            } else {\n                emit Discovery(martianOwner, newTokenId, martianIds[i], 10001);\n            }\n        }\n        \n        return true;\n    }","after":"function mintMartians(bytes[] calldata signatures, uint[] calldata martianIds, uint[] calldata landTokenIds, address promoOwner) external payable returns (bool) {                \n        uint total = martianIds.length;\n        require(landTokenIds.length <= total, \"F\");\n\n        if (landTokenIds.length > 0) {\n            require(_reservedMartians >= uint16(landTokenIds.length));\n            \n            for(uint i = 0; i < total; i++) {\n                require(_marsGenesisCoreContract.ownerOf(landTokenIds[i]) == msg.sender || (msg.sender == _deployerAddress && _marsGenesisCoreContract.ownerOf(landTokenIds[i]) == promoOwner), \"E\");\n                require(landTokenIdRedeemed[landTokenIds[i]] == false, \"D\");\n                landTokenIdRedeemed[landTokenIds[i]] = true;\n            }\n            _reservedMartians -= uint16(landTokenIds.length);\n        }\n\n        require(_tokenIdTracker.current() + total + _reservedMartians <= MAX_MARTIANS, \"MAX\");\n\n        address martianOwner;\n        if (hasRole(DEFAULT_ADMIN_ROLE, _msgSender())) {\n            martianOwner = promoOwner;\n        } else {\n            require(msg.value >= 0.08 ether * (total - landTokenIds.length), \"$\");\n            martianOwner = _msgSender();\n        }\n\n        for(uint i = 0; i < total; i++) {\n            require(_mintedIds[martianIds[i]] == false, \"C\");\n\n            bytes32 hash = keccak256(abi.encodePacked(address(this), martianIds[i], msg.sender));\n            address signer = _recoverSigner(hash, signatures[i]);\n            require(signer == _deployerAddress, \"SGN\");\n\n            uint newTokenId = _mintMartian(martianOwner, martianIds[i]);\n\n            if (i < landTokenIds.length) {\n                emit Discovery(martianOwner, newTokenId, martianIds[i], landTokenIds[i]);\n            } else {\n                emit Discovery(martianOwner, newTokenId, martianIds[i], 10001);\n            }\n        }\n        \n        return true;\n    }","contract":"MarsGenesisMartiansCore","time":0},{"type":"immutable-restrict-modification ","before":"address private _deployerAddress;","after":"address private immutable _deployerAddress;","contract":"MarsGenesisMartiansCore","time":1},{"type":"struct-data-arrangement ","before":"\naddress founder\nuint equity\nbool approved\nbool isRemoval","after":"uint equity\naddress founder\nbool approved\nbool isRemoval\n","contract":"MarsGenesisMartiansWallet","time":0},{"type":"immutable-restrict-modification ","before":"address private _deployerAddress;","after":"address private immutable _deployerAddress;","contract":"MarsGenesisMartiansWallet","time":0}]}