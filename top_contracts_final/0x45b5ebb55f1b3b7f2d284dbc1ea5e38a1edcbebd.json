{"time":138,"results":[{"type":"external-function ","before":"function setBaseURI(string memory inBaseURI) public onlyOwner\n    {\n        _currentBaseURI = inBaseURI;\n    }","after":"function setBaseURI(string calldata inBaseURI) public onlyOwner\n    {\n        _currentBaseURI = inBaseURI;\n    }","contract":"Monsternauts","time":0},{"type":"external-function ","before":"function airDropGroup(uint256 startToken, address[] memory users) public onlyOwner\n    {\n        require(startToken + users.length <= _initialReserve);\n\n        uint256 airDropToken = startToken;\n        for (uint256 i = 0; i < users.length; i++) {\n            require(ownerOf(airDropToken) == msg.sender);\n            address user = users[i];\n            safeTransferFrom(msg.sender, user, airDropToken);\n            airDropToken++;\n        }\n    }","after":"function airDropGroup(uint256 startToken, address[] calldata users) public onlyOwner\n    {\n        require(startToken + users.length <= _initialReserve);\n\n        uint256 airDropToken = startToken;\n        for (uint256 i = 0; i < users.length; i++) {\n            require(ownerOf(airDropToken) == msg.sender);\n            address user = users[i];\n            safeTransferFrom(msg.sender, user, airDropToken);\n            airDropToken++;\n        }\n    }","contract":"Monsternauts","time":0}]}