{"time":140,"results":[{"type":"state-data-arrangement ","before":"\nstring _baseTokenURI;\nuint256 public _reserved = 50;\nuint256 private _price = 0.04 ether;\nbool public _paused = true;\nbool public _WLpaused = true;\nuint256 public limit = 10000;\nuint256 public maxPerTx = 5;\nuint256  public WL_limit = 3;\nmapping(address => bool) public WL;\nmapping(address => uint) public WL_Mint;\nuint256  public SWL_limit = 1;\nmapping(address => bool) public SWL;\nmapping(address => uint) public SWL_Mint;\naddress public wallet1 = 0x592A830d4883bBEF0fB5eF78eC2a8455F1EbAC4D;\naddress public wallet2 = 0x24d38AF5790189902037d4b81242C3EC2739Ab71;","after":"string _baseTokenURI;\nuint256 public _reserved = 50;\nuint256 private _price = 0.04 ether;\nuint256 public limit = 10000;\nuint256 public maxPerTx = 5;\nuint256  public WL_limit = 3;\nmapping(address => bool) public WL;\nmapping(address => uint) public WL_Mint;\nuint256  public SWL_limit = 1;\nmapping(address => bool) public SWL;\nmapping(address => uint) public SWL_Mint;\naddress public wallet1 = 0x592A830d4883bBEF0fB5eF78eC2a8455F1EbAC4D;\naddress public wallet2 = 0x24d38AF5790189902037d4b81242C3EC2739Ab71;\nbool public _paused = true;\nbool public _WLpaused = true;\n","contract":"MarsPunks","time":0},{"type":"external-function ","before":"function giveAway(address[] memory _to, uint256[] memory _amount) external onlyOwner() {\n        require( _to.length == _amount.length, \"Entered data is invalid\");\n        for(uint i;  i<_amount.length; i++){\n            minto(_to[i], _amount[i]);\n        }\n    }","after":"function giveAway(address[] calldata _to, uint256[] calldata _amount) external onlyOwner() {\n        require( _to.length == _amount.length, \"Entered data is invalid\");\n        for(uint i;  i<_amount.length; i++){\n            minto(_to[i], _amount[i]);\n        }\n    }","contract":"MarsPunks","time":0},{"type":"external-function ","before":"function setWL(address[] memory _address) public onlyOwner() {\n        for(uint256 i; i<_address.length; i++){\n            require(_address[i] != address(0), \"Invalid address found\");\n            address tempAdd = _address[i];\n            WL[tempAdd] = true;\n        }\n    }","after":"function setWL(address[] calldata _address) public onlyOwner() {\n        for(uint256 i; i<_address.length; i++){\n            require(_address[i] != address(0), \"Invalid address found\");\n            address tempAdd = _address[i];\n            WL[tempAdd] = true;\n        }\n    }","contract":"MarsPunks","time":0},{"type":"external-function ","before":"function setSWL(address[] memory _address) public onlyOwner() {\n        for(uint256 i; i<_address.length; i++){\n            require(_address[i] != address(0), \"Invalid address found\");\n            address tempAdd = _address[i];\n            SWL[tempAdd] = true;\n        }\n    }","after":"function setSWL(address[] calldata _address) public onlyOwner() {\n        for(uint256 i; i<_address.length; i++){\n            require(_address[i] != address(0), \"Invalid address found\");\n            address tempAdd = _address[i];\n            SWL[tempAdd] = true;\n        }\n    }","contract":"MarsPunks","time":0},{"type":"constant-restrict-modification  ","before":"uint256  public WL_limit = 3;","after":"uint256  public constant WL_limit = 3;","contract":"MarsPunks","time":0},{"type":"constant-restrict-modification  ","before":"address public wallet1 = 0x592A830d4883bBEF0fB5eF78eC2a8455F1EbAC4D;","after":"address public constant wallet1 = 0x592A830d4883bBEF0fB5eF78eC2a8455F1EbAC4D;","contract":"MarsPunks","time":0},{"type":"constant-restrict-modification  ","before":"address public wallet2 = 0x24d38AF5790189902037d4b81242C3EC2739Ab71;","after":"address public constant wallet2 = 0x24d38AF5790189902037d4b81242C3EC2739Ab71;","contract":"MarsPunks","time":0}]}