{"time":138,"results":[{"type":"state-data-arrangement ","before":"\nstring public baseURI;\nstring public baseExtension = \".json\";\nbool public presaleMintIsActive = false;\nbool public mintIsActive = false;\nuint256 public maxSupply = 5000;\nuint256 public maxMintAmount = 2;\nuint256 public mintPrice = 80000000000000000;\nuint256 public presaleMintPrice = 60000000000000000;\naddress public signatureAddress;","after":"string public baseURI;\nstring public baseExtension = \".json\";\nuint256 public maxSupply = 5000;\nuint256 public maxMintAmount = 2;\nuint256 public mintPrice = 80000000000000000;\nuint256 public presaleMintPrice = 60000000000000000;\naddress public signatureAddress;\nbool public presaleMintIsActive = false;\nbool public mintIsActive = false;\n","contract":"GuardianKongz","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }","after":"function setBaseExtension(string calldata _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }","contract":"GuardianKongz","time":0},{"type":"external-function ","before":"function presaleMint(bytes memory sig, uint256 numberOfTokens) public payable nonReentrant  {\n        require(presaleMintIsActive, \"Presale mint is not active at the moment. Be patient.\");\n        require(numberOfTokens > 0, \"Number of tokens can not be less than or equal to 0.\");\n        require(totalSupply() + numberOfTokens <= maxSupply, \"Purchase would exceed max supply.\");\n        require(numberOfTokens <= maxMintAmount, \"Can only mint up to 2 per transaction.\");\n        require(presaleMintPrice * numberOfTokens == msg.value, \"Sent ETH value is incorrect.\");\n        require(balanceOf(msg.sender) + numberOfTokens <= maxMintAmount, \"Can only mint up to 2 per wallet.\");\n        require(isValidData(msg.sender, sig), \"You are not whitelisted\");\n\n        for (uint i = 0; i < numberOfTokens; i++) {\n            _safeMint(_msgSender(), totalSupply() + 1);\n        }\n    }","after":"function presaleMint(bytes calldata sig, uint256 numberOfTokens) public payable nonReentrant  {\n        require(presaleMintIsActive, \"Presale mint is not active at the moment. Be patient.\");\n        require(numberOfTokens > 0, \"Number of tokens can not be less than or equal to 0.\");\n        require(totalSupply() + numberOfTokens <= maxSupply, \"Purchase would exceed max supply.\");\n        require(numberOfTokens <= maxMintAmount, \"Can only mint up to 2 per transaction.\");\n        require(presaleMintPrice * numberOfTokens == msg.value, \"Sent ETH value is incorrect.\");\n        require(balanceOf(msg.sender) + numberOfTokens <= maxMintAmount, \"Can only mint up to 2 per wallet.\");\n        require(isValidData(msg.sender, sig), \"You are not whitelisted\");\n\n        for (uint i = 0; i < numberOfTokens; i++) {\n            _safeMint(_msgSender(), totalSupply() + 1);\n        }\n    }","contract":"GuardianKongz","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public maxSupply = 5000;","after":"uint256 public constant maxSupply = 5000;","contract":"GuardianKongz","time":1}]}