{"time":124,"results":[{"type":"external-function ","before":"function tokenFallback(address sender, uint256 amount, bytes memory extraData) public returns (bool) {\n    require(open, \"swap not started\");\n    require(msg.sender == NPXS, \"only for NPXS\");\n    IERC20Upgradeable(PUNDIX).transfer(sender, amount.div(rate));\n    totalSwappedAmount = totalSwappedAmount.add(amount);\n    emit Swapped(sender, amount);\n    return true;\n    }","after":"function tokenFallback(address sender, uint256 amount, bytes calldata extraData) public returns (bool) {\n    require(open, \"swap not started\");\n    require(msg.sender == NPXS, \"only for NPXS\");\n    IERC20Upgradeable(PUNDIX).transfer(sender, amount.div(rate));\n    totalSwappedAmount = totalSwappedAmount.add(amount);\n    emit Swapped(sender, amount);\n    return true;\n    }","contract":"SwapToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public immutable rate = 1000;","after":"uint256 public immutable constant rate = 1000;","contract":"SwapToken","time":0}]}