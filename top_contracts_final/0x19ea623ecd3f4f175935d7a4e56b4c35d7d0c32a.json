{"time":141,"results":[{"type":"external-function ","before":"function createEdition(\n        address _party,\n        string memory _name,\n        string memory _imageURI,\n        string memory _animationURI,\n        string memory _description,\n        string memory _artistName\n    ) public onlyAllowedCreator {\n        lastEditionId += 1;\n        IPartyBid party = IPartyBid(_party);\n        editions[lastEditionId] = Edition({\n            party: party,\n            name: _name,\n            imageURI: _imageURI,\n            animationURI: _animationURI,\n            description: _description,\n            artistName: _artistName\n        });\n        editionCreator[lastEditionId] = msg.sender;\n        emit EditionCreated(\n            lastEditionId,\n            msg.sender,\n            address(_party),\n            _name,\n            _artistName\n        );\n    }","after":"function createEdition(\n        address _party,\n        string calldata _name,\n        string calldata _imageURI,\n        string calldata _animationURI,\n        string calldata _description,\n        string calldata _artistName\n    ) public onlyAllowedCreator {\n        lastEditionId += 1;\n        IPartyBid party = IPartyBid(_party);\n        editions[lastEditionId] = Edition({\n            party: party,\n            name: _name,\n            imageURI: _imageURI,\n            animationURI: _animationURI,\n            description: _description,\n            artistName: _artistName\n        });\n        editionCreator[lastEditionId] = msg.sender;\n        emit EditionCreated(\n            lastEditionId,\n            msg.sender,\n            address(_party),\n            _name,\n            _artistName\n        );\n    }","contract":"PartyDropper","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"PartyDropper","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"PartyDropper","time":0}]}