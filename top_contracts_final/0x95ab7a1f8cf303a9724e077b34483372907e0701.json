{"time":178,"results":[{"type":"state-data-arrangement ","before":"\nstring private _baseUri = \"https://ipfs.io/ipfs/QmNWkSpsYAPjnWXbsZaCR6pq68SLYVRo1vM6nWbK3NKEVr/\";\nmapping(uint256 => string) private _holidays;\nbool public _isMintingActive = true;\nuint256 public constant MAX_SUPPLY = 4801;\nuint256 public constant NFT_PRICE = 0.04 ether;\nuint256 public constant MAX_PER_PUBLIC_SALE = 2;\nuint256 private _admintsRemaining = 28;\nmapping(address => bool) private _admins;\nmapping(address => uint256) private _buyers;\nmapping(address => uint256) private _whitelist;\nuint256 public constant WHITELIST_A_START = 1633539600;\nuint256 public constant WHITELIST_B_AND_C_START = 1633604400;\nuint256 public constant SALE_START = 1633626000;\nuint8 public constant _SALE = 3;\nuint8 public constant _BC = 2;\nuint8 public constant _A = 1;\nuint256 private _mintCount = 0;\nuint256[MAX_SUPPLY] private _indices;","after":"string private _baseUri = \"https://ipfs.io/ipfs/QmNWkSpsYAPjnWXbsZaCR6pq68SLYVRo1vM6nWbK3NKEVr/\";\nmapping(uint256 => string) private _holidays;\nuint256 public constant MAX_SUPPLY = 4801;\nuint256 public constant NFT_PRICE = 0.04 ether;\nuint256 public constant MAX_PER_PUBLIC_SALE = 2;\nuint256 private _admintsRemaining = 28;\nmapping(address => bool) private _admins;\nmapping(address => uint256) private _buyers;\nmapping(address => uint256) private _whitelist;\nuint256 public constant WHITELIST_A_START = 1633539600;\nuint256 public constant WHITELIST_B_AND_C_START = 1633604400;\nuint256 public constant SALE_START = 1633626000;\nuint256 private _mintCount = 0;\nuint256[MAX_SUPPLY] private _indices;\nbool public _isMintingActive = true;\nuint8 public constant _SALE = 3;\nuint8 public constant _BC = 2;\nuint8 public constant _A = 1;\n","contract":"Museum","time":0},{"type":"external-function ","before":"function addWhitelisted(address[] memory _addresses) public onlyOwner {\n    for (uint i = 0; i < _addresses.length; i++) {\n      _whitelist[_addresses[i]] = 3;\n    }\n  }","after":"function addWhitelisted(address[] calldata _addresses) public onlyOwner {\n    for (uint i = 0; i < _addresses.length; i++) {\n      _whitelist[_addresses[i]] = 3;\n    }\n  }","contract":"Museum","time":0},{"type":"external-function ","before":"function addHolidays(uint256[] memory starts, string[] memory baseUris) public onlyOwner {\n    require(starts.length == baseUris.length, \"Museum: array lengths must match\");\n\n    for (uint i = 0; i < starts.length; i++) {\n      _holidays[starts[i]] = baseUris[i];\n    }\n  }","after":"function addHolidays(uint256[] calldata starts, string[] calldata baseUris) public onlyOwner {\n    require(starts.length == baseUris.length, \"Museum: array lengths must match\");\n\n    for (uint i = 0; i < starts.length; i++) {\n      _holidays[starts[i]] = baseUris[i];\n    }\n  }","contract":"Museum","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseUri) public onlyOwner {\n    _baseUri = baseUri;\n  }","after":"function setBaseURI(string calldata baseUri) public onlyOwner {\n    _baseUri = baseUri;\n  }","contract":"Museum","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _admintsRemaining = 28;","after":"uint256 private constant _admintsRemaining = 28;","contract":"Museum","time":1}]}