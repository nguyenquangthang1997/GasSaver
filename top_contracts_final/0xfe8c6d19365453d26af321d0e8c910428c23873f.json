{"time":155,"results":[{"type":"external-function ","before":"function setProvenanceHash(string memory provenanceHash) public onlyOwner {\n      require(bytes(PROVENANCE_HASH).length == 0, \"Provenance hash has already been set\");\n      PROVENANCE_HASH = provenanceHash;\n    }","after":"function setProvenanceHash(string calldata provenanceHash) public onlyOwner {\n      require(bytes(PROVENANCE_HASH).length == 0, \"Provenance hash has already been set\");\n      PROVENANCE_HASH = provenanceHash;\n    }","contract":"ColdBloodedCreepz","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) public onlyOwner {\n      require(!metadataFinalised, \"Metadata already revealed\");\n\n      string memory currentURI = _creepzBaseURI;\n      _creepzBaseURI = newBaseURI;\n      emit baseUriUpdated(currentURI, newBaseURI);\n    }","after":"function setBaseURI(string calldata newBaseURI) public onlyOwner {\n      require(!metadataFinalised, \"Metadata already revealed\");\n\n      string memory currentURI = _creepzBaseURI;\n      _creepzBaseURI = newBaseURI;\n      emit baseUriUpdated(currentURI, newBaseURI);\n    }","contract":"ColdBloodedCreepz","time":0},{"type":"immutable-restrict-modification ","before":"address public signerAddress;","after":"address public immutable signerAddress;","contract":"ColdBloodedCreepz","time":0},{"type":"immutable-restrict-modification ","before":"address public royaltyAddress;","after":"address public immutable royaltyAddress;","contract":"ColdBloodedCreepz","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public ROYALTY_SIZE = 750;","after":"uint256 public constant ROYALTY_SIZE = 750;","contract":"ColdBloodedCreepz","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public ROYALTY_DENOMINATOR = 10000;","after":"uint256 public constant ROYALTY_DENOMINATOR = 10000;","contract":"ColdBloodedCreepz","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 internal keyHash;","after":"bytes32 internal immutable keyHash;","contract":"ColdBloodedCreepz","time":0},{"type":"immutable-restrict-modification ","before":"uint256 internal fee;","after":"uint256 internal immutable fee;","contract":"ColdBloodedCreepz","time":0}]}