{"time":213,"results":[{"type":"state-data-arrangement ","before":"\n__  ______  __    __  ______  ______ __    __\n   \n      \\|  \\  /  \\/      \\|  \\ \n/      \\|      \\  \\  |  \\\n    | ▓▓▓\n�▓▓\\ ▓▓     |  ▓▓▓▓\n�\\  ▓▓▓▓▓▓\\ ▓▓ /  �\n▓▓▓▓▓▓\\ ▓▓ \n▓  ▓▓▓▓▓▓\\\\▓▓▓▓▓▓ ▓\n ▓▓\n    | ▓▓__/ ▓▓ ▓�\n | ▓▓  | ▓▓ ▓▓   \\▓▓","after":"__  ______  __    __  ______  ______ __    __\n   \n      \\|  \\  /  \\/      \\|  \\ \n/      \\|      \\  \\  |  \\\n    | ▓▓▓\n�▓▓\\ ▓▓     |  ▓▓▓▓\n�\\  ▓▓▓▓▓▓\\ ▓▓ /  �\n▓  ▓▓▓▓▓▓\\\\▓▓▓▓▓▓ ▓\n ▓▓\n    | ▓▓__/ ▓▓ ▓�\n | ▓▓  | ▓▓ ▓▓   \\▓▓\n▓▓▓▓▓▓\\ ▓▓ \n","contract":"BallerBars","time":0},{"type":"external-function ","before":"sAddress(address chainsAddress,uint256 generation) onlyOwner public {\n        require(generation==1||generation==2,\"INVALID_GEN\");\n        if(generation == 1){\n            _genOneChainsAddress = chainsAddress;\n        }else if(generation == 2){\n            _genTwoChainsAddress = chainsAddress;\n        }\n    }\n\n    /**\n     * @dev Changes the last time of the BB emission.\n     * @param emissionEnd The time, in seconds, emissions will end\n     */\n\n    function setEmissionEnd(uint256 emissionEnd) onlyOwner public {\n        _emissionEnd = emissionEnd;\n    }\n\n    /**\n     * @dev Changes the offset for emissions in-case of emergency pausing / un-pausing\n     * @param emissionOffset The time, in seconds, emissions will offset\n     */\n\n    function setEmissionOffset(uint256 emissionOffset) onlyOwner public {\n        require(_emissionStart+emissionOffset<=block.timestamp,\"OFFSET_TOO_HIGH\");\n        _emissionOffset = emissionOffset;\n    }\n\n    /**\n     * @dev Changes base multiplier for rewards calculation.\n     * @param baseMultiplier The base multiplier. Default is","after":"sAddress(address chainsAddress,uint256 generation) onlyOwner public {\n        require(generation==1||generation==2,\"INVALID_GEN\");\n        if(generation == 1){\n            _genOneChainsAddress = chainsAddress;\n        }else if(generation == 2){\n            _genTwoChainsAddress = chainsAddress;\n        }\n    }\n\n    /**\n     * @dev Changes the last time of the BB emission.\n     * @param emissionEnd The time, in seconds, emissions will end\n     */\n\n    function setEmissionEnd(uint256 emissionEnd) onlyOwner public {\n        _emissionEnd = emissionEnd;\n    }\n\n    /**\n     * @dev Changes the offset for emissions in-case of emergency pausing / un-pausing\n     * @param emissionOffset The time, in seconds, emissions will offset\n     */\n\n    function setEmissionOffset(uint256 emissionOffset) onlyOwner public {\n        require(_emissionStart+emissionOffset<=block.timestamp,\"OFFSET_TOO_HIGH\");\n        _emissionOffset = emissionOffset;\n    }\n\n    /**\n     * @dev Changes base multiplier for rewards calculation.\n     * @param baseMultiplier The base multiplier. Default is","contract":"BallerBars","time":0},{"type":"immutable-restrict-modification ","before":"      \\|  \\  /  \\/      \\|  \\ ","after":"      \\|  \\  /  \\/      \\|  \\ ","contract":"BallerBars","time":1}]}