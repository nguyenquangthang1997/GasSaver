{"time":150,"results":[{"type":"struct-data-arrangement ","before":"\nuint256 Id\naddress UserAddress\nbool IsWhitelist\nuint256 TotalTokenPurchase\nuint256 TotalETHPurchase\nuint256 PurchaseTime\nuint256 LastClaimed\nuint256 TotalPercentClaimed\nuint256 NumberClaimed\nbool IsActived","after":"uint256 Id\nuint256 TotalTokenPurchase\nuint256 TotalETHPurchase\nuint256 PurchaseTime\nuint256 LastClaimed\nuint256 TotalPercentClaimed\nuint256 NumberClaimed\naddress UserAddress\nbool IsWhitelist\nbool IsActived\n","contract":"PolkabridgeLaunchPadV2","time":0},{"type":"external-function ","before":"function addMulWhitelist(address[] memory user, uint256 pid)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint256 i = 0; i < user.length; i++) {\r\n            users[pid][user[i]].Id = pid;\r\n            users[pid][user[i]].UserAddress = user[i];\r\n            users[pid][user[i]].IsWhitelist = true;\r\n            users[pid][user[i]].IsActived = true;\r\n        }\r\n    }","after":"function addMulWhitelist(address[] calldata user, uint256 pid)\r\n        public\r\n        onlyOwner\r\n    {\r\n        for (uint256 i = 0; i < user.length; i++) {\r\n            users[pid][user[i]].Id = pid;\r\n            users[pid][user[i]].UserAddress = user[i];\r\n            users[pid][user[i]].IsWhitelist = true;\r\n            users[pid][user[i]].IsActived = true;\r\n        }\r\n    }","contract":"PolkabridgeLaunchPadV2","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"PolkaBridge: LaunchPad V2\";","after":"string public constant name = \"PolkaBridge: LaunchPad V2\";","contract":"PolkabridgeLaunchPadV2","time":0}]}