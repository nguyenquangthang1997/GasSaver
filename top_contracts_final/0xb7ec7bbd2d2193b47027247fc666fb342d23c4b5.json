{"time":167,"results":[{"type":"state-data-arrangement ","before":"\nor`\nbytes4 private constant _ERC721_RECEIVED = 0x150b7\nner\nmapping (uint256 => address) private _tokenOw\ness\nmapping (uint256 => address) private _tokenApprov\nken\nmapping (address => Counters.Counter) private _ownedTokensCo\nals\nmapping (address => mapping (address => bool)) private _operatorApprov\ns;\n bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac5","after":"ner\nmapping (uint256 => address) private _tokenOw\ness\nmapping (uint256 => address) private _tokenApprov\nken\nmapping (address => Counters.Counter) private _ownedTokensCo\nals\nmapping (address => mapping (address => bool)) private _operatorApprov\nor`\nbytes4 private constant _ERC721_RECEIVED = 0x150b7\ns;\n bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac5\n","contract":"ERC721","time":0},{"type":"external-function ","before":";\n}\nfunction addProject(string memory _projectName, string memory tokenURI, string memory description, string memory artistName, string memory projectWebsite, string memory projectLicense, address _artistAddress, uint256 _pricePerTokenInWei, uint256 _maxArtworks, uint256 _maxEarly) public onlyWhitelisted {\n    uint256 projectId = nextProjectId;\n    projectIdToArtistAddress[projectId] = _artistAddress;\n    projects[projectId].name = _projectName;\n    projects[projectId].artist = artistName;\n    projects[projectId].description = description;\n    projects[projectId].website = projectWebsite;\n    projects[projectId].license = projectLicense;\n    projectIdToCurrencySymbol[projectId] = \"ETH\";\n    projectIdToPricePerTokenInWei[projectId] = _pricePerTokenInWei;\n    projects[projectId].paused=false;\n    projects[projectId].earlyActive = false;\n    projects[projectId].publicActive = false;\n    projects[projectId].maxArtworks = _maxArtworks;\n    projects[projectId].maxEarly = _maxEarly;\n    projects[projectId].projectBaseURI = tokenURI;\n    nextProjectId = nextProjectId.add(1","after":";\n}\nfunction addProject(string calldata _projectName, string calldata tokenURI, string calldata description, string calldata artistName, string calldata projectWebsite, string calldata projectLicense, address _artistAddress, uint256 _pricePerTokenInWei, uint256 _maxArtworks, uint256 _maxEarly) public onlyWhitelisted {\n    uint256 projectId = nextProjectId;\n    projectIdToArtistAddress[projectId] = _artistAddress;\n    projects[projectId].name = _projectName;\n    projects[projectId].artist = artistName;\n    projects[projectId].description = description;\n    projects[projectId].website = projectWebsite;\n    projects[projectId].license = projectLicense;\n    projectIdToCurrencySymbol[projectId] = \"ETH\";\n    projectIdToPricePerTokenInWei[projectId] = _pricePerTokenInWei;\n    projects[projectId].paused=false;\n    projects[projectId].earlyActive = false;\n    projects[projectId].publicActive = false;\n    projects[projectId].maxArtworks = _maxArtworks;\n    projects[projectId].maxEarly = _maxEarly;\n    projects[projectId].projectBaseURI = tokenURI;\n    nextProjectId = nextProjectId.add(1","contract":"mirageCurated","time":0},{"type":"external-function ","before":";\n}\nfunction updateProjectCurrencyInfo(uint256 _projectId, string memory _currencySymbol, address _currencyAddress) onlyAdmin() public {\n    projectIdToCurrencySymbol[_projectId] = _currencySymbol;\n    projectIdToCurrencyAddress[_projectId] = _currencyAddres","after":";\n}\nfunction updateProjectCurrencyInfo(uint256 _projectId, string calldata _currencySymbol, address _currencyAddress) onlyAdmin() public {\n    projectIdToCurrencySymbol[_projectId] = _currencySymbol;\n    projectIdToCurrencyAddress[_projectId] = _currencyAddres","contract":"mirageCurated","time":0},{"type":"external-function ","before":";\n}\nfunction updateProjectName(uint256 _projectId, string memory _projectName) onlyUnlocked(_projectId) onlyAdmin() public {\n    projects[_projectId].name = _projectNam","after":";\n}\nfunction updateProjectName(uint256 _projectId, string calldata _projectName) onlyUnlocked(_projectId) onlyAdmin() public {\n    projects[_projectId].name = _projectNam","contract":"mirageCurated","time":0},{"type":"external-function ","before":";\n}\nfunction updateProjectArtistName(uint256 _projectId, string memory _projectArtistName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n    projects[_projectId].artist = _projectArtistNam","after":";\n}\nfunction updateProjectArtistName(uint256 _projectId, string calldata _projectArtistName) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n    projects[_projectId].artist = _projectArtistNam","contract":"mirageCurated","time":0},{"type":"external-function ","before":";\n}\nfunction updateProjectDescription(uint256 _projectId, string memory _projectDescription) onlyArtist(_projectId) public {\n    projects[_projectId].description = _projectDescriptio","after":";\n}\nfunction updateProjectDescription(uint256 _projectId, string calldata _projectDescription) onlyArtist(_projectId) public {\n    projects[_projectId].description = _projectDescriptio","contract":"mirageCurated","time":0},{"type":"external-function ","before":";\n}\nfunction updateProjectWebsite(uint256 _projectId, string memory _projectWebsite) onlyArtist(_projectId) public {\n    projects[_projectId].website = _projectWebsit","after":";\n}\nfunction updateProjectWebsite(uint256 _projectId, string calldata _projectWebsite) onlyArtist(_projectId) public {\n    projects[_projectId].website = _projectWebsit","contract":"mirageCurated","time":0},{"type":"external-function ","before":";\n}\nfunction updateProjectLicense(uint256 _projectId, string memory _projectLicense) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n    projects[_projectId].license = _projectLicens","after":";\n}\nfunction updateProjectLicense(uint256 _projectId, string calldata _projectLicense) onlyUnlocked(_projectId) onlyArtistOrWhitelisted(_projectId) public {\n    projects[_projectId].license = _projectLicens","contract":"mirageCurated","time":0},{"type":"external-function ","before":";\n}\nfunction updateProjectBaseURI(uint256 _projectId, string memory _newBaseURI) onlyWhitelisted public {\n    projects[_projectId].projectBaseURI = _newBaseUR","after":";\n}\nfunction updateProjectBaseURI(uint256 _projectId, string calldata _newBaseURI) onlyWhitelisted public {\n    projects[_projectId].projectBaseURI = _newBaseUR","contract":"mirageCurated","time":0}]}