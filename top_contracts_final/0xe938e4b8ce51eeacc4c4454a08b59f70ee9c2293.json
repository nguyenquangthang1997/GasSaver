{"time":118,"results":[{"type":"external-function ","before":"function setBaseURI(string memory newBaseURI) public onlyOwner {\n        require(!metadataFrozen, \"Metadata has been locked and permenantly decentralized\");\n        BaseURI = newBaseURI;\n    }","after":"function setBaseURI(string calldata newBaseURI) public onlyOwner {\n        require(!metadataFrozen, \"Metadata has been locked and permenantly decentralized\");\n        BaseURI = newBaseURI;\n    }","contract":"AstroMojis","time":0},{"type":"external-function ","before":"function addToWhitelist(address[] memory members, bool addOrRemove) external onlyOwner {\n        for (uint256 i = 0; i < members.length; i++){\n            WhiteList[members[i]] = addOrRemove; \n        }\n    }","after":"function addToWhitelist(address[] calldata members, bool addOrRemove) external onlyOwner {\n        for (uint256 i = 0; i < members.length; i++){\n            WhiteList[members[i]] = addOrRemove; \n        }\n    }","contract":"AstroMojis","time":0}]}