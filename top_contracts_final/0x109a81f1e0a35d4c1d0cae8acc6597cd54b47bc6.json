{"time":231,"results":[{"type":"external-function ","before":"  function register(\n        string memory name,\n        bytes calldata encryptedEmail,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        bytes calldata checkData,\n        uint8 source\n    ) \n      external \n      onlyLINK() \n    {\n        bytes32 hash = keccak256(msg.data);\n\n        emit RegistrationRequested(\n            hash,\n            name,\n            encryptedEmail,\n            upkeepContract,\n            gasLimit,\n            adminAddress,\n            checkData,\n            source\n        );\n\n        AutoApprovedConfig memory config = s_config;\n\n        // if auto approve is true send registration request to the Keeper Registry contract\n        if (config.enabled) {\n            _resetWindowIfRequired(config);\n            if (config.approvedInCurrentWindow < config.allowedPerWindow) {\n                config.approvedInCurrentWindow++;\n                s_config = config;\n\n                _approve(\n                    name,\n                    upkeepContract,\n                    gasLimit,\n                    adminAddress,\n                    checkData,\n                    hash\n                );\n            }\n        }\n   ","after":"  function register(\n        string calldata name,\n        bytes calldata encryptedEmail,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        bytes calldata checkData,\n        uint8 source\n    ) \n      external \n      onlyLINK() \n    {\n        bytes32 hash = keccak256(msg.data);\n\n        emit RegistrationRequested(\n            hash,\n            name,\n            encryptedEmail,\n            upkeepContract,\n            gasLimit,\n            adminAddress,\n            checkData,\n            source\n        );\n\n        AutoApprovedConfig memory config = s_config;\n\n        // if auto approve is true send registration request to the Keeper Registry contract\n        if (config.enabled) {\n            _resetWindowIfRequired(config);\n            if (config.approvedInCurrentWindow < config.allowedPerWindow) {\n                config.approvedInCurrentWindow++;\n                s_config = config;\n\n                _approve(\n                    name,\n                    upkeepContract,\n                    gasLimit,\n                    adminAddress,\n                    checkData,\n                    hash\n                );\n            }\n        }\n   ","contract":"UpkeepRegistrationRequests","time":0},{"type":"external-function ","before":"  function approve(\n        string memory name,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        bytes calldata checkData,\n        bytes32 hash\n    ) \n      external \n      onlyOwner() \n    {\n        _approve(\n            name,\n            upkeepContract,\n            gasLimit,\n            adminAddress,\n            checkData,\n            hash\n        );    \n   ","after":"  function approve(\n        string calldata name,\n        address upkeepContract,\n        uint32 gasLimit,\n        address adminAddress,\n        bytes calldata checkData,\n        bytes32 hash\n    ) \n      external \n      onlyOwner() \n    {\n        _approve(\n            name,\n            upkeepContract,\n            gasLimit,\n            adminAddress,\n            checkData,\n            hash\n        );    \n   ","contract":"UpkeepRegistrationRequests","time":0}]}