{"time":104,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nstring private _name;\nstring private _symbol;\nstring private _baseTokenURI;\nbool private _ipfsMigrated;\nuint256 private _totalSupply;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping(uint256 => string) private _tokenURIs;\nmapping (uint256 => uint256) private _dnas;\nmapping (uint256 => string) private _tokenNames;\nmapping (address => uint256) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;","after":"string private _name;\nstring private _symbol;\nstring private _baseTokenURI;\nuint256 private _totalSupply;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping(uint256 => string) private _tokenURIs;\nmapping (uint256 => uint256) private _dnas;\nmapping (uint256 => string) private _tokenNames;\nmapping (address => uint256) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\nbytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbool private _ipfsMigrated;\n","contract":"etherstar","time":1},{"type":"external-function ","before":"function setTokenURI(uint256 tokenId, string memory uri) public onlyMinter {\n        require(!_ipfsMigrated);\n        _setTokenURI(tokenId, uri);\n    }","after":"function setTokenURI(uint256 tokenId, string calldata uri) public onlyMinter {\n        require(!_ipfsMigrated);\n        _setTokenURI(tokenId, uri);\n    }","contract":"etherstar","time":0},{"type":"external-function ","before":"function setBaseTokenURI(string memory baseTokenURI) public onlyMinter {\n        _baseTokenURI = baseTokenURI;\n    }","after":"function setBaseTokenURI(string calldata baseTokenURI) public onlyMinter {\n        _baseTokenURI = baseTokenURI;\n    }","contract":"etherstar","time":0},{"type":"external-function ","before":"function mint(address to, uint256 tokenId, string memory uri, uint256 dna , string memory tokenNms)\n        public onlyMinter\n    {\n        require(tokenId >= 0 && tokenId <= 9999);\n        _mint(to, tokenId, uri, dna, tokenNms);\n        _totalSupply += 1;\n    }","after":"function mint(address to, uint256 tokenId, string calldata uri, uint256 dna , string calldata tokenNms)\n        public onlyMinter\n    {\n        require(tokenId >= 0 && tokenId <= 9999);\n        _mint(to, tokenId, uri, dna, tokenNms);\n        _totalSupply += 1;\n    }","contract":"etherstar","time":0}]}