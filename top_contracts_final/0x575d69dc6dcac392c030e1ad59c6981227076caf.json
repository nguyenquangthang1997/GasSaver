{"time":171,"results":[{"type":"external-function ","before":"function setWhitelist(address[] memory wallets, uint256[] memory count) external onlyOwner {\n    for (uint256 i = 0; i < wallets.length; i++) {\n      whitelist[wallets[i]] = count[i];\n    }\n  }","after":"function setWhitelist(address[] calldata wallets, uint256[] calldata count) external onlyOwner {\n    for (uint256 i = 0; i < wallets.length; i++) {\n      whitelist[wallets[i]] = count[i];\n    }\n  }","contract":"MooseVsHunger","time":0},{"type":"external-function ","before":"function setBaseURI(string memory val) external onlyOwner {\n    _setURI(val);\n  }","after":"function setBaseURI(string calldata val) external onlyOwner {\n    _setURI(val);\n  }","contract":"MooseVsHunger","time":1},{"type":"external-function ","before":"function setContractURI(string memory val) external onlyOwner {\n    contractURI = val;\n  }","after":"function setContractURI(string calldata val) external onlyOwner {\n    contractURI = val;\n  }","contract":"MooseVsHunger","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"MooseVsHunger","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"MooseVsHunger","time":0}]}