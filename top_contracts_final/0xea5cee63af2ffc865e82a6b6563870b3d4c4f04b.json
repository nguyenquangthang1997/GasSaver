{"time":157,"results":[{"type":"external-function ","before":"function mintPreSale(uint256 numberOfTokens, bool hasFreeMint, bytes32[] memory merkleProof) external payable {\r\n        // Calculate current index for minting\r\n        uint256 i = TotalSupply + 1;\r\n        TotalSupply += numberOfTokens.add(hasFreeMint ? 1 : 0);\r\n\r\n        // The sender must be a wallet\r\n        require(msg.sender == tx.origin, 'Not a wallet!');\r\n        // Pre-sale is not open yet\r\n        require(PreSaleActived, 'Not open yet!');\r\n        // Exceeded the maximum total supply\r\n        require(TotalSupply <= MAX_ALPHA_SUPPLY, 'Exceed total supply!');\r\n        // Exceeded the limit for each pre-sale\r\n        require(0 < numberOfTokens && numberOfTokens <= BATCH_PRESALE_LIMIT, 'Exceed limitation!');\r\n        // You are not on the pre-sale whitelist\r\n        require(this.checkPresaleProof(msg.sender, hasFreeMint, merkleProof), 'Not on the whitelist!');\r\n        // Your promotion has been used\r\n        require(!PresaleClaimedMapping[msg.sender], 'Promotion is over!');\r\n        // Your ETH amount is insufficient\r\n        require(PRESALE_PRICE.mul(numberOfTokens) <= msg.value, 'Insufficient funds!');\r\n\r\n        // Mark the address that has used the promotion\r\n        PresaleClaimedMapping[msg.sender] = true;\r\n\r\n        // Make the payment to diffrence wallet\r\n        payable(PaymentAddress).transfer(msg.value);\r\n        \r\n        for (; i <= TotalSupply; i++) {\r\n            // To the moon\r\n            _safeMint(msg.sender, i);\r\n        }\r\n    }","after":"function mintPreSale(uint256 numberOfTokens, bool hasFreeMint, bytes32[] calldata merkleProof) external payable {\r\n        // Calculate current index for minting\r\n        uint256 i = TotalSupply + 1;\r\n        TotalSupply += numberOfTokens.add(hasFreeMint ? 1 : 0);\r\n\r\n        // The sender must be a wallet\r\n        require(msg.sender == tx.origin, 'Not a wallet!');\r\n        // Pre-sale is not open yet\r\n        require(PreSaleActived, 'Not open yet!');\r\n        // Exceeded the maximum total supply\r\n        require(TotalSupply <= MAX_ALPHA_SUPPLY, 'Exceed total supply!');\r\n        // Exceeded the limit for each pre-sale\r\n        require(0 < numberOfTokens && numberOfTokens <= BATCH_PRESALE_LIMIT, 'Exceed limitation!');\r\n        // You are not on the pre-sale whitelist\r\n        require(this.checkPresaleProof(msg.sender, hasFreeMint, merkleProof), 'Not on the whitelist!');\r\n        // Your promotion has been used\r\n        require(!PresaleClaimedMapping[msg.sender], 'Promotion is over!');\r\n        // Your ETH amount is insufficient\r\n        require(PRESALE_PRICE.mul(numberOfTokens) <= msg.value, 'Insufficient funds!');\r\n\r\n        // Mark the address that has used the promotion\r\n        PresaleClaimedMapping[msg.sender] = true;\r\n\r\n        // Make the payment to diffrence wallet\r\n        payable(PaymentAddress).transfer(msg.value);\r\n        \r\n        for (; i <= TotalSupply; i++) {\r\n            // To the moon\r\n            _safeMint(msg.sender, i);\r\n        }\r\n    }","contract":"AstraArmy","time":0}]}