{"time":218,"results":[{"type":"loop-duplication","before":"\nstart line 1406 column 8, end line 1410 column 8\nfor (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            address crazySkullOwner = crazySkullzContractCaller.ownerOf(crazySkullzIds[i]);\n            require(crazySkullOwner == msg.sender, \"You do not own the token with the provided id\");\n            require(!isClaimed(crazySkullzIds[i]), \"The token has been already claimed\");\n        }\nstart line 1412 column 8, end line 1415 column 8\nfor (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            _safeMint(msg.sender, totalSupply());\n            _claimedCrazySkullz[crazySkullzIds[i]] = true;\n        }","after":"// merge loop\n\nstart line 1406 column 8, end line 1410 column 8\nfor (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            address crazySkullOwner = crazySkullzContractCaller.ownerOf(crazySkullzIds[i]);\n            require(crazySkullOwner == msg.sender, \"You do not own the token with the provided id\");\n            require(!isClaimed(crazySkullzIds[i]), \"The token has been already claimed\");\n        }\nstart line 1412 column 8, end line 1415 column 8\nfor (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            _safeMint(msg.sender, totalSupply());\n            _claimedCrazySkullz[crazySkullzIds[i]] = true;\n        }","contract":"CrazySkullzCards","time":0},{"type":"state-data-arrangement ","before":"\nbool public claimIsActive = false;\naddress public crazySkullzContractAddress = 0x3a4cA1c1bB243D299032753fdd75e8FEc1F0d585;\nmapping(uint256 => bool) _claimedCrazySkullz;\nbool public isMetadataLocked = false;\nstring private _baseURIExtended;\nmapping (uint256 => string) _tokenURIs;","after":"mapping(uint256 => bool) _claimedCrazySkullz;\nstring private _baseURIExtended;\nmapping (uint256 => string) _tokenURIs;\naddress public crazySkullzContractAddress = 0x3a4cA1c1bB243D299032753fdd75e8FEc1F0d585;\nbool public claimIsActive = false;\nbool public isMetadataLocked = false;\n","contract":"CrazySkullzCards","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner {\n        require(!isMetadataLocked,\"Metadata is locked\");\n        _baseURIExtended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner {\n        require(!isMetadataLocked,\"Metadata is locked\");\n        _baseURIExtended = baseURI_;\n    }","contract":"CrazySkullzCards","time":0},{"type":"external-function ","before":"function claimByIds(uint256[] memory crazySkullzIds) public {\n        require(claimIsActive, \"Claiming is not active at the moment\");\n        CrazySkullzContractInterface crazySkullzContractCaller = CrazySkullzContractInterface(crazySkullzContractAddress);\n        for (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            address crazySkullOwner = crazySkullzContractCaller.ownerOf(crazySkullzIds[i]);\n            require(crazySkullOwner == msg.sender, \"You do not own the token with the provided id\");\n            require(!isClaimed(crazySkullzIds[i]), \"The token has been already claimed\");\n        }\n\n        for (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            _safeMint(msg.sender, totalSupply());\n            _claimedCrazySkullz[crazySkullzIds[i]] = true;\n        }\n    }","after":"function claimByIds(uint256[] calldata crazySkullzIds) public {\n        require(claimIsActive, \"Claiming is not active at the moment\");\n        CrazySkullzContractInterface crazySkullzContractCaller = CrazySkullzContractInterface(crazySkullzContractAddress);\n        for (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            address crazySkullOwner = crazySkullzContractCaller.ownerOf(crazySkullzIds[i]);\n            require(crazySkullOwner == msg.sender, \"You do not own the token with the provided id\");\n            require(!isClaimed(crazySkullzIds[i]), \"The token has been already claimed\");\n        }\n\n        for (uint256  i = 0; i < crazySkullzIds.length; i++) {\n            _safeMint(msg.sender, totalSupply());\n            _claimedCrazySkullz[crazySkullzIds[i]] = true;\n        }\n    }","contract":"CrazySkullzCards","time":0},{"type":"constant-restrict-modification  ","before":"address public crazySkullzContractAddress = 0x3a4cA1c1bB243D299032753fdd75e8FEc1F0d585;","after":"address public constant crazySkullzContractAddress = 0x3a4cA1c1bB243D299032753fdd75e8FEc1F0d585;","contract":"CrazySkullzCards","time":0}]}