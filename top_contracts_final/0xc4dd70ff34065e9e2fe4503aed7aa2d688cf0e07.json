{"time":640,"results":[{"type":"external-function ","before":"function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        baseURI = _newBaseURI;\n    }","after":"function setBaseURI(string calldata _newBaseURI) public onlyOwner {\n        baseURI = _newBaseURI;\n    }","contract":"Robotoverse","time":0},{"type":"external-function ","before":"function setPrerevealURI(string memory _newBaseURI) public onlyOwner {\n        prerevealURI = _newBaseURI;\n    }","after":"function setPrerevealURI(string calldata _newBaseURI) public onlyOwner {\n        prerevealURI = _newBaseURI;\n    }","contract":"Robotoverse","time":0},{"type":"external-function ","before":"function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }","after":"function setBaseExtension(string calldata _newBaseExtension) public onlyOwner {\n        baseExtension = _newBaseExtension;\n    }","contract":"Robotoverse","time":0},{"type":"external-function ","before":"function bulkSetWhitelist(address[] memory accounts) public onlyOwner returns (uint256) {\n        uint256 taskCounter = 0;\n        for (uint256 i = 0; i < accounts.length; i++) {\n            if(!whitelist[accounts[i]]) {\n                if(whitelistSize < whitelistAmount) {\n                    whitelist[accounts[i]] = true;\n                    emit AddedToWhitelist(accounts[i]);\n                    whitelistSize++;\n                    taskCounter++;\n                } else {\n                    break;\n                }\n            }\n        }\n        return taskCounter;\n    }","after":"function bulkSetWhitelist(address[] calldata accounts) public onlyOwner returns (uint256) {\n        uint256 taskCounter = 0;\n        for (uint256 i = 0; i < accounts.length; i++) {\n            if(!whitelist[accounts[i]]) {\n                if(whitelistSize < whitelistAmount) {\n                    whitelist[accounts[i]] = true;\n                    emit AddedToWhitelist(accounts[i]);\n                    whitelistSize++;\n                    taskCounter++;\n                } else {\n                    break;\n                }\n            }\n        }\n        return taskCounter;\n    }","contract":"Robotoverse","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxSupply;","after":"uint256 public immutable maxSupply;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public batchOneMembers = 1000;","after":"uint256 public constant batchOneMembers = 1000;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public batchTwoMembers = 1500;","after":"uint256 public constant batchTwoMembers = 1500;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public batchThreeMembers = 1500;","after":"uint256 public constant batchThreeMembers = 1500;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public batchFourMembers = 3477;","after":"uint256 public constant batchFourMembers = 3477;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public teamNFTs = 300;","after":"uint256 public constant teamNFTs = 300;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"bool public batchFourActive = false;","after":"bool public constant batchFourActive = false;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"bool public whitelistOpen = false;","after":"bool public constant whitelistOpen = false;","contract":"Robotoverse","time":1},{"type":"immutable-restrict-modification ","before":"address private ownerOne;","after":"address private immutable ownerOne;","contract":"Robotoverse","time":1},{"type":"immutable-restrict-modification ","before":"address private ownerTwo;","after":"address private immutable ownerTwo;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private shareOne = 50;","after":"uint256 private constant shareOne = 50;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private shareTwo = 50;","after":"uint256 private constant shareTwo = 50;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public maxWhitelistAmount = 100;","after":"uint256 public constant maxWhitelistAmount = 100;","contract":"Robotoverse","time":1},{"type":"constant-restrict-modification  ","before":"uint256 public whitelistAmount = 1000;","after":"uint256 public constant whitelistAmount = 1000;","contract":"Robotoverse","time":1}]}