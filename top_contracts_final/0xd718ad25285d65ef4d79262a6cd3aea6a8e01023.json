{"time":120,"results":[{"type":"external-function ","before":"function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n        require(receivers.length != 0, 'Cannot Proccess Null Transaction');\n        require(receivers.length == amounts.length, 'Address and Amount array length must be same');\n        for (uint256 i = 0; i < receivers.length; i++) {\n            transfer(receivers[i], amounts[i]);\n        }\n    }","after":"function multiTransfer(address[] calldata receivers, uint256[] calldata amounts) public {\n        require(receivers.length != 0, 'Cannot Proccess Null Transaction');\n        require(receivers.length == amounts.length, 'Address and Amount array length must be same');\n        for (uint256 i = 0; i < receivers.length; i++) {\n            transfer(receivers[i], amounts[i]);\n        }\n    }","contract":"ROOTx","time":0},{"type":"external-function ","before":"function bulkClaimRewards(uint256[] memory tokenIDs) public {\n        require(dailyReward,\" Daily Rewards Are Stopped \");\n        uint256 total;\n        for (uint256 i = 0; i < tokenIDs.length; i++) {\n            require(NFTContract.ownerOf(tokenIDs[i]) == msg.sender, \"You aren't own this NFT token\");\n            total += checkDailyReward(tokenIDs[i]);\n            if(checkDailyReward(tokenIDs[i]) > 0){\n                lastReward[tokenIDs[i]] = block.timestamp;\n            }\n        }\n        require(total > 0, \"There is no claimable reward\");\n        _mint(msg.sender, total);\n    }","after":"function bulkClaimRewards(uint256[] calldata tokenIDs) public {\n        require(dailyReward,\" Daily Rewards Are Stopped \");\n        uint256 total;\n        for (uint256 i = 0; i < tokenIDs.length; i++) {\n            require(NFTContract.ownerOf(tokenIDs[i]) == msg.sender, \"You aren't own this NFT token\");\n            total += checkDailyReward(tokenIDs[i]);\n            if(checkDailyReward(tokenIDs[i]) > 0){\n                lastReward[tokenIDs[i]] = block.timestamp;\n            }\n        }\n        require(total > 0, \"There is no claimable reward\");\n        _mint(msg.sender, total);\n    }","contract":"ROOTx","time":0},{"type":"external-function ","before":"function startChallnge(string  memory _des, uint256 _roots, uint256 _nfts) public onlyOwner{\n        Challenges[challengeCount+1] = challenge(challengeCount+1, _des, _roots, _nfts, true);\n        challengeCount++;\n    }","after":"function startChallnge(string  calldata _des, uint256 _roots, uint256 _nfts) public onlyOwner{\n        Challenges[challengeCount+1] = challenge(challengeCount+1, _des, _roots, _nfts, true);\n        challengeCount++;\n    }","contract":"ROOTx","time":0}]}