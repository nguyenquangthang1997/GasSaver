{"time":97,"results":[{"type":"loop-calculation","before":"uint[100] memory r = [uint(51),96,105,152,235,324,421,577,794,861,938,1123,1316,1435,1515,1534,1900,1920,1989,1992,2178,2185,2489,2589,2685,2694,2855,2986,3083,3215,3234,3331,3517,3789,3836,3893,3916,3929,4082,4205,4302,4318,4475,4510,4670,4678,4695,4767,5080,5137,5215,5243,5305,5330,5380,5435,5654,5659,5759,5880,5939,5955,6164,6243,6471,6555,6576,6617,6658,6863,6889,6901,6949,6969,7057,7174,7232,7253,7315,7634,7794,7855,7921,8003,8049,8158,8376,8507,8842,9069,9094,9223,9293,9326,9546,9599,9647,9821,9853,9940];","after":"// move outside for loop\nuint[100] memory r = [uint(51),96,105,152,235,324,421,577,794,861,938,1123,1316,1435,1515,1534,1900,1920,1989,1992,2178,2185,2489,2589,2685,2694,2855,2986,3083,3215,3234,3331,3517,3789,3836,3893,3916,3929,4082,4205,4302,4318,4475,4510,4670,4678,4695,4767,5080,5137,5215,5243,5305,5330,5380,5435,5654,5659,5759,5880,5939,5955,6164,6243,6471,6555,6576,6617,6658,6863,6889,6901,6949,6969,7057,7174,7232,7253,7315,7634,7794,7855,7921,8003,8049,8158,8376,8507,8842,9069,9094,9223,9293,9326,9546,9599,9647,9821,9853,9940];","loc":{"start":{"line":495,"column":12},"end":{"line":495,"column":527}},"contract":"FunnyApeClub","time":0},{"type":"state-data-arrangement ","before":"\nbytes4 internal constant MAGIC_ON_ERC721_RECEIVED = 0x150b7a02;\nuint public constant TOKEN_LIMIT = 10000;\nmapping(bytes4 => bool) internal supportedInterfaces;\nmapping (uint256 => address) internal idToOwner;\nmapping (uint256 => address) internal idToApproval;\nmapping (address => mapping (address => bool)) internal ownerToOperators;\nmapping(address => uint256[]) internal ownerToIds;\nmapping(uint256 => uint256) internal idToOwnerIndex;\nstring internal nftName = \"FunnyApeClub\";\nstring internal nftSymbol = \"FAC\";\nstring public imageHash;\nuint internal numTokens = 0;\nuint internal numSales = 0;\naddress payable internal deployer;\naddress payable internal marketer = 0x1091496189182Fc74bb6ceb4b010aD4D96dC7469;\nbool public publicSale = false;\nuint public mintPrice = 10e16;\nuint public saleStartTime;\nuint internal nonce = 0;\nuint[TOKEN_LIMIT] internal indices;\nbool public marketPaused;\nbool public contractSealed;\nmapping (address => uint256) public ethBalance;\nmapping (bytes32 => bool) public cancelledOffers;\nstring public BaseURI;\nbool private reentrancyLock = false;","after":"uint public constant TOKEN_LIMIT = 10000;\nmapping(bytes4 => bool) internal supportedInterfaces;\nmapping (uint256 => address) internal idToOwner;\nmapping (uint256 => address) internal idToApproval;\nmapping (address => mapping (address => bool)) internal ownerToOperators;\nmapping(address => uint256[]) internal ownerToIds;\nmapping(uint256 => uint256) internal idToOwnerIndex;\nstring internal nftName = \"FunnyApeClub\";\nstring internal nftSymbol = \"FAC\";\nstring public imageHash;\nuint internal numTokens = 0;\nuint internal numSales = 0;\nuint public mintPrice = 10e16;\nuint public saleStartTime;\nuint internal nonce = 0;\nuint[TOKEN_LIMIT] internal indices;\nmapping (address => uint256) public ethBalance;\nmapping (bytes32 => bool) public cancelledOffers;\nstring public BaseURI;\naddress payable internal deployer;\naddress payable internal marketer = 0x1091496189182Fc74bb6ceb4b010aD4D96dC7469;\nbytes4 internal constant MAGIC_ON_ERC721_RECEIVED = 0x150b7a02;\nbool public publicSale = false;\nbool public marketPaused;\nbool public contractSealed;\nbool private reentrancyLock = false;\n","contract":"FunnyApeClub","time":1},{"type":"external-function ","before":"function setBaseURI(string memory _baseURI) public onlyDeployer() {\n       BaseURI=_baseURI;\n    }","after":"function setBaseURI(string calldata _baseURI) public onlyDeployer() {\n       BaseURI=_baseURI;\n    }","contract":"FunnyApeClub","time":0},{"type":"constant-restrict-modification  ","before":"string internal nftName = \"FunnyApeClub\";","after":"string internal constant nftName = \"FunnyApeClub\";","contract":"FunnyApeClub","time":0},{"type":"constant-restrict-modification  ","before":"string internal nftSymbol = \"FAC\";","after":"string internal constant nftSymbol = \"FAC\";","contract":"FunnyApeClub","time":0},{"type":"immutable-restrict-modification ","before":"address payable internal deployer;","after":"address payable internal immutable deployer;","contract":"FunnyApeClub","time":0}]}