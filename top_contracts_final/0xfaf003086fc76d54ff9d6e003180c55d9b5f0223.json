{"time":167,"results":[{"type":"external-function ","before":"function setVars(string memory baseTokenURI, uint256 supply) public onlyOwner {\n        _baseTokenURI = baseTokenURI;\n        SUPPLY = supply;\n    }","after":"function setVars(string calldata baseTokenURI, uint256 supply) public onlyOwner {\n        _baseTokenURI = baseTokenURI;\n        SUPPLY = supply;\n    }","contract":"MetaCollarMinter","time":0},{"type":"external-function ","before":"function addWhitelistNft(address[] memory _nfts) public onlyOwner {\n        for (uint256 i = 0; i < _nfts.length; i++) {\n            nfts.push(IERC721(_nfts[i]));\n        }\n    }","after":"function addWhitelistNft(address[] calldata _nfts) public onlyOwner {\n        for (uint256 i = 0; i < _nfts.length; i++) {\n            nfts.push(IERC721(_nfts[i]));\n        }\n    }","contract":"MetaCollarMinter","time":0},{"type":"external-function ","before":"function addWhitelisters(address[] memory _addresses) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            whitelist[_addresses[i]] = true;\n            whitelistTotals[_addresses[i]] = 0;\n            emit AddedToWhitelist(_addresses[i]);\n        }\n    }","after":"function addWhitelisters(address[] calldata _addresses) public onlyOwner {\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            whitelist[_addresses[i]] = true;\n            whitelistTotals[_addresses[i]] = 0;\n            emit AddedToWhitelist(_addresses[i]);\n        }\n    }","contract":"MetaCollarMinter","time":0}]}