{"time":134,"results":[{"type":"external-function ","before":"function airDrop(address[] memory _to) external onlyOwner {\n        uint256 qty = _to.length;\n        require((numberMinted + qty) > numberMinted, \"Math overflow error\");\n        require((numberMinted + qty) < totalTokens, \"Cannot fill order\");\n        \n        uint256 mintSeedValue = numberMinted;\n        if (reservedTokens >= qty) {\n            reservedTokens -= qty;\n        } else {\n            reservedTokens = 0;\n        }\n        \n        for(uint256 i = 0; i < qty; i++) {\n            _safeMint(_to[i], mintSeedValue + i);\n            numberMinted ++;  //reservedTokens can be reset, numberMinted can not\n        }\n    }","after":"function airDrop(address[] calldata _to) external onlyOwner {\n        uint256 qty = _to.length;\n        require((numberMinted + qty) > numberMinted, \"Math overflow error\");\n        require((numberMinted + qty) < totalTokens, \"Cannot fill order\");\n        \n        uint256 mintSeedValue = numberMinted;\n        if (reservedTokens >= qty) {\n            reservedTokens -= qty;\n        } else {\n            reservedTokens = 0;\n        }\n        \n        for(uint256 i = 0; i < qty; i++) {\n            _safeMint(_to[i], mintSeedValue + i);\n            numberMinted ++;  //reservedTokens can be reset, numberMinted can not\n        }\n    }","contract":"Chameleon","time":1},{"type":"external-function ","before":"function setBaseURI(string memory newURI) public onlyOwner {\n        _baseURI = newURI;\n    }","after":"function setBaseURI(string calldata newURI) public onlyOwner {\n        _baseURI = newURI;\n    }","contract":"Chameleon","time":0},{"type":"external-function ","before":"function whiteListMany(address[] memory accounts) external onlyOwner {\n        for (uint256 i; i < accounts.length; i++) {\n            _whitelist[accounts[i]] = true;\n        }\n    }","after":"function whiteListMany(address[] calldata accounts) external onlyOwner {\n        for (uint256 i; i < accounts.length; i++) {\n            _whitelist[accounts[i]] = true;\n        }\n    }","contract":"Chameleon","time":0}]}