{"time":137,"results":[{"type":"state-data-arrangement ","before":"\nbytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\nbytes32 public constant AIRDROP_ROLE = keccak256(\"AIRDROP_ROLE\");\nuint256 public constant GALAXY_AIRDROP_ID = 0;\nbool public isAirdropActive = true;\nstring public name;\naddress mb = 0xDfa857c95608000B46315cdf54Fe1efcF842ab89;","after":"bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\nbytes32 public constant AIRDROP_ROLE = keccak256(\"AIRDROP_ROLE\");\nuint256 public constant GALAXY_AIRDROP_ID = 0;\nstring public name;\naddress mb = 0xDfa857c95608000B46315cdf54Fe1efcF842ab89;\nbool public isAirdropActive = true;\n","contract":"GalaxyAirdrop","time":1},{"type":"external-function ","before":"function setURI(string memory uri_) external onlyOwner {\n    _setURI(uri_);\n  }","after":"function setURI(string calldata uri_) external onlyOwner {\n    _setURI(uri_);\n  }","contract":"GalaxyAirdrop","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"GalaxyAirdrop","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"GalaxyAirdrop","time":0},{"type":"constant-restrict-modification  ","before":"address mb = 0xDfa857c95608000B46315cdf54Fe1efcF842ab89;","after":"address constant mb = 0xDfa857c95608000B46315cdf54Fe1efcF842ab89;","contract":"GalaxyAirdrop","time":0}]}