{"time":124,"results":[{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _uri = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _uri = baseURI;\n    }","contract":"MekaFight","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"MekaFight","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"MekaFight","time":0},{"type":"constant-restrict-modification  ","before":"address payable internal  dev = payable(0x89a87522563b9B63B0B394Dc965882915fD76e6f);","after":"address payable internal  constant dev = payable(0x89a87522563b9B63B0B394Dc965882915fD76e6f);","contract":"MekaFight","time":1},{"type":"constant-restrict-modification  ","before":"address payable internal  iv = payable(0x746E07fE8ed6A7537641c7cf422ddaE2B611CeFe);","after":"address payable internal  constant iv = payable(0x746E07fE8ed6A7537641c7cf422ddaE2B611CeFe);","contract":"MekaFight","time":1}]}