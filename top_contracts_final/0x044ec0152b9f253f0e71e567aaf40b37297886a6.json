{"time":206,"results":[{"type":"external-function ","before":"function setURI(string memory newTokenURI, uint256 tokenId) public onlyOwner {\r\n        tokenURI[tokenId] = newTokenURI;\r\n    }","after":"function setURI(string calldata newTokenURI, uint256 tokenId) public onlyOwner {\r\n        tokenURI[tokenId] = newTokenURI;\r\n    }","contract":"NFTNato","time":0},{"type":"external-function ","before":"function setGlobalURI(string memory newTokenURI) public onlyOwner {\r\n        _setURI(newTokenURI);\r\n    }","after":"function setGlobalURI(string calldata newTokenURI) public onlyOwner {\r\n        _setURI(newTokenURI);\r\n    }","contract":"NFTNato","time":0},{"type":"external-function ","before":"function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public override {\r\n        require(amount > 0, \"AMOUNT_CANNOT_BE_ZERO\");\r\n        return super.safeTransferFrom(from, to, id, amount, data);\r\n    }","after":"function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) public override {\r\n        require(amount > 0, \"AMOUNT_CANNOT_BE_ZERO\");\r\n        return super.safeTransferFrom(from, to, id, amount, data);\r\n    }","contract":"NFTNato","time":0},{"type":"external-function ","before":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","after":"   function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n  ","contract":"NFTNato","time":0},{"type":"external-function ","before":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","after":"   function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n  ","contract":"NFTNato","time":0}]}