{"time":120,"results":[{"type":"external-function ","before":"function changeBaseURI(string memory baseURI_) public onlyOwner {\n        _currentBaseURI = baseURI_;\n    }","after":"function changeBaseURI(string calldata baseURI_) public onlyOwner {\n        _currentBaseURI = baseURI_;\n    }","contract":"nft","time":0},{"type":"external-function ","before":"function initialMint(uint[] memory tokenIds, address[] memory recipients) public onlyOwner {\n        require(initialMints + tokenIds.length <= 134, \"Not enough Initial NFTs left to mint..\");\n\n        for (uint i = 0; i < tokenIds.length; i++) {\n            _safeMint(recipients[i], tokenIds[i]);\n            mintsPerAddress[recipients[i]] += 1;\n            numberOfTotalTokens += 1;\n            initialMints++;\n        }    \n        \n    }","after":"function initialMint(uint[] calldata tokenIds, address[] calldata recipients) public onlyOwner {\n        require(initialMints + tokenIds.length <= 134, \"Not enough Initial NFTs left to mint..\");\n\n        for (uint i = 0; i < tokenIds.length; i++) {\n            _safeMint(recipients[i], tokenIds[i]);\n            mintsPerAddress[recipients[i]] += 1;\n            numberOfTotalTokens += 1;\n            initialMints++;\n        }    \n        \n    }","contract":"nft","time":0}]}