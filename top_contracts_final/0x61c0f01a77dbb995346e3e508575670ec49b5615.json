{"time":194,"results":[{"type":"state-data-arrangement ","before":"\nbool public saleActive = false;\nbool public presaleActive = false;\nuint256 public reserved = 100;\nuint256 public price = 0.05 ether;\nuint256 constant MAX_SUPPLY = 6666;\nuint256 public constant MAX_PER_ADDRESS_PRESALE = 3;\nuint256 public constant MAX_PER_ADDRESS_PUBLIC = 10;\nstring public baseTokenURI;\nmapping(address => bool) public whitelisted;\nstring public baseExtension = \".json\";\nbool public revealed = false;\nstring public notRevealedUri;\naddress public Shannon = 0xbBB59bce1FDB930be2cfEE29F9a467269d5B8761;\naddress public Ryan = 0x77b06916B10A32e89810D3CD6A04744722B49915;\naddress public Steve = 0x27853Ea1152048Fa174E2E64a724AdbB70D92452;\naddress public Treasury = 0x80bd15B854384B9E8b920f56A3aE2687c1368a65;","after":"uint256 public reserved = 100;\nuint256 public price = 0.05 ether;\nuint256 constant MAX_SUPPLY = 6666;\nuint256 public constant MAX_PER_ADDRESS_PRESALE = 3;\nuint256 public constant MAX_PER_ADDRESS_PUBLIC = 10;\nstring public baseTokenURI;\nmapping(address => bool) public whitelisted;\nstring public baseExtension = \".json\";\nstring public notRevealedUri;\naddress public Shannon = 0xbBB59bce1FDB930be2cfEE29F9a467269d5B8761;\naddress public Ryan = 0x77b06916B10A32e89810D3CD6A04744722B49915;\naddress public Steve = 0x27853Ea1152048Fa174E2E64a724AdbB70D92452;\naddress public Treasury = 0x80bd15B854384B9E8b920f56A3aE2687c1368a65;\nbool public saleActive = false;\nbool public presaleActive = false;\nbool public revealed = false;\n","contract":"Wickens","time":2},{"type":"external-function ","before":"function addWhitelistUser(address[] memory _user) public onlyOwner {\r\n        for(uint256 idx = 0; idx < _user.length; idx++) {\r\n            require(whitelisted[_user[idx]] == false, \"already set\");\r\n            whitelisted[_user[idx]] = true;\r\n        }\r\n    }","after":"function addWhitelistUser(address[] calldata _user) public onlyOwner {\r\n        for(uint256 idx = 0; idx < _user.length; idx++) {\r\n            require(whitelisted[_user[idx]] == false, \"already set\");\r\n            whitelisted[_user[idx]] = true;\r\n        }\r\n    }","contract":"Wickens","time":0},{"type":"external-function ","before":"function removeWhitelistUser(address[] memory _user) public onlyOwner {\r\n        for(uint256 idx = 0; idx < _user.length; idx++) {\r\n            require(whitelisted[_user[idx]] == true, \"not exist\");\r\n            whitelisted[_user[idx]] = false;\r\n        }\r\n    }","after":"function removeWhitelistUser(address[] calldata _user) public onlyOwner {\r\n        for(uint256 idx = 0; idx < _user.length; idx++) {\r\n            require(whitelisted[_user[idx]] == true, \"not exist\");\r\n            whitelisted[_user[idx]] = false;\r\n        }\r\n    }","contract":"Wickens","time":0},{"type":"constant-restrict-modification  ","before":"string public baseExtension = \".json\";","after":"string public constant baseExtension = \".json\";","contract":"Wickens","time":0},{"type":"constant-restrict-modification  ","before":"address public Shannon = 0xbBB59bce1FDB930be2cfEE29F9a467269d5B8761;","after":"address public constant Shannon = 0xbBB59bce1FDB930be2cfEE29F9a467269d5B8761;","contract":"Wickens","time":0},{"type":"constant-restrict-modification  ","before":"address public Ryan = 0x77b06916B10A32e89810D3CD6A04744722B49915;","after":"address public constant Ryan = 0x77b06916B10A32e89810D3CD6A04744722B49915;","contract":"Wickens","time":0},{"type":"constant-restrict-modification  ","before":"address public Steve = 0x27853Ea1152048Fa174E2E64a724AdbB70D92452;","after":"address public constant Steve = 0x27853Ea1152048Fa174E2E64a724AdbB70D92452;","contract":"Wickens","time":0},{"type":"constant-restrict-modification  ","before":"address public Treasury = 0x80bd15B854384B9E8b920f56A3aE2687c1368a65;","after":"address public constant Treasury = 0x80bd15B854384B9E8b920f56A3aE2687c1368a65;","contract":"Wickens","time":0}]}