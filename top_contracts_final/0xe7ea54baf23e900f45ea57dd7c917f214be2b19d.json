{"time":140,"results":[{"type":"external-function ","before":"function addSku(SKUInput[] memory _skus) external onlyOwner {\n        for (uint256 i = 0; i < _skus.length; i++) {\n            if (names.length > 0) {\n                require(\n                    names[skuIds[_skus[i].name]] !=\n                        keccak256(bytes(_skus[i].name)),\n                    \"Sku already exists\"\n                );\n            }\n            uint256 tokenId = names.length;\n            skuIds[_skus[i].name] = tokenId;\n            names.push(keccak256(bytes(_skus[i].name)));\n            inventory[tokenId] = SKU(tokenId, _skus[i].price, _skus[i].name);\n        }\n    }","after":"function addSku(SKUInput[] calldata _skus) external onlyOwner {\n        for (uint256 i = 0; i < _skus.length; i++) {\n            if (names.length > 0) {\n                require(\n                    names[skuIds[_skus[i].name]] !=\n                        keccak256(bytes(_skus[i].name)),\n                    \"Sku already exists\"\n                );\n            }\n            uint256 tokenId = names.length;\n            skuIds[_skus[i].name] = tokenId;\n            names.push(keccak256(bytes(_skus[i].name)));\n            inventory[tokenId] = SKU(tokenId, _skus[i].price, _skus[i].name);\n        }\n    }","contract":"CandyShop","time":0},{"type":"external-function ","before":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","after":"function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }","contract":"CandyShop","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","after":"function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }","contract":"CandyShop","time":0}]}