{"time":632,"results":[{"type":"external-function ","before":"function whitelistAddress (address[] memory users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            whitelistedAddr[users[i]] = true;\n        }\n    }","after":"function whitelistAddress (address[] calldata users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            whitelistedAddr[users[i]] = true;\n        }\n    }","contract":"LilBabyCatGang","time":0},{"type":"external-function ","before":"function removeWhitelistAddress (address[] memory users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            require(whitelistedAddr[users[i]], \"address is not existed or already removed in whitelist\");\n            whitelistedAddr[users[i]] = false;\n        }\n    }","after":"function removeWhitelistAddress (address[] calldata users) public onlyOwner {\n        for (uint i = 0; i < users.length; i++) {\n            require(whitelistedAddr[users[i]], \"address is not existed or already removed in whitelist\");\n            whitelistedAddr[users[i]] = false;\n        }\n    }","contract":"LilBabyCatGang","time":0}]}