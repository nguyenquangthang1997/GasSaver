{"time":105,"results":[{"type":"external-function ","before":"ss/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\n/**\n * @title DadMfers contract\n * @de","after":"ss/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\n/**\n * @title DadMfers contract\n * @de","contract":"DadMfers","time":0},{"type":"external-function ","before":"nds ERC721 Non-Fungible Token Standard basic implementation\n */\ncontract DadMfers is ERC721, Ownable {\n\n  ","after":"nds ERC721 Non-Fungible Token Standard basic implementation\n */\ncontract DadMfers is ERC721, Ownable {\n\n  ","contract":"DadMfers","time":0},{"type":"external-function ","before":"   constructor(address payable shareholderAddress_) ERC721(\"dadmfers\", \"DADMFER\") {\n        require(shareholderAddress_ != address(0));\n        shareholderAddress = shareholderAddress_;\n    }\n\n    function totalSupply() public view returns (uint256 supply) {\n        return _tokenSupply.current();\n    }\n\n    function setBaseURI(string memory baseURI_) external onlyOwner() {\n        _baseU","after":"   constructor(address payable shareholderAddress_) ERC721(\"dadmfers\", \"DADMFER\") {\n        require(shareholderAddress_ != address(0));\n        shareholderAddress = shareholderAddress_;\n    }\n\n    function totalSupply() public view returns (uint256 supply) {\n        return _tokenSupply.current();\n    }\n\n    function setBaseURI(string memory baseURI_) external onlyOwner() {\n        _baseU","contract":"DadMfers","time":0},{"type":"constant-restrict-modification  ","before":"�⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⢸⠀⠀⠀⠀⠀⡌⠀⠈⡆⠀⠀⠀�","after":"�⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⢸⠀⠀⠀⠀⠀⡌⠀⠈⡆⠀⠀⠀�","contract":"DadMfers","time":0}]}