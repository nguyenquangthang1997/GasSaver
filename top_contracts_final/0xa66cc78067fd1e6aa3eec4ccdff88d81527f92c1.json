{"time":139,"results":[{"type":"external-function ","before":"function addToWhitelist(address[] memory addresses) public onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n          require(addresses[i] != address(0), \"Can't add the null address\");\n        \n          _allowList[addresses[i]] = true;\n          _allowListClaimed[addresses[i]] > 0 ? _allowListClaimed[addresses[i]] : 0;\n        }\n    }","after":"function addToWhitelist(address[] calldata addresses) public onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n          require(addresses[i] != address(0), \"Can't add the null address\");\n        \n          _allowList[addresses[i]] = true;\n          _allowListClaimed[addresses[i]] > 0 ? _allowListClaimed[addresses[i]] : 0;\n        }\n    }","contract":"AngryBoars","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyOwner {\n        require(!isMetadataLocked,\"Metadata is locked\");\n        _baseURIExtended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyOwner {\n        require(!isMetadataLocked,\"Metadata is locked\");\n        _baseURIExtended = baseURI_;\n    }","contract":"AngryBoars","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public MAX_SUPPLY = 10000;","after":"uint256 public constant MAX_SUPPLY = 10000;","contract":"AngryBoars","time":0}]}