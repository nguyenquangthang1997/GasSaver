{"time":155,"results":[{"type":"external-function ","before":";\n            _safeMint(mintAddress, _tokenIdCounter.current());\n        }\n    }\n\n    /*\n    * Pause pre-sale if active, make active if paused.\n    */\n    function flipPreSaleState() public onlyOwner {\n        preSaleIsActive = !preSaleIsActive;\n    }\n\n    function hashAddress(address senderAddress) public pure returns (bytes32) {\n        return keccak256(abi.encode(\n            senderAddress\n        ));\n    }\n\n    function startAuction(uint256 duration, uint256 startPrice) external onlyOwner {\n        require(! auctionIsActive, \"Auction already active\");\n        auctionDuration = duration; // in seconds\n        auctionStartPrice = startPrice;\n        auctionStartTime = block.timestamp;\n        auctionIsActive = true;\n    }\n\n    function pauseAuction() external onlyOwner whenAuct","after":";\n            _safeMint(mintAddress, _tokenIdCounter.current());\n        }\n    }\n\n    /*\n    * Pause pre-sale if active, make active if paused.\n    */\n    function flipPreSaleState() public onlyOwner {\n        preSaleIsActive = !preSaleIsActive;\n    }\n\n    function hashAddress(address senderAddress) public pure returns (bytes32) {\n        return keccak256(abi.encode(\n            senderAddress\n        ));\n    }\n\n    function startAuction(uint256 duration, uint256 startPrice) external onlyOwner {\n        require(! auctionIsActive, \"Auction already active\");\n        auctionDuration = duration; // in seconds\n        auctionStartPrice = startPrice;\n        auctionStartTime = block.timestamp;\n        auctionIsActive = true;\n    }\n\n    function pauseAuction() external onlyOwner whenAuct","contract":"TheRealm","time":0},{"type":"external-function ","before":"   _tokenIdCounter.increment();\n            _safeMint(msg.sender, _tokenIdCounter.current());\n      ","after":"   _tokenIdCounter.increment();\n            _safeMint(msg.sender, _tokenIdCounter.current());\n      ","contract":"TheRealm","time":0},{"type":"external-function ","before":"OLD)) {\n            // If the refund amount is less than the threshold, it is not worth the gas to refund.\n           ","after":"OLD)) {\n            // If the refund amount is less than the threshold, it is not worth the gas to refund.\n           ","contract":"TheRealm","time":0}]}