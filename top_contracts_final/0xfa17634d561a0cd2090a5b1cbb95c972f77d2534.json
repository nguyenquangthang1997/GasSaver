{"time":179,"results":[{"type":"loop-duplication","before":"\nstart line 220 column 8, end line 222 column 8\nfor (uint256 i = 1; i <= maxSupply; i+=1) {\n            metaIds[i] = i;\n        }\nstart line 225 column 8, end line 228 column 8\nfor (uint256 i = 1; i <= maxSupply; i+=1) {\n            uint256 j = (uint256(keccak256(abi.encode(ss, i))) % (maxSupply));\n            (metaIds[i], metaIds[j]) = (metaIds[j], metaIds[i]);\n        }","after":"// merge loop\n\nstart line 220 column 8, end line 222 column 8\nfor (uint256 i = 1; i <= maxSupply; i+=1) {\n            metaIds[i] = i;\n        }\nstart line 225 column 8, end line 228 column 8\nfor (uint256 i = 1; i <= maxSupply; i+=1) {\n            uint256 j = (uint256(keccak256(abi.encode(ss, i))) % (maxSupply));\n            (metaIds[i], metaIds[j]) = (metaIds[j], metaIds[i]);\n        }","contract":"FacaNFT","time":0},{"type":"external-function ","before":"function addAllowlist(address[] memory allowlist) public onlyOwner {\n        for(uint i = 0; i < allowlist.length; i+=1) {\n            _presaleAllowed[allowlist[i]] = true;\n            emit FacaWhitelist(allowlist[i]);\n        }\n    }","after":"function addAllowlist(address[] calldata allowlist) public onlyOwner {\n        for(uint i = 0; i < allowlist.length; i+=1) {\n            _presaleAllowed[allowlist[i]] = true;\n            emit FacaWhitelist(allowlist[i]);\n        }\n    }","contract":"FacaNFT","time":0},{"type":"external-function ","before":"function airdrop(address[] memory _to, uint256 amount) public onlyOwner {\n        require(totalAirdrop + (_to.length * amount) <= maxAirdrop, \"Exceed airdop allowance limit.\");\n        for (uint i = 0; i < _to.length; i+=1) {\n            mintFaca(_to[i], amount, true); // mint for marketing & influencer\n        }\n    }","after":"function airdrop(address[] calldata _to, uint256 amount) public onlyOwner {\n        require(totalAirdrop + (_to.length * amount) <= maxAirdrop, \"Exceed airdop allowance limit.\");\n        for (uint i = 0; i < _to.length; i+=1) {\n            mintFaca(_to[i], amount, true); // mint for marketing & influencer\n        }\n    }","contract":"FacaNFT","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _tokenBaseURI = baseURI;\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _tokenBaseURI = baseURI;\n    }","contract":"FacaNFT","time":0},{"type":"immutable-restrict-modification ","before":"bytes32 _keyHash;","after":"bytes32 immutable _keyHash;","contract":"FacaNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint private _limitPrivateSaleTx = 2;","after":"uint private constant _limitPrivateSaleTx = 2;","contract":"FacaNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint private _limitPublicSaleTx = 20;","after":"uint private constant _limitPublicSaleTx = 20;","contract":"FacaNFT","time":0},{"type":"immutable-restrict-modification ","before":"uint public maxAirdrop;","after":"uint public immutable maxAirdrop;","contract":"FacaNFT","time":0},{"type":"immutable-restrict-modification ","before":"uint public maxPrivateSale;","after":"uint public immutable maxPrivateSale;","contract":"FacaNFT","time":0},{"type":"immutable-restrict-modification ","before":"uint public maxSupply;","after":"uint public immutable maxSupply;","contract":"FacaNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _privateSalePrice = 77000000000000000;","after":"uint256 private constant _privateSalePrice = 77000000000000000;","contract":"FacaNFT","time":0}]}