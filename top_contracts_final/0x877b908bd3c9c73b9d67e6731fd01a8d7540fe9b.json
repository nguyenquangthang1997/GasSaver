{"time":123,"results":[{"type":"state-data-arrangement ","before":"\nstring baseTokenURI;\nbool public tokenURIFrozen = false;\naddress public payoutAddress;\nuint256 public totalTokens;\nuint256 public mintPrice = 0.111 ether;\nstring public provenanceHash = \"\";\nmapping(address => bool) public whitelistMinted;\nbool public saleIsActive = false;\nbool public preSaleIsActive = false;\nmapping(address => bool) private presaleList;","after":"string baseTokenURI;\nuint256 public totalTokens;\nuint256 public mintPrice = 0.111 ether;\nstring public provenanceHash = \"\";\nmapping(address => bool) public whitelistMinted;\nmapping(address => bool) private presaleList;\naddress public payoutAddress;\nbool public tokenURIFrozen = false;\nbool public saleIsActive = false;\nbool public preSaleIsActive = false;\n","contract":"COSW","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\r\n        require(tokenURIFrozen == false, 'Token URIs are Frozen');\r\n        baseTokenURI = baseURI;\r\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\r\n        require(tokenURIFrozen == false, 'Token URIs are Frozen');\r\n        baseTokenURI = baseURI;\r\n    }","contract":"COSW","time":0},{"type":"external-function ","before":"function setProvenanceHash(string memory _provenanceHash) public onlyOwner {\r\n        provenanceHash = _provenanceHash;\r\n    }","after":"function setProvenanceHash(string calldata _provenanceHash) public onlyOwner {\r\n        provenanceHash = _provenanceHash;\r\n    }","contract":"COSW","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public totalTokens;","after":"uint256 public immutable totalTokens;","contract":"COSW","time":0}]}