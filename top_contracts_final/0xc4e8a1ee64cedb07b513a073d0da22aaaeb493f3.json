{"time":130,"results":[{"type":"external-function ","before":"function mint(string memory _listName, uint256 _mintAmount) public payable {\n\n        require(!paused, \"Contract paused\");\n        require(counter <= supply, \"Exceeded max number of NFTs!\");\n        require(_mintAmount > 0, \"You cannot mint 0 NFTs\");\n        require(counter + _mintAmount <= supply, \"You can't mint the total NFT supply\");\n\n        if (msg.sender == contractOwner) {\n            counter = counter + _mintAmount;\n            _safeMint(contractOwner, _mintAmount);\n            return;\n        }\n\n        require(msg.value >= mintPrice * _mintAmount, \"Insufficient funds\");\n\n        if (whitelistEnabled) {\n\n            if (compareStrings(_listName, \"OG\")) {\n                require(balanceOf(msg.sender) + _mintAmount <= maxNFTcountOG, \"OG address cannot mint more than 4\");\n                counter = counter + _mintAmount;\n                _safeMint(msg.sender, _mintAmount);\n                return;\n            }\n\n            if (compareStrings(_listName, \"WL\")) {\n                require(balanceOf(msg.sender) + _mintAmount <= maxNFTcountWL, \"WL address cannot mint more than 3\");\n                counter = counter + _mintAmount;\n                _safeMint(msg.sender, _mintAmount);\n                return;\n            }\n\n            revert(\"Whitelist does not exist\");\n        }\n\n        counter = counter + _mintAmount;\n        _safeMint(msg.sender, _mintAmount);\n    }","after":"function mint(string calldata _listName, uint256 _mintAmount) public payable {\n\n        require(!paused, \"Contract paused\");\n        require(counter <= supply, \"Exceeded max number of NFTs!\");\n        require(_mintAmount > 0, \"You cannot mint 0 NFTs\");\n        require(counter + _mintAmount <= supply, \"You can't mint the total NFT supply\");\n\n        if (msg.sender == contractOwner) {\n            counter = counter + _mintAmount;\n            _safeMint(contractOwner, _mintAmount);\n            return;\n        }\n\n        require(msg.value >= mintPrice * _mintAmount, \"Insufficient funds\");\n\n        if (whitelistEnabled) {\n\n            if (compareStrings(_listName, \"OG\")) {\n                require(balanceOf(msg.sender) + _mintAmount <= maxNFTcountOG, \"OG address cannot mint more than 4\");\n                counter = counter + _mintAmount;\n                _safeMint(msg.sender, _mintAmount);\n                return;\n            }\n\n            if (compareStrings(_listName, \"WL\")) {\n                require(balanceOf(msg.sender) + _mintAmount <= maxNFTcountWL, \"WL address cannot mint more than 3\");\n                counter = counter + _mintAmount;\n                _safeMint(msg.sender, _mintAmount);\n                return;\n            }\n\n            revert(\"Whitelist does not exist\");\n        }\n\n        counter = counter + _mintAmount;\n        _safeMint(msg.sender, _mintAmount);\n    }","contract":"Metamini","time":0},{"type":"external-function ","before":"function setNotRevealedURI(string memory _notRevealedURI) public onlyOwner {notRevealedUri = _notRevealedURI;}","after":"function setNotRevealedURI(string calldata _notRevealedURI) public onlyOwner {notRevealedUri = _notRevealedURI;}","contract":"Metamini","time":0},{"type":"external-function ","before":"function setBaseURI (string memory _newBaseURI) public onlyOwner {baseURI = _newBaseURI;}","after":"function setBaseURI (string calldata _newBaseURI) public onlyOwner {baseURI = _newBaseURI;}","contract":"Metamini","time":0},{"type":"immutable-restrict-modification ","before":"address public contractOwner;","after":"address public immutable contractOwner;","contract":"Metamini","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public supply = 1888;","after":"uint256 public constant supply = 1888;","contract":"Metamini","time":0}]}