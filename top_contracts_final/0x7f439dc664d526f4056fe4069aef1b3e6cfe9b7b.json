{"time":138,"results":[{"type":"de-morgan-condition ","before":"!(char >= 0x30 && char <= 0x39) && //9-0\n                !(char >= 0x41 && char <= 0x5A)","after":"!((char >= 0x30 && char <= 0x39) && //9-0\n                (char >= 0x41 && char <= 0x5A))","loc":{"start":{"line":1407,"column":16},"end":{"line":1408,"column":46}},"contract":"FarFetchedLabs","time":0},{"type":"external-function ","before":"function setBaseURI(string memory newURI) public onlyOwner {\n        baseURI = newURI;\n    }","after":"function setBaseURI(string calldata newURI) public onlyOwner {\n        baseURI = newURI;\n    }","contract":"FarFetchedLabs","time":0},{"type":"external-function ","before":"function setShares(address[] memory team, uint256[] memory teamShares)\n        public\n        onlyOwner\n    {\n        _team = team;\n        _shares = teamShares;\n    }","after":"function setShares(address[] calldata team, uint256[] calldata teamShares)\n        public\n        onlyOwner\n    {\n        _team = team;\n        _shares = teamShares;\n    }","contract":"FarFetchedLabs","time":0},{"type":"external-function ","before":"function changeName(uint256 tokenId, string memory newName) public {\n        require(_changeNameFeature, \"The Change Name Function is blocked\");\n        _token.burnFrom(msg.sender, nameChangePrice);\n        address owner = ownerOf(tokenId);\n\n        require(_msgSender() == owner, \"You are not the owner\");\n        require(validateName(newName) == true, \"Not a valid new name\");\n        require(\n            sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])),\n            \"New name is same as the current one\"\n        );\n        require(isNameReserved(newName) == false, \"Name already reserved\");\n\n        // If already named, dereserve old name\n        if (bytes(_tokenName[tokenId]).length > 0) {\n            toggleReserveName(_tokenName[tokenId], false);\n        }\n\n        toggleReserveName(newName, true);\n        _tokenName[tokenId] = newName;\n    }","after":"function changeName(uint256 tokenId, string calldata newName) public {\n        require(_changeNameFeature, \"The Change Name Function is blocked\");\n        _token.burnFrom(msg.sender, nameChangePrice);\n        address owner = ownerOf(tokenId);\n\n        require(_msgSender() == owner, \"You are not the owner\");\n        require(validateName(newName) == true, \"Not a valid new name\");\n        require(\n            sha256(bytes(newName)) != sha256(bytes(_tokenName[tokenId])),\n            \"New name is same as the current one\"\n        );\n        require(isNameReserved(newName) == false, \"Name already reserved\");\n\n        // If already named, dereserve old name\n        if (bytes(_tokenName[tokenId]).length > 0) {\n            toggleReserveName(_tokenName[tokenId], false);\n        }\n\n        toggleReserveName(newName, true);\n        _tokenName[tokenId] = newName;\n    }","contract":"FarFetchedLabs","time":0}]}