{"time":140,"results":[{"type":"state-data-arrangement ","before":"\nuint8 public constant SUITS_VARIATIONS = 15;\nbool public isFreeze;\nuint256 public maxSuits;\nmapping(uint256 => bool) private _whitelistedMCV;\nmapping(uint256 => string) private _tokenURIs;\nmapping(uint256 => bool) private _dressed;\nmapping(uint256 => uint8) private _suitsId;\nmapping(uint256 => bool) private _mcvDressed;\nmapping(uint256 => bool) private _mcvUsed;\nstring private _baseTokenURI;\naddress private _mcvAddress;","after":"uint256 public maxSuits;\nmapping(uint256 => bool) private _whitelistedMCV;\nmapping(uint256 => string) private _tokenURIs;\nmapping(uint256 => bool) private _dressed;\nmapping(uint256 => uint8) private _suitsId;\nmapping(uint256 => bool) private _mcvDressed;\nmapping(uint256 => bool) private _mcvUsed;\nstring private _baseTokenURI;\naddress private _mcvAddress;\nuint8 public constant SUITS_VARIATIONS = 15;\nbool public isFreeze;\n","contract":"SST","time":0},{"type":"external-function ","before":"function setTokenURI(uint256 tokenId, string memory _tokenURI) external onlyOwner {\n    require(!isFreeze, \"contract have already frozen!\");\n    _setTokenURI(tokenId, _tokenURI);\n  }","after":"function setTokenURI(uint256 tokenId, string calldata _tokenURI) external onlyOwner {\n    require(!isFreeze, \"contract have already frozen!\");\n    _setTokenURI(tokenId, _tokenURI);\n  }","contract":"SST","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxSuits;","after":"uint256 public immutable maxSuits;","contract":"SST","time":0},{"type":"immutable-restrict-modification ","before":"address private _mcvAddress;","after":"address private immutable _mcvAddress;","contract":"SST","time":0}]}