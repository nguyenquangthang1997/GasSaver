{"time":200,"results":[{"type":"external-function ","before":"function stakeTokens(address _account, uint16[] memory _tokenIds) public {\r\n        require(_account == msg.sender || msg.sender == address(sail), \"Only manager or owner can do this\");\r\n\r\n        // 1. Handle ships\r\n        if (_tokenIds[0] != 0) {\r\n            require(ships.ownerOf(_tokenIds[0]) == msg.sender, \"This NTF does not belong to address\");\r\n            require(sail.isWaterproof(_tokenIds[0]) == true, \"Token is not ready\");\r\n            ships.transferFrom(msg.sender, address(this), _tokenIds[0]);\r\n            _stakeShips(_account, _tokenIds[0]);\r\n        }\r\n        // 2. Stake the rest of the tokens starting from index 1\r\n        for (uint i = 1; i < _tokenIds.length; i++) {\r\n            require(goldHunter.ownerOf(_tokenIds[i]) == msg.sender, \"This NTF does not belong to address\");\r\n            require(sail.isWaterproof(_tokenIds[i]) == true, \"Token is not ready\");\r\n            goldHunter.transferFrom(msg.sender, address(this), _tokenIds[i]);\r\n            \r\n            if (goldHunter.isPirate(_tokenIds[i])) {\r\n                _stakePirates(_account, _tokenIds[i]);\r\n            } else {\r\n                _stakeGoldMiners(_account, _tokenIds[i]);\r\n            }\r\n        }\r\n    }","after":"function stakeTokens(address _account, uint16[] calldata _tokenIds) public {\r\n        require(_account == msg.sender || msg.sender == address(sail), \"Only manager or owner can do this\");\r\n\r\n        // 1. Handle ships\r\n        if (_tokenIds[0] != 0) {\r\n            require(ships.ownerOf(_tokenIds[0]) == msg.sender, \"This NTF does not belong to address\");\r\n            require(sail.isWaterproof(_tokenIds[0]) == true, \"Token is not ready\");\r\n            ships.transferFrom(msg.sender, address(this), _tokenIds[0]);\r\n            _stakeShips(_account, _tokenIds[0]);\r\n        }\r\n        // 2. Stake the rest of the tokens starting from index 1\r\n        for (uint i = 1; i < _tokenIds.length; i++) {\r\n            require(goldHunter.ownerOf(_tokenIds[i]) == msg.sender, \"This NTF does not belong to address\");\r\n            require(sail.isWaterproof(_tokenIds[i]) == true, \"Token is not ready\");\r\n            goldHunter.transferFrom(msg.sender, address(this), _tokenIds[i]);\r\n            \r\n            if (goldHunter.isPirate(_tokenIds[i])) {\r\n                _stakePirates(_account, _tokenIds[i]);\r\n            } else {\r\n                _stakeGoldMiners(_account, _tokenIds[i]);\r\n            }\r\n        }\r\n    }","contract":"NewLand","time":0}]}