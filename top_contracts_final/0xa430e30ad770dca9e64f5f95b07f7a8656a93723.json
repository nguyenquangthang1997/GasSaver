{"time":92,"results":[{"type":"struct-data-arrangement ","before":"\naddress addr\naddress sender\naddress origin\nuint256 value\nbytes data\nbytes4 sig","after":"uint256 value\nbytes data\naddress addr\naddress sender\naddress origin\nbytes4 sig\n","contract":"IMETACoin223Token_13","time":0},{"type":"external-function ","before":"function tokenFallback(address _sender, address _origin, uint _value, bytes  memory _data) public override returns (bool ok) {\n        if (!supportsToken(msg.sender)) return false;\n\n        // Problem: This will do a sstore which is expensive gas wise. Find a way to keep it in memory.\n        tkn = Tkn(msg.sender, _sender, _origin, _value, _data, getSig(_data));\n        __isTokenFallback = true;\n\n//        if (!address(this).delegatecall(_data)) return false;\n        (bool success, bytes memory response) = address(this).delegatecall(_data);\n        response = response; //!!!!! will it work?\n        if(!success)  return false;\n\n\n        // avoid doing an overwrite to .token, which would be more expensive\n        // makes accessing .tkn values outside tokenPayable functions unsafe\n        __isTokenFallback = false;\n\n        return true;\n    }","after":"function tokenFallback(address _sender, address _origin, uint _value, bytes  calldata _data) public override returns (bool ok) {\n        if (!supportsToken(msg.sender)) return false;\n\n        // Problem: This will do a sstore which is expensive gas wise. Find a way to keep it in memory.\n        tkn = Tkn(msg.sender, _sender, _origin, _value, _data, getSig(_data));\n        __isTokenFallback = true;\n\n//        if (!address(this).delegatecall(_data)) return false;\n        (bool success, bytes memory response) = address(this).delegatecall(_data);\n        response = response; //!!!!! will it work?\n        if(!success)  return false;\n\n\n        // avoid doing an overwrite to .token, which would be more expensive\n        // makes accessing .tkn values outside tokenPayable functions unsafe\n        __isTokenFallback = false;\n\n        return true;\n    }","contract":"IMETACoin223Token_13","time":0},{"type":"external-function ","before":"function airdropIndividual(address[]  memory _recipients, uint256[]  memory _values, uint256 _elemCount, uint _totalValue)  public returns (bool success) {\n        \n        require(_recipients.length == _elemCount);\n        require(_values.length == _elemCount); \n        require(_elemCount <= 50); \n        \n        uint256 totalValue = 0;\n        for(uint i = 0; i< _recipients.length; i++) {\n            totalValue = safeAdd(totalValue, _values[i]);\n        }\n        \n        require(totalValue == _totalValue);\n        \n        for(uint i = 0; i< _recipients.length; i++) {\n            transfer(_recipients[i], _values[i]);\n        }\n        return true;\n    }","after":"function airdropIndividual(address[]  calldata _recipients, uint256[]  calldata _values, uint256 _elemCount, uint _totalValue)  public returns (bool success) {\n        \n        require(_recipients.length == _elemCount);\n        require(_values.length == _elemCount); \n        require(_elemCount <= 50); \n        \n        uint256 totalValue = 0;\n        for(uint i = 0; i< _recipients.length; i++) {\n            totalValue = safeAdd(totalValue, _values[i]);\n        }\n        \n        require(totalValue == _totalValue);\n        \n        for(uint i = 0; i< _recipients.length; i++) {\n            transfer(_recipients[i], _values[i]);\n        }\n        return true;\n    }","contract":"IMETACoin223Token_13","time":0},{"type":"immutable-restrict-modification ","before":"uint8 public decimals;","after":"uint8 public immutable decimals;","contract":"IMETACoin223Token_13","time":0},{"type":"immutable-restrict-modification ","before":"address /*public*/ contrInitiator;","after":"address /*public*/ immutable contrInitiator;","contract":"IMETACoin223Token_13","time":0},{"type":"immutable-restrict-modification ","before":"address /*public*/ thisContract;","after":"address /*public*/ immutable thisContract;","contract":"IMETACoin223Token_13","time":0},{"type":"immutable-restrict-modification ","before":"bool /*public*/ isTokenSupport;","after":"bool /*public*/ immutable isTokenSupport;","contract":"IMETACoin223Token_13","time":0},{"type":"immutable-restrict-modification ","before":"uint oneTransferLimit;","after":"uint immutable oneTransferLimit;","contract":"IMETACoin223Token_13","time":0},{"type":"immutable-restrict-modification ","before":"uint oneDayTransferLimit;","after":"uint immutable oneDayTransferLimit;","contract":"IMETACoin223Token_13","time":0},{"type":"immutable-restrict-modification ","before":"uint public totalSupply;","after":"uint public immutable totalSupply;","contract":"IMETACoin223Token_13","time":0}]}