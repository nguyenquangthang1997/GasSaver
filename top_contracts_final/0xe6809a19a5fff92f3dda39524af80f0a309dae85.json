{"time":201,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 constant internal ERC1155_RECEIVED_VALUE = 0xf23a6e61;\nbytes4 constant internal ERC1155_BATCH_RECEIVED_VALUE = 0xbc197c81;\nmapping (address => mapping(uint256 => uint256)) internal balances;\nmapping (address => mapping(address => bool)) internal operators;\nbytes4 constant private INTERFACE_SIGNATURE_ERC165 = 0x01ffc9a7;\nbytes4 constant private INTERFACE_SIGNATURE_ERC1155 = 0xd9b67a26;","after":"mapping (address => mapping(uint256 => uint256)) internal balances;\nmapping (address => mapping(address => bool)) internal operators;\nbytes4 constant internal ERC1155_RECEIVED_VALUE = 0xf23a6e61;\nbytes4 constant internal ERC1155_BATCH_RECEIVED_VALUE = 0xbc197c81;\nbytes4 constant private INTERFACE_SIGNATURE_ERC165 = 0x01ffc9a7;\nbytes4 constant private INTERFACE_SIGNATURE_ERC1155 = 0xd9b67a26;\n","contract":"ERC1155","time":0},{"type":"external-function ","before":"function setBaseMetadataURI(\n        string memory _newBaseMetadataURI\n    ) public onlyOwner {\n        _setBaseMetadataURI(_newBaseMetadataURI);\n    }","after":"function setBaseMetadataURI(\n        string calldata _newBaseMetadataURI\n    ) public onlyOwner {\n        _setBaseMetadataURI(_newBaseMetadataURI);\n    }","contract":"HypedHuskyMetaCityNFT","time":0},{"type":"external-function ","before":"function batchMint(\n        address _to,\n        uint256[] memory _ids,\n        uint256[] memory _quantities,\n        bytes memory _data\n    ) public {\n        for (uint256 i = 0; i < _ids.length; i++) {\n        uint256 _id = _ids[i];\n        require(creators[_id] == msg.sender, \"ERC1155Tradable#batchMint: ONLY_CREATOR_ALLOWED\");\n        uint256 quantity = _quantities[i];\n        tokenSupply[_id] = tokenSupply[_id].add(quantity);\n        }\n        _batchMint(_to, _ids, _quantities, _data);\n    }","after":"function batchMint(\n        address _to,\n        uint256[] calldata _ids,\n        uint256[] calldata _quantities,\n        bytes calldata _data\n    ) public {\n        for (uint256 i = 0; i < _ids.length; i++) {\n        uint256 _id = _ids[i];\n        require(creators[_id] == msg.sender, \"ERC1155Tradable#batchMint: ONLY_CREATOR_ALLOWED\");\n        uint256 quantity = _quantities[i];\n        tokenSupply[_id] = tokenSupply[_id].add(quantity);\n        }\n        _batchMint(_to, _ids, _quantities, _data);\n    }","contract":"HypedHuskyMetaCityNFT","time":0},{"type":"external-function ","before":"function setCreator(\n        address _to,\n        uint256[] memory _ids\n    ) public {\n        require(_to != address(0), \"ERC1155Tradable#setCreator: INVALID_ADDRESS.\");\n        for (uint256 i = 0; i < _ids.length; i++) {\n        uint256 id = _ids[i];\n        _setCreator(_to, id);\n        }\n    }","after":"function setCreator(\n        address _to,\n        uint256[] calldata _ids\n    ) public {\n        require(_to != address(0), \"ERC1155Tradable#setCreator: INVALID_ADDRESS.\");\n        for (uint256 i = 0; i < _ids.length; i++) {\n        uint256 id = _ids[i];\n        _setCreator(_to, id);\n        }\n    }","contract":"HypedHuskyMetaCityNFT","time":0},{"type":"external-function ","before":"function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data)\n    public\n  {\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155#safeTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0),\"ERC1155#safeTransferFrom: INVALID_RECIPIENT\");\n    // require(_amount >= balances[_from][_id]) is not necessary since checked with safemath operations\n\n    _safeTransferFrom(_from, _to, _id, _amount);\n    _callonERC1155Received(_from, _to, _id, _amount, _data);\n  }","after":"function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes calldata _data)\n    public\n  {\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155#safeTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0),\"ERC1155#safeTransferFrom: INVALID_RECIPIENT\");\n    // require(_amount >= balances[_from][_id]) is not necessary since checked with safemath operations\n\n    _safeTransferFrom(_from, _to, _id, _amount);\n    _callonERC1155Received(_from, _to, _id, _amount, _data);\n  }","contract":"HypedHuskyMetaCityNFT","time":0},{"type":"external-function ","before":"function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data)\n    public\n  {\n    // Requirements\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155#safeBatchTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0), \"ERC1155#safeBatchTransferFrom: INVALID_RECIPIENT\");\n\n    _safeBatchTransferFrom(_from, _to, _ids, _amounts);\n    _callonERC1155BatchReceived(_from, _to, _ids, _amounts, _data);\n  }","after":"function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _amounts, bytes calldata _data)\n    public\n  {\n    // Requirements\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155#safeBatchTransferFrom: INVALID_OPERATOR\");\n    require(_to != address(0), \"ERC1155#safeBatchTransferFrom: INVALID_RECIPIENT\");\n\n    _safeBatchTransferFrom(_from, _to, _ids, _amounts);\n    _callonERC1155BatchReceived(_from, _to, _ids, _amounts, _data);\n  }","contract":"HypedHuskyMetaCityNFT","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private totalTokenAssets = 10000;","after":"uint256 private constant totalTokenAssets = 10000;","contract":"HypedHuskyMetaCityNFT","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private totalReserve = 336;","after":"uint256 private constant totalReserve = 336;","contract":"HypedHuskyMetaCityNFT","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private _maxTokenPerMint = 2;","after":"uint256 private constant _maxTokenPerMint = 2;","contract":"HypedHuskyMetaCityNFT","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private preSalesMaxSupply3 = 9000;","after":"uint256 private constant preSalesMaxSupply3 = 9000;","contract":"HypedHuskyMetaCityNFT","time":1},{"type":"constant-restrict-modification  ","before":"address private signerAddress = 0x22A19Fd9F3a29Fe8260F88C46dB04941Fa0615C9;","after":"address private constant signerAddress = 0x22A19Fd9F3a29Fe8260F88C46dB04941Fa0615C9;","contract":"HypedHuskyMetaCityNFT","time":1}]}