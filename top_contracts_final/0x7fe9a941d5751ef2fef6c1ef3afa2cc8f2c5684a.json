{"time":227,"results":[{"type":"external-function ","before":"function setBaseURI(string memory _uri) external override onlyOwner {\n        baseURI = _uri;\n    }","after":"function setBaseURI(string calldata _uri) external override onlyOwner {\n        baseURI = _uri;\n    }","contract":"NFTeacher","time":0},{"type":"external-function ","before":"function setErc20RoyaltyTokens(address[] memory _royaltyERC20Tokens) external override onlyOwner {\n        royaltyERC20Tokens = _royaltyERC20Tokens;\n    }","after":"function setErc20RoyaltyTokens(address[] calldata _royaltyERC20Tokens) external override onlyOwner {\n        royaltyERC20Tokens = _royaltyERC20Tokens;\n    }","contract":"NFTeacher","time":0},{"type":"external-function ","before":"function withdrawNFT(address _tokenContract, uint256[] memory _id) external nonReentrant {\n        _payout.withdrawNFT(_tokenContract, _id);\n    }","after":"function withdrawNFT(address _tokenContract, uint256[] calldata _id) external nonReentrant {\n        _payout.withdrawNFT(_tokenContract, _id);\n    }","contract":"NFTeacher","time":0},{"type":"immutable-restrict-modification ","before":"uint16 internal royalty = 500;","after":"uint16 internal immutable royalty = 500;","contract":"NFTeacher","time":1},{"type":"external-function ","before":"function withdrawNFT(\n        Payout storage _payout,\n        address _tokenContract,\n        uint256[] memory _id\n    ) external onlyWhenInitialized(_payout.initialized) {\n        IERC721 tokenContract = IERC721(_tokenContract);\n        for (uint256 i = 0; i < _id.length; i++) {\n            address _recipient = getNftRecipient(_payout);\n            tokenContract.safeTransferFrom(address(this), _recipient, _id[i]);\n        }\n    }","after":"function withdrawNFT(\n        Payout storage _payout,\n        address _tokenContract,\n        uint256[] calldata _id\n    ) external onlyWhenInitialized(_payout.initialized) {\n        IERC721 tokenContract = IERC721(_tokenContract);\n        for (uint256 i = 0; i < _id.length; i++) {\n            address _recipient = getNftRecipient(_payout);\n            tokenContract.safeTransferFrom(address(this), _recipient, _id[i]);\n        }\n    }","contract":"SplitWithdrawals","time":0}]}