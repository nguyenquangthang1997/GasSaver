{"time":57,"results":[{"type":"external-function ","before":"function batchBlackList(address[] memory _userAddresses, bool[] memory _set)\n        public\n        onlyOwner\n    {\n        require(_userAddresses.length == _set.length, \"Incomplete info\");\n        for (uint256 i = 0; i < _userAddresses.length; i++) {\n            blackList(_userAddresses[i], _set[i]);\n        }\n    }","after":"function batchBlackList(address[] calldata _userAddresses, bool[] calldata _set)\n        public\n        onlyOwner\n    {\n        require(_userAddresses.length == _set.length, \"Incomplete info\");\n        for (uint256 i = 0; i < _userAddresses.length; i++) {\n            blackList(_userAddresses[i], _set[i]);\n        }\n    }","contract":"BlackListETH","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public totalTokensAmount = 50000000;","after":"uint256 public constant totalTokensAmount = 50000000;","contract":"PYRToken","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"PYR Token\";","after":"string public constant name = \"PYR Token\";","contract":"PYRToken","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol = \"PYR\";","after":"string public constant symbol = \"PYR\";","contract":"PYRToken","time":0},{"type":"constant-restrict-modification  ","before":"uint8 public decimals = 18;","after":"uint8 public constant decimals = 18;","contract":"PYRToken","time":0}]}