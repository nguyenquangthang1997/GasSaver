{"time":144,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function mint(uint256 tokenId, uint8 v, bytes32 r, bytes32 s, Fee[] memory _fees, string memory tokenURI) public {\r\n        require(owner() == StringLibrary.getAddress(abi.encodePacked(this, tokenId), v, r, s), \"owner should sign tokenId\");\r\n        _mint(msg.sender, tokenId, _fees);\r\n        _setTokenURI(tokenId, tokenURI);\r\n    }","after":"function mint(uint256 tokenId, uint8 v, bytes32 r, bytes32 s, Fee[] calldata _fees, string calldata tokenURI) public {\r\n        require(owner() == StringLibrary.getAddress(abi.encodePacked(this, tokenId), v, r, s), \"owner should sign tokenId\");\r\n        _mint(msg.sender, tokenId, _fees);\r\n        _setTokenURI(tokenId, tokenURI);\r\n    }","contract":"MintableToken","time":0},{"type":"external-function ","before":"function setTokenURIPrefix(string memory tokenURIPrefix) public onlyOwner {\r\n        _setTokenURIPrefix(tokenURIPrefix);\r\n    }","after":"function setTokenURIPrefix(string calldata tokenURIPrefix) public onlyOwner {\r\n        _setTokenURIPrefix(tokenURIPrefix);\r\n    }","contract":"MintableToken","time":0},{"type":"external-function ","before":"function setContractURI(string memory contractURI) public onlyOwner {\r\n        _setContractURI(contractURI);\r\n    }","after":"function setContractURI(string calldata contractURI) public onlyOwner {\r\n        _setContractURI(contractURI);\r\n    }","contract":"MintableToken","time":0}]}