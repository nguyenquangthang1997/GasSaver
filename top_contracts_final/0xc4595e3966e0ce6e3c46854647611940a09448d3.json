{"time":19,"results":[{"type":"external-function ","before":"function check32BytesAndSend(address _target, bytes memory _payload, bytes32 _resultMatch) external payable {\n        _check32Bytes(_target, _payload, _resultMatch);\n        block.coinbase.transfer(msg.value);\n    }","after":"function check32BytesAndSend(address _target, bytes calldata _payload, bytes32 _resultMatch) external payable {\n        _check32Bytes(_target, _payload, _resultMatch);\n        block.coinbase.transfer(msg.value);\n    }","contract":"FlashbotsCheckAndSend","time":0},{"type":"external-function ","before":"function check32BytesAndSendMulti(address[] memory _targets, bytes[] memory _payloads, bytes32[] memory _resultMatches) external payable {\n        require (_targets.length == _payloads.length);\n        require (_targets.length == _resultMatches.length);\n        for (uint256 i = 0; i < _targets.length; i++) {\n            _check32Bytes(_targets[i], _payloads[i], _resultMatches[i]);\n        }\n        block.coinbase.transfer(msg.value);\n    }","after":"function check32BytesAndSendMulti(address[] calldata _targets, bytes[] calldata _payloads, bytes32[] calldata _resultMatches) external payable {\n        require (_targets.length == _payloads.length);\n        require (_targets.length == _resultMatches.length);\n        for (uint256 i = 0; i < _targets.length; i++) {\n            _check32Bytes(_targets[i], _payloads[i], _resultMatches[i]);\n        }\n        block.coinbase.transfer(msg.value);\n    }","contract":"FlashbotsCheckAndSend","time":0},{"type":"external-function ","before":"function checkBytesAndSend(address _target, bytes memory _payload, bytes memory _resultMatch) external payable {\n        _checkBytes(_target, _payload, _resultMatch);\n        block.coinbase.transfer(msg.value);\n    }","after":"function checkBytesAndSend(address _target, bytes calldata _payload, bytes calldata _resultMatch) external payable {\n        _checkBytes(_target, _payload, _resultMatch);\n        block.coinbase.transfer(msg.value);\n    }","contract":"FlashbotsCheckAndSend","time":0},{"type":"external-function ","before":"function checkBytesAndSendMulti(address[] memory _targets, bytes[] memory _payloads, bytes[] memory _resultMatches) external payable {\n        require (_targets.length == _payloads.length);\n        require (_targets.length == _resultMatches.length);\n        for (uint256 i = 0; i < _targets.length; i++) {\n            _checkBytes(_targets[i], _payloads[i], _resultMatches[i]);\n        }\n        block.coinbase.transfer(msg.value);\n    }","after":"function checkBytesAndSendMulti(address[] calldata _targets, bytes[] calldata _payloads, bytes[] calldata _resultMatches) external payable {\n        require (_targets.length == _payloads.length);\n        require (_targets.length == _resultMatches.length);\n        for (uint256 i = 0; i < _targets.length; i++) {\n            _checkBytes(_targets[i], _payloads[i], _resultMatches[i]);\n        }\n        block.coinbase.transfer(msg.value);\n    }","contract":"FlashbotsCheckAndSend","time":0}]}