{"time":153,"results":[{"type":"state-data-arrangement ","before":"\nbool is_paused = false;\nuint16 max_per_user = 50;\nuint16 nextTokenId = 1;\nuint16 max_supply = 2222;\nuint256 mintPrice = 0;\nbool public IS_PRESALE_ACTIVE = true;\nstring private baseURI = \"https://ipfs.io/ipfs/QmUqSSZYxYG7YW6tUBQgbr4oXqTa4aeRD38h7W7vdUNoWK\";\nmapping(address => bool) public whitelisted;","after":"uint256 mintPrice = 0;\nstring private baseURI = \"https://ipfs.io/ipfs/QmUqSSZYxYG7YW6tUBQgbr4oXqTa4aeRD38h7W7vdUNoWK\";\nmapping(address => bool) public whitelisted;\nuint16 max_per_user = 50;\nuint16 nextTokenId = 1;\nuint16 max_supply = 2222;\nbool is_paused = false;\nbool public IS_PRESALE_ACTIVE = true;\n","contract":"Mintify","time":0},{"type":"external-function ","before":"function bulkWhitelist(address[] memory addresses) public onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n            if (whitelisted[addresses[i]] != true && addresses[i] != address(0)) {\n                whitelisted[addresses[i]] = true;\n            }\n        }\n    }","after":"function bulkWhitelist(address[] calldata addresses) public onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n            if (whitelisted[addresses[i]] != true && addresses[i] != address(0)) {\n                whitelisted[addresses[i]] = true;\n            }\n        }\n    }","contract":"Mintify","time":0}]}