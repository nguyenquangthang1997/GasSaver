{"time":152,"results":[{"type":"external-function ","before":"function claimMany(uint256[] memory tokenArray) override public payable nonReentrant {\n        for(uint256 i=0; i < tokenArray.length; i++) {\n            require(tokenArray[i] > 0 && tokenArray[i] < 7778, \"Token ID invalid\");\n            require(!restricted || lootContract.ownerOf(tokenArray[i]) == msg.sender, \"Not your LOOT\");\n            require(price * tokenArray.length <= msg.value, \"Insufficient ETH\");\n            claimed++;\n            seeds[tokenArray[i]] = seeder.getSeed(tokenArray[i]);\n            _safeMint(_msgSender(), tokenArray[i]);\n            emit Claimed(_msgSender(), tokenArray[i]);\n        }\n    }","after":"function claimMany(uint256[] calldata tokenArray) override public payable nonReentrant {\n        for(uint256 i=0; i < tokenArray.length; i++) {\n            require(tokenArray[i] > 0 && tokenArray[i] < 7778, \"Token ID invalid\");\n            require(!restricted || lootContract.ownerOf(tokenArray[i]) == msg.sender, \"Not your LOOT\");\n            require(price * tokenArray.length <= msg.value, \"Insufficient ETH\");\n            claimed++;\n            seeds[tokenArray[i]] = seeder.getSeed(tokenArray[i]);\n            _safeMint(_msgSender(), tokenArray[i]);\n            emit Claimed(_msgSender(), tokenArray[i]);\n        }\n    }","contract":"Dungeons","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public price = 0.05 ether;","after":"uint256 public constant price = 0.05 ether;","contract":"Dungeons","time":1}]}