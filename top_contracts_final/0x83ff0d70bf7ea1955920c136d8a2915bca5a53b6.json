{"time":227,"results":[{"type":"external-function ","before":"function register(address accessPassAddress,\n        uint256 preSalePassId,\n        uint256 vipSalePassId,\n        CampaignPriceInput memory campaignPriceInput,\n        uint256 maxPresaleTokens,\n        uint256 maxOngoingTokens) public onlyRole(CAMPAIGN_ADMIN_ROLE) returns (uint256) {\n\n        campaignCounter.increment();\n        uint256 campaignId = campaignCounter.current();\n        campaignList[campaignId].state = CampaignState.PENDING;\n        campaignList[campaignId].accessPassAddress = accessPassAddress;\n        campaignList[campaignId].preSalePassId = preSalePassId;\n        campaignList[campaignId].vipSalePassId = vipSalePassId;\n\n        campaignList[campaignId].maxPresaleTokens = maxPresaleTokens;\n        campaignList[campaignId].maxOngoingTokens = maxOngoingTokens;\n\n        campaignPriceList[campaignId].unitPricePresale = campaignPriceInput.unitPricePresale;\n        campaignPriceList[campaignId].unitPriceVipSale = campaignPriceInput.unitPriceVipSale;\n        campaignPriceList[campaignId].unitPriceStartPublicSale = campaignPriceInput.unitPriceStartPublicSale;\n        campaignPriceList[campaignId].unitPriceEndPublicSale = campaignPriceInput.unitPriceEndPublicSale;\n        campaignPriceList[campaignId].totalBlockUntilUnitPriceEnd = campaignPriceInput.totalBlockUntilUnitPriceEnd;\n\n        emit CampaignRegisteredEvent(\n            campaignId\n        );\n\n        return campaignId;\n    }","after":"function register(address accessPassAddress,\n        uint256 preSalePassId,\n        uint256 vipSalePassId,\n        CampaignPriceInput calldata campaignPriceInput,\n        uint256 maxPresaleTokens,\n        uint256 maxOngoingTokens) public onlyRole(CAMPAIGN_ADMIN_ROLE) returns (uint256) {\n\n        campaignCounter.increment();\n        uint256 campaignId = campaignCounter.current();\n        campaignList[campaignId].state = CampaignState.PENDING;\n        campaignList[campaignId].accessPassAddress = accessPassAddress;\n        campaignList[campaignId].preSalePassId = preSalePassId;\n        campaignList[campaignId].vipSalePassId = vipSalePassId;\n\n        campaignList[campaignId].maxPresaleTokens = maxPresaleTokens;\n        campaignList[campaignId].maxOngoingTokens = maxOngoingTokens;\n\n        campaignPriceList[campaignId].unitPricePresale = campaignPriceInput.unitPricePresale;\n        campaignPriceList[campaignId].unitPriceVipSale = campaignPriceInput.unitPriceVipSale;\n        campaignPriceList[campaignId].unitPriceStartPublicSale = campaignPriceInput.unitPriceStartPublicSale;\n        campaignPriceList[campaignId].unitPriceEndPublicSale = campaignPriceInput.unitPriceEndPublicSale;\n        campaignPriceList[campaignId].totalBlockUntilUnitPriceEnd = campaignPriceInput.totalBlockUntilUnitPriceEnd;\n\n        emit CampaignRegisteredEvent(\n            campaignId\n        );\n\n        return campaignId;\n    }","contract":"MojoHeads","time":0},{"type":"external-function ","before":"function update(uint256 campaignId, address accessPassAddress,\n        uint256 preSalePassId,\n        uint256 vipSalePassId,\n        CampaignPriceInput memory campaignPriceInput,\n        uint256 maxPresaleTokens,\n        uint256 maxOngoingTokens) public onlyRole(CAMPAIGN_ADMIN_ROLE) returns (uint256) {\n\n        campaignList[campaignId].accessPassAddress = accessPassAddress;\n        campaignList[campaignId].preSalePassId = preSalePassId;\n        campaignList[campaignId].vipSalePassId = vipSalePassId;\n        campaignList[campaignId].maxPresaleTokens = maxPresaleTokens;\n        campaignList[campaignId].maxOngoingTokens = maxOngoingTokens;\n\n        campaignPriceList[campaignId].unitPricePresale = campaignPriceInput.unitPricePresale;\n        campaignPriceList[campaignId].unitPriceVipSale = campaignPriceInput.unitPriceVipSale;\n        campaignPriceList[campaignId].unitPriceStartPublicSale = campaignPriceInput.unitPriceStartPublicSale;\n        campaignPriceList[campaignId].unitPriceEndPublicSale = campaignPriceInput.unitPriceEndPublicSale;\n        campaignPriceList[campaignId].totalBlockUntilUnitPriceEnd = campaignPriceInput.totalBlockUntilUnitPriceEnd;\n\n        emit CampaignUpdatedEvent(\n            campaignId\n        );\n\n        return campaignId;\n    }","after":"function update(uint256 campaignId, address accessPassAddress,\n        uint256 preSalePassId,\n        uint256 vipSalePassId,\n        CampaignPriceInput calldata campaignPriceInput,\n        uint256 maxPresaleTokens,\n        uint256 maxOngoingTokens) public onlyRole(CAMPAIGN_ADMIN_ROLE) returns (uint256) {\n\n        campaignList[campaignId].accessPassAddress = accessPassAddress;\n        campaignList[campaignId].preSalePassId = preSalePassId;\n        campaignList[campaignId].vipSalePassId = vipSalePassId;\n        campaignList[campaignId].maxPresaleTokens = maxPresaleTokens;\n        campaignList[campaignId].maxOngoingTokens = maxOngoingTokens;\n\n        campaignPriceList[campaignId].unitPricePresale = campaignPriceInput.unitPricePresale;\n        campaignPriceList[campaignId].unitPriceVipSale = campaignPriceInput.unitPriceVipSale;\n        campaignPriceList[campaignId].unitPriceStartPublicSale = campaignPriceInput.unitPriceStartPublicSale;\n        campaignPriceList[campaignId].unitPriceEndPublicSale = campaignPriceInput.unitPriceEndPublicSale;\n        campaignPriceList[campaignId].totalBlockUntilUnitPriceEnd = campaignPriceInput.totalBlockUntilUnitPriceEnd;\n\n        emit CampaignUpdatedEvent(\n            campaignId\n        );\n\n        return campaignId;\n    }","contract":"MojoHeads","time":0},{"type":"external-function ","before":"function preMintBatch(uint256 campaignId, address[] memory receiverList) public onlyRole(CAMPAIGN_ADMIN_ROLE) {\n        require(campaignList[campaignId].state != CampaignState.PENDING, \"Campaign is not ready yet.\");\n        require(receiverList.length <= availableHashList[campaignId].length, \"Campaign does not have enough hashes.\");\n        for (uint i = 0; i < receiverList.length; i++) {\n            _randomMint(campaignId, receiverList[i]);\n        }\n    }","after":"function preMintBatch(uint256 campaignId, address[] calldata receiverList) public onlyRole(CAMPAIGN_ADMIN_ROLE) {\n        require(campaignList[campaignId].state != CampaignState.PENDING, \"Campaign is not ready yet.\");\n        require(receiverList.length <= availableHashList[campaignId].length, \"Campaign does not have enough hashes.\");\n        for (uint i = 0; i < receiverList.length; i++) {\n            _randomMint(campaignId, receiverList[i]);\n        }\n    }","contract":"MojoHeads","time":0},{"type":"external-function ","before":"function setBaseURI(string memory baseURI_) external onlyRole(CAMPAIGN_ADMIN_ROLE) {\n        _baseURIextended = baseURI_;\n    }","after":"function setBaseURI(string calldata baseURI_) external onlyRole(CAMPAIGN_ADMIN_ROLE) {\n        _baseURIextended = baseURI_;\n    }","contract":"MojoHeads","time":0},{"type":"immutable-restrict-modification ","before":"address public defaultRoyaltyAddress;","after":"address public immutable defaultRoyaltyAddress;","contract":"MojoHeads","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public artistTokenReserve;","after":"uint256 public immutable artistTokenReserve;","contract":"MojoHeads","time":0},{"type":"immutable-restrict-modification ","before":"uint256 public maxSupply;","after":"uint256 public immutable maxSupply;","contract":"MojoHeads","time":0}]}