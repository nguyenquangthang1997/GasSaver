{"time":272,"results":[{"type":"immutable-restrict-modification ","before":"address  payable private owner;","after":"address  payable private immutable owner;","contract":"CosmicToken","time":0},{"type":"external-function ","before":"function airdropMany(address[] memory airdropPatricipents) public payable communityWalletOnly\n    {\n        uint256[] memory tempWalletOfUser = this.walletOfOwner(msg.sender);\n        \n        require(tempWalletOfUser.length >= airdropPatricipents.length, \"You dont have enough tokens to airdrop all!\");\n        \n       for(uint256 i=0; i<airdropPatricipents.length; i++)\n       {\n            _transfer(msg.sender, airdropPatricipents[i], tempWalletOfUser[i]);\n            emit giveawayNft(airdropPatricipents[i], tempWalletOfUser[i]);\n       }\n\n    }","after":"function airdropMany(address[] calldata airdropPatricipents) public payable communityWalletOnly\n    {\n        uint256[] memory tempWalletOfUser = this.walletOfOwner(msg.sender);\n        \n        require(tempWalletOfUser.length >= airdropPatricipents.length, \"You dont have enough tokens to airdrop all!\");\n        \n       for(uint256 i=0; i<airdropPatricipents.length; i++)\n       {\n            _transfer(msg.sender, airdropPatricipents[i], tempWalletOfUser[i]);\n            emit giveawayNft(airdropPatricipents[i], tempWalletOfUser[i]);\n       }\n\n    }","contract":"CosmicLabs","time":0},{"type":"constant-restrict-modification  ","before":"string public baseExtension = \".json\";","after":"string public constant baseExtension = \".json\";","contract":"CosmicLabs","time":0},{"type":"constant-restrict-modification  ","before":"uint public maxGenesisTx = 4;","after":"uint public constant maxGenesisTx = 4;","contract":"CosmicLabs","time":0},{"type":"constant-restrict-modification  ","before":"uint public maxDuckTx = 20;","after":"uint public constant maxDuckTx = 20;","contract":"CosmicLabs","time":0},{"type":"constant-restrict-modification  ","before":"uint public maxSupply = 9000;","after":"uint public constant maxSupply = 9000;","contract":"CosmicLabs","time":0},{"type":"constant-restrict-modification  ","before":"uint public genesisSupply = 1000;","after":"uint public constant genesisSupply = 1000;","contract":"CosmicLabs","time":0},{"type":"constant-restrict-modification  ","before":"address internal communityWallet = 0xea25545d846ecF4999C2875bC77dE5B5151Fa633;","after":"address internal constant communityWallet = 0xea25545d846ecF4999C2875bC77dE5B5151Fa633;","contract":"CosmicLabs","time":0}]}