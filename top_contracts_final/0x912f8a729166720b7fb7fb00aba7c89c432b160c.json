{"time":143,"results":[{"type":"external-function ","before":"function batchBurn(uint256[] memory _tokenIds) public virtual {\n        for (uint256 i = 0; i < _tokenIds.length; ++i) {\n            require(\n                _isApprovedOrOwner(_msgSender(), _tokenIds[i]),\n                string(\n                    abi.encodePacked(\n                        'ERC721Burnable: caller is not owner nor approved for ',\n                        _tokenIds[i].toString()\n                    )\n                )\n            );\n            _burn(_tokenIds[i]);\n        }\n    }","after":"function batchBurn(uint256[] calldata _tokenIds) public virtual {\n        for (uint256 i = 0; i < _tokenIds.length; ++i) {\n            require(\n                _isApprovedOrOwner(_msgSender(), _tokenIds[i]),\n                string(\n                    abi.encodePacked(\n                        'ERC721Burnable: caller is not owner nor approved for ',\n                        _tokenIds[i].toString()\n                    )\n                )\n            );\n            _burn(_tokenIds[i]);\n        }\n    }","contract":"SilverbackNFT","time":0},{"type":"external-function ","before":"function batchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory tokenIds\n    ) public virtual {\n        for (uint256 i = 0; i < tokenIds.length; ++i) {\n            require(\n                _isApprovedOrOwner(_msgSender(), tokenIds[i]),\n                string(\n                    abi.encodePacked(\n                        'ERC721: transfer caller is not owner nor approved for ',\n                        tokenIds[i].toString()\n                    )\n                )\n            );\n            _transfer(from, to, tokenIds[i]);\n        }\n\n        emit TransferBatch(_msgSender(), from, to, tokenIds);\n    }","after":"function batchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata tokenIds\n    ) public virtual {\n        for (uint256 i = 0; i < tokenIds.length; ++i) {\n            require(\n                _isApprovedOrOwner(_msgSender(), tokenIds[i]),\n                string(\n                    abi.encodePacked(\n                        'ERC721: transfer caller is not owner nor approved for ',\n                        tokenIds[i].toString()\n                    )\n                )\n            );\n            _transfer(from, to, tokenIds[i]);\n        }\n\n        emit TransferBatch(_msgSender(), from, to, tokenIds);\n    }","contract":"SilverbackNFT","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _newBaseURI) external onlyOwner {\n        baseURI = _newBaseURI;\n    }","after":"function setBaseURI(string calldata _newBaseURI) external onlyOwner {\n        baseURI = _newBaseURI;\n    }","contract":"SilverbackNFT","time":0}]}