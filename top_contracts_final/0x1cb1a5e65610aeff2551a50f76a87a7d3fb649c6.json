{"time":180,"results":[{"type":"external-function ","before":"function initializePaymentSplitter (address[] memory payees, uint256[] memory shares_) \n        external \n        onlyOwner \n    {\n        require (\n            !initialized,\n            \"Payment Split Already Initialized!\"\n            );\n        require(\n            payees.length == shares_.length,\n            \"PaymentSplitter: payees and shares length mismatch\"\n            );\n        require(\n            payees.length > 0, \n            \"PaymentSplitter: no payees\"\n            );\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(payees[i], shares_[i]);\n        }\n        initialized=true;\n    }","after":"function initializePaymentSplitter (address[] calldata payees, uint256[] calldata shares_) \n        external \n        onlyOwner \n    {\n        require (\n            !initialized,\n            \"Payment Split Already Initialized!\"\n            );\n        require(\n            payees.length == shares_.length,\n            \"PaymentSplitter: payees and shares length mismatch\"\n            );\n        require(\n            payees.length > 0, \n            \"PaymentSplitter: no payees\"\n            );\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(payees[i], shares_[i]);\n        }\n        initialized=true;\n    }","contract":"Toadz","time":0},{"type":"external-function ","before":"function setBaseURI(string memory _baseURI) \n        external \n        onlyOwner \n    {\n        _setBaseURI(_baseURI);\n    }","after":"function setBaseURI(string calldata _baseURI) \n        external \n        onlyOwner \n    {\n        _setBaseURI(_baseURI);\n    }","contract":"Toadz","time":0},{"type":"external-function ","before":"function setContractURI(string memory contractURI_) \n        external \n        onlyOwner \n    {\n        _contractURI = contractURI_;\n    }","after":"function setContractURI(string calldata contractURI_) \n        external \n        onlyOwner \n    {\n        _contractURI = contractURI_;\n    }","contract":"Toadz","time":0},{"type":"external-function ","before":"function setProvenance(string memory _provenance) \n        external \n        onlyOwner \n    {\n        require(\n            bytes(provenance).length == 0,\n             \"Provenance already set!\"\n             );\n        provenance = _provenance;\n    }","after":"function setProvenance(string calldata _provenance) \n        external \n        onlyOwner \n    {\n        require(\n            bytes(provenance).length == 0,\n             \"Provenance already set!\"\n             );\n        provenance = _provenance;\n    }","contract":"Toadz","time":0},{"type":"external-function ","before":"function mintSpecial(address [] memory recipients, uint256 [] memory specialId) \n        external \n        onlyOwner \n    {        \n        require (!devMintLocked,\n            \"Dev Mint Permanently Locked\"\n            );\n        for (uint256 i = 0; i < recipients.length; i++) {\n            require (specialId[i]!=0);\n            _safeMint(recipients[i],specialId[i]*1000000);\n        }\n    }","after":"function mintSpecial(address [] calldata recipients, uint256 [] calldata specialId) \n        external \n        onlyOwner \n    {        \n        require (!devMintLocked,\n            \"Dev Mint Permanently Locked\"\n            );\n        for (uint256 i = 0; i < recipients.length; i++) {\n            require (specialId[i]!=0);\n            _safeMint(recipients[i],specialId[i]*1000000);\n        }\n    }","contract":"Toadz","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public tokenPrice = 69000000000000000;","after":"uint256 public constant tokenPrice = 69000000000000000;","contract":"Toadz","time":0}]}