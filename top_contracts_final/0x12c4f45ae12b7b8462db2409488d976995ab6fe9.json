{"time":156,"results":[{"type":"external-function ","before":"function setBaseURI(string memory baseURIPrefix) public onlyOwner {\r\n    require(uriUnlocked, \"Not happening.\");\r\n    _baseURIPrefix = baseURIPrefix;\r\n  }","after":"function setBaseURI(string calldata baseURIPrefix) public onlyOwner {\r\n    require(uriUnlocked, \"Not happening.\");\r\n    _baseURIPrefix = baseURIPrefix;\r\n  }","contract":"Borphol","time":0},{"type":"external-function ","before":"function addToWhitelist(address[] memory _address, uint32[] memory _amount)public onlyOwner {\r\n    for (uint i = 0; i < _address.length; i++) {\r\n      whitelist[_address[i]] = _amount[i];\r\n    }\r\n  }","after":"function addToWhitelist(address[] calldata _address, uint32[] calldata _amount)public onlyOwner {\r\n    for (uint i = 0; i < _address.length; i++) {\r\n      whitelist[_address[i]] = _amount[i];\r\n    }\r\n  }","contract":"Borphol","time":1},{"type":"external-function ","before":"function removeFromWhitelist(address[] memory _address)public onlyOwner {\r\n    for (uint i = 0; i < _address.length; i++) {\r\n      whitelist[_address[i]] = 0;\r\n    }\r\n  }","after":"function removeFromWhitelist(address[] calldata _address)public onlyOwner {\r\n    for (uint i = 0; i < _address.length; i++) {\r\n      whitelist[_address[i]] = 0;\r\n    }\r\n  }","contract":"Borphol","time":0}]}