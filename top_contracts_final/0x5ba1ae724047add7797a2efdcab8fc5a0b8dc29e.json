{"time":204,"results":[{"type":"state-data-arrangement ","before":"\naddress internal bayc;\naddress internal meebits;\nmapping (uint256 => bool) public baycMints;\nmapping (uint256 => bool) public meebitsMints;\nmapping (address => bool) public grantMints;\nmapping (address => uint256) public winnerMints;\nuint256 public tokenPrice = 80000000000000000;\nuint256 public constant MAX_HEROES = 10000;\nuint256 public constant MAX_GRANT_MINTS = 500;\nuint256 public constant DAILY_GRANT_MINTS = 100;\nuint256 public constant MAX_GAME_MINTS = 400;\nuint256 public constant MAX_GROUP_MINTS = 300;\nuint256 public constant MAX_SALE_MINTS = MAX_HEROES - MAX_GRANT_MINTS - MAX_GAME_MINTS - MAX_GROUP_MINTS;\nuint256 public grantMintedNum = 0;\nuint256 public gameMintedNum = 0;\nuint256 public saleMintedNum = 0;\nuint256 public groupMintedNum = 0;\nuint256 public grantDailyMintNum = 0;\nuint256 public dailyMintBeginTime = 0;\nbool public publicSale = false;\nbool public gameValid = false;\nbool public communityValid = false;","after":"mapping (uint256 => bool) public baycMints;\nmapping (uint256 => bool) public meebitsMints;\nmapping (address => bool) public grantMints;\nmapping (address => uint256) public winnerMints;\nuint256 public tokenPrice = 80000000000000000;\nuint256 public constant MAX_HEROES = 10000;\nuint256 public constant MAX_GRANT_MINTS = 500;\nuint256 public constant DAILY_GRANT_MINTS = 100;\nuint256 public constant MAX_GAME_MINTS = 400;\nuint256 public constant MAX_GROUP_MINTS = 300;\nuint256 public constant MAX_SALE_MINTS = MAX_HEROES - MAX_GRANT_MINTS - MAX_GAME_MINTS - MAX_GROUP_MINTS;\nuint256 public grantMintedNum = 0;\nuint256 public gameMintedNum = 0;\nuint256 public saleMintedNum = 0;\nuint256 public groupMintedNum = 0;\nuint256 public grantDailyMintNum = 0;\nuint256 public dailyMintBeginTime = 0;\naddress internal bayc;\naddress internal meebits;\nbool public publicSale = false;\nbool public gameValid = false;\nbool public communityValid = false;\n","contract":"KungfuHero","time":1},{"type":"external-function ","before":"function setBaseURI(string memory baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","after":"function setBaseURI(string calldata baseURI) public onlyOwner {\n        _setBaseURI(baseURI);\n    }","contract":"KungfuHero","time":0},{"type":"external-function ","before":"function setWinner(address[] memory addr) public onlyOwner{\n        require(gameValid, \"Game not started.\");\n        \n        uint addrLength = addr.length;\n        require(gameMintedNum.add(addrLength) <= MAX_GAME_MINTS, \"game mint limit reached.\");\n        \n        for(uint i = 0; i < addrLength; i++){\n            gameMintedNum = gameMintedNum.add(1);\n            winnerMints[addr[i]] = winnerMints[addr[i]].add(1);\n        }\n    }","after":"function setWinner(address[] calldata addr) public onlyOwner{\n        require(gameValid, \"Game not started.\");\n        \n        uint addrLength = addr.length;\n        require(gameMintedNum.add(addrLength) <= MAX_GAME_MINTS, \"game mint limit reached.\");\n        \n        for(uint i = 0; i < addrLength; i++){\n            gameMintedNum = gameMintedNum.add(1);\n            winnerMints[addr[i]] = winnerMints[addr[i]].add(1);\n        }\n    }","contract":"KungfuHero","time":0},{"type":"immutable-restrict-modification ","before":"address internal bayc;","after":"address internal immutable bayc;","contract":"KungfuHero","time":1},{"type":"immutable-restrict-modification ","before":"address internal meebits;","after":"address internal immutable meebits;","contract":"KungfuHero","time":1}]}