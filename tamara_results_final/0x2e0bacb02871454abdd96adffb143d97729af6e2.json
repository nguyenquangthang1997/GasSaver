{"time":90,"results":[{"type":"external-function ","before":"function stakekgc(uint256 value,uint256 duration,string memory data)  public {\n    address from = msg.sender;\n    require(kgcInstance.transferFrom(from, address(this), value));\n    uint256 current = kgcbalances[from];\n    kgcbalances[from]  = current.add(value);\n\n    uint256 transId = totalTrans;\n    StakeTrans memory trans = StakeTrans({\n      id: transId,\n      status :StakeTransStatus.STATUS_STAKED,\n      amount : value,\n      from : msg.sender,\n      stakedAt : now,\n      stakeDuration : duration,\n      data : data\n    });\n    totalTrans = totalTrans.add(1);\n    stakeTrans.push(trans);\n\n    emit KGCStaked(transId, from, value, now,duration,data);\n  }","after":"function stakekgc(uint256 value,uint256 duration,string calldata data)  public {\n    address from = msg.sender;\n    require(kgcInstance.transferFrom(from, address(this), value));\n    uint256 current = kgcbalances[from];\n    kgcbalances[from]  = current.add(value);\n\n    uint256 transId = totalTrans;\n    StakeTrans memory trans = StakeTrans({\n      id: transId,\n      status :StakeTransStatus.STATUS_STAKED,\n      amount : value,\n      from : msg.sender,\n      stakedAt : now,\n      stakeDuration : duration,\n      data : data\n    });\n    totalTrans = totalTrans.add(1);\n    stakeTrans.push(trans);\n\n    emit KGCStaked(transId, from, value, now,duration,data);\n  }","contract":"KGCStake","time":0}]}