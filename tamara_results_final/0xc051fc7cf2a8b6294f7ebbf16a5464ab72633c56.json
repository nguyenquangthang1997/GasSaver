{"time":58,"results":[{"type":"external-function ","before":"function initialize(\n        string memory name,\n        string memory symbol,\n        uint8 decimals,\n        uint256 totalSupply,\n        address tokenHolder\n    ) public {\n        require(!_initialized, \"This contract is already initialized\");\n        require(totalSupply > 0, \"Total supply must be greater than 0\");\n\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        _mint(tokenHolder, totalSupply);\n        _initialized = true;\n    }","after":"function initialize(\n        string calldata name,\n        string calldata symbol,\n        uint8 decimals,\n        uint256 totalSupply,\n        address tokenHolder\n    ) public {\n        require(!_initialized, \"This contract is already initialized\");\n        require(totalSupply > 0, \"Total supply must be greater than 0\");\n\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        _mint(tokenHolder, totalSupply);\n        _initialized = true;\n    }","contract":"OlyToken","time":0},{"type":"external-function ","before":"function publishMessages(\n        uint256[] memory nonces,\n        uint256[] memory paymentAmounts,\n        address[] memory paymentCollectors,\n        uint256[] memory paymentFees,\n        address[] memory feeCollectors,\n        bytes32[] memory sigsR,\n        bytes32[] memory sigsS,\n        uint8[] memory sigsV\n    ) public {\n        require(\n            nonces.length == paymentAmounts.length &&\n                paymentAmounts.length == paymentCollectors.length &&\n                paymentCollectors.length == paymentFees.length &&\n                paymentFees.length == feeCollectors.length &&\n                feeCollectors.length == sigsR.length &&\n                sigsR.length == sigsS.length &&\n                sigsS.length == sigsV.length,\n            \"Inconsistent message data received\"\n        );\n\n        for (uint256 i = 0; i < nonces.length; i++) {\n            executeMessage(\n                nonces[i],\n                paymentAmounts[i],\n                paymentCollectors[i],\n                paymentFees[i],\n                feeCollectors[i],\n                sigsR[i],\n                sigsS[i],\n                sigsV[i]\n            );\n        }\n    }","after":"function publishMessages(\n        uint256[] calldata nonces,\n        uint256[] calldata paymentAmounts,\n        address[] calldata paymentCollectors,\n        uint256[] calldata paymentFees,\n        address[] calldata feeCollectors,\n        bytes32[] calldata sigsR,\n        bytes32[] calldata sigsS,\n        uint8[] calldata sigsV\n    ) public {\n        require(\n            nonces.length == paymentAmounts.length &&\n                paymentAmounts.length == paymentCollectors.length &&\n                paymentCollectors.length == paymentFees.length &&\n                paymentFees.length == feeCollectors.length &&\n                feeCollectors.length == sigsR.length &&\n                sigsR.length == sigsS.length &&\n                sigsS.length == sigsV.length,\n            \"Inconsistent message data received\"\n        );\n\n        for (uint256 i = 0; i < nonces.length; i++) {\n            executeMessage(\n                nonces[i],\n                paymentAmounts[i],\n                paymentCollectors[i],\n                paymentFees[i],\n                feeCollectors[i],\n                sigsR[i],\n                sigsS[i],\n                sigsV[i]\n            );\n        }\n    }","contract":"OlyToken","time":0}]}