{"time":1517,"results":[{"type":"constant-restrict-modification  ","before":"\r\n\r\n    uint256 amount = 210","after":"\r\n\r\n    uint256 constant amount = 210","contract":"KOCToken","time":2},{"type":"constant-restrict-modification  ","before":"  function transferFrom(addr","after":"  function transferFrom(addr","contract":"KOCToken","time":2},{"type":"constant-restrict-modification  ","before":"her the operation succeeded.","after":"her the operation succeeded.","contract":"KOCToken","time":2},{"type":"struct-data-arrangement ","before":"\n        address use\n        uint256 e\n        uint256 prof\n        uint256 tok\n        uint256 tok\n        uint256 str\n        uint256 lock\n        uint256\n        bool stati\n        uint256 st\n        uin\n        address straigh\n        uint256 refeT\n        address refeTo","after":"        uint256 e\n        uint256 prof\n        uint256 tok\n        uint256 tok\n        uint256 str\n        uint256 lock\n        uint256\n        uint256 st\n        uint256 refeT\n        address use\n        address straigh\n        address refeTo\n        bool stati\n        uin\n","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"\r\n\r\n    address  public eggAddress = address(0x12d4fEcccc3cbD5F7A2C9b88D709317e0E","after":"\r\n\r\n    address  public constant eggAddress = address(0x12d4fEcccc3cbD5F7A2C9b88D709317e0E","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"ss\r\n    address  public systemAddress = address(0x6074510054e37D921882B05Ab40537Ce38","after":"ss\r\n    address  public constant systemAddress = address(0x6074510054e37D921882B05Ab40537Ce38","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":");\r\n    address  public nodeAddressReward = address(0xB351d5030603E8e89e1925f6d6F50CDa4D","after":");\r\n    address  public constant nodeAddressReward = address(0xB351d5030603E8e89e1925f6d6F50CDa4D","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":");\r\n    address  public globalAddressReward = address(0x49eec1928b457d1f26a2466c8bd9eC1318","after":");\r\n    address  public constant globalAddressReward = address(0x49eec1928b457d1f26a2466c8bd9eC1318","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"A9495)];\r\n\r\n    address internal boosAddress = address(0x541f5417187981b28Ef9e7Df81","after":"A9495)];\r\n\r\n    address internal constant boosAddress = address(0x541f5417187981b28Ef9e7Df81","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"uint256 value)\r\n    mustAdmin(msg.sender)\r\n    public\r\n    {\r\n        activateSyste","after":"uint256 value)\r\n    mustAdmin(msg.sender)\r\n    public\r\n    {\r\n        activateSyste","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"    // return current effective user for initAddressAmount\r\n    function getCurrent","after":"    // return current effective user for initAddressAmount\r\n    function getCurrent","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"  mapping(address => uint256[11]) public userSubordinateCount;\r\n    mapping(addre","after":"  mapping(address => uint256[11]) public userSubordinateCount;\r\n    mapping(addre","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"  mapping(address => UserReinvest) public userReinvest;\r\n    mapping(address => uint","after":"  mapping(address => UserReinvest) public userReinvest;\r\n    mapping(address => uint","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"ublic lastStraightLength;\r\n\r\n    uint8   constant internal remain = 20;       // Static ","after":"ublic lastStraightLength;\r\n\r\n    uint8   constant internal remain = 20;       // Static ","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"namic rewards returns remain at 20 percent\r\n    uint32  constant internal ratio = 1000;   ","after":"namic rewards returns remain at 20 percent\r\n    uint32  constant internal ratio = 1000;   ","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"act Resonance is ResonanceF {\r\n    using SafeMath for uint256;\r\n\r\n    uint256    ","after":"act Resonance is ResonanceF {\r\n    using SafeMath for uint256;\r\n\r\n    uint256    ","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"ant internal bonusPrice = 0.0000001 ether; // init price\r\n    uint256     constant i","after":"ant internal bonusPrice = 0.0000001 ether; // init price\r\n    uint256     constant i","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"l priceIncremental = 0.00000001 ether; // increase price\r\n    uint256     constant inter","after":"l priceIncremental = 0.00000001 ether; // increase price\r\n    uint256     constant inter","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"gnitude = 2 ** 64;\r\n    uint256     public perBonusDivide = 0; //per Profit divide\r\n    ui","after":"gnitude = 2 ** 64;\r\n    uint256     public perBonusDivide = 0; //per Profit divide\r\n    ui","contract":"Resonance","time":3},{"type":"constant-restrict-modification  ","before":"\r\n\r\n    uint256 amount = 210","after":"\r\n\r\n    uint256 constant amount = 210","contract":"KOCToken","time":1},{"type":"constant-restrict-modification  ","before":"  function transferFrom(addr","after":"  function transferFrom(addr","contract":"KOCToken","time":1},{"type":"constant-restrict-modification  ","before":"her the operation succeeded.","after":"her the operation succeeded.","contract":"KOCToken","time":1},{"type":"struct-data-arrangement ","before":"\nt 100 addresses and\nnough to 5 eth, 5\nuint256 public total\nbuy eth amount\r\n   \n\r\n\r\n    address  pu\n3cbD5F7A2C9b88D7093\nrcent to  egg addres\ness  public sys\n7D921882B05Ab40537\nessReward = addres\n4A6);\r\n    \n address(0x49eec1928b45\nc8bd9eC1318EcB68f);\r\n\nard\r\n\r\n    Earnings in","after":"nough to 5 eth, 5\nuint256 public total\nbuy eth amount\r\n   \n\r\n\r\n    address  pu\n3cbD5F7A2C9b88D7093\nrcent to  egg addres\ness  public sys\nessReward = addres\nc8bd9eC1318EcB68f);\r\n\nt 100 addresses and\n address(0x49eec1928b45\nard\r\n\r\n    Earnings in\n7D921882B05Ab40537\n4A6);\r\n    \n","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"\r\n\r\n    address  public eggAddress = address(0x12d4fEcccc3cbD5F7A2C9b88D709317e0E","after":"\r\n\r\n    address  public constant eggAddress = address(0x12d4fEcccc3cbD5F7A2C9b88D709317e0E","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"ss\r\n    address  public systemAddress = address(0x6074510054e37D921882B05Ab40537Ce38","after":"ss\r\n    address  public constant systemAddress = address(0x6074510054e37D921882B05Ab40537Ce38","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":");\r\n    address  public nodeAddressReward = address(0xB351d5030603E8e89e1925f6d6F50CDa4D","after":");\r\n    address  public constant nodeAddressReward = address(0xB351d5030603E8e89e1925f6d6F50CDa4D","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":");\r\n    address  public globalAddressReward = address(0x49eec1928b457d1f26a2466c8bd9eC1318","after":");\r\n    address  public constant globalAddressReward = address(0x49eec1928b457d1f26a2466c8bd9eC1318","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"A9495)];\r\n\r\n    address internal boosAddress = address(0x541f5417187981b28Ef9e7Df81","after":"A9495)];\r\n\r\n    address internal constant boosAddress = address(0x541f5417187981b28Ef9e7Df81","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"uint256 value)\r\n    mustAdmin(msg.sender)\r\n    public\r\n    {\r\n        activateSyste","after":"uint256 value)\r\n    mustAdmin(msg.sender)\r\n    public\r\n    {\r\n        activateSyste","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"    // return current effective user for initAddressAmount\r\n    function getCurrent","after":"    // return current effective user for initAddressAmount\r\n    function getCurrent","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"  mapping(address => uint256[11]) public userSubordinateCount;\r\n    mapping(addre","after":"  mapping(address => uint256[11]) public userSubordinateCount;\r\n    mapping(addre","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"  mapping(address => UserReinvest) public userReinvest;\r\n    mapping(address => uint","after":"  mapping(address => UserReinvest) public userReinvest;\r\n    mapping(address => uint","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"ublic lastStraightLength;\r\n\r\n    uint8   constant internal remain = 20;       // Static ","after":"ublic lastStraightLength;\r\n\r\n    uint8   constant internal remain = 20;       // Static ","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"namic rewards returns remain at 20 percent\r\n    uint32  constant internal ratio = 1000;   ","after":"namic rewards returns remain at 20 percent\r\n    uint32  constant internal ratio = 1000;   ","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"act Resonance is ResonanceF {\r\n    using SafeMath for uint256;\r\n\r\n    uint256    ","after":"act Resonance is ResonanceF {\r\n    using SafeMath for uint256;\r\n\r\n    uint256    ","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"ant internal bonusPrice = 0.0000001 ether; // init price\r\n    uint256     constant i","after":"ant internal bonusPrice = 0.0000001 ether; // init price\r\n    uint256     constant i","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"l priceIncremental = 0.00000001 ether; // increase price\r\n    uint256     constant inter","after":"l priceIncremental = 0.00000001 ether; // increase price\r\n    uint256     constant inter","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"gnitude = 2 ** 64;\r\n    uint256     public perBonusDivide = 0; //per Profit divide\r\n    ui","after":"gnitude = 2 ** 64;\r\n    uint256     public perBonusDivide = 0; //per Profit divide\r\n    ui","contract":"Resonance","time":1},{"type":"constant-restrict-modification  ","before":"\r\n\r\n    uint256 amount = 210","after":"\r\n\r\n    uint256 constant amount = 210","contract":"KOCToken","time":0},{"type":"constant-restrict-modification  ","before":"  function transferFrom(addr","after":"  function transferFrom(addr","contract":"KOCToken","time":0},{"type":"constant-restrict-modification  ","before":"her the operation succeeded.","after":"her the operation succeeded.","contract":"KOCToken","time":0},{"type":"struct-data-arrangement ","before":"\n all user's informa\n address[]) publi\nective straight invi\ning(address => int2\n  mapping(address =\nount;\r\n    mapping(\nistPerformance;\r\n   \ndress => UserRe\napping(address => \n uint8   constant \n dynamic re\n   uint32  constant int\n = 1000;      // eth \nlockNumber = 40000; //","after":" address[]) publi\nective straight invi\ning(address => int2\n  mapping(address =\nount;\r\n    mapping(\nistPerformance;\r\n   \ndress => UserRe\n uint8   constant \n = 1000;      // eth \n all user's informa\n   uint32  constant int\nlockNumber = 40000; //\napping(address => \n dynamic re\n","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"\r\n\r\n    address  public eggAddress = address(0x12d4fEcccc3cbD5F7A2C9b88D709317e0E","after":"\r\n\r\n    address  public constant eggAddress = address(0x12d4fEcccc3cbD5F7A2C9b88D709317e0E","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"ss\r\n    address  public systemAddress = address(0x6074510054e37D921882B05Ab40537Ce38","after":"ss\r\n    address  public constant systemAddress = address(0x6074510054e37D921882B05Ab40537Ce38","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":");\r\n    address  public nodeAddressReward = address(0xB351d5030603E8e89e1925f6d6F50CDa4D","after":");\r\n    address  public constant nodeAddressReward = address(0xB351d5030603E8e89e1925f6d6F50CDa4D","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":");\r\n    address  public globalAddressReward = address(0x49eec1928b457d1f26a2466c8bd9eC1318","after":");\r\n    address  public constant globalAddressReward = address(0x49eec1928b457d1f26a2466c8bd9eC1318","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"A9495)];\r\n\r\n    address internal boosAddress = address(0x541f5417187981b28Ef9e7Df81","after":"A9495)];\r\n\r\n    address internal constant boosAddress = address(0x541f5417187981b28Ef9e7Df81","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"uint256 value)\r\n    mustAdmin(msg.sender)\r\n    public\r\n    {\r\n        activateSyste","after":"uint256 value)\r\n    mustAdmin(msg.sender)\r\n    public\r\n    {\r\n        activateSyste","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"    // return current effective user for initAddressAmount\r\n    function getCurrent","after":"    // return current effective user for initAddressAmount\r\n    function getCurrent","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"  mapping(address => uint256[11]) public userSubordinateCount;\r\n    mapping(addre","after":"  mapping(address => uint256[11]) public userSubordinateCount;\r\n    mapping(addre","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"  mapping(address => UserReinvest) public userReinvest;\r\n    mapping(address => uint","after":"  mapping(address => UserReinvest) public userReinvest;\r\n    mapping(address => uint","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"ublic lastStraightLength;\r\n\r\n    uint8   constant internal remain = 20;       // Static ","after":"ublic lastStraightLength;\r\n\r\n    uint8   constant internal remain = 20;       // Static ","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"namic rewards returns remain at 20 percent\r\n    uint32  constant internal ratio = 1000;   ","after":"namic rewards returns remain at 20 percent\r\n    uint32  constant internal ratio = 1000;   ","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"act Resonance is ResonanceF {\r\n    using SafeMath for uint256;\r\n\r\n    uint256    ","after":"act Resonance is ResonanceF {\r\n    using SafeMath for uint256;\r\n\r\n    uint256    ","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"ant internal bonusPrice = 0.0000001 ether; // init price\r\n    uint256     constant i","after":"ant internal bonusPrice = 0.0000001 ether; // init price\r\n    uint256     constant i","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"l priceIncremental = 0.00000001 ether; // increase price\r\n    uint256     constant inter","after":"l priceIncremental = 0.00000001 ether; // increase price\r\n    uint256     constant inter","contract":"Resonance","time":0},{"type":"constant-restrict-modification  ","before":"gnitude = 2 ** 64;\r\n    uint256     public perBonusDivide = 0; //per Profit divide\r\n    ui","after":"gnitude = 2 ** 64;\r\n    uint256     public perBonusDivide = 0; //per Profit divide\r\n    ui","contract":"Resonance","time":0}]}