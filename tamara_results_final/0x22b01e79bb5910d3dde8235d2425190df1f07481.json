{"time":48,"results":[{"type":"external-function ","before":"function createInvoice(uint256 refNumber, string memory description,  address token, uint256 amountDue, address payTo, uint256 ethBlockExpiresAt ) public returns (bytes32 uuid) {\n      return _createInvoiceInternal(msg.sender, refNumber,description,token,amountDue,payTo,ethBlockExpiresAt);\n  }","after":"function createInvoice(uint256 refNumber, string calldata description,  address token, uint256 amountDue, address payTo, uint256 ethBlockExpiresAt ) public returns (bytes32 uuid) {\n      return _createInvoiceInternal(msg.sender, refNumber,description,token,amountDue,payTo,ethBlockExpiresAt);\n  }","contract":"PaySpec","time":1},{"type":"external-function ","before":"function createAndPayInvoice(uint256 refNumber, string memory description,  address token, uint256 amountDue, address payTo, uint256 ethBlockExpiresAt ) public returns (bool) {\n      bytes32 invoiceUUID =  _createInvoiceInternal(msg.sender, refNumber,description,token,amountDue,payTo,ethBlockExpiresAt) ;\n\n      require( ERC20Interface(  invoices[invoiceUUID].token ).transferFrom(msg.sender, address(this),  invoices[invoiceUUID].amountDue )   );\n\n      return _payInvoiceInternal( invoiceUUID, msg.sender);\n  }","after":"function createAndPayInvoice(uint256 refNumber, string calldata description,  address token, uint256 amountDue, address payTo, uint256 ethBlockExpiresAt ) public returns (bool) {\n      bytes32 invoiceUUID =  _createInvoiceInternal(msg.sender, refNumber,description,token,amountDue,payTo,ethBlockExpiresAt) ;\n\n      require( ERC20Interface(  invoices[invoiceUUID].token ).transferFrom(msg.sender, address(this),  invoices[invoiceUUID].amountDue )   );\n\n      return _payInvoiceInternal( invoiceUUID, msg.sender);\n  }","contract":"PaySpec","time":0},{"type":"external-function ","before":"function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public returns (bool) {\n\n        //can only be called by the token contract\n        require(msg.sender == token);\n\n        //transfer the tokens into escrow into this contract to stage for paying the invoice\n        require( ERC20Interface(token).transferFrom(from, address(this), tokens)   );\n\n        require(  _payInvoiceInternal(bytesToBytes32(data,0), from)  );\n\n        return true;\n\n     }","after":"function receiveApproval(address from, uint256 tokens, address token, bytes calldata data) public returns (bool) {\n\n        //can only be called by the token contract\n        require(msg.sender == token);\n\n        //transfer the tokens into escrow into this contract to stage for paying the invoice\n        require( ERC20Interface(token).transferFrom(from, address(this), tokens)   );\n\n        require(  _payInvoiceInternal(bytesToBytes32(data,0), from)  );\n\n        return true;\n\n     }","contract":"PaySpec","time":0}]}