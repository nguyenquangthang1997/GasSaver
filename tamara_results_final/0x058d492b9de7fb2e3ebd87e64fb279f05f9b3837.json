{"time":111,"results":[{"type":"external-function ","before":"function copyBestReserves(ERC20 token, uint[] memory reserveIds) public {\n        \n        KyberReserveIf reserve;\n        \n        for (uint i = 0; i < reserveIds.length; i++) {\n            reserve = KyberReserveIf(getReserveTokenDest(address(token), reserveIds[i]));\n            if (reserve == KyberReserveIf(address(0x0))) continue;\n            reservesPerTokenDestBest[address(token)].push(address(reserve));\n        }        \n    }","after":"function copyBestReserves(ERC20 token, uint[] calldata reserveIds) public {\n        \n        KyberReserveIf reserve;\n        \n        for (uint i = 0; i < reserveIds.length; i++) {\n            reserve = KyberReserveIf(getReserveTokenDest(address(token), reserveIds[i]));\n            if (reserve == KyberReserveIf(address(0x0))) continue;\n            reservesPerTokenDestBest[address(token)].push(address(reserve));\n        }        \n    }","contract":"CheckReserveSplit","time":0}]}