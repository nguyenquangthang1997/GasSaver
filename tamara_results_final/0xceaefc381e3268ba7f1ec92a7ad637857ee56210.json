{"time":78,"results":[{"type":"external-function ","before":"function setFixedOracleFeePerSecond(FixedPoint.Unsigned memory newOracleFee) \n        public \n        onlyRoleHolder(uint(Roles.Owner)) \n    {\n        // Oracle fees at or over 100% don't make sense.\n        require(newOracleFee.isLessThan(1));\n        fixedOracleFeePerSecond = newOracleFee;\n        emit NewFixedOracleFeePerSecond(newOracleFee);\n    }","after":"function setFixedOracleFeePerSecond(FixedPoint.Unsigned calldata newOracleFee) \n        public \n        onlyRoleHolder(uint(Roles.Owner)) \n    {\n        // Oracle fees at or over 100% don't make sense.\n        require(newOracleFee.isLessThan(1));\n        fixedOracleFeePerSecond = newOracleFee;\n        emit NewFixedOracleFeePerSecond(newOracleFee);\n    }","contract":"Store","time":0},{"type":"external-function ","before":"function setWeeklyDelayFee(FixedPoint.Unsigned memory newWeeklyDelayFee) \n        public \n        onlyRoleHolder(uint(Roles.Owner)) \n    {\n        weeklyDelayFee = newWeeklyDelayFee;\n    }","after":"function setWeeklyDelayFee(FixedPoint.Unsigned calldata newWeeklyDelayFee) \n        public \n        onlyRoleHolder(uint(Roles.Owner)) \n    {\n        weeklyDelayFee = newWeeklyDelayFee;\n    }","contract":"Store","time":0},{"type":"external-function ","before":"function setFinalFee(address currency, FixedPoint.Unsigned memory finalFee) \n        public \n        onlyRoleHolder(uint(Roles.Owner))\n    {\n        finalFees[currency] = finalFee;\n    }","after":"function setFinalFee(address currency, FixedPoint.Unsigned calldata finalFee) \n        public \n        onlyRoleHolder(uint(Roles.Owner))\n    {\n        finalFees[currency] = finalFee;\n    }","contract":"Store","time":0}]}