{"time":69,"results":[{"type":"state-data-arrangement ","before":"\n\n    address private _o\n\n    string private _\n\n    string private _sy\n\n    uint8 private _deci\n\n    uint256 private _totalSu\n\n    bool public _lockStatus = f\n\n    bool private isV\n\n    uint256 public airdropcount\n\n    mapping (address => uint256) private _bala\n\n    mapping (address => mapping (address => uint256)) private _all\n\n    mapping (address => uint256) private \n\n    mapping (address => uint256) private _lockedAm","after":"\n    string private _\n\n    string private _sy\n\n    uint256 private _totalSu\n\n    uint256 public airdropcount\n\n    mapping (address => uint256) private _bala\n\n    mapping (address => mapping (address => uint256)) private _all\n\n    mapping (address => uint256) private \n\n    mapping (address => uint256) private _lockedAm\n\n    address private _o\n\n    uint8 private _deci\n\n    bool public _lockStatus = f\n\n    bool private isV\n","contract":"SynchroBitcoin","time":0},{"type":"external-function ","before":"     function airdropByOwner(address[] memory _addresses, uint256[] memory _amount) public AllTransfersLockStatus onlyOwner returns (bool){\n          require(_addresses.length == _amount.length,\"Invalid Array\");\n          uint256 count = _addresses.length;\n          for (uint256 i = 0; i < count; i++){\n               _transfer(msg.sender, _addresses[i], _amount[i]);\n               airdropcount = airdropcount + 1;\n          }\n          return true;\n  ","after":"     function airdropByOwner(address[] calldata _addresses, uint256[] calldata _amount) public AllTransfersLockStatus onlyOwner returns (bool){\n          require(_addresses.length == _amount.length,\"Invalid Array\");\n          uint256 count = _addresses.length;\n          for (uint256 i = 0; i < count; i++){\n               _transfer(msg.sender, _addresses[i], _amount[i]);\n               airdropcount = airdropcount + 1;\n          }\n          return true;\n  ","contract":"SynchroBitcoin","time":0}]}