{"time":196,"results":[{"type":"state-data-arrangement ","before":"\n_[_customerAddress], _amountOfEthereum);\n        \n\n       // execute\n            _;\n\n   } else {\n            // in case t\nher count drops low, the ambassador phase won't reinitiate\n     \n  onlyAmbassadors = false;\n            _;    \n        }\n        \n    \n \n    /*==============================\n    =\n=========*/\n\n\n    event onTokenPurchase(\n  \ns,\n        uint256 incomingEthereum,\n        ui\n tokensMinted,\n        address indexed referredBy\n    );\n  \n  event onTokenSell(\n        address indexed customerA\n      uint25\nnsBurned,\n        uint256 ethereumEa\naw(\n        address indexed customerAddress,\n        uint\nthereumWithdrawn\n    );\n    \n    // ERC20\n    event Tr\nr(\n        address indexed from,\n        addres\nexed to,\n        uint256 tokens\n    );\n\n     // JackPot\n    event\nckpot(\n        address indexed cus\nAddress,\n        uint indexed val\n      uint indexed nextThreshold\n    );\n    \n\n  \n /*===============================\n     CONFIGURABLES            =\n   \n===============================*/\n  \name = \"Brawndo | Thirst Mutilator\";\n   \nimals = 18;\n    uint256 constant internal token\n  \n    // proof of stake (defaults \n> bool) internal ambassadors_;\n    uint256 consta\nl ambassadorQuota_ = 20 ether;\n    \n    \nss dev;\n\n    bool public boolAl\nayer = false;\n\n   /*=============\n======\n    =            DATASETS \n    ================================*/\n    //\nt of shares for eac\nress (scaled number\n mapping(address =>\n internal tokenBal\nedger_;\n    mappin\nress => uint256) i","after":"_[_customerAddress], _amountOfEthereum);\n        \n\n       // execute\n            _;\n\nher count drops low, the ambassador phase won't reinitiate\n     \n  onlyAmbassadors = false;\n            _;    \n        }\n        \n    \n \n    /*==============================\n    =\n=========*/\n\n\n    event onTokenPurchase(\n  \ns,\n        uint256 incomingEthereum,\n        ui\n tokensMinted,\n        address indexed referredBy\n    );\n  \n  event onTokenSell(\n        address indexed customerA\naw(\n        address indexed customerAddress,\n        uint\nthereumWithdrawn\n    );\n    \n    // ERC20\n    event Tr\nr(\n        address indexed from,\n        addres\nexed to,\n        uint256 tokens\n    );\n\n     // JackPot\n    event\nckpot(\n        address indexed cus\nAddress,\n        uint indexed val\n      uint indexed nextThreshold\n    );\n    \n\n  \nimals = 18;\n    uint256 constant internal token\n> bool) internal ambassadors_;\n    uint256 consta\nl ambassadorQuota_ = 20 ether;\n    \n    \nss dev;\n\n    bool public boolAl\nayer = false;\n\n   /*=============\n======\n    =            DATASETS \n    ================================*/\n    //\n internal tokenBal\nedger_;\n    mappin\nress => uint256) i\n      uint25\nt of shares for eac\nress (scaled number\n mapping(address =>\n   } else {\n            // in case t\nnsBurned,\n        uint256 ethereumEa\n /*===============================\n     CONFIGURABLES            =\n   \n===============================*/\n  \name = \"Brawndo | Thirst Mutilator\";\n   \n  \n    // proof of stake (defaults \n","contract":"Brawndo","time":2},{"type":"constant-restrict-modification  ","before":"nsBurned,\n        uint256 ethereumEa","after":"nsBurned,\n        uint256 ethereumEa","contract":"Brawndo","time":0},{"type":"constant-restrict-modification  ","before":" /*===============================","after":" /*===============================","contract":"Brawndo","time":0}]}