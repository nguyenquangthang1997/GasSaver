{"time":128,"results":[{"type":"external-function ","before":"function defineContributionLimits(uint256[] memory _contributionLimits)\n    public onlyOperator returns (bool)\n  {\n    contributionLimits_ = _contributionLimits;\n    emit ContributionLimits(_contributionLimits);\n    return true;\n  }","after":"function defineContributionLimits(uint256[] calldata _contributionLimits)\n    public onlyOperator returns (bool)\n  {\n    contributionLimits_ = _contributionLimits;\n    emit ContributionLimits(_contributionLimits);\n    return true;\n  }","contract":"Tokensale","time":0},{"type":"external-function ","before":"function refundManyUnspentETH(address payable[] memory _receivers)\n    public onlyOperator returns (bool)\n  {\n    for (uint256 i = 0; i < _receivers.length; i++) {\n      refundUnspentETHInternal(_receivers[i]);\n    }\n    return true;\n  }","after":"function refundManyUnspentETH(address payable[] calldata _receivers)\n    public onlyOperator returns (bool)\n  {\n    for (uint256 i = 0; i < _receivers.length; i++) {\n      refundUnspentETHInternal(_receivers[i]);\n    }\n    return true;\n  }","contract":"Tokensale","time":0},{"type":"external-function ","before":"function defineBonuses(\n    BonusMode _bonusMode,\n    uint256[] memory _bonuses,\n    uint256[] memory _bonusUntils)\n    public onlyOperator beforeSaleIsOpened returns (bool)\n  {\n    require(_bonuses.length == _bonusUntils.length, \"BT01\");\n\n    if (_bonusMode != BonusMode.NONE) {\n      require(_bonusUntils.length > 0, \"BT02\");\n      require(_bonusUntils.length < MAX_BONUSES, \"BT03\");\n\n      uint256 bonusUntil =\n        (_bonusMode == BonusMode.EARLY) ? startAt : 0;\n\n      for(uint256 i=0; i < _bonusUntils.length; i++) {\n        require(_bonusUntils[i] > bonusUntil, \"BT04\");\n        bonusUntil = _bonusUntils[i];\n      }\n    } else {\n      require(_bonusUntils.length == 0, \"BT05\");\n    }\n\n    bonuses_ = _bonuses;\n    bonusMode_ = _bonusMode;\n    bonusUntils_ = _bonusUntils;\n\n    emit BonusesDefined(_bonuses, _bonusMode, _bonusUntils);\n    return true;\n  }","after":"function defineBonuses(\n    BonusMode _bonusMode,\n    uint256[] calldata _bonuses,\n    uint256[] calldata _bonusUntils)\n    public onlyOperator beforeSaleIsOpened returns (bool)\n  {\n    require(_bonuses.length == _bonusUntils.length, \"BT01\");\n\n    if (_bonusMode != BonusMode.NONE) {\n      require(_bonusUntils.length > 0, \"BT02\");\n      require(_bonusUntils.length < MAX_BONUSES, \"BT03\");\n\n      uint256 bonusUntil =\n        (_bonusMode == BonusMode.EARLY) ? startAt : 0;\n\n      for(uint256 i=0; i < _bonusUntils.length; i++) {\n        require(_bonusUntils[i] > bonusUntil, \"BT04\");\n        bonusUntil = _bonusUntils[i];\n      }\n    } else {\n      require(_bonusUntils.length == 0, \"BT05\");\n    }\n\n    bonuses_ = _bonuses;\n    bonusMode_ = _bonusMode;\n    bonusUntils_ = _bonusUntils;\n\n    emit BonusesDefined(_bonuses, _bonusMode, _bonusUntils);\n    return true;\n  }","contract":"Tokensale","time":0}]}