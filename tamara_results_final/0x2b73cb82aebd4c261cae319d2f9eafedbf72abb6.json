{"time":134,"results":[{"type":"state-data-arrangement ","before":"\n=\n    // 地址信息\n    address public admin_address = 0x6dFe4B3AC236A39\nC563B0Da; // @eachvar\n    address public account_address = 0x6dFe4B3AC236A39\n后转入代币的地址\n    \n    // \n   // solidity 会自动为 public 变量�\n了下边这些变量，就�\n��本信息了\n    string p\n Things Connect\"; // @eachvar\n \nsymbol = \"ATC\"; // @eachvar\n   \no] = add(balances[_to], _value);\n        emit Transfer(msg.sender, \n;\n        }\n        \n        emit Appr\nr, allowed[msg.sender][_spender]);\n     \n= 直投相关逻辑 ===============\n    bool public direct_drop_switch = true; \nr\n    uint256 public direct_drop_rate = 10000; // 兑换比例，注意这里是eth为单\n@eachvar\n    address public direct_dro\n299443F8bA61658C0afb1De0379; // 用于发放直投�\n    address public direct_drop_withdraw_address = \nances[direct_drop_address], decimal\n\n        balances[_beneficiary] = a\n;\n        \n        assert\n        (\n            all == add(balances[direct_dr\nciary])\n        );\n\n        // 发\nrchase\n        (\n            msg.sender,\n \n           msg.value,\n            t\n    return true;\n\n    } \n    \n\n     // ========= \n===========\n    bool public air_drop_switch = t","after":"后转入代币的地址\n    \n    // \n   // solidity 会自动为 public 变量�\n了下边这些变量，就�\n Things Connect\"; // @eachvar\n \nsymbol = \"ATC\"; // @eachvar\n   \no] = add(balances[_to], _value);\n        emit Transfer(msg.sender, \nr, allowed[msg.sender][_spender]);\n     \n299443F8bA61658C0afb1De0379; // 用于发放直投�\n    address public direct_drop_withdraw_address = \n\n        balances[_beneficiary] = a\nciary])\n        );\n\n        // 发\nrchase\n        (\n            msg.sender,\n \n    return true;\n\n    } \n    \n\n     // ========= \n===========\n    bool public air_drop_switch = t\n=\n    // 地址信息\n    address public admin_address = 0x6dFe4B3AC236A39\nC563B0Da; // @eachvar\n    address public account_address = 0x6dFe4B3AC236A39\n= 直投相关逻辑 ===============\n    bool public direct_drop_switch = true; \nr\n    uint256 public direct_drop_rate = 10000; // 兑换比例，注意这里是eth为单\n;\n        \n        assert\n        (\n            all == add(balances[direct_dr\n��本信息了\n    string p\n;\n        }\n        \n        emit Appr\n@eachvar\n    address public direct_dro\nances[direct_drop_address], decimal\n           msg.value,\n            t\n","contract":"CoinAtc","time":3},{"type":"constant-restrict-modification  ","before":"C563B0Da; // @eachvar\n    address public account_address = 0x6dFe4B3AC236A39","after":"C563B0Da; // @eachvar\n    address public constant account_address = 0x6dFe4B3AC236A39","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"   // solidity 会自动为 public 变量�","after":"   // solidity 会自动为 public 变量�","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"了下边这些变量，就�","after":"了下边这些变量，就�","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"��本信息了\n    string p","after":"��本信息了\n    string p","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":" Things Connect\"; // @eachvar\n ","after":" Things Connect\"; // @eachvar\n ","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"r, allowed[msg.sender][_spender]);\n     ","after":"r, allowed[msg.sender][_spender]);\n     ","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"= 直投相关逻辑 ===============\n    bool public direct_drop_switch = true; ","after":"= 直投相关逻辑 ===============\n    bool public direct_drop_switch = true; ","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"r\n    uint256 public direct_drop_rate = 10000; // 兑换比例，注意这里是eth为单","after":"r\n    uint256 public direct_drop_rate = 10000; // 兑换比例，注意这里是eth为单","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"@eachvar\n    address public direct_dro","after":"@eachvar\n    address public direct_dro","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"299443F8bA61658C0afb1De0379; // 用于发放直投�","after":"299443F8bA61658C0afb1De0379; // 用于发放直投�","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"    address public direct_drop_withdraw_address = ","after":"    address public direct_drop_withdraw_address = ","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"\n        balances[_beneficiary] = a","after":"\n        balances[_beneficiary] = a","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":";\n        \n        assert\n        (\n            all == add(balances[direct_dr","after":";\n        \n        assert\n        (\n            all == add(balances[direct_dr","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"ciary])\n        );\n\n        // 发","after":"ciary])\n        );\n\n        // 发","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"           msg.value,\n            t","after":"           msg.value,\n            t","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"    return true;\n\n    } \n    \n\n     // ========= ","after":"    return true;\n\n    } \n    \n\n     // ========= ","contract":"CoinAtc","time":1},{"type":"constant-restrict-modification  ","before":"===========\n    bool public air_drop_switch = t","after":"===========\n    bool public air_drop_switch = t","contract":"CoinAtc","time":1}]}