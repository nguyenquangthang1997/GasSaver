{"time":106,"results":[{"type":"external-function ","before":"function lend(\n        TokenConverter _converter,\n        IERC20 _fromToken,\n        uint256 _maxSpend,\n        address _cosigner,\n        bytes32 _requestId,\n        bytes memory _oracleData,\n        bytes memory _cosignerData,\n        bytes memory _callbackData\n    ) public payable {\n        /// load RCN IERC20\n        LoanManager _loanManager = loanManager;\n\n        /// get required RCN for lending the loan\n        uint256 amount = getRequiredRcnLend(\n            _loanManager,\n            _cosigner,\n            _requestId,\n            _oracleData,\n            _cosignerData\n        );\n\n        IERC20 _token = token;\n        _pullConvertAndReturnExtra(\n            _converter,\n            _fromToken,\n            _token,\n            amount,\n            _maxSpend\n        );\n\n        // approve token to loan manager only once\n        // the loan manager is trusted\n        _approveOnlyOnce(_token, address(_loanManager), amount);\n\n        _loanManager.lend(\n            _requestId,\n            _oracleData,\n            _cosigner,\n            0,\n            _cosignerData,\n            _callbackData\n        );\n\n        // /// transfer loan to msg.sender\n        debtEngine.transferFrom(address(this), msg.sender, uint256(_requestId));\n    }","after":"function lend(\n        TokenConverter _converter,\n        IERC20 _fromToken,\n        uint256 _maxSpend,\n        address _cosigner,\n        bytes32 _requestId,\n        bytes calldata _oracleData,\n        bytes calldata _cosignerData,\n        bytes calldata _callbackData\n    ) public payable {\n        /// load RCN IERC20\n        LoanManager _loanManager = loanManager;\n\n        /// get required RCN for lending the loan\n        uint256 amount = getRequiredRcnLend(\n            _loanManager,\n            _cosigner,\n            _requestId,\n            _oracleData,\n            _cosignerData\n        );\n\n        IERC20 _token = token;\n        _pullConvertAndReturnExtra(\n            _converter,\n            _fromToken,\n            _token,\n            amount,\n            _maxSpend\n        );\n\n        // approve token to loan manager only once\n        // the loan manager is trusted\n        _approveOnlyOnce(_token, address(_loanManager), amount);\n\n        _loanManager.lend(\n            _requestId,\n            _oracleData,\n            _cosigner,\n            0,\n            _cosignerData,\n            _callbackData\n        );\n\n        // /// transfer loan to msg.sender\n        debtEngine.transferFrom(address(this), msg.sender, uint256(_requestId));\n    }","contract":"ConverterRamp","time":0}]}