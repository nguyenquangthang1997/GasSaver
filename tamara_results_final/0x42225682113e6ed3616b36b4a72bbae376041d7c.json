{"time":1522,"results":[{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function createBet(\n        string memory _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","after":"function createBet(\n        string calldata _description,\n        uint8 _category,\n        uint8 _subCategory,\n        uint256 _minimumBetInExaEs,\n        uint256 _prizePercentPerThousand,\n        bool _isDrawPossible,\n        uint256 _pauseTimestamp\n    ) public onlyManager returns (address) {\n        Bet _newBet = new Bet(\n          _description,\n          _category,\n          _subCategory,\n          _minimumBetInExaEs,\n          _prizePercentPerThousand,\n          _isDrawPossible,\n          _pauseTimestamp\n        );\n        bets.push(address(_newBet));\n        isBetValid[address(_newBet)] = true;\n\n        emit NewBetContract(\n          msg.sender,\n          address(_newBet),\n          _category,\n          _subCategory,\n          _description\n        );\n\n        return address(_newBet);\n    }","contract":"BetDeEx","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0},{"type":"external-function ","before":"function UpdateAddresses (address[] memory pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","after":"function UpdateAddresses (address[] calldata pool) onlyOwner public returns(bool){\n\n      if((pool[0] != address(0)) && (newTalentsAndPartnerships == address(0))){\n        newTalentsAndPartnerships = pool[0];\n        emit PoolAddressAdded( \"NewTalentsAndPartnerships\", newTalentsAndPartnerships);\n      }\n      if((pool[1] != address(0)) && (platformMaintenance == address(0))){\n        platformMaintenance = pool[1];\n        emit PoolAddressAdded( \"PlatformMaintenance\", platformMaintenance);\n      }\n      if((pool[2] != address(0)) && (marketingAndRNR == address(0))){\n        marketingAndRNR = pool[2];\n        emit PoolAddressAdded( \"MarketingAndRNR\", marketingAndRNR);\n      }\n      if((pool[3] != address(0)) && (kmPards == address(0))){\n        kmPards = pool[3];\n        emit PoolAddressAdded( \"KmPards\", kmPards);\n      }\n      if((pool[4] != address(0)) && (contingencyFunds == address(0))){\n        contingencyFunds = pool[4];\n        emit PoolAddressAdded( \"ContingencyFunds\", contingencyFunds);\n      }\n      if((pool[5] != address(0)) && (researchAndDevelopment == address(0))){\n        researchAndDevelopment = pool[5];\n        emit PoolAddressAdded( \"ResearchAndDevelopment\", researchAndDevelopment);\n      }\n      if((pool[6] != address(0)) && (buzzCafe == address(0))){\n        buzzCafe = pool[6];\n        emit PoolAddressAdded( \"BuzzCafe\", buzzCafe);\n      }\n      if((pool[7] != address(0)) && (timeSwappers == address(0))){\n        timeSwappers = pool[7];\n        emit PoolAddressAdded( \"TimeSwapper\", timeSwappers);\n      }\n      if((pool[8] != address(0)) && (TimeAlly == address(0))){\n        TimeAlly = pool[8];\n        emit PoolAddressAdded( \"TimeAlly\", TimeAlly);\n      }\n\n      return true;\n    }","contract":"EraswapToken","time":0}]}