{"time":348,"results":[{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":1},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":1},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function sendGloryAward(address[] memory plays, uint[] memory selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","after":"function sendGloryAward(address[] calldata plays, uint[] calldata selfAmount, uint totalAmount)\n    public onlyAdmin() {\n        _gloryPool = _gloryPool.sub(totalAmount);\n        for(uint i = 0; i < plays.length; i++){\n            investBonus(plays[i], selfAmount[i], false, 0);\n            emit logGlory(plays[i], selfAmount[i], now);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] memory locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","after":"function startArgs(uint staticPool, uint safePool, uint outInvest, uint dailyInvest, uint[] calldata locks) public onlyAdmin() {\n        _staticPool = staticPool;\n        _safePool = safePool;\n        _outInvest = outInvest;\n        _dailyInvest = dailyInvest;\n        for(uint i = 0; i<locks.length; i++) {\n            lockedRound.push(locks[i]);\n        }\n    }","contract":"League","time":0},{"type":"external-function ","before":"function startGame(\n        address[] memory plays, address[] memory parents,\n        uint[] memory bonus, uint[] memory totalBonus,\n        uint[] memory totalInvests, uint[] memory sons, uint[] memory round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","after":"function startGame(\n        address[] calldata plays, address[] calldata parents,\n        uint[] calldata bonus, uint[] calldata totalBonus,\n        uint[] calldata totalInvests, uint[] calldata sons, uint[] calldata round)\n    public onlyAdmin() {\n        for(uint i = 0; i<plays.length; i++) {\n            Player storage user = allPlayers[plays[i]];\n            user.self = plays[i];\n            user.parent = parents[i];\n            user.bonus = bonus[i];\n            user.totalBonus = totalBonus[i];\n            user.invest = totalInvests[i];\n            user.sons = sons[i];\n            user.round = round[i];\n            user.index = allAddress.length;\n            allAddress.push(plays[i]);\n        }\n    }","contract":"League","time":0}]}