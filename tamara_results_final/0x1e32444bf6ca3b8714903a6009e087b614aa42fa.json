{"time":24,"results":[{"type":"external-function ","before":"function batchTransferBoth(address payable[] memory accounts, uint256 etherValue, uint256 btcgwValue) public payable {\n        uint256 __etherBalance = address(this).balance;\n        uint256 __btcgwAllowance = BTCGW.allowance(msg.sender, address(this));\n\n        require(__etherBalance >= etherValue.mul(accounts.length));\n        require(__btcgwAllowance >= btcgwValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            accounts[i].transfer(etherValue);\n            assert(BTCGW.transferFrom(msg.sender, accounts[i], btcgwValue));\n        }\n    }","after":"function batchTransferBoth(address payable[] calldata accounts, uint256 etherValue, uint256 btcgwValue) public payable {\n        uint256 __etherBalance = address(this).balance;\n        uint256 __btcgwAllowance = BTCGW.allowance(msg.sender, address(this));\n\n        require(__etherBalance >= etherValue.mul(accounts.length));\n        require(__btcgwAllowance >= btcgwValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            accounts[i].transfer(etherValue);\n            assert(BTCGW.transferFrom(msg.sender, accounts[i], btcgwValue));\n        }\n    }","contract":"BatchTransfer","time":0},{"type":"external-function ","before":"function batchTransferEther(address payable[] memory accounts, uint256 etherValue) public payable {\n        uint256 __etherBalance = address(this).balance;\n\n        require(__etherBalance >= etherValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            accounts[i].transfer(etherValue);\n        }\n    }","after":"function batchTransferEther(address payable[] calldata accounts, uint256 etherValue) public payable {\n        uint256 __etherBalance = address(this).balance;\n\n        require(__etherBalance >= etherValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            accounts[i].transfer(etherValue);\n        }\n    }","contract":"BatchTransfer","time":0},{"type":"external-function ","before":"function batchTransferBTCGW(address[] memory accounts, uint256 btcgwValue) public {\n        uint256 __btcgwAllowance = BTCGW.allowance(msg.sender, address(this));\n\n        require(__btcgwAllowance >= btcgwValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            assert(BTCGW.transferFrom(msg.sender, accounts[i], btcgwValue));\n        }\n    }","after":"function batchTransferBTCGW(address[] calldata accounts, uint256 btcgwValue) public {\n        uint256 __btcgwAllowance = BTCGW.allowance(msg.sender, address(this));\n\n        require(__btcgwAllowance >= btcgwValue.mul(accounts.length));\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            assert(BTCGW.transferFrom(msg.sender, accounts[i], btcgwValue));\n        }\n    }","contract":"BatchTransfer","time":0}]}