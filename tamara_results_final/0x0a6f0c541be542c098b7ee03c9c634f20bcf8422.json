{"time":39,"results":[{"type":"external-function ","before":"function withdraw(uint value, bytes32[] memory proof) public {\n        require(verifyEntitled(msg.sender, value, proof), \"The proof could not be verified.\");\n        require(! withdrawn[msg.sender], \"You have already withdrawn your entitled token.\");\n\n        burnUnusableTokens();\n\n        uint valueToSend = decayedEntitlementAtTime(value, now, false);\n        assert(valueToSend <= value);\n        require(droppedToken.balanceOf(address(this)) >= valueToSend, \"The MerkleDrop does not have tokens to drop yet / anymore.\");\n        require(valueToSend != 0, \"The decayed entitled value is now zero.\");\n\n        withdrawn[msg.sender] = true;\n        remainingValue -= value;\n        spentTokens += valueToSend;\n\n        require(droppedToken.transfer(msg.sender, valueToSend));\n        emit Withdraw(msg.sender, valueToSend, value);\n    }","after":"function withdraw(uint value, bytes32[] calldata proof) public {\n        require(verifyEntitled(msg.sender, value, proof), \"The proof could not be verified.\");\n        require(! withdrawn[msg.sender], \"You have already withdrawn your entitled token.\");\n\n        burnUnusableTokens();\n\n        uint valueToSend = decayedEntitlementAtTime(value, now, false);\n        assert(valueToSend <= value);\n        require(droppedToken.balanceOf(address(this)) >= valueToSend, \"The MerkleDrop does not have tokens to drop yet / anymore.\");\n        require(valueToSend != 0, \"The decayed entitled value is now zero.\");\n\n        withdrawn[msg.sender] = true;\n        remainingValue -= value;\n        spentTokens += valueToSend;\n\n        require(droppedToken.transfer(msg.sender, valueToSend));\n        emit Withdraw(msg.sender, valueToSend, value);\n    }","contract":"MerkleDrop","time":0}]}