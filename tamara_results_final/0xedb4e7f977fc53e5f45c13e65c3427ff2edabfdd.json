{"time":164,"results":[{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0},{"type":"external-function ","before":"function airdropTokens(address[] memory _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","after":"function airdropTokens(address[] calldata _recipient) public onlyOwner {\n        for(uint256 i = 0; i < _recipient.length; i++) {\n            if (!airdrops[_recipient[i]]) {\n                airdrops[_recipient[i]] = true;\n                require(token.transfer(_recipient[i], token.balanceOf(_recipient[i]) * _decimalFactor), \"Failed to transfer tokens\");\n            }\n        }\n  }","contract":"MetalAirdrop","time":0}]}