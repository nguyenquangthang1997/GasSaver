{"time":23,"results":[{"type":"external-function ","before":"function registerNode(string memory n, string memory r, string memory p, string memory e, string memory ip) public {\n\n        nodes[e].publickey = p;\n        nodes[e].nodeName = n;\n        nodes[e].role = r;\n        nodes[e].ip = ip;\n        enodeList.push(e);\n        emit print(n, r, p, e, ip);\n\n    }","after":"function registerNode(string calldata n, string calldata r, string calldata p, string calldata e, string calldata ip) public {\n\n        nodes[e].publickey = p;\n        nodes[e].nodeName = n;\n        nodes[e].role = r;\n        nodes[e].ip = ip;\n        enodeList.push(e);\n        emit print(n, r, p, e, ip);\n\n    }","contract":"NetworkManagerContract","time":0},{"type":"external-function ","before":"function updateNode(string memory n, string memory r, string memory p, string memory e, string memory ip) public {\n\n        nodes[e].publickey = p;\n        nodes[e].nodeName = n;\n        nodes[e].role = r;\n        nodes[e].ip = ip;\n        emit print(n, r, p, e, ip);\n    }","after":"function updateNode(string calldata n, string calldata r, string calldata p, string calldata e, string calldata ip) public {\n\n        nodes[e].publickey = p;\n        nodes[e].nodeName = n;\n        nodes[e].role = r;\n        nodes[e].ip = ip;\n        emit print(n, r, p, e, ip);\n    }","contract":"NetworkManagerContract","time":0}]}