{"time":30,"results":[{"type":"struct-data-arrangement ","before":"\naddress payable seller\nstring title\nstring content\nuint price\nuint locked\nbool available","after":"string title\nstring content\nuint price\nuint locked\naddress payable seller\nbool available\n","contract":"EtherBuy","time":0},{"type":"struct-data-arrangement ","before":"\naddress payable buyer\nstring message\nbool lockReleased\nbool hasReceived\nstring commentByBuyer\nstring commentBySeller","after":"string message\nstring commentByBuyer\nstring commentBySeller\naddress payable buyer\nbool lockReleased\nbool hasReceived\n","contract":"EtherBuy","time":0},{"type":"external-function ","before":"function sell(string memory title, string memory content, uint price, uint locked) public {\n\t\tsales.push(oneSale(\n\t\t\tmsg.sender,\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\tprice,\n\t\t\tlocked,\n\t\t\ttrue\n\t\t));\t\t\n\t\temit SellEvent();\n\t}","after":"function sell(string calldata title, string calldata content, uint price, uint locked) public {\n\t\tsales.push(oneSale(\n\t\t\tmsg.sender,\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t\tprice,\n\t\t\tlocked,\n\t\t\ttrue\n\t\t));\t\t\n\t\temit SellEvent();\n\t}","contract":"EtherBuy","time":0},{"type":"external-function ","before":"function buy(uint SaleID, string memory message) public payable {\n\t\trequire(sales[SaleID].available);\n\t\trequire(msg.value==sales[SaleID].price+sales[SaleID].locked);\n\n\t\tbuys[SaleID].push(oneBuy(\n\t\t\tmsg.sender,\n\t\t\tmessage,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t\"\",\n\t\t\t\"\"\n\t\t));\n\n\t\tsales[SaleID].seller.transfer(sales[SaleID].price);\n\t\t\n\t\temit BuyEvent(SaleID, message);\n\t}","after":"function buy(uint SaleID, string calldata message) public payable {\n\t\trequire(sales[SaleID].available);\n\t\trequire(msg.value==sales[SaleID].price+sales[SaleID].locked);\n\n\t\tbuys[SaleID].push(oneBuy(\n\t\t\tmsg.sender,\n\t\t\tmessage,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t\"\",\n\t\t\t\"\"\n\t\t));\n\n\t\tsales[SaleID].seller.transfer(sales[SaleID].price);\n\t\t\n\t\temit BuyEvent(SaleID, message);\n\t}","contract":"EtherBuy","time":0},{"type":"external-function ","before":"function buyerFeedback(uint SaleID, uint BuyID, bool hasReceived, string memory comment) public {\n\t\trequire(msg.sender==buys[SaleID][BuyID].buyer);\n\n\t\tif(!buys[SaleID][BuyID].lockReleased && sales[SaleID].locked>0) {\n\t\t\tbuys[SaleID][BuyID].lockReleased = true;\n\t\t\tmsg.sender.transfer(sales[SaleID].locked);\n\t\t}\n\n\t\tbuys[SaleID][BuyID].hasReceived = hasReceived;\n\t\tbuys[SaleID][BuyID].commentByBuyer = comment;\n\t\temit FeedbackEvent(SaleID, BuyID);\n\t}","after":"function buyerFeedback(uint SaleID, uint BuyID, bool hasReceived, string calldata comment) public {\n\t\trequire(msg.sender==buys[SaleID][BuyID].buyer);\n\n\t\tif(!buys[SaleID][BuyID].lockReleased && sales[SaleID].locked>0) {\n\t\t\tbuys[SaleID][BuyID].lockReleased = true;\n\t\t\tmsg.sender.transfer(sales[SaleID].locked);\n\t\t}\n\n\t\tbuys[SaleID][BuyID].hasReceived = hasReceived;\n\t\tbuys[SaleID][BuyID].commentByBuyer = comment;\n\t\temit FeedbackEvent(SaleID, BuyID);\n\t}","contract":"EtherBuy","time":0},{"type":"external-function ","before":"function sellerFeedback(uint SaleID, uint BuyID, string memory comment) public {\n\t\trequire(msg.sender==sales[SaleID].seller);\n\t\tbuys[SaleID][BuyID].commentBySeller = comment;\n\t\temit FeedbackEvent(SaleID, BuyID);\n\t}","after":"function sellerFeedback(uint SaleID, uint BuyID, string calldata comment) public {\n\t\trequire(msg.sender==sales[SaleID].seller);\n\t\tbuys[SaleID][BuyID].commentBySeller = comment;\n\t\temit FeedbackEvent(SaleID, BuyID);\n\t}","contract":"EtherBuy","time":0}]}