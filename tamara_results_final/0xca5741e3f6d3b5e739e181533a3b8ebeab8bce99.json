{"time":63,"results":[{"type":"external-function ","before":"function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) public returns (bool success)\n  {\n    require(approve(_spender, _value));\n    require(TokenRecipient(_spender).receiveApproval(msg.sender, _value, address(this), _extraData));\n    return true;\n  }","after":"function approveAndCall(address _spender, uint256 _value, bytes calldata _extraData) public returns (bool success)\n  {\n    require(approve(_spender, _value));\n    require(TokenRecipient(_spender).receiveApproval(msg.sender, _value, address(this), _extraData));\n    return true;\n  }","contract":"FuchsiaToken","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"Fuchsia\";","after":"string public constant name = \"Fuchsia\";","contract":"FuchsiaToken","time":0},{"type":"constant-restrict-modification  ","before":"string public symbol = \"XF\";","after":"string public constant symbol = \"XF\";","contract":"FuchsiaToken","time":0},{"type":"constant-restrict-modification  ","before":"uint8 public decimals = 18;","after":"uint8 public constant decimals = 18;","contract":"FuchsiaToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public initialSupply = 888 * 1000 * 1000 * 1000;","after":"uint256 public constant initialSupply = 888 * 1000 * 1000 * 1000;","contract":"FuchsiaToken","time":0}]}