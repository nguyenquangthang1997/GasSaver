{"time":215,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"state-data-arrangement ","before":"\nuint16 public constant GUILD_TYPE_OFFSET = 10000;\nuint16 public constant GUILD_RARITY_OFFSET = 1000;\nuint256 public constant SHARE_RATE_DECIMAL = 10**18;\nuint16 public constant LEGENDARY_RARITY = 3;\nuint16 public constant GOLD_RARITY = 2;\nuint16 public constant SILVER_RARITY = 1;\nuint16 public constant NO_GUILD = 0;\nstring public tokenURIPrefix = \"https://cryptospells.jp/metadata/guild/\";\nmapping(uint16 => uint256) private guildTypeToTotalVolume;\nmapping(uint16 => uint256) private guildTypeToStockSupplyLimit;\nmapping(uint16 => mapping(uint16 => uint256)) private guildTypeAndRarityToStockSupply;\nmapping(uint16 => uint256[]) private guildTypeToGuildStockList;\nmapping(uint16 => uint256) private guildTypeToGuildStockIndex;\nmapping(uint16 => mapping(uint16 => uint256)) private guildTypeAndRarityToGuildStockCount;\nmapping(uint16 => uint256) private rarityToStockVolume;","after":"uint256 public constant SHARE_RATE_DECIMAL = 10**18;\nstring public tokenURIPrefix = \"https://cryptospells.jp/metadata/guild/\";\nmapping(uint16 => uint256) private guildTypeToTotalVolume;\nmapping(uint16 => uint256) private guildTypeToStockSupplyLimit;\nmapping(uint16 => mapping(uint16 => uint256)) private guildTypeAndRarityToStockSupply;\nmapping(uint16 => uint256[]) private guildTypeToGuildStockList;\nmapping(uint16 => uint256) private guildTypeToGuildStockIndex;\nmapping(uint16 => mapping(uint16 => uint256)) private guildTypeAndRarityToGuildStockCount;\nmapping(uint16 => uint256) private rarityToStockVolume;\nuint16 public constant GUILD_TYPE_OFFSET = 10000;\nuint16 public constant GUILD_RARITY_OFFSET = 1000;\nuint16 public constant LEGENDARY_RARITY = 3;\nuint16 public constant GOLD_RARITY = 2;\nuint16 public constant SILVER_RARITY = 1;\nuint16 public constant NO_GUILD = 0;\n","contract":"GuildAsset","time":0},{"type":"external-function ","before":"function safeMint(address to, uint256 tokenId, bytes memory _data) public onlyMinter returns (bool) {\n        _safeMint(to, tokenId, _data);\n        return true;\n    }","after":"function safeMint(address to, uint256 tokenId, bytes calldata _data) public onlyMinter returns (bool) {\n        _safeMint(to, tokenId, _data);\n        return true;\n    }","contract":"GuildAsset","time":0}]}