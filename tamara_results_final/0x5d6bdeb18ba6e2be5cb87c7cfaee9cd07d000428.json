{"time":401,"results":[{"type":"external-function ","before":"function init (\n    string memory name,\n    string memory symbol,\n    address[] memory defaultOperators,\n    BasePool pool\n  ) public initializer {\n      require(bytes(name).length != 0, \"PoolToken/name\");\n      require(bytes(symbol).length != 0, \"PoolToken/symbol\");\n      require(address(pool) != address(0), \"PoolToken/pool-zero\");\n\n      _name = name;\n      _symbol = symbol;\n      _pool = pool;\n\n      _defaultOperatorsArray = defaultOperators;\n      for (uint256 i = 0; i < _defaultOperatorsArray.length; i++) {\n          _defaultOperators[_defaultOperatorsArray[i]] = true;\n      }\n\n      // register interfaces\n      ERC1820_REGISTRY.setInterfaceImplementer(address(this), TOKENS_INTERFACE_HASH, address(this));\n      ERC1820_REGISTRY.setInterfaceImplementer(address(this), ERC20_TOKENS_INTERFACE_HASH, address(this));\n  }","after":"function init (\n    string calldata name,\n    string calldata symbol,\n    address[] calldata defaultOperators,\n    BasePool pool\n  ) public initializer {\n      require(bytes(name).length != 0, \"PoolToken/name\");\n      require(bytes(symbol).length != 0, \"PoolToken/symbol\");\n      require(address(pool) != address(0), \"PoolToken/pool-zero\");\n\n      _name = name;\n      _symbol = symbol;\n      _pool = pool;\n\n      _defaultOperatorsArray = defaultOperators;\n      for (uint256 i = 0; i < _defaultOperatorsArray.length; i++) {\n          _defaultOperators[_defaultOperatorsArray[i]] = true;\n      }\n\n      // register interfaces\n      ERC1820_REGISTRY.setInterfaceImplementer(address(this), TOKENS_INTERFACE_HASH, address(this));\n      ERC1820_REGISTRY.setInterfaceImplementer(address(this), ERC20_TOKENS_INTERFACE_HASH, address(this));\n  }","contract":"RecipientWhitelistPoolToken","time":0}]}