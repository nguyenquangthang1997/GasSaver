{"time":476,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => uint256) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _InterfaceId_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => uint256) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _InterfaceId_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"constant-restrict-modification  ","before":"   string public name = \"Selfiechai","after":"   string public constant name = \"Selfiechai","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"   string public symbol = \"","after":"   string public constant symbol = \"","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"sol\";\nimport \"./ERC721.sol\";\nimport","after":"sol\";\nimport \"./ERC721.sol\";\nimport","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"afeMath.sol\";\nimport \"./Pau","after":"afeMath.sol\";\nimport \"./Pau","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":")\n# @dev Compatible con la implemen","after":")\n# @dev Compatible con la implemen","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"�n de OpenZeppelin de la es","after":"�n de OpenZeppelin de la es","contract":"Selfiechain","time":1},{"type":"state-data-arrangement ","before":"\nC721Received(address,address,uint256,bytes)\"))`\r\n  // \nver(0).onERC721Received.selector`\r\n  bytes4 priva\nping from token ID to owner\r\n  mapping (uint256 => ad\nD to approved address\r\n  mapping (uint256 => address) p\n number of owned token\r\n  mapping (address => uint256) private _ownedToken\n;\r\n\r\n  // Mapping from owner to operator approvals\r\n  map","after":"ver(0).onERC721Received.selector`\r\n  bytes4 priva\nping from token ID to owner\r\n  mapping (uint256 => ad\nD to approved address\r\n  mapping (uint256 => address) p\n number of owned token\r\n  mapping (address => uint256) private _ownedToken\nC721Received(address,address,uint256,bytes)\"))`\r\n  // \n;\r\n\r\n  // Mapping from owner to operator approvals\r\n  map\n","contract":"ERC721","time":0},{"type":"constant-restrict-modification  ","before":"   string public name = \"Selfiechai","after":"   string public constant name = \"Selfiechai","contract":"Selfiechain","time":0},{"type":"constant-restrict-modification  ","before":"   string public symbol = \"","after":"   string public constant symbol = \"","contract":"Selfiechain","time":0},{"type":"constant-restrict-modification  ","before":"sol\";\nimport \"./ERC721.sol\";\nimport","after":"sol\";\nimport \"./ERC721.sol\";\nimport","contract":"Selfiechain","time":0},{"type":"constant-restrict-modification  ","before":"afeMath.sol\";\nimport \"./Pau","after":"afeMath.sol\";\nimport \"./Pau","contract":"Selfiechain","time":0},{"type":"constant-restrict-modification  ","before":")\n# @dev Compatible con la implemen","after":")\n# @dev Compatible con la implemen","contract":"Selfiechain","time":0},{"type":"constant-restrict-modification  ","before":"�n de OpenZeppelin de la es","after":"�n de OpenZeppelin de la es","contract":"Selfiechain","time":0},{"type":"state-data-arrangement ","before":"\nt ERC721 is ERC165, IERC721 {\r\n\r\n  using SafeMath for \n // Equals to `bytes4(keccak256(\"onERC721Received\n also obtained as `IERC721Receiver(0).onERC721Receive\n= 0x150b7a02;\r\n\r\n  // Mapping from token ID to owner\r\n \n\n  // Mapping from token ID to approved address\r\n  mapping (uint256 => add\nprivate _tokenApprovals;\r\n\r\n  // Mapping from owner to nu","after":" // Equals to `bytes4(keccak256(\"onERC721Received\n also obtained as `IERC721Receiver(0).onERC721Receive\n= 0x150b7a02;\r\n\r\n  // Mapping from token ID to owner\r\n \n\n  // Mapping from token ID to approved address\r\n  mapping (uint256 => add\nt ERC721 is ERC165, IERC721 {\r\n\r\n  using SafeMath for \nprivate _tokenApprovals;\r\n\r\n  // Mapping from owner to nu\n","contract":"ERC721","time":0},{"type":"constant-restrict-modification  ","before":"   string public name = \"Selfiechai","after":"   string public constant name = \"Selfiechai","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"   string public symbol = \"","after":"   string public constant symbol = \"","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"sol\";\nimport \"./ERC721.sol\";\nimport","after":"sol\";\nimport \"./ERC721.sol\";\nimport","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"afeMath.sol\";\nimport \"./Pau","after":"afeMath.sol\";\nimport \"./Pau","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":")\n# @dev Compatible con la implemen","after":")\n# @dev Compatible con la implemen","contract":"Selfiechain","time":1},{"type":"constant-restrict-modification  ","before":"�n de OpenZeppelin de la es","after":"�n de OpenZeppelin de la es","contract":"Selfiechain","time":1}]}