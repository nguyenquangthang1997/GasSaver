{"time":110,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"de-morgan-condition ","before":"!_isStringEmpty(avatar.options.face) &&\n            !_isStringEmpty(avatar.options.eyes)","after":"!(_isStringEmpty(avatar.options.face) &&\n            _isStringEmpty(avatar.options.eyes))","loc":{"start":{"line":959,"column":12},"end":{"line":960,"column":47}},"contract":"Avatars","time":0},{"type":"external-function ","before":"function addAvatar(address to, Avatars.Avatar memory avatar) public payable {\n        require(msg.value == _price, \"value is too low\");\n        require(avatar.isValid(), \"avatar not valid\");\n\n        _avatarsOfUser[to].push(avatar);\n\n        uint256 tokenId = totalSupply();\n        _mint(to, tokenId);\n\n        emit AvatarAdded(to, tokenId, avatar);\n    }","after":"function addAvatar(address to, Avatars.Avatar calldata avatar) public payable {\n        require(msg.value == _price, \"value is too low\");\n        require(avatar.isValid(), \"avatar not valid\");\n\n        _avatarsOfUser[to].push(avatar);\n\n        uint256 tokenId = totalSupply();\n        _mint(to, tokenId);\n\n        emit AvatarAdded(to, tokenId, avatar);\n    }","contract":"ToonizeToken","time":0}]}