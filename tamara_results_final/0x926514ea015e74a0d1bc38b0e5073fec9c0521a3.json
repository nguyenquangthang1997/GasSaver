{"time":93,"results":[{"type":"external-function ","before":"function createCloneToken(\n        address payable _parentToken,\n        uint _snapshotBlock,\n        string memory _tokenName,\n        uint8 _decimalUnits,\n        string memory _tokenSymbol,\n        bool _transfersEnabled\n    ) public returns (MiniMeToken) {\n        MiniMeToken newToken = new MiniMeToken(\n            address(this),\n            _parentToken,\n            _snapshotBlock,\n            _tokenName,\n            _decimalUnits,\n            _tokenSymbol,\n            _transfersEnabled\n            );\n\n        newToken.changeController(msg.sender);\n        return newToken;\n    }","after":"function createCloneToken(\n        address payable _parentToken,\n        uint _snapshotBlock,\n        string calldata _tokenName,\n        uint8 _decimalUnits,\n        string calldata _tokenSymbol,\n        bool _transfersEnabled\n    ) public returns (MiniMeToken) {\n        MiniMeToken newToken = new MiniMeToken(\n            address(this),\n            _parentToken,\n            _snapshotBlock,\n            _tokenName,\n            _decimalUnits,\n            _tokenSymbol,\n            _transfersEnabled\n            );\n\n        newToken.changeController(msg.sender);\n        return newToken;\n    }","contract":"MiniMeTokenFactory","time":0},{"type":"external-function ","before":"function approveAndCall(address _spender, uint256 _amount, bytes memory _extraData\n    ) public returns (bool success) {\n        require(approve(_spender, _amount));\n\n        ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            address(this),\n            _extraData\n        );\n\n        return true;\n    }","after":"function approveAndCall(address _spender, uint256 _amount, bytes calldata _extraData\n    ) public returns (bool success) {\n        require(approve(_spender, _amount));\n\n        ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            address(this),\n            _extraData\n        );\n\n        return true;\n    }","contract":"dVisa","time":0},{"type":"external-function ","before":"function createCloneToken(\n        string memory _cloneTokenName,\n        uint8 _cloneDecimalUnits,\n        string memory _cloneTokenSymbol,\n        uint _snapshotBlock,\n        bool _transfersEnabled\n        ) public returns(address) {\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\n            address(this),\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            );\n\n        cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        emit NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }","after":"function createCloneToken(\n        string calldata _cloneTokenName,\n        uint8 _cloneDecimalUnits,\n        string calldata _cloneTokenSymbol,\n        uint _snapshotBlock,\n        bool _transfersEnabled\n        ) public returns(address) {\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\n            address(this),\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            );\n\n        cloneToken.changeController(msg.sender);\n\n        // An event to make the token easy to find on the blockchain\n        emit NewCloneToken(address(cloneToken), _snapshotBlock);\n        return address(cloneToken);\n    }","contract":"dVisa","time":0},{"type":"constant-restrict-modification  ","before":"string public version = '3.0.0';","after":"string public constant version = '3.0.0';","contract":"dVisa","time":0}]}