{"time":84,"results":[{"type":"state-data-arrangement ","before":"\nstring public symbol;\nstring public name;\nuint8 public decimals;\nuint256 public _totalSupply;\nuint256 public _burned;\nuint private n;\nuint public nFutureTime;\nuint public _MAXIMUM_TARGET;\nuint public rewardEra;\nuint public lastRewardAmount;\nuint public lastRewardEthBlockNumber;\nuint public tokensMinted;\naddress public lastRewardTo;\naddress public previousSender = address(0);\nbytes32 public challengeNumber;\nmapping(bytes32 => bytes32) solutionForChallenge;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;\nuint private miningTarget;\nuint private basePercent;\nbool internal locked = false;","after":"string public symbol;\nstring public name;\nuint256 public _totalSupply;\nuint256 public _burned;\nuint private n;\nuint public nFutureTime;\nuint public _MAXIMUM_TARGET;\nuint public rewardEra;\nuint public lastRewardAmount;\nuint public lastRewardEthBlockNumber;\nuint public tokensMinted;\nbytes32 public challengeNumber;\nmapping(bytes32 => bytes32) solutionForChallenge;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;\nuint private miningTarget;\nuint private basePercent;\naddress public lastRewardTo;\naddress public previousSender = address(0);\nuint8 public decimals;\nbool internal locked = false;\n","contract":"ZERO_X_BUTTv5","time":0},{"type":"external-function ","before":"function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n        for (uint256 i = 0; i < receivers.length; i++) {\n          transfer(receivers[i], amounts[i]);\n        }\n    }","after":"function multiTransfer(address[] calldata receivers, uint256[] calldata amounts) public {\n        for (uint256 i = 0; i < receivers.length; i++) {\n          transfer(receivers[i], amounts[i]);\n        }\n    }","contract":"ZERO_X_BUTTv5","time":0},{"type":"external-function ","before":"function approveAndCall(address spender, uint tokens, bytes memory data) public returns(bool success) {\n    allowed[msg.sender][spender] = tokens;\n    emit Approval(msg.sender, spender, tokens);\n    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n    return true;\n  }","after":"function approveAndCall(address spender, uint tokens, bytes calldata data) public returns(bool success) {\n    allowed[msg.sender][spender] = tokens;\n    emit Approval(msg.sender, spender, tokens);\n    ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n    return true;\n  }","contract":"ZERO_X_BUTTv5","time":0}]}