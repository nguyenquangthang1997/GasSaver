{"time":31,"results":[{"type":"external-function ","before":"function submitBnbAddress(string memory bnbAddr) public {\n        uint allowance = token(jdxuAddress).allowance(msg.sender, address(this));\n        require(allowance > 0 && \n            token(jdxuAddress).transferFrom(msg.sender, address(this), allowance));\n            \n        if (!isAdded[msg.sender]) {\n            lastIndex = lastIndex.add(1);\n            isAdded[msg.sender] = true;\n            addrOfIndex[lastIndex] = msg.sender;\n            indexOfAddr[msg.sender] = lastIndex;\n        }\n        \n        bals[msg.sender] = bals[msg.sender].add(allowance);\n        addrs[msg.sender] = bnbAddr;\n        emit SubmittedTokens(msg.sender, allowance, bnbAddr);\n    }","after":"function submitBnbAddress(string calldata bnbAddr) public {\n        uint allowance = token(jdxuAddress).allowance(msg.sender, address(this));\n        require(allowance > 0 && \n            token(jdxuAddress).transferFrom(msg.sender, address(this), allowance));\n            \n        if (!isAdded[msg.sender]) {\n            lastIndex = lastIndex.add(1);\n            isAdded[msg.sender] = true;\n            addrOfIndex[lastIndex] = msg.sender;\n            indexOfAddr[msg.sender] = lastIndex;\n        }\n        \n        bals[msg.sender] = bals[msg.sender].add(allowance);\n        addrs[msg.sender] = bnbAddr;\n        emit SubmittedTokens(msg.sender, allowance, bnbAddr);\n    }","contract":"SubmitTokens","time":0}]}