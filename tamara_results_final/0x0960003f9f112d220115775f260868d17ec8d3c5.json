{"time":23,"results":[{"type":"external-function ","before":"function receiveApproval(address _sender, uint256 _value, address _tokenContract, bytes memory _extraData) public {\n        require(_tokenContract == tokenContract, \"Can only deposit BSoV into this contract!\");\n        require(_value > 100, \"Must be greater than 100 Mundos to keep people from whining about the math!\");\n        require(ERC20Interface(tokenContract).transferFrom(_sender, address(this), _value), \"Could not transfer BSoV to Time Lock contract address.\");\n\n        uint _adjustedValue = _value.mul(99).div(100);\n        balance[_sender] += _adjustedValue;\n        emit TokensFrozen(msg.sender, _adjustedValue, now);\n    }","after":"function receiveApproval(address _sender, uint256 _value, address _tokenContract, bytes calldata _extraData) public {\n        require(_tokenContract == tokenContract, \"Can only deposit BSoV into this contract!\");\n        require(_value > 100, \"Must be greater than 100 Mundos to keep people from whining about the math!\");\n        require(ERC20Interface(tokenContract).transferFrom(_sender, address(this), _value), \"Could not transfer BSoV to Time Lock contract address.\");\n\n        uint _adjustedValue = _value.mul(99).div(100);\n        balance[_sender] += _adjustedValue;\n        emit TokensFrozen(msg.sender, _adjustedValue, now);\n    }","contract":"LockMyBSOV","time":0}]}