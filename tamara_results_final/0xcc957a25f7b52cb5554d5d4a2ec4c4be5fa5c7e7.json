{"time":71,"results":[{"type":"state-data-arrangement ","before":"\nstring public symbol;\nstring public  name;\nuint8 public decimals;\nuint public _totalSupply;\nuint public project_funding;\nuint public latestDifficultyPeriodStarted;\nuint public epochCount;\nuint public _BLOCKS_PER_READJUSTMENT = 1024;\nuint public  _MINIMUM_TARGET = 2**10*234;\nuint public  _MAXIMUM_TARGET = 2**160;\nuint public miningTarget;\nbytes32 public challengeNumber;\nuint public rewardEra;\nuint public maxSupplyForEra;\naddress public lastRewardTo;\nuint public lastRewardAmount;\nuint public lastRewardEthBlockNumber;\nbool locked = false;\nmapping(bytes32 => bytes32) solutionForChallenge;\nuint public tokensMinted;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;","after":"string public symbol;\nstring public  name;\nuint public _totalSupply;\nuint public project_funding;\nuint public latestDifficultyPeriodStarted;\nuint public epochCount;\nuint public _BLOCKS_PER_READJUSTMENT = 1024;\nuint public  _MINIMUM_TARGET = 2**10*234;\nuint public  _MAXIMUM_TARGET = 2**160;\nuint public miningTarget;\nbytes32 public challengeNumber;\nuint public rewardEra;\nuint public maxSupplyForEra;\nuint public lastRewardAmount;\nuint public lastRewardEthBlockNumber;\nmapping(bytes32 => bytes32) solutionForChallenge;\nuint public tokensMinted;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;\naddress public lastRewardTo;\nuint8 public decimals;\nbool locked = false;\n","contract":"OneBlockToken","time":0},{"type":"external-function ","before":"function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        emit Approval(msg.sender, spender, tokens);\n\n      ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n\n        return true;\n\n    }","after":"function approveAndCall(address spender, uint tokens, bytes calldata data) public returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        emit Approval(msg.sender, spender, tokens);\n\n      ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n\n        return true;\n\n    }","contract":"OneBlockToken","time":0},{"type":"constant-restrict-modification  ","before":"uint public _BLOCKS_PER_READJUSTMENT = 1024;","after":"uint public constant _BLOCKS_PER_READJUSTMENT = 1024;","contract":"OneBlockToken","time":0},{"type":"constant-restrict-modification  ","before":"uint public  _MINIMUM_TARGET = 2**10*234;","after":"uint public  constant _MINIMUM_TARGET = 2**10*234;","contract":"OneBlockToken","time":0},{"type":"constant-restrict-modification  ","before":"uint public  _MAXIMUM_TARGET = 2**160;","after":"uint public  constant _MAXIMUM_TARGET = 2**160;","contract":"OneBlockToken","time":0}]}