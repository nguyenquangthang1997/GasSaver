{"time":230,"results":[{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":1},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize(string memory name, string memory symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","after":"function initialize(string calldata name, string calldata symbol, uint8 decimals) public initializer {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0},{"type":"external-function ","before":"function initialize( string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","after":"function initialize( string calldata name, string calldata symbol, uint8 decimals, uint256 initialSupply, address initialHolder )\n   public initializer {\n    require(initialSupply > 0, \"\");\n    ERC20Detailed.initialize(name, symbol, decimals);\n    ERC20Mintable.initialize(msg.sender);\n    ERC20Pausable.initialize(msg.sender);\n    _mint(initialHolder, initialSupply);\n  }","contract":"DLPRO","time":0}]}