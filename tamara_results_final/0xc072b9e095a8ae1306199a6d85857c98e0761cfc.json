{"time":4,"results":[{"type":"external-function ","before":"function split(\n    address[] memory _recipients,\n    uint256[] memory _splits,\n    address _tokenAddr\n  ) public onlyPayer {\n    require(_recipients.length == _splits.length, \"splits and recipients should be of the same length\");\n    IERC20 token = IERC20(_tokenAddr);\n    for (uint i = 0; i < _recipients.length; i++) {\n      token.transferFrom(payerAddr, _recipients[i], _splits[i]);\n    }\n  }","after":"function split(\n    address[] calldata _recipients,\n    uint256[] calldata _splits,\n    address _tokenAddr\n  ) public onlyPayer {\n    require(_recipients.length == _splits.length, \"splits and recipients should be of the same length\");\n    IERC20 token = IERC20(_tokenAddr);\n    for (uint i = 0; i < _recipients.length; i++) {\n      token.transferFrom(payerAddr, _recipients[i], _splits[i]);\n    }\n  }","contract":"ERC20PaymentSplitter","time":0}]}