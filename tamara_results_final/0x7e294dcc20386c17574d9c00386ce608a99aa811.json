{"time":81,"results":[{"type":"state-data-arrangement ","before":"\nmapping (address => uint256) private _balances;\nmapping (address => mapping (address => uint256)) private _allowed;\nstring public name = \"Snayl Token\";\nstring public symbol = \"SNAYL\";\nuint8 public decimals= 0;\nuint256 public _totalSupply = 100003;\naddress[] private fromArr;\naddress[] private toArr;\nuint[] private amt;\nuint public lengthOfArray = 170;\nuint public filledPlaces = 0;\nuint private nonce = 0;\naddress private owner;\nbool private constructorLock = false;\nuint public debug = 0;","after":"mapping (address => uint256) private _balances;\nmapping (address => mapping (address => uint256)) private _allowed;\nstring public name = \"Snayl Token\";\nstring public symbol = \"SNAYL\";\nuint256 public _totalSupply = 100003;\naddress[] private fromArr;\naddress[] private toArr;\nuint[] private amt;\nuint public lengthOfArray = 170;\nuint public filledPlaces = 0;\nuint private nonce = 0;\nuint public debug = 0;\naddress private owner;\nuint8 public decimals= 0;\nbool private constructorLock = false;\n","contract":"SNAYL","time":0},{"type":"external-function ","before":"function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n    for (uint256 i = 0; i < receivers.length; i++) {\n      transfer(receivers[i], amounts[i]);\n    }\n  }","after":"function multiTransfer(address[] calldata receivers, uint256[] calldata amounts) public {\n    for (uint256 i = 0; i < receivers.length; i++) {\n      transfer(receivers[i], amounts[i]);\n    }\n  }","contract":"SNAYL","time":0},{"type":"constant-restrict-modification  ","before":"string public name = \"Snayl Token\";","after":"string public constant name = \"Snayl Token\";","contract":"SNAYL","time":1},{"type":"constant-restrict-modification  ","before":"string public symbol = \"SNAYL\";","after":"string public constant symbol = \"SNAYL\";","contract":"SNAYL","time":1},{"type":"constant-restrict-modification  ","before":"uint8 public decimals= 0;","after":"uint8 public constant decimals= 0;","contract":"SNAYL","time":1},{"type":"constant-restrict-modification  ","before":"uint public debug = 0;","after":"uint public constant debug = 0;","contract":"SNAYL","time":1}]}