{"time":106,"results":[{"type":"external-function ","before":"function updatePrice(\n        Monetary.Price memory minimum,\n        Monetary.Price memory maximum\n    )\n        public\n        returns (PriceInfo memory)\n    {\n        Require.that(\n            msg.sender == g_poker,\n            FILE,\n            \"Only poker can call updatePrice\",\n            msg.sender\n        );\n\n        Monetary.Price memory newPrice = getBoundedTargetPrice();\n\n        Require.that(\n            newPrice.value >= minimum.value,\n            FILE,\n            \"newPrice below minimum\",\n            newPrice.value,\n            minimum.value\n        );\n\n        Require.that(\n            newPrice.value <= maximum.value,\n            FILE,\n            \"newPrice above maximum\",\n            newPrice.value,\n            maximum.value\n        );\n\n        g_priceInfo = PriceInfo({\n            price: Math.to128(newPrice.value),\n            lastUpdate: Time.currentTime()\n        });\n\n        emit PriceSet(g_priceInfo);\n        return g_priceInfo;\n    }","after":"function updatePrice(\n        Monetary.Price calldata minimum,\n        Monetary.Price calldata maximum\n    )\n        public\n        returns (PriceInfo memory)\n    {\n        Require.that(\n            msg.sender == g_poker,\n            FILE,\n            \"Only poker can call updatePrice\",\n            msg.sender\n        );\n\n        Monetary.Price memory newPrice = getBoundedTargetPrice();\n\n        Require.that(\n            newPrice.value >= minimum.value,\n            FILE,\n            \"newPrice below minimum\",\n            newPrice.value,\n            minimum.value\n        );\n\n        Require.that(\n            newPrice.value <= maximum.value,\n            FILE,\n            \"newPrice above maximum\",\n            newPrice.value,\n            maximum.value\n        );\n\n        g_priceInfo = PriceInfo({\n            price: Math.to128(newPrice.value),\n            lastUpdate: Time.currentTime()\n        });\n\n        emit PriceSet(g_priceInfo);\n        return g_priceInfo;\n    }","contract":"DaiPriceOracle","time":0}]}