{"time":72,"results":[{"type":"external-function ","before":"function transfer(address _to, uint _value, bytes memory _data)\n        public\n        unfreezed(_to)\n        unfreezed(msg.sender)\n        noEmergencyFreeze()\n    {\n        _transfer223(msg.sender, _to, _value, _data);\n    }","after":"function transfer(address _to, uint _value, bytes calldata _data)\n        public\n        unfreezed(_to)\n        unfreezed(msg.sender)\n        noEmergencyFreeze()\n    {\n        _transfer223(msg.sender, _to, _value, _data);\n    }","contract":"CNEXToken","time":0},{"type":"external-function ","before":"function transferFrom(address _from, address _to, uint _value, bytes memory _data)\n        public\n        unfreezed(_to)\n        unfreezed(msg.sender)\n        noEmergencyFreeze()\n        returns (bool success)\n    {\n        require(_value <= allowed[_from][msg.sender], \"Insufficient allowance\");\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        _transfer223(_from, _to, _value, _data);\n        return true;\n    }","after":"function transferFrom(address _from, address _to, uint _value, bytes calldata _data)\n        public\n        unfreezed(_to)\n        unfreezed(msg.sender)\n        noEmergencyFreeze()\n        returns (bool success)\n    {\n        require(_value <= allowed[_from][msg.sender], \"Insufficient allowance\");\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        _transfer223(_from, _to, _value, _data);\n        return true;\n    }","contract":"CNEXToken","time":0}]}