{"time":120,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function mintPhoto(uint256 tokenId, string memory hash) public onlyOwner {\n    require(tokenId <= 100000, \"The maximum amount of tokens is 100.000\");\n\n    if (tokenId < 5000) {\n      _mint(owner(), tokenId);\n      updateCurrentPrice();\n    }\n    else {\n      _mint(address(this), tokenId);\n    }\n\n    tokenHashes[tokenId] = hash;\n  }","after":"function mintPhoto(uint256 tokenId, string calldata hash) public onlyOwner {\n    require(tokenId <= 100000, \"The maximum amount of tokens is 100.000\");\n\n    if (tokenId < 5000) {\n      _mint(owner(), tokenId);\n      updateCurrentPrice();\n    }\n    else {\n      _mint(address(this), tokenId);\n    }\n\n    tokenHashes[tokenId] = hash;\n  }","contract":"BitAirtToken","time":0}]}