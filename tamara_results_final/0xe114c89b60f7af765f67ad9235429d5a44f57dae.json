{"time":93,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function addItemToBlockchain(\n        uint256         _tokenId,\n        string memory   _oldOwner, \n        string memory   _newOwner\n    ) \n    public {\n        require(msg.sender == owner);\n        \n        if(_exists(_tokenId)){\n            emit Transfer(address(0), owner, _tokenId);\n            Item storage item = items[_tokenId];\n            item.oldOwner = _oldOwner;\n            item.newOwner =_newOwner;\n        }\n        if(!_exists(_tokenId)){\n            _mint(owner, _tokenId);\n            Item storage item = items[_tokenId];\n            item.oldOwner = _oldOwner;\n            item.newOwner =_newOwner;\n        }\n        \n        \n        \n    }","after":"function addItemToBlockchain(\n        uint256         _tokenId,\n        string calldata   _oldOwner, \n        string calldata   _newOwner\n    ) \n    public {\n        require(msg.sender == owner);\n        \n        if(_exists(_tokenId)){\n            emit Transfer(address(0), owner, _tokenId);\n            Item storage item = items[_tokenId];\n            item.oldOwner = _oldOwner;\n            item.newOwner =_newOwner;\n        }\n        if(!_exists(_tokenId)){\n            _mint(owner, _tokenId);\n            Item storage item = items[_tokenId];\n            item.oldOwner = _oldOwner;\n            item.newOwner =_newOwner;\n        }\n        \n        \n        \n    }","contract":"LablacoContract","time":0},{"type":"constant-restrict-modification  ","before":"address owner = msg.sender;","after":"address constant owner = msg.sender;","contract":"LablacoContract","time":0}]}