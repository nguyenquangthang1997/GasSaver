{"time":146,"results":[{"type":"external-function ","before":"function pushWhitelist(address[] memory accounts, address[] memory refereeAccounts) public onlyProxy returns (bool) {\n        require(accounts.length == refereeAccounts.length, \"VOKEN Whitelist: batch length is not match\");\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            if (accounts[i] != address(0) && !whitelisted(accounts[i]) && whitelisted(refereeAccounts[i])) {\n                _whitelist(accounts[i], refereeAccounts[i]);\n            }\n        }\n\n        return true;\n    }","after":"function pushWhitelist(address[] calldata accounts, address[] calldata refereeAccounts) public onlyProxy returns (bool) {\n        require(accounts.length == refereeAccounts.length, \"VOKEN Whitelist: batch length is not match\");\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            if (accounts[i] != address(0) && !whitelisted(accounts[i]) && whitelisted(refereeAccounts[i])) {\n                _whitelist(accounts[i], refereeAccounts[i]);\n            }\n        }\n\n        return true;\n    }","contract":"NewVoken","time":0},{"type":"constant-restrict-modification  ","before":"uint8 private _decimals = 6;","after":"uint8 private constant _decimals = 6;","contract":"NewVoken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _whitelistTrigger = 1001000000;","after":"uint256 private constant _whitelistTrigger = 1001000000;","contract":"NewVoken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _whitelistRefund = 1000000;","after":"uint256 private constant _whitelistRefund = 1000000;","contract":"NewVoken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _whitelistRewards = 1000000000;","after":"uint256 private constant _whitelistRewards = 1000000000;","contract":"NewVoken","time":0}]}