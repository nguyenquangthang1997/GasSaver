{"time":22,"results":[{"type":"external-function ","before":"function lockHashesProxy(address [] memory _addresses, bytes32 [] memory hashes, uint8[] memory vs, bytes32 [] memory rs, bytes32 [] memory ss) public payable {\n\n        if (sproofAccounts[msg.sender] != true)\n            require(msg.value >= _addresses.length*costToLockHash);\n\n        for (uint i=0; i < _addresses.length; i++) {\n            require(ecrecover(hashes[i], vs[i], rs[i], ss[i]) == _addresses[i]);\n            emit lockHashEvent(_addresses[i], hashes[i]);\n        }\n    }","after":"function lockHashesProxy(address [] calldata _addresses, bytes32 [] calldata hashes, uint8[] calldata vs, bytes32 [] calldata rs, bytes32 [] calldata ss) public payable {\n\n        if (sproofAccounts[msg.sender] != true)\n            require(msg.value >= _addresses.length*costToLockHash);\n\n        for (uint i=0; i < _addresses.length; i++) {\n            require(ecrecover(hashes[i], vs[i], rs[i], ss[i]) == _addresses[i]);\n            emit lockHashEvent(_addresses[i], hashes[i]);\n        }\n    }","contract":"sproof","time":0}]}