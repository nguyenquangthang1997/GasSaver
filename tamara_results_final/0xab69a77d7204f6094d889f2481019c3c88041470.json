{"time":779,"results":[{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":2},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"state-data-arrangement ","before":"\nstring public constant symbol = \"EML\";\nstring public constant name = \"e-Mal Token\";\nuint8 public constant decimals = 18;\nuint256 private constant minting_capped_amount = 1000000000 * 10 ** uint256(decimals);\nuint256 constant presale_amount = 120000000 * 10 ** uint256(decimals);\nuint256 constant crowdsale_amount = 300000000 * 10 ** uint256(decimals);\nuint256  constant vesting_amount = 40000000 * 10 ** uint256(decimals);\nuint256 constant bounty_amount = 40000000 * 10 ** uint256(decimals);\nuint256 private initialSupply = minting_capped_amount;\naddress public presaleAddress;\naddress public crowdsaleAddress;\naddress public vestingAddress;\naddress public bountyAddress;\nuint256 public startTimeForTransfers;\nbool public mintingFinished = false;\nmapping (address => bool) public frozenAccount;","after":"string public constant symbol = \"EML\";\nstring public constant name = \"e-Mal Token\";\nuint256 private constant minting_capped_amount = 1000000000 * 10 ** uint256(decimals);\nuint256 constant presale_amount = 120000000 * 10 ** uint256(decimals);\nuint256 constant crowdsale_amount = 300000000 * 10 ** uint256(decimals);\nuint256  constant vesting_amount = 40000000 * 10 ** uint256(decimals);\nuint256 constant bounty_amount = 40000000 * 10 ** uint256(decimals);\nuint256 private initialSupply = minting_capped_amount;\nuint256 public startTimeForTransfers;\nmapping (address => bool) public frozenAccount;\naddress public presaleAddress;\naddress public crowdsaleAddress;\naddress public vestingAddress;\naddress public bountyAddress;\nuint8 public constant decimals = 18;\nbool public mintingFinished = false;\n","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"state-data-arrangement ","before":"\naddress public beneficiary;\nuint256 public cliff;\nuint256 public start;\nuint256 public duration;\nbool public revocable;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;","after":"uint256 public cliff;\nuint256 public start;\nuint256 public duration;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;\naddress public beneficiary;\nbool public revocable;\n","contract":"StandardTokenVesting","time":0},{"type":"state-data-arrangement ","before":"\naddress public beneficiary;\nuint256 public cliff;\nuint256 public start;\nuint256 public duration;\nbool public revocable;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;","after":"uint256 public cliff;\nuint256 public start;\nuint256 public duration;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;\naddress public beneficiary;\nbool public revocable;\n","contract":"StandardTokenVesting","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":5},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"state-data-arrangement ","before":"\nstring public constant symbol = \"EML\";\nstring public constant name = \"e-Mal Token\";\nuint8 public constant decimals = 18;\nuint256 private constant minting_capped_amount = 1000000000 * 10 ** uint256(decimals);\nuint256 constant presale_amount = 120000000 * 10 ** uint256(decimals);\nuint256 constant crowdsale_amount = 300000000 * 10 ** uint256(decimals);\nuint256  constant vesting_amount = 40000000 * 10 ** uint256(decimals);\nuint256 constant bounty_amount = 40000000 * 10 ** uint256(decimals);\nuint256 private initialSupply = minting_capped_amount;\naddress public presaleAddress;\naddress public crowdsaleAddress;\naddress public vestingAddress;\naddress public bountyAddress;\nuint256 public startTimeForTransfers;\nbool public mintingFinished = false;\nmapping (address => bool) public frozenAccount;","after":"string public constant symbol = \"EML\";\nstring public constant name = \"e-Mal Token\";\nuint256 private constant minting_capped_amount = 1000000000 * 10 ** uint256(decimals);\nuint256 constant presale_amount = 120000000 * 10 ** uint256(decimals);\nuint256 constant crowdsale_amount = 300000000 * 10 ** uint256(decimals);\nuint256  constant vesting_amount = 40000000 * 10 ** uint256(decimals);\nuint256 constant bounty_amount = 40000000 * 10 ** uint256(decimals);\nuint256 private initialSupply = minting_capped_amount;\nuint256 public startTimeForTransfers;\nmapping (address => bool) public frozenAccount;\naddress public presaleAddress;\naddress public crowdsaleAddress;\naddress public vestingAddress;\naddress public bountyAddress;\nuint8 public constant decimals = 18;\nbool public mintingFinished = false;\n","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"state-data-arrangement ","before":"\naddress public beneficiary;\nuint256 public cliff;\nuint256 public start;\nuint256 public duration;\nbool public revocable;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;","after":"uint256 public cliff;\nuint256 public start;\nuint256 public duration;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;\naddress public beneficiary;\nbool public revocable;\n","contract":"StandardTokenVesting","time":0},{"type":"state-data-arrangement ","before":"\naddress public beneficiary;\nuint256 public cliff;\nuint256 public start;\nuint256 public duration;\nbool public revocable;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;","after":"uint256 public cliff;\nuint256 public start;\nuint256 public duration;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;\naddress public beneficiary;\nbool public revocable;\n","contract":"StandardTokenVesting","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 25;","after":"uint256 constant bonusPercent1 = 25;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent2 = 15;","after":"uint256 constant bonusPercent2 = 15;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent3 = 0;","after":"uint256 constant bonusPercent3 = 0;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalCrowdsale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 bonusPercent1 = 35;","after":"uint256 constant bonusPercent1 = 35;","contract":"EmalPresale","time":0},{"type":"constant-restrict-modification  ","before":"uint256 priceOfEMLTokenInUSDPenny = 60;","after":"uint256 constant priceOfEMLTokenInUSDPenny = 60;","contract":"EmalPresale","time":0},{"type":"state-data-arrangement ","before":"\nstring public constant symbol = \"EML\";\nstring public constant name = \"e-Mal Token\";\nuint8 public constant decimals = 18;\nuint256 private constant minting_capped_amount = 1000000000 * 10 ** uint256(decimals);\nuint256 constant presale_amount = 120000000 * 10 ** uint256(decimals);\nuint256 constant crowdsale_amount = 300000000 * 10 ** uint256(decimals);\nuint256  constant vesting_amount = 40000000 * 10 ** uint256(decimals);\nuint256 constant bounty_amount = 40000000 * 10 ** uint256(decimals);\nuint256 private initialSupply = minting_capped_amount;\naddress public presaleAddress;\naddress public crowdsaleAddress;\naddress public vestingAddress;\naddress public bountyAddress;\nuint256 public startTimeForTransfers;\nbool public mintingFinished = false;\nmapping (address => bool) public frozenAccount;","after":"string public constant symbol = \"EML\";\nstring public constant name = \"e-Mal Token\";\nuint256 private constant minting_capped_amount = 1000000000 * 10 ** uint256(decimals);\nuint256 constant presale_amount = 120000000 * 10 ** uint256(decimals);\nuint256 constant crowdsale_amount = 300000000 * 10 ** uint256(decimals);\nuint256  constant vesting_amount = 40000000 * 10 ** uint256(decimals);\nuint256 constant bounty_amount = 40000000 * 10 ** uint256(decimals);\nuint256 private initialSupply = minting_capped_amount;\nuint256 public startTimeForTransfers;\nmapping (address => bool) public frozenAccount;\naddress public presaleAddress;\naddress public crowdsaleAddress;\naddress public vestingAddress;\naddress public bountyAddress;\nuint8 public constant decimals = 18;\nbool public mintingFinished = false;\n","contract":"EmalToken","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"constant-restrict-modification  ","before":"uint256 private initialSupply = minting_capped_amount;","after":"uint256 private constant initialSupply = minting_capped_amount;","contract":"EmalToken","time":1},{"type":"state-data-arrangement ","before":"\naddress public beneficiary;\nuint256 public cliff;\nuint256 public start;\nuint256 public duration;\nbool public revocable;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;","after":"uint256 public cliff;\nuint256 public start;\nuint256 public duration;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;\naddress public beneficiary;\nbool public revocable;\n","contract":"StandardTokenVesting","time":0},{"type":"state-data-arrangement ","before":"\naddress public beneficiary;\nuint256 public cliff;\nuint256 public start;\nuint256 public duration;\nbool public revocable;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;","after":"uint256 public cliff;\nuint256 public start;\nuint256 public duration;\nmapping (address => uint256) public released;\nmapping (address => bool) public revoked;\naddress public beneficiary;\nbool public revocable;\n","contract":"StandardTokenVesting","time":0}]}