{"time":134,"results":[{"type":"external-function ","before":"function investIn(string memory inviteCode, string memory referrer)\n        public\n        isHuman()\n        payable\n    {\n        require(gameStart(), \"game not start\");\n        require(msg.value >= 1*ethWei && msg.value <= 15*ethWei, \"between 1 and 15\");\n        require(msg.value == msg.value.div(ethWei).mul(ethWei), \"invalid msg value\");\n\n        UserGlobal storage userGlobal = userMapping[msg.sender];\n        if (userGlobal.id == 0) {\n            require(!compareStr(inviteCode, \"\"), \"empty invite code\");\n            address referrerAddr = getUserAddressByCode(referrer);\n            require(uint(referrerAddr) != 0, \"referer not exist\");\n            require(referrerAddr != msg.sender, \"referrer can't be self\");\n            \n            require(!isUsed(inviteCode), \"invite code is used\");\n\n            registerUser(msg.sender, inviteCode, referrer);\n        }\n\n        User storage user = userRoundMapping[rid][msg.sender];\n        if (uint(user.userAddress) != 0) {\n            require(user.freezeAmount.add(msg.value) <= 15*ethWei, \"can not beyond 15 eth\");\n            user.allInvest = user.allInvest.add(msg.value);\n            user.freezeAmount = user.freezeAmount.add(msg.value);\n            user.staticLevel = getLevel(user.freezeAmount);\n            user.dynamicLevel = getLineLevel(user.freezeAmount.add(user.unlockAmount));\n        } else {\n            user.id = userGlobal.id;\n            user.userAddress = msg.sender;\n            user.freezeAmount = msg.value;\n            user.staticLevel = getLevel(msg.value);\n            user.allInvest = msg.value;\n            user.dynamicLevel = getLineLevel(msg.value);\n            user.inviteCode = userGlobal.inviteCode;\n            user.referrer = userGlobal.referrer;\n        }\n\n        Invest memory invest = Invest(msg.sender, msg.value, now, 0);\n        user.invests.push(invest);\n\n        investCount = investCount.add(1);\n        investMoney = investMoney.add(msg.value);\n        rInvestCount[rid] = rInvestCount[rid].add(1);\n        rInvestMoney[rid] = rInvestMoney[rid].add(msg.value);\n\n        sendFeetoAdmin(msg.value);\n        emit LogInvestIn(msg.sender, userGlobal.id, msg.value, now, userGlobal.inviteCode, userGlobal.referrer);\n    }","after":"function investIn(string calldata inviteCode, string calldata referrer)\n        public\n        isHuman()\n        payable\n    {\n        require(gameStart(), \"game not start\");\n        require(msg.value >= 1*ethWei && msg.value <= 15*ethWei, \"between 1 and 15\");\n        require(msg.value == msg.value.div(ethWei).mul(ethWei), \"invalid msg value\");\n\n        UserGlobal storage userGlobal = userMapping[msg.sender];\n        if (userGlobal.id == 0) {\n            require(!compareStr(inviteCode, \"\"), \"empty invite code\");\n            address referrerAddr = getUserAddressByCode(referrer);\n            require(uint(referrerAddr) != 0, \"referer not exist\");\n            require(referrerAddr != msg.sender, \"referrer can't be self\");\n            \n            require(!isUsed(inviteCode), \"invite code is used\");\n\n            registerUser(msg.sender, inviteCode, referrer);\n        }\n\n        User storage user = userRoundMapping[rid][msg.sender];\n        if (uint(user.userAddress) != 0) {\n            require(user.freezeAmount.add(msg.value) <= 15*ethWei, \"can not beyond 15 eth\");\n            user.allInvest = user.allInvest.add(msg.value);\n            user.freezeAmount = user.freezeAmount.add(msg.value);\n            user.staticLevel = getLevel(user.freezeAmount);\n            user.dynamicLevel = getLineLevel(user.freezeAmount.add(user.unlockAmount));\n        } else {\n            user.id = userGlobal.id;\n            user.userAddress = msg.sender;\n            user.freezeAmount = msg.value;\n            user.staticLevel = getLevel(msg.value);\n            user.allInvest = msg.value;\n            user.dynamicLevel = getLineLevel(msg.value);\n            user.inviteCode = userGlobal.inviteCode;\n            user.referrer = userGlobal.referrer;\n        }\n\n        Invest memory invest = Invest(msg.sender, msg.value, now, 0);\n        user.invests.push(invest);\n\n        investCount = investCount.add(1);\n        investMoney = investMoney.add(msg.value);\n        rInvestCount[rid] = rInvestCount[rid].add(1);\n        rInvestMoney[rid] = rInvestMoney[rid].add(msg.value);\n\n        sendFeetoAdmin(msg.value);\n        emit LogInvestIn(msg.sender, userGlobal.id, msg.value, now, userGlobal.inviteCode, userGlobal.referrer);\n    }","contract":"HyperFair","time":0},{"type":"constant-restrict-modification  ","before":"uint ethWei = 1 ether;","after":"uint constant ethWei = 1 ether;","contract":"HyperFair","time":1},{"type":"constant-restrict-modification  ","before":"address payable private devAddr = address(0x0E605b87ad99F9D5515badfF8e228cF2238AD29f);","after":"address payable private constant devAddr = address(0x0E605b87ad99F9D5515badfF8e228cF2238AD29f);","contract":"HyperFair","time":1},{"type":"constant-restrict-modification  ","before":"uint period = 3 days;","after":"uint constant period = 3 days;","contract":"HyperFair","time":1},{"type":"constant-restrict-modification  ","before":"uint ethWei = 1 ether;","after":"uint constant ethWei = 1 ether;","contract":"HyperFair","time":1}]}