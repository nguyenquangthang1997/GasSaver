{"time":54,"results":[{"type":"state-data-arrangement ","before":"\nstring public symbol;\nstring public  name;\nuint8 public decimals;\nuint _totalSupply;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;\nuint256 public sellPrice;\nuint256 public buyPrice;\nmapping (address => bool) public frozenAccount;\nuint minBalanceForAccounts;\naddress payable toAddr;","after":"string public symbol;\nstring public  name;\nuint _totalSupply;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;\nuint256 public sellPrice;\nuint256 public buyPrice;\nmapping (address => bool) public frozenAccount;\nuint minBalanceForAccounts;\naddress payable toAddr;\nuint8 public decimals;\n","contract":"GAMTToken","time":0},{"type":"external-function ","before":"-----------------------------------------\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, ad","after":"-----------------------------------------\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, ad","contract":"GAMTToken","time":0}]}