{"time":56,"results":[{"type":"struct-data-arrangement ","before":"\nuint id\naddress payable author\naddress payable beneficiary\nstring name\nstring description\naddress[] donors\nmapping(uint32 => Donation) donations\nuint32 donationsCounter\nbool open\nuint feesAmount","after":"uint id\nstring name\nstring description\naddress[] donors\nmapping(uint32 => Donation) donations\nuint feesAmount\naddress payable author\naddress payable beneficiary\nuint32 donationsCounter\nbool open\n","contract":"MoneyPotSystem","time":1},{"type":"external-function ","before":"function createMoneyPot(string memory _name, string memory _description, address payable _benefeciary, address[] memory _donors) onlyContractOpen public {\n\n        address[] memory donors = new address[](_donors.length + 1);\n\n        address payable author = msg.sender;\n        uint moneyPotId = moneypotCounter;\n\n        uint j = 0;\n        for (j; j < _donors.length; j++) {\n            require(author != _donors[j]);\n\n            donors[j] = _donors[j];\n            // add money pot id to donor money pot list\n            addressToMoneyPot[_donors[j]].push(moneyPotId);\n        }\n\n        // add author to donor\n        donors[j] = msg.sender;\n        // add money pot id to author money pot list\n        addressToMoneyPot[msg.sender].push(moneyPotId);\n\n        // Add money pot to benefeciary money pot list, if benefeciary is not author\n        if (msg.sender != _benefeciary) {\n            addressToMoneyPot[_benefeciary].push(moneyPotId);\n        }\n\n        moneypots[moneypotCounter] = MoneyPot(moneyPotId, author, _benefeciary, _name, _description, donors, 0, true, feesAmount);\n\n        // trigger the event\n        emit createMoneyPotEvent(moneypotCounter, author, _name, feesAmount, _donors);\n\n        moneypotCounter++;\n\n    }","after":"function createMoneyPot(string calldata _name, string calldata _description, address payable _benefeciary, address[] calldata _donors) onlyContractOpen public {\n\n        address[] memory donors = new address[](_donors.length + 1);\n\n        address payable author = msg.sender;\n        uint moneyPotId = moneypotCounter;\n\n        uint j = 0;\n        for (j; j < _donors.length; j++) {\n            require(author != _donors[j]);\n\n            donors[j] = _donors[j];\n            // add money pot id to donor money pot list\n            addressToMoneyPot[_donors[j]].push(moneyPotId);\n        }\n\n        // add author to donor\n        donors[j] = msg.sender;\n        // add money pot id to author money pot list\n        addressToMoneyPot[msg.sender].push(moneyPotId);\n\n        // Add money pot to benefeciary money pot list, if benefeciary is not author\n        if (msg.sender != _benefeciary) {\n            addressToMoneyPot[_benefeciary].push(moneyPotId);\n        }\n\n        moneypots[moneypotCounter] = MoneyPot(moneyPotId, author, _benefeciary, _name, _description, donors, 0, true, feesAmount);\n\n        // trigger the event\n        emit createMoneyPotEvent(moneypotCounter, author, _name, feesAmount, _donors);\n\n        moneypotCounter++;\n\n    }","contract":"MoneyPotSystem","time":0}]}