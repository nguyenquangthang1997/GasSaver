{"time":80,"results":[{"type":"state-data-arrangement ","before":"\naddress payable public owner;\nstring public encryptionPublicKey;\nbool public isRunningElection = false;\nmapping(address => bool) public approvedVoteBox;\nmapping(uint256 => bool) public voterList;\nmapping(uint256 => uint256) public usedPhoneNumber;\nmapping(uint256 => mapping(string => bool)) public councilVoterList;\nmapping(string => uint) public councilVoterNumber;\nmapping(uint256 => string) private voteListByVoter;\nmapping(string => string[]) private votes;\nmapping(address => string[]) private voteByVotebox;\nmapping(string => bool) private voteDictionary;\nmapping(string => address) public invalidVotes;\naddress public dbAddress;","after":"string public encryptionPublicKey;\nmapping(address => bool) public approvedVoteBox;\nmapping(uint256 => bool) public voterList;\nmapping(uint256 => uint256) public usedPhoneNumber;\nmapping(uint256 => mapping(string => bool)) public councilVoterList;\nmapping(string => uint) public councilVoterNumber;\nmapping(uint256 => string) private voteListByVoter;\nmapping(string => string[]) private votes;\nmapping(address => string[]) private voteByVotebox;\nmapping(string => bool) private voteDictionary;\nmapping(string => address) public invalidVotes;\naddress payable public owner;\naddress public dbAddress;\nbool public isRunningElection = false;\n","contract":"localElection","time":1},{"type":"external-function ","before":"l)\n\tfunction register(uint256 voterID, uint256 hashedEmail, string memory council) \n\t\tpublic returns(bool){\n\t\trequire(isRunningElection);\n\t\trequire(approvedVoteBox[msg.sender]);\n\t\t//Register happens during election as we do not have the voter list\n\t\t//require(now >= votingStartTime);\n\t\t//require(now < votingEndTime);\n\t\tif(voterList[voterID]) deregister(voterID);\n\t\t//if(usedPhoneNumber[hashedPhone] > 0)\n\t\t\t//deregister(usedPhoneNumber[hashedPhone]);\n\t\tif(usedPhoneNumber[hashedEmail] > 0)\n\t\t\tderegister(usedPhoneNumber[hashedEmail]);\n\t\tvoterList[voterID] = true;\n\t\t//usedPhoneNumber[hashedPhone] = voterID;\n\t\tusedPhoneNumber[hashedEmail] = voterID;\n\t\tcouncilVoterList[voterID][council] = true;\n\t\tcouncilVoterNumber[council]++;\n\t\treturn true","after":"l)\n\tfunction register(uint256 voterID, uint256 hashedEmail, string calldata council) \n\t\tpublic returns(bool){\n\t\trequire(isRunningElection);\n\t\trequire(approvedVoteBox[msg.sender]);\n\t\t//Register happens during election as we do not have the voter list\n\t\t//require(now >= votingStartTime);\n\t\t//require(now < votingEndTime);\n\t\tif(voterList[voterID]) deregister(voterID);\n\t\t//if(usedPhoneNumber[hashedPhone] > 0)\n\t\t\t//deregister(usedPhoneNumber[hashedPhone]);\n\t\tif(usedPhoneNumber[hashedEmail] > 0)\n\t\t\tderegister(usedPhoneNumber[hashedEmail]);\n\t\tvoterList[voterID] = true;\n\t\t//usedPhoneNumber[hashedPhone] = voterID;\n\t\tusedPhoneNumber[hashedEmail] = voterID;\n\t\tcouncilVoterList[voterID][council] = true;\n\t\tcouncilVoterNumber[council]++;\n\t\treturn true","contract":"localElection","time":0},{"type":"external-function ","before":", \n\tfunction submitVote(uint256 voterID, uint256 hashedEmail, \n\t    string memory council, string memory singleVote) public returns(bool){\n\t\trequire(isRunningElection);\n\t\trequire(approvedVoteBox[msg.sender]);\n\t\t//require(now >= votingStartTime);\n\t\t//require(now < votingEndTime);\n\t\t//require(isValidVoter(voterID,hashedPhone,council));\n\t\trequire(isValidVoter(voterID,hashedEmail,council));\n\t\trequire(!isVoted(voterID)); //Voted already\n\t\trequire(!voteDictionary[singleVote]);\n\t\tvoteListByVoter[voterID] = singleVote;\n\t\tvotes[council].push(singleVote);\n\t\tvoteByVotebox[msg.sender].push(singleVote);\n\t\tvoteDictionary[singleVote] = true;\n\t\treturn true","after":", \n\tfunction submitVote(uint256 voterID, uint256 hashedEmail, \n\t    string calldata council, string calldata singleVote) public returns(bool){\n\t\trequire(isRunningElection);\n\t\trequire(approvedVoteBox[msg.sender]);\n\t\t//require(now >= votingStartTime);\n\t\t//require(now < votingEndTime);\n\t\t//require(isValidVoter(voterID,hashedPhone,council));\n\t\trequire(isValidVoter(voterID,hashedEmail,council));\n\t\trequire(!isVoted(voterID)); //Voted already\n\t\trequire(!voteDictionary[singleVote]);\n\t\tvoteListByVoter[voterID] = singleVote;\n\t\tvotes[council].push(singleVote);\n\t\tvoteByVotebox[msg.sender].push(singleVote);\n\t\tvoteDictionary[singleVote] = true;\n\t\treturn true","contract":"localElection","time":0},{"type":"external-function ","before":"\n\t\n\tfunction registerAndVote(uint256 voterID, uint256 hashedEmail, \n\t    string memory council, string memory singleVote) public returns(bool){\n\t    require(isRunningElection);\n\t\trequire(approvedVoteBox[msg.sender]);\n\t    require(!voterList[voterID]);\n\t    require(usedPhoneNumber[hashedEmail] ==0);\n\t    require(!voteDictionary[singleVote]);\n\t    voterList[voterID] = true;\n\t\t//usedPhoneNumber[hashedPhone] = voterID;\n\t\tusedPhoneNumber[hashedEmail] = voterID;\n\t\tcouncilVoterList[voterID][council] = true;\n\t\tcouncilVoterNumber[council]++;\n\t\tvoteListByVoter[voterID] = singleVote;\n\t\tvotes[council].push(singleVote);\n\t\tvoteByVotebox[msg.sender].push(singleVote);\n\t\tvoteDictionary[singleVote] = true;\n\t    return true","after":"\n\t\n\tfunction registerAndVote(uint256 voterID, uint256 hashedEmail, \n\t    string calldata council, string calldata singleVote) public returns(bool){\n\t    require(isRunningElection);\n\t\trequire(approvedVoteBox[msg.sender]);\n\t    require(!voterList[voterID]);\n\t    require(usedPhoneNumber[hashedEmail] ==0);\n\t    require(!voteDictionary[singleVote]);\n\t    voterList[voterID] = true;\n\t\t//usedPhoneNumber[hashedPhone] = voterID;\n\t\tusedPhoneNumber[hashedEmail] = voterID;\n\t\tcouncilVoterList[voterID][council] = true;\n\t\tcouncilVoterNumber[council]++;\n\t\tvoteListByVoter[voterID] = singleVote;\n\t\tvotes[council].push(singleVote);\n\t\tvoteByVotebox[msg.sender].push(singleVote);\n\t\tvoteDictionary[singleVote] = true;\n\t    return true","contract":"localElection","time":0}]}