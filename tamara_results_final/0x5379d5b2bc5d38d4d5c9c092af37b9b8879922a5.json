{"time":113,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function awardCCT(address to, string memory nameWithDate) public onlyMinter {\n\t\t_tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(to, newItemId);\n        _setTokenURI(newItemId, nameWithDate);\n\t}","after":"function awardCCT(address to, string calldata nameWithDate) public onlyMinter {\n\t\t_tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(to, newItemId);\n        _setTokenURI(newItemId, nameWithDate);\n\t}","contract":"CCT","time":0},{"type":"external-function ","before":"function mintWithTokenURI(address to, uint256 tokenId, string memory tokenURI) public onlyMinter returns (bool) {\n        _mint(to, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n        return true;\n    }","after":"function mintWithTokenURI(address to, uint256 tokenId, string calldata tokenURI) public onlyMinter returns (bool) {\n        _mint(to, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n        return true;\n    }","contract":"CCT","time":0}]}