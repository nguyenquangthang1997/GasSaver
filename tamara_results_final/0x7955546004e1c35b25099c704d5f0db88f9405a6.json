{"time":39,"results":[{"type":"external-function ","before":"function receiveApproval(address _from, uint256 _tokens, address _token, bytes memory _data) public {\n        (uint256 toPosition, uint256 voteStatus) = parse64BytesToTwoUint256(_data);\n        require(isVoted[_from][toPosition] == 0, \"User has already voted\");\n        require(_tokens == positions[toPosition].votePriceInTokens, \"Not enough tokens for this position\");\n        require(positions[toPosition].finishedAt > now, \"Position time is expired\");\n\n        ISKRA(_token).transferFrom(_from, address(this), _tokens);\n        _vote(toPosition, voteStatus, _from);\n    }","after":"function receiveApproval(address _from, uint256 _tokens, address _token, bytes calldata _data) public {\n        (uint256 toPosition, uint256 voteStatus) = parse64BytesToTwoUint256(_data);\n        require(isVoted[_from][toPosition] == 0, \"User has already voted\");\n        require(_tokens == positions[toPosition].votePriceInTokens, \"Not enough tokens for this position\");\n        require(positions[toPosition].finishedAt > now, \"Position time is expired\");\n\n        ISKRA(_token).transferFrom(_from, address(this), _tokens);\n        _vote(toPosition, voteStatus, _from);\n    }","contract":"Logic","time":0},{"type":"external-function ","before":"function addNewPostition(\n        string memory _name,\n        string memory _description,\n        string memory _imageUrl,\n        string memory _link,\n        uint256 _capInUSD,\n        uint256 _votePriceInTokens,\n        uint256 _finishedAt\n    ) public onlyOwner {\n        Position memory newPosition = Position({\n            name: _name,\n            description: _description,\n            imageUrl: _imageUrl,\n            link: _link,\n            capInUSD: _capInUSD,\n            votePriceInTokens: _votePriceInTokens,\n            finishedAt: _finishedAt,\n            createdAt: block.timestamp,\n            voteYes: 0,\n            voteNo: 0,\n            archived: false\n        });\n        positions.push(newPosition);\n    }","after":"function addNewPostition(\n        string calldata _name,\n        string calldata _description,\n        string calldata _imageUrl,\n        string calldata _link,\n        uint256 _capInUSD,\n        uint256 _votePriceInTokens,\n        uint256 _finishedAt\n    ) public onlyOwner {\n        Position memory newPosition = Position({\n            name: _name,\n            description: _description,\n            imageUrl: _imageUrl,\n            link: _link,\n            capInUSD: _capInUSD,\n            votePriceInTokens: _votePriceInTokens,\n            finishedAt: _finishedAt,\n            createdAt: block.timestamp,\n            voteYes: 0,\n            voteNo: 0,\n            archived: false\n        });\n        positions.push(newPosition);\n    }","contract":"Logic","time":0},{"type":"external-function ","before":"function editPosition(\n        uint256 _positionIndex,\n        string memory _name,\n        string memory _description,\n        string memory _imageUrl,\n        string memory _link,\n        uint256 _capInUSD,\n        uint256 _votePriceInTokens,\n        uint256 _finishedAt\n    ) public onlyOwner {\n        positions[_positionIndex].name = _name;\n        positions[_positionIndex].description = _description;\n        positions[_positionIndex].imageUrl = _imageUrl;\n        positions[_positionIndex].link = _link;\n        positions[_positionIndex].capInUSD = _capInUSD;\n        positions[_positionIndex].votePriceInTokens = _votePriceInTokens;\n        positions[_positionIndex].finishedAt = _finishedAt;\n    }","after":"function editPosition(\n        uint256 _positionIndex,\n        string calldata _name,\n        string calldata _description,\n        string calldata _imageUrl,\n        string calldata _link,\n        uint256 _capInUSD,\n        uint256 _votePriceInTokens,\n        uint256 _finishedAt\n    ) public onlyOwner {\n        positions[_positionIndex].name = _name;\n        positions[_positionIndex].description = _description;\n        positions[_positionIndex].imageUrl = _imageUrl;\n        positions[_positionIndex].link = _link;\n        positions[_positionIndex].capInUSD = _capInUSD;\n        positions[_positionIndex].votePriceInTokens = _votePriceInTokens;\n        positions[_positionIndex].finishedAt = _finishedAt;\n    }","contract":"Logic","time":0}]}