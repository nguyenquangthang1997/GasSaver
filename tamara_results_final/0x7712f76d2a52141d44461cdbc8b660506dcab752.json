{"time":94,"results":[{"type":"external-function ","before":"function pushShareholders(address[] memory accounts, uint256[] memory values) public onlyProxy {\n        require(accounts.length == values.length, \"Shareholders: batch length is not match\");\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            address __account = accounts[i];\n            uint256 __value = values[i];\n\n            if (!_isShareholder[__account]) {\n                _shareholders.push(__account);\n                _isShareholder[__account] = true;\n            }\n\n            if (!_isPageShareholder[_page][__account]) {\n                _pageShareholders[_page].push(__account);\n                _isPageShareholder[_page][__account] = true;\n            }\n\n            _vokens = _vokens.add(__value);\n            _pageVokens[_page] = _pageVokens[_page].add(__value);\n            _pageVokenSum[_page] = _vokens;\n            _pageVokenHoldings[_page][__account] = _pageVokenHoldings[_page][__account].add(__value);\n\n            _allocations[__account] = _allocations[__account].add(__value);\n            assert(_VOKEN.mintWithAllocation(__account, __value, address(this)));\n        }\n\n        assert(true);\n    }","after":"function pushShareholders(address[] calldata accounts, uint256[] calldata values) public onlyProxy {\n        require(accounts.length == values.length, \"Shareholders: batch length is not match\");\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            address __account = accounts[i];\n            uint256 __value = values[i];\n\n            if (!_isShareholder[__account]) {\n                _shareholders.push(__account);\n                _isShareholder[__account] = true;\n            }\n\n            if (!_isPageShareholder[_page][__account]) {\n                _pageShareholders[_page].push(__account);\n                _isPageShareholder[_page][__account] = true;\n            }\n\n            _vokens = _vokens.add(__value);\n            _pageVokens[_page] = _pageVokens[_page].add(__value);\n            _pageVokenSum[_page] = _vokens;\n            _pageVokenHoldings[_page][__account] = _pageVokenHoldings[_page][__account].add(__value);\n\n            _allocations[__account] = _allocations[__account].add(__value);\n            assert(_VOKEN.mintWithAllocation(__account, __value, address(this)));\n        }\n\n        assert(true);\n    }","contract":"VokenShareholders","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _ALLOCATION_TIMESTAMP = 1598918399;","after":"uint256 private constant _ALLOCATION_TIMESTAMP = 1598918399;","contract":"VokenShareholders","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _ALLOCATION_INTERVAL = 1 days;","after":"uint256 private constant _ALLOCATION_INTERVAL = 1 days;","contract":"VokenShareholders","time":0},{"type":"constant-restrict-modification  ","before":"uint256 private _ALLOCATION_STEPS = 60;","after":"uint256 private constant _ALLOCATION_STEPS = 60;","contract":"VokenShareholders","time":0}]}