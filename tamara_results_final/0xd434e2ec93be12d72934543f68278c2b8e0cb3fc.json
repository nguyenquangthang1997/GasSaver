{"time":90,"results":[{"type":"state-data-arrangement ","before":"\nmapping (address => uint256) private _balances;\nmapping (address => mapping (address => uint256)) private _allowed;\nstring constant tokenName = \"Dan Pan Coin\";\nstring constant tokenSymbol = \"DPC\";\nuint8  constant tokenDecimals = 2;\nuint256 _totalSupply = 10000000000;\nuint256 public basePercent = 100;\nuint256 public dpPercent = 5;\naddress public DanPanAddress = msg.sender;\nmapping(address => bool) public whitelistFrom;\nmapping(address => bool) public whitelistTo;","after":"mapping (address => uint256) private _balances;\nmapping (address => mapping (address => uint256)) private _allowed;\nstring constant tokenName = \"Dan Pan Coin\";\nstring constant tokenSymbol = \"DPC\";\nuint256 _totalSupply = 10000000000;\nuint256 public basePercent = 100;\nuint256 public dpPercent = 5;\nmapping(address => bool) public whitelistFrom;\nmapping(address => bool) public whitelistTo;\naddress public DanPanAddress = msg.sender;\nuint8  constant tokenDecimals = 2;\n","contract":"DanPanCoin","time":0},{"type":"external-function ","before":"function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\n    for (uint256 i = 0; i < receivers.length; i++) {\n      transfer(receivers[i], amounts[i]);\n    }\n  }","after":"function multiTransfer(address[] calldata receivers, uint256[] calldata amounts) public {\n    for (uint256 i = 0; i < receivers.length; i++) {\n      transfer(receivers[i], amounts[i]);\n    }\n  }","contract":"DanPanCoin","time":0},{"type":"constant-restrict-modification  ","before":"uint256 public basePercent = 100;","after":"uint256 public constant basePercent = 100;","contract":"DanPanCoin","time":0}]}