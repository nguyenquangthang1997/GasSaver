{"time":75,"results":[{"type":"external-function ","before":"function approveAndInvokePurchase(address tokenAddress, string memory collectionName, uint256 value) public ecpvcLockdown applicationLockdown returns(bool){\n    return super.approveAndInvokePurchase(tokenAddress, collectionName, value);\n  }","after":"function approveAndInvokePurchase(address tokenAddress, string calldata collectionName, uint256 value) public ecpvcLockdown applicationLockdown returns(bool){\n    return super.approveAndInvokePurchase(tokenAddress, collectionName, value);\n  }","contract":"Morality","time":0},{"type":"external-function ","before":"function approveAndInvokePurchase(address tokenAddress, string memory collectionName, uint256 value) public returns(bool){\n    require(approve(tokenAddress, value) == true);\n    require(IPurchasableToken(tokenAddress).purchase(this, collectionName, msg.sender, value) == true);\n    emit ApprovedAndInvokedExternalPurchase(ExternalPurchaseType.Item, tokenAddress, collectionName, msg.sender, value, now);\n    return true;\n  }","after":"function approveAndInvokePurchase(address tokenAddress, string calldata collectionName, uint256 value) public returns(bool){\n    require(approve(tokenAddress, value) == true);\n    require(IPurchasableToken(tokenAddress).purchase(this, collectionName, msg.sender, value) == true);\n    emit ApprovedAndInvokedExternalPurchase(ExternalPurchaseType.Item, tokenAddress, collectionName, msg.sender, value, now);\n    return true;\n  }","contract":"Morality","time":0}]}