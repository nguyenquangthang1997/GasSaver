{"time":13,"results":[{"type":"external-function ","before":"function addOwners(address[] memory newOwners) public ensureCallerIsOwner {\n        for (uint i; i < newOwners.length; i++) {\n            _addOwner(newOwners[i]);\n        }\n    }","after":"function addOwners(address[] calldata newOwners) public ensureCallerIsOwner {\n        for (uint i; i < newOwners.length; i++) {\n            _addOwner(newOwners[i]);\n        }\n    }","contract":"UnisocksController","time":0},{"type":"external-function ","before":"function removeOwners(address[] memory currentOwners) public ensureCallerIsOwner {\n        for (uint i; i < currentOwners.length; i++) {\n            _removeOwner(currentOwners[i]);\n        }\n    }","after":"function removeOwners(address[] calldata currentOwners) public ensureCallerIsOwner {\n        for (uint i; i < currentOwners.length; i++) {\n            _removeOwner(currentOwners[i]);\n        }\n    }","contract":"UnisocksController","time":0},{"type":"external-function ","before":"function mint(address[] memory tos) public ensureCallerIsOwner {\n        for (uint i; i < tos.length; i++) {\n            _mint(tos[i]);\n        }\n    }","after":"function mint(address[] calldata tos) public ensureCallerIsOwner {\n        for (uint i; i < tos.length; i++) {\n            _mint(tos[i]);\n        }\n    }","contract":"UnisocksController","time":0}]}