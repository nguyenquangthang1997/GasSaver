{"time":144,"results":[{"type":"struct-data-arrangement ","before":"\nbytes32 tokenName\nbytes8 tokenSymbol\nuint decimalCount\nuint minFreezingValue\nuint rateFactor\nuint perDayFreezeRate\nbool freezingAllowed","after":"bytes32 tokenName\nuint decimalCount\nuint minFreezingValue\nuint rateFactor\nuint perDayFreezeRate\nbytes8 tokenSymbol\nbool freezingAllowed\n","contract":"tokenERC20","time":0},{"type":"external-function ","before":"function airDrop(address[] memory recipients,uint[] memory tokenAmount) public onlyOwner returns (bool) {\n            uint reciversLength  = recipients.length;\n            require(reciversLength <= 150);\n            for(uint i = 0; i < reciversLength; i++)\n            {\n                  //This will loop through all the recipients and send them the specified tokens\n                  _transfer(owner, recipients[i], tokenAmount[i]);\n            }\n            return true;\n        }","after":"function airDrop(address[] calldata recipients,uint[] calldata tokenAmount) public onlyOwner returns (bool) {\n            uint reciversLength  = recipients.length;\n            require(reciversLength <= 150);\n            for(uint i = 0; i < reciversLength; i++)\n            {\n                  //This will loop through all the recipients and send them the specified tokens\n                  _transfer(owner, recipients[i], tokenAmount[i]);\n            }\n            return true;\n        }","contract":"Netlinkshares","time":0}]}