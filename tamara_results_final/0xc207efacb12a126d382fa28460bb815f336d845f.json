{"time":123,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => Counters.Counter) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function dictate(address _tokenAddress, uint256 _tokenId, string memory _text) public {\n\t\t// check that the message sender owns the token at _tokenAddress\n\t\trequire(ERC721(_tokenAddress).ownerOf(_tokenId) == msg.sender, \"Sender not authorized to dictate.\");\n\t\t// get the document key for this address and token id\n\t\tbytes memory documentKey = getDocumentKey(_tokenAddress, _tokenId);\n\t\t// push a new document with the dictator address, message, and timestamp\n\t\tdocuments[documentKey].push(Document(msg.sender, _text, block.timestamp));\n\t\t// increase the documents counter for this key\n\t\tdocumentsCount[documentKey]++;\n\t\t// emit an event for this newly created record\n\t\temit Record(msg.sender, _tokenAddress, _tokenId, _text);\n\t}","after":"function dictate(address _tokenAddress, uint256 _tokenId, string calldata _text) public {\n\t\t// check that the message sender owns the token at _tokenAddress\n\t\trequire(ERC721(_tokenAddress).ownerOf(_tokenId) == msg.sender, \"Sender not authorized to dictate.\");\n\t\t// get the document key for this address and token id\n\t\tbytes memory documentKey = getDocumentKey(_tokenAddress, _tokenId);\n\t\t// push a new document with the dictator address, message, and timestamp\n\t\tdocuments[documentKey].push(Document(msg.sender, _text, block.timestamp));\n\t\t// increase the documents counter for this key\n\t\tdocumentsCount[documentKey]++;\n\t\t// emit an event for this newly created record\n\t\temit Record(msg.sender, _tokenAddress, _tokenId, _text);\n\t}","contract":"Scribe","time":0}]}