{"time":17,"results":[{"type":"external-function ","before":"function importTokens(uint toConvert, address[] memory tokenAddrArr) public {\n        uint[] memory tokenBalArr = new uint[](tokenAddrArr.length);\n\n         // transfer tokens to InstaDApp smart wallet from user wallet\n        for (uint i = 0; i < tokenAddrArr.length; i++) {\n            address erc20 = tokenAddrArr[i];\n            ERC20Interface tknContract = ERC20Interface(erc20);\n            uint tokenBal = tknContract.balanceOf(msg.sender);\n            tokenBal = toConvert < 10**18 ? wmul(tokenBal, toConvert) : tokenBal;\n            if (tokenBal > 0) {\n                require(tknContract.transferFrom(msg.sender, address(this), tokenBal), \"Allowance?\");\n            }\n            tokenBalArr[i] = tokenBal;\n        }\n\n        emit LogTokensImport(\n            msg.sender,\n            toConvert,\n            tokenAddrArr,\n            tokenBalArr\n        );\n    }","after":"function importTokens(uint toConvert, address[] calldata tokenAddrArr) public {\n        uint[] memory tokenBalArr = new uint[](tokenAddrArr.length);\n\n         // transfer tokens to InstaDApp smart wallet from user wallet\n        for (uint i = 0; i < tokenAddrArr.length; i++) {\n            address erc20 = tokenAddrArr[i];\n            ERC20Interface tknContract = ERC20Interface(erc20);\n            uint tokenBal = tknContract.balanceOf(msg.sender);\n            tokenBal = toConvert < 10**18 ? wmul(tokenBal, toConvert) : tokenBal;\n            if (tokenBal > 0) {\n                require(tknContract.transferFrom(msg.sender, address(this), tokenBal), \"Allowance?\");\n            }\n            tokenBalArr[i] = tokenBal;\n        }\n\n        emit LogTokensImport(\n            msg.sender,\n            toConvert,\n            tokenAddrArr,\n            tokenBalArr\n        );\n    }","contract":"InstaTokenImport","time":0}]}