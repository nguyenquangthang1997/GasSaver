{"time":57,"results":[{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"external-function ","before":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] memory a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","after":"function ClaimAirdrop(\n    bytes32 a_hMerkleLeaf,\n    bytes32[] calldata a_hMerkleTreeBranches\n  ) public returns (bool)\n  {\n    require(m_claimedMap[a_hMerkleLeaf] == false, \"Duplicate claim\");\n\n    require(MerkleProof.verify(a_hMerkleTreeBranches, m_hMerkleTreeRoot, a_hMerkleLeaf), \"Merkle Proof Failed\");\n\n    CereneumContract.transfer(msg.sender, m_nAirdropAmount);\n\n    m_claimedMap[a_hMerkleLeaf] = true;\n  }","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","after":"address constant m_contractOwner = 0xe0d53E9fd7A9E0251641cB9CC7F70aff579bfbbE;","contract":"TownOfSalem","time":0},{"type":"constant-restrict-modification  ","before":"address m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","after":"address constant m_returnAddress = 0x8eAf4Fec503da352EB66Ef1E2f75C63e5bC635e1;","contract":"TownOfSalem","time":0}]}