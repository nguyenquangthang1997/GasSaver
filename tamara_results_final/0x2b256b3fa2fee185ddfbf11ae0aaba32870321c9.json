{"time":112,"results":[{"type":"state-data-arrangement ","before":"\nmapping(address => InvestorAccount) public accounts;\naddress public profitDepositor;\naddress public profitDistributor;\nuint public totalProfits;\nbool public totalSupplyIsFixed;\nuint internal totalSupply_;","after":"mapping(address => InvestorAccount) public accounts;\nuint public totalProfits;\nuint internal totalSupply_;\naddress public profitDepositor;\naddress public profitDistributor;\nbool public totalSupplyIsFixed;\n","contract":"ProfitSharing","time":0},{"type":"external-function ","before":"function createNewToken(\n        string memory name,\n        string memory symbol,\n        Whitelist whitelist,\n        address profitDepositor,\n        address profitDistributor,\n        address tokenRecoverer\n    )\n        public\n        returns (StokrToken)\n    {\n        StokrToken token = new StokrToken(\n            name,\n            symbol,\n            whitelist,\n            profitDepositor,\n            profitDistributor,\n            tokenRecoverer);\n\n        token.transferOwnershipUnsafe(msg.sender);\n\n        return token;\n    }","after":"function createNewToken(\n        string calldata name,\n        string calldata symbol,\n        Whitelist whitelist,\n        address profitDepositor,\n        address profitDistributor,\n        address tokenRecoverer\n    )\n        public\n        returns (StokrToken)\n    {\n        StokrToken token = new StokrToken(\n            name,\n            symbol,\n            whitelist,\n            profitDepositor,\n            profitDistributor,\n            tokenRecoverer);\n\n        token.transferOwnershipUnsafe(msg.sender);\n\n        return token;\n    }","contract":"StokrTokenFactory","time":0}]}