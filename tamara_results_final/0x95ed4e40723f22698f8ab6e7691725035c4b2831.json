{"time":96,"results":[{"type":"state-data-arrangement ","before":"\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nmapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => uint256) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;","after":"mapping (uint256 => address) private _tokenOwner;\nmapping (uint256 => address) private _tokenApprovals;\nmapping (address => uint256) private _ownedTokensCount;\nmapping (address => mapping (address => bool)) private _operatorApprovals;\nbytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\nbytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n","contract":"ERC721","time":0},{"type":"external-function ","before":"function mintUniqueTokenTo(address _to, uint256 _tokenId, string memory _tokenURI) public onlyOwner{\n        _mint(_to, _tokenId); // token 생성\n        _setTokenURI(_tokenId, _tokenURI); // token metadata add\n ","after":"function mintUniqueTokenTo(address _to, uint256 _tokenId, string calldata _tokenURI) public onlyOwner{\n        _mint(_to, _tokenId); // token 생성\n        _setTokenURI(_tokenId, _tokenURI); // token metadata add\n ","contract":"ERC","time":0},{"type":"external-function ","before":" }\n\n    function transferAll(address _to, uint256[] memory _tokenId) public { \n        for (uint i = 0; i < _tokenId.length; i++) {\n            safeTransferFrom(msg.sender, _to, _tokenId[i]);\n       ","after":" }\n\n    function transferAll(address _to, uint256[] calldata _tokenId) public { \n        for (uint i = 0; i < _tokenId.length; i++) {\n            safeTransferFrom(msg.sender, _to, _tokenId[i]);\n       ","contract":"ERC","time":0},{"type":"external-function ","before":"function mintWithTokenURI(address to, uint256 tokenId, string memory tokenURI) public onlyMinter returns (bool) {\n        _mint(to, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n        return true;\n    }","after":"function mintWithTokenURI(address to, uint256 tokenId, string calldata tokenURI) public onlyMinter returns (bool) {\n        _mint(to, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n        return true;\n    }","contract":"ERC","time":0}]}