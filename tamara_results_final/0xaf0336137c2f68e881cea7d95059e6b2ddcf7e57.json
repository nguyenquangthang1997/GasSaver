{"time":46,"results":[{"type":"external-function ","before":"function multiSendToken(address[] memory _beneficiary, uint256 [] memory _value) public  {\n        require(_beneficiary.length != 0, \"Is not possible to send null value\");\n        require(_beneficiary.length == _value.length, \"_beneficiary and _value need to have the same length\");\n        uint256 _length = _value.length;\n        uint256 sumValue = 0;\n        for(uint256 i = 0; i < _length; i++){\n            sumValue = sumValue + _value[i];\n        }\n        require(balanceOf(msg.sender) >= sumValue, \"Insufficient balance\");\n        \n        for(uint256 i = 0; i < _length; i++){\n            transfer(_beneficiary[i],_value[i]);\n        }\n    }","after":"function multiSendToken(address[] calldata _beneficiary, uint256 [] calldata _value) public  {\n        require(_beneficiary.length != 0, \"Is not possible to send null value\");\n        require(_beneficiary.length == _value.length, \"_beneficiary and _value need to have the same length\");\n        uint256 _length = _value.length;\n        uint256 sumValue = 0;\n        for(uint256 i = 0; i < _length; i++){\n            sumValue = sumValue + _value[i];\n        }\n        require(balanceOf(msg.sender) >= sumValue, \"Insufficient balance\");\n        \n        for(uint256 i = 0; i < _length; i++){\n            transfer(_beneficiary[i],_value[i]);\n        }\n    }","contract":"Token","time":0}]}