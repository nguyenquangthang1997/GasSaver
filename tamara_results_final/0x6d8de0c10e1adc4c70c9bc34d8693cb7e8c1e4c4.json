{"time":67,"results":[{"type":"state-data-arrangement ","before":"\nstring public symbol;\nstring public  name;\nuint8 public decimals;\nuint _totalSupply;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;\nmapping(address => bool) freezed;\nbool move_enabled;","after":"string public symbol;\nstring public  name;\nuint _totalSupply;\nmapping(address => uint) balances;\nmapping(address => mapping(address => uint)) allowed;\nmapping(address => bool) freezed;\nuint8 public decimals;\nbool move_enabled;\n","contract":"EtherTokenProjectAnteile","time":0},{"type":"external-function ","before":"];\n    }\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n        retur","after":"];\n    }\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\n        allowed[msg.sender][spender] = tokens;\n        emit Approval(msg.sender, spender, tokens);\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\n        retur","contract":"EtherTokenProjectAnteile","time":0}]}