{"time":98,"results":[{"type":"state-data-arrangement ","before":"\n21 is ERC165, IERC721 {\n    using SafeMath for uint256\n using Address for address;\n\n    bytes4 private c\nnt _ERC721_RECEIVED = 0x150b7a02;\n    mapping (uint25\naddress) private _tokenOwner;\n    mapping (uint256 => a\ns) private _tokenApprovals;\n    mapping (address => uint256) private _owne\nnsCount;\n    mapping (address => mapping (address => bool)","after":" using Address for address;\n\n    bytes4 private c\nnt _ERC721_RECEIVED = 0x150b7a02;\n    mapping (uint25\naddress) private _tokenOwner;\n    mapping (uint256 => a\ns) private _tokenApprovals;\n    mapping (address => uint256) private _owne\n21 is ERC165, IERC721 {\n    using SafeMath for uint256\nnsCount;\n    mapping (address => mapping (address => bool)\n","contract":"ERC721","time":0},{"type":"external-function ","before":" uint256 _tokenId) public {\n        safeTransferFrom(msg.sender, _to, _tokenId);\n    }\n\n    function transferAll(address _to, uint256[] memory _tokenId) public {\n        for (uint i = 0; i < _tokenI","after":" uint256 _tokenId) public {\n        safeTransferFrom(msg.sender, _to, _tokenId);\n    }\n\n    function transferAll(address _to, uint256[] memory _tokenId) public {\n        for (uint i = 0; i < _tokenI","contract":"rednblue","time":0},{"type":"external-function ","before":"th; i++) {\n            safeTransferFrom(msg.sender, _to, _tokenId[i]);\n        }\n    }\n\n    function batchMint(address _to, uint256[] memory _tokenId) public onlyMinter{\n        for (","after":"th; i++) {\n            safeTransferFrom(msg.sender, _to, _tokenId[i]);\n        }\n    }\n\n    function batchMint(address _to, uint256[] memory _tokenId) public onlyMinter{\n        for (","contract":"rednblue","time":0}]}