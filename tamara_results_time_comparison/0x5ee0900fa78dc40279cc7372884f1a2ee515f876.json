{"time":442,"results":[{"type":"loop-duplication","before":"\nstart line 450 column 8, end line 453 column 8\nfor (uint256 i = 0; i < nbOfStrings; i++)\n        {\n            offsetArr[i] = sliceUint(b, globalOffset + 32 + 32 * i);\n        }\nstart line 455 column 8, end line 462 column 8\nfor (uint256 i = 0; i < nbOfStrings; i++)\n        {\n            stringLengths[i] = sliceUint(b, globalOffset + 32 + offsetArr[i]);\n            require(stringLengths[i] <= 32);\n            // No string more than a bytes32\n\n            stringArr[i] = bytes32ToString(bytesToBytes32(b, globalOffset + 64 + offsetArr[i]), stringLengths[i]);\n        }","after":"// merge loop\n\nstart line 450 column 8, end line 453 column 8\nfor (uint256 i = 0; i < nbOfStrings; i++)\n        {\n            offsetArr[i] = sliceUint(b, globalOffset + 32 + 32 * i);\n        }\nstart line 455 column 8, end line 462 column 8\nfor (uint256 i = 0; i < nbOfStrings; i++)\n        {\n            stringLengths[i] = sliceUint(b, globalOffset + 32 + offsetArr[i]);\n            require(stringLengths[i] <= 32);\n            // No string more than a bytes32\n\n            stringArr[i] = bytes32ToString(bytesToBytes32(b, globalOffset + 64 + offsetArr[i]), stringLengths[i]);\n        }","contract":"Helpers","time":0}]}