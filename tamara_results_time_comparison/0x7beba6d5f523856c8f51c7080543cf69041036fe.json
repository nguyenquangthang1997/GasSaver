{"time":277,"results":[{"type":"loop-duplication","before":"\nstart line 139 column 8, end line 147 column 8\nfor (uint8 i = 0; i < 4; i++) {\r\n            if (prevJackpots[blockHeights[i]][i].processed == false && prevJackpots[blockHeights[i]][i].start != 0) {\r\n                payAmounts[i] = amounts[i] * PRECISION / PARTS[i] / PRECISION;\r\n                amounts[i] -= payAmounts[i];\r\n                prevJackpots[blockHeights[i]][i].processed = true;\r\n                wins[i] = getNumber(prevJackpots[blockHeights[i]][i].start, prevJackpots[blockHeights[i]][i].end, modulo);\r\n                emit Jackpot(wins[i], prevJackpots[blockHeights[i]][i].end - prevJackpots[blockHeights[i]][i].start + 1, payAmounts[i], byte(uint8(1) << i));\r\n            }\r\n        }\nstart line 149 column 8, end line 151 column 76\nfor (uint8 i = 0; i < 4; i++)\r\n            if (payAmounts[i] > 0 && !getAddress(wins[i]).send(payAmounts[i]))\r\n                (new DeliverFunds).value(payAmounts[i])(getAddress(wins[i]));","after":"// merge loop\n\nstart line 139 column 8, end line 147 column 8\nfor (uint8 i = 0; i < 4; i++) {\r\n            if (prevJackpots[blockHeights[i]][i].processed == false && prevJackpots[blockHeights[i]][i].start != 0) {\r\n                payAmounts[i] = amounts[i] * PRECISION / PARTS[i] / PRECISION;\r\n                amounts[i] -= payAmounts[i];\r\n                prevJackpots[blockHeights[i]][i].processed = true;\r\n                wins[i] = getNumber(prevJackpots[blockHeights[i]][i].start, prevJackpots[blockHeights[i]][i].end, modulo);\r\n                emit Jackpot(wins[i], prevJackpots[blockHeights[i]][i].end - prevJackpots[blockHeights[i]][i].start + 1, payAmounts[i], byte(uint8(1) << i));\r\n            }\r\n        }\nstart line 149 column 8, end line 151 column 76\nfor (uint8 i = 0; i < 4; i++)\r\n            if (payAmounts[i] > 0 && !getAddress(wins[i]).send(payAmounts[i]))\r\n                (new DeliverFunds).value(payAmounts[i])(getAddress(wins[i]));","contract":"EthexJackpot","time":0},{"type":"loop-duplication","before":"\nstart line 399 column 8, end line 407 column 8\nfor (uint8 i = 0; i < 4; i++) {\r\n            if (prevJackpots[blockHeights[i]][i].processed == false && prevJackpots[blockHeights[i]][i].start != 0) {\r\n                payAmounts[i] = amounts[i] * PRECISION / PARTS[i] / PRECISION;\r\n                amounts[i] -= payAmounts[i];\r\n                prevJackpots[blockHeights[i]][i].processed = true;\r\n                wins[i] = getNumber(prevJackpots[blockHeights[i]][i].start, prevJackpots[blockHeights[i]][i].end, modulo);\r\n                emit Jackpot(wins[i], prevJackpots[blockHeights[i]][i].end - prevJackpots[blockHeights[i]][i].start + 1, payAmounts[i], byte(uint8(1) << i));\r\n            }\r\n        }\nstart line 409 column 8, end line 411 column 76\nfor (uint8 i = 0; i < 4; i++)\r\n            if (payAmounts[i] > 0 && !getAddress(wins[i]).send(payAmounts[i]))\r\n                (new DeliverFunds).value(payAmounts[i])(getAddress(wins[i]));","after":"// merge loop\n\nstart line 399 column 8, end line 407 column 8\nfor (uint8 i = 0; i < 4; i++) {\r\n            if (prevJackpots[blockHeights[i]][i].processed == false && prevJackpots[blockHeights[i]][i].start != 0) {\r\n                payAmounts[i] = amounts[i] * PRECISION / PARTS[i] / PRECISION;\r\n                amounts[i] -= payAmounts[i];\r\n                prevJackpots[blockHeights[i]][i].processed = true;\r\n                wins[i] = getNumber(prevJackpots[blockHeights[i]][i].start, prevJackpots[blockHeights[i]][i].end, modulo);\r\n                emit Jackpot(wins[i], prevJackpots[blockHeights[i]][i].end - prevJackpots[blockHeights[i]][i].start + 1, payAmounts[i], byte(uint8(1) << i));\r\n            }\r\n        }\nstart line 409 column 8, end line 411 column 76\nfor (uint8 i = 0; i < 4; i++)\r\n            if (payAmounts[i] > 0 && !getAddress(wins[i]).send(payAmounts[i]))\r\n                (new DeliverFunds).value(payAmounts[i])(getAddress(wins[i]));","contract":"EthexJackpot","time":0},{"type":"loop-duplication","before":"\nstart line 659 column 8, end line 667 column 8\nfor (uint8 i = 0; i < 4; i++) {\r\n            if (prevJackpots[blockHeights[i]][i].processed == false && prevJackpots[blockHeights[i]][i].start != 0) {\r\n                payAmounts[i] = amounts[i] * PRECISION / PARTS[i] / PRECISION;\r\n                amounts[i] -= payAmounts[i];\r\n                prevJackpots[blockHeights[i]][i].processed = true;\r\n                wins[i] = getNumber(prevJackpots[blockHeights[i]][i].start, prevJackpots[blockHeights[i]][i].end, modulo);\r\n                emit Jackpot(wins[i], prevJackpots[blockHeights[i]][i].end - prevJackpots[blockHeights[i]][i].start + 1, payAmounts[i], byte(uint8(1) << i));\r\n            }\r\n        }\nstart line 669 column 8, end line 671 column 76\nfor (uint8 i = 0; i < 4; i++)\r\n            if (payAmounts[i] > 0 && !getAddress(wins[i]).send(payAmounts[i]))\r\n                (new DeliverFunds).value(payAmounts[i])(getAddress(wins[i]));","after":"// merge loop\n\nstart line 659 column 8, end line 667 column 8\nfor (uint8 i = 0; i < 4; i++) {\r\n            if (prevJackpots[blockHeights[i]][i].processed == false && prevJackpots[blockHeights[i]][i].start != 0) {\r\n                payAmounts[i] = amounts[i] * PRECISION / PARTS[i] / PRECISION;\r\n                amounts[i] -= payAmounts[i];\r\n                prevJackpots[blockHeights[i]][i].processed = true;\r\n                wins[i] = getNumber(prevJackpots[blockHeights[i]][i].start, prevJackpots[blockHeights[i]][i].end, modulo);\r\n                emit Jackpot(wins[i], prevJackpots[blockHeights[i]][i].end - prevJackpots[blockHeights[i]][i].start + 1, payAmounts[i], byte(uint8(1) << i));\r\n            }\r\n        }\nstart line 669 column 8, end line 671 column 76\nfor (uint8 i = 0; i < 4; i++)\r\n            if (payAmounts[i] > 0 && !getAddress(wins[i]).send(payAmounts[i]))\r\n                (new DeliverFunds).value(payAmounts[i])(getAddress(wins[i]));","contract":"EthexJackpot","time":0}]}